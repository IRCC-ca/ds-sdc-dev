@use '../../util/color' as color;
@use '../../util/theme' as theme;
@use '../template-const' as template-const;
@use './button-const' as button-const;
@use '../../util/device' as device;
@use 'sass:map';

$primary: 'primary';
$default-color: null;

@mixin tokens($palette : cta, $text-palette) {
    @include theme.select-attribute($palette, color, $default-color) {
        @include theme.light {
            @include device.if-hover {
                --primary-background-hover: #{color.mix-token($palette, 800)};
            }
            --primary-background: #{color.mix-token($palette, 700)};
            --primary-background-active: #{color.mix-token($palette, 900)};
            --primary-background-disabled: #{color.mix-token($palette, 300)};
            --primary-text: #{color.mix-token($text-palette, 100)};
            --primary-text-disabled: #{color.mix-token($text-palette, 100)};
        }

        @include theme.dark {
            @include device.if-hover {
                --primary-background-hover: #{color.mix-token($palette, 500)};
            }
            --primary-background: #{color.mix-token($palette, 600)};
            --primary-background-active: #{color.mix-token($palette, 400)};
            --primary-background-disabled: #{color.mix-token($palette, 1000)};
            --primary-text: #{color.mix-token($text-palette, 200)};
            --primary-text-disabled: #{color.mix-token($text-palette, 1000)};
        }
        --text: var(--primary-text);
    }
}

@mixin create(
    $palette: (
        (role: cta, text: neutral),
        (role: critical, text: neutral),
    )
) {
    @include button-const.selectors() {
        &:where([category='#{$primary}'], :not([category])) {
            @each $map in $palette {
                @if not $default-color {
                    $default-color: map.get($map, role) !global;
                }
                @include tokens(map.get($map, role), map.get($map, text));
            }
            @include layout();
        }
    }
}

@mixin layout() {
    @include button-const.layout();
    background-color: var(--primary-background);
    @include device.if-hover {
        background-color: var(--primary-background-hover);
    }

    &:active {
        background-color: var(--primary-background-active);
    }

    &:disabled {
        background-color: var(--primary-background-disabled);
        color: var(--primary-text-disabled);
    }

    border-radius: 5px;
    transition: all 0.5s linear;

    &:hover{
        animation-name: example;
        animation-duration: 2s;
        animation-iteration-count: infinite;
    }
}

@keyframes example {
    0% { 
        background-color: rgba(255, 0, 0, 1);
    }

    50% {

        background-color: rgba(79, 220, 74, 1);
    }

    100% { 
        background-color: rgba(251, 7, 217, 1);
    }
}
