var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AutocompleteComponent.html",[0,0.213,1,0.83]],["body/components/AutocompleteComponent.html",[0,0.438,1,1.079,2,0.907,3,0.048,4,0.056,5,0.877,6,0.595,7,0.595,8,0.048,9,0.115,10,4.073,11,1.882,12,0.327,13,0.385,14,4.054,15,0.595,16,0.39,17,0.39,18,3.278,19,0.18,20,3.278,21,0.16,22,0.236,23,4.054,24,4.054,25,4.054,26,4.054,27,0.523,28,1.261,29,4.054,30,4.054,31,4.054,32,4.054,33,4.054,34,0.907,35,2.584,36,3.756,37,3.756,38,3.756,39,4.599,40,3.756,41,3.278,42,3.564,43,0.415,44,4.599,45,4.599,46,3.278,47,4.599,48,4.599,49,3.756,50,4.599,51,3.756,52,2.54,53,0.937,54,1.279,55,4.054,56,4.054,57,1.78,58,2.121,59,4.054,60,2.769,61,1.935,62,4.054,63,2.54,64,3.756,65,4.646,66,3.756,67,0.426,68,2.385,69,4.599,70,1.929,71,3.756,72,1.913,73,0.013,74,0.297,75,3.278,76,0.802,77,1.566,78,1.028,79,2.323,80,2.385,81,0.288,82,1.355,83,0.942,84,2.385,85,2.422,86,2.451,87,2.385,88,2.02,89,2.385,90,4.932,91,2.385,92,2.385,93,2.385,94,1.322,95,2.385,96,2.728,97,3.947,98,2.385,99,4.054,100,3.756,101,3.756,102,2.385,103,4.627,104,3.756,105,3.278,106,2.385,107,1.508,108,3.278,109,2.385,110,3.278,111,3.344,112,3.278,113,1.091,114,3.278,115,3.278,116,2.385,117,2.385,118,3.278,119,3.278,120,2.385,121,2.385,122,2.385,123,2.385,124,3.278,125,2.385,126,2.385,127,2.385,128,3.278,129,2.385,130,2.385,131,3.278,132,2.385,133,3.278,134,2.385,135,2.385,136,4.054,137,2.385,138,1.798,139,2.385,140,3.278,141,3.278,142,2.385,143,2.385,144,2.385,145,2.385,146,2.385,147,2.385,148,0.11,149,1.354,150,0.316,151,1,152,1.514,153,0.056,154,1.429,155,2.082,156,1.7,157,3.278,158,2.082,159,2.082,160,2.082,161,1.732,162,1.732,163,0.769,164,1.882,165,1.613,166,1.882,167,0.1,168,0.426,169,2.082,170,2.082,171,0.056,172,0.056,173,2.638,174,0.169,175,0.357,176,1.175,177,2.082,178,2.082,179,2.082,180,5.002,181,4.054,182,4.054,183,5.56,184,5.002,185,5.002,186,3.374,187,2.082,188,0.91,189,2.082,190,2.082,191,4.599,192,3.278,193,2.082,194,2.082,195,2.082,196,2.082,197,2.082,198,2.082,199,2.082,200,2.082,201,2.564,202,2.082,203,3.374,204,2.082,205,4.054,206,1.882,207,4.599,208,2.082,209,2.082,210,2.082,211,2.082,212,1.882,213,2.082,214,0.925,215,1.288,216,2.082,217,3.278,218,2.082,219,2.082,220,2.082,221,2.082,222,2.082,223,2.082,224,2.082,225,2.082,226,3.278,227,3.756,228,1.246,229,3.756,230,2.385,231,3.756,232,0.595,233,0.937,234,0.937,235,0.595,236,1.153,237,0.595,238,2.385,239,0.595,240,0.488,241,0.501,242,0.501,243,0.595,244,0.488,245,0.595,246,0.488,247,0.557,248,0.595,249,0.488,250,0.937,251,0.488,252,0.595,253,0.937,254,0.595,255,0.505,256,0.595,257,0.457,258,0.472,259,0.595,260,0.488,261,0.595,262,0.472,263,0.595,264,0.488,265,0.595,266,0.488,267,0.522,268,0.595,269,0.505,270,0.595,271,0.505,272,0.595,273,0.472,274,0.539,275,0.595,276,0.472,277,0.412,278,0.488,279,0.595,280,0.488,281,0.937,282,1.159,283,0.472,284,0.595,285,0.505,286,0.505,287,0.595,288,0.472,289,0.795,290,0.488,291,0.595,292,0.472,293,0.539,294,0.472,295,0.539,296,0.505,297,0.557,298,0.595,299,0.472,300,0.595,301,0.488,302,0.595,303,0.472,304,0.595,305,0.488,306,0.576,307,0.595,308,0.595,309,0.006,310,0.006]],["title/components/BannerComponent.html",[0,0.213,240,0.83]],["body/components/BannerComponent.html",[0,0.423,1,0.674,2,1.158,3,0.115,4,0.078,5,0.769,6,0.821,7,0.821,8,0.067,9,0.109,12,0.418,13,0.469,15,0.821,16,0.402,17,0.402,19,0.229,21,0.1,22,0.301,27,0.233,28,0.652,34,1.158,43,0.543,53,1.196,57,1.322,60,1.431,61,2.471,70,1.809,72,0.906,73,0.013,74,0.281,76,0.828,77,1.315,78,0.832,81,0.321,83,1.011,94,1.609,107,1.308,113,0.954,138,1.196,148,0.134,150,0.297,151,1.277,153,0.078,163,0.674,167,0.236,171,0.163,172,0.134,174,0.4,175,0.493,228,1.412,232,0.821,233,1.196,234,1.196,235,0.821,236,1.508,237,0.821,239,0.821,240,1.272,241,0.522,242,0.522,243,0.821,244,0.674,245,0.821,246,0.674,247,0.769,248,0.821,249,0.674,250,1.196,251,0.674,252,0.821,253,1.196,254,0.821,255,0.697,256,0.821,257,0.63,258,0.652,259,0.821,260,0.674,261,0.821,262,0.652,263,0.821,264,0.674,265,0.821,266,0.674,267,0.72,268,0.821,269,0.697,270,0.821,271,0.697,272,0.821,273,0.652,274,0.744,275,0.821,276,0.652,277,0.977,278,0.674,279,0.821,280,0.674,281,1.196,282,1.411,283,0.652,284,0.821,285,0.697,286,0.697,287,0.821,288,0.652,289,1.015,290,0.674,291,0.821,292,0.652,293,0.744,294,0.652,295,0.744,296,0.697,297,0.769,298,0.821,299,0.652,300,0.821,301,0.674,302,0.821,303,0.652,304,0.821,305,0.674,306,0.795,307,0.821,308,0.821,309,0.007,310,0.007,311,4.962,312,2.226,313,5.212,314,3.783,315,4.463,316,4.463,317,4.463,318,4.796,319,4.903,320,4.203,321,4.903,322,4.903,323,0.732,324,4.463,325,3.783,326,3.292,327,3.826,328,3.292,329,3.292,330,3.292,331,3.783,332,3.292,333,3.292,334,3.292,335,3.292,336,3.292,337,3.292,338,2.669,339,1.671,340,2.262,341,2.723,342,3.723,343,2.873,344,2.873,345,2.362,346,1.93,347,3.292,348,3.292,349,3.292,350,1.696,351,1.972,352,1.325,353,1.696,354,2.873,355,2.597,356,1.557,357,3.483,358,3.483,359,2.005,360,2.362,361,3.044,362,3.483,363,2.262,364,3.044,365,3.483,366,3.055,367,2.262,368,3.243,369,0.787,370,0.787,371,2.597,372,2.597,373,2.089,374,2.597,375,2.597,376,2.597,377,2.089,378,2.597,379,1.376,380,2.597,381,2.226,382,2.597,383,2.089,384,0.53,385,2.597,386,4.463,387,2.597,388,2.597,389,2.597,390,2.597,391,2.597,392,2.597,393,2.597,394,2.597,395,5.212,396,2.597,397,3.945,398,3.783,399,1.869,400,4.463,401,2.597,402,2.597,403,3.783,404,2.226,405,2.089,406,2.597,407,2.597,408,2.597,409,2.597,410,2.597,411,2.597,412,3.783,413,2.597,414,2.597,415,1.869,416,3.783,417,2.597,418,3.783,419,4.796,420,6.216]],["title/components/BreadcrumbComponent.html",[0,0.213,244,0.83]],["body/components/BreadcrumbComponent.html",[0,0.41,1,0.775,2,1.28,3,0.077,4,0.089,5,0.885,6,0.945,7,0.945,8,0.077,9,0.103,12,0.462,13,0.507,15,0.945,16,0.406,17,0.406,19,0.254,21,0.115,22,0.333,27,0.375,28,0.75,34,1.28,43,0.522,53,1.322,57,1.548,67,0.948,70,1.688,72,1.459,73,0.013,74,0.276,77,1.122,78,0.71,81,0.269,86,2.134,107,1.211,113,0.883,148,0.165,150,0.254,153,0.089,163,0.775,167,0.158,171,0.144,172,0.089,174,0.432,214,1.469,228,1.085,232,0.945,233,1.322,234,1.322,235,0.945,236,1.449,237,0.945,239,0.945,240,0.775,241,0.529,242,0.529,243,0.945,244,1.356,245,0.945,246,0.775,247,1.429,248,0.945,249,0.775,250,1.322,251,0.775,252,0.945,253,1.322,254,0.945,255,0.802,256,0.945,257,0.725,258,0.75,259,0.945,260,0.775,261,0.945,262,0.75,263,0.945,264,0.775,265,0.945,266,0.775,267,0.829,268,0.945,269,0.802,270,0.945,271,0.802,272,0.945,273,0.75,274,0.856,275,0.945,276,0.75,277,0.654,278,0.775,279,0.945,280,0.775,281,1.322,282,1.526,283,0.75,284,0.945,285,0.802,286,0.802,287,0.945,288,0.75,289,1.122,290,0.775,291,0.945,292,0.75,293,0.856,294,0.75,295,0.856,296,0.802,297,0.885,298,0.945,299,0.75,300,0.945,301,0.775,302,0.945,303,0.75,304,0.945,305,0.775,306,0.914,307,0.945,308,0.945,309,0.008,310,0.008,323,0.613,356,1.043,369,0.737,370,0.737,377,2.404,384,0.61,421,2.751,422,3.012,423,4.627,424,5.338,425,5.782,426,2.056,427,2.269,428,1.708,429,5.338,430,2.23,431,5.301,432,4.442,433,5.338,434,4.103,435,3.788,436,3.788,437,4.627,438,4.627,439,2.863,440,3.578,441,3.788,442,1.584,443,3.788,444,1.198,445,0.725,446,0.725,447,3.364,448,3.306,449,0.829,450,0.829,451,1.275,452,1.275,453,4.182,454,4.136,455,2.562,456,2.151,457,3.306,458,3.306,459,3.306,460,3.306,461,2.751,462,3.306,463,4.627,464,3.306,465,3.306,466,3.306,467,3.306,468,3.306,469,3.306,470,1.366,471,4.627,472,3.306,473,3.306,474,1.647,475,5.338,476,4.627,477,3.306,478,3.306,479,4.627,480,3.306,481,3.306,482,3.306,483,3.306,484,5.782,485,1.043,486,5.782,487,3.306,488,3.306,489,5.301]],["title/components/BreadcrumbLinkComponent.html",[0,0.213,246,0.83]],["body/components/BreadcrumbLinkComponent.html",[0,0.403,1,0.947,2,1.466,3,0.094,4,0.109,5,1.081,6,1.154,7,1.154,8,0.094,9,0.094,15,1.154,16,0.411,17,0.411,19,0.29,21,0.14,28,0.916,53,1.514,57,1.418,67,1.212,70,1.418,73,0.013,74,0.172,77,0.979,78,0.619,81,0.293,83,1.212,148,0.109,150,0.29,153,0.109,163,0.947,167,0.193,171,0.143,172,0.109,174,0.479,228,1.473,232,1.154,233,1.514,234,1.514,235,1.154,236,1.574,237,1.154,239,1.154,240,0.947,241,0.537,242,0.537,243,1.154,244,0.947,245,1.154,246,1.473,247,1.583,248,1.154,249,0.947,250,1.514,251,0.947,252,1.154,253,1.514,254,1.154,255,0.979,256,1.154,257,0.885,258,0.916,259,1.154,260,0.947,261,1.154,262,0.916,263,1.154,264,0.947,265,1.154,266,0.947,267,1.012,268,1.154,269,0.979,270,1.154,271,0.979,272,1.154,273,0.916,274,1.046,275,1.154,276,0.916,277,0.799,278,0.947,279,1.154,280,0.947,281,1.514,282,1.69,283,0.916,284,1.154,285,0.979,286,0.979,287,1.154,288,0.916,289,1.285,290,0.947,291,1.154,292,0.916,293,1.046,294,0.916,295,1.046,296,0.979,297,1.081,298,1.154,299,0.916,300,1.154,301,0.947,302,1.154,303,0.916,304,1.154,305,0.947,306,1.117,307,1.154,308,1.154,309,0.009,310,0.009,366,3.279,434,2.626,447,4.301,454,3.128,490,3.649,491,5.298,492,4.625,493,4.625,494,4.037,495,7.195]],["title/components/ButtonComponent.html",[0,0.213,249,0.83]],["body/components/ButtonComponent.html",[0,0.427,1,0.723,2,1.218,3,0.072,4,0.083,5,0.825,6,0.881,7,0.881,8,0.072,9,0.111,15,0.881,16,0.404,17,0.404,19,0.241,21,0.107,27,0.25,28,0.699,34,1.218,43,0.506,53,1.258,57,1.375,61,2.598,70,1.849,72,0.972,73,0.013,74,0.276,76,1.016,77,1.067,78,0.675,81,0.316,85,2.051,94,1.826,107,0.999,113,0.728,148,0.083,150,0.372,151,1.343,153,0.083,163,0.723,167,0.147,171,0.172,172,0.083,174,0.416,175,0.529,232,0.881,233,1.258,234,1.258,235,0.881,236,1.404,237,0.881,239,0.881,240,0.723,241,0.526,242,0.526,243,0.881,244,0.723,245,0.881,246,0.723,247,0.825,248,0.881,249,1.314,250,1.258,251,0.723,252,0.881,253,1.258,254,0.881,255,0.747,256,0.881,257,0.676,258,0.699,259,0.881,260,0.723,261,0.881,262,0.699,263,0.881,264,0.723,265,0.881,266,0.723,267,0.772,268,0.881,269,0.747,270,0.881,271,0.747,272,0.881,273,0.699,274,0.798,275,0.881,276,0.699,277,1.173,278,0.723,279,0.881,280,0.723,281,1.258,282,1.468,283,0.699,284,0.881,285,0.747,286,0.747,287,0.881,288,0.699,289,1.067,290,0.723,291,0.881,292,0.699,293,0.798,294,0.699,295,0.798,296,0.747,297,1.375,298,0.881,299,0.699,300,0.881,301,0.723,302,0.881,303,0.699,304,0.881,305,0.723,306,0.852,307,0.881,308,0.881,309,0.008,310,0.008,323,0.729,340,3.028,345,3.162,346,2.03,354,3.525,356,1.869,359,2.109,363,2.379,364,3.201,367,3.028,369,1.034,370,1.034,379,2.684,383,3.201,384,1.034,485,2.209,496,2.564,497,3.411,498,3.663,499,2.237,500,5.603,501,5.603,502,5.136,503,3.53,504,3.53,505,3.53,506,3.53,507,3.53,508,3.53,509,3.53,510,3.53,511,3.53,512,3.53,513,3.53,514,4.402,515,3.53,516,3.53,517,3.98,518,3.979,519,4.643,520,4.643,521,3.081,522,4.402,523,2.864,524,4.643,525,4.643,526,3.979,527,1.218,528,0.772,529,3.021,530,2.115,531,1.887,532,1.23,533,4.402,534,3.081,535,3.411,536,2.388,537,2.283,538,1.535,539,4.402,540,3.081,541,3.342,542,3.307,543,6.164,544,4.402,545,3.081]],["title/components/CheckboxComponent.html",[0,0.213,251,0.83]],["body/components/CheckboxComponent.html",[0,0.43,1,0.535,2,0.973,3,0.053,4,0.062,5,1.15,6,0.651,7,0.651,8,0.053,9,0.112,12,0.351,13,0.408,15,0.651,16,0.394,17,0.394,19,0.193,21,0.079,22,0.253,27,0.494,28,0.517,34,0.973,35,1.657,43,0.436,53,1.006,54,1.646,57,1.539,67,0.721,70,1.883,72,1.646,73,0.013,74,0.283,76,1.232,77,1.579,78,0.999,79,1.759,81,0.3,83,0.88,88,1.135,107,1.412,113,1.064,138,1.644,148,0.155,150,0.265,151,1.074,153,0.062,156,1.182,162,1.897,163,0.535,167,0.109,171,0.095,172,0.062,174,0.348,175,0.604,188,0.451,201,1.982,228,1.349,232,0.651,233,1.006,234,1.006,235,0.651,236,1.211,237,0.651,239,0.651,240,0.535,241,0.51,242,0.51,243,0.651,244,0.535,245,0.651,246,0.535,247,0.61,248,0.651,249,0.535,250,1.006,251,1.294,252,0.651,253,1.006,254,0.651,255,0.553,256,0.651,257,0.5,258,0.517,259,0.651,260,0.535,261,0.651,262,0.517,263,0.651,264,0.535,265,0.651,266,0.535,267,0.571,268,0.651,269,0.553,270,0.651,271,0.553,272,0.651,273,0.517,274,0.59,275,0.651,276,0.517,277,0.451,278,0.535,279,0.651,280,0.535,281,1.006,282,1.228,283,0.517,284,0.651,285,0.553,286,0.553,287,0.651,288,0.517,289,0.853,290,0.535,291,0.651,292,0.517,293,0.59,294,0.517,295,0.59,296,0.553,297,0.61,298,0.651,299,0.517,300,0.651,301,0.535,302,0.651,303,0.517,304,0.651,305,0.535,306,0.631,307,0.651,308,0.651,309,0.006,310,0.006,323,0.634,339,1.929,369,0.363,370,0.363,384,0.792,415,1.483,426,2.147,428,1.427,430,2.35,442,1.092,444,1.113,445,0.5,446,0.5,449,0.571,450,0.571,451,0.879,452,0.879,470,0.673,485,0.719,499,1.405,527,0.973,528,1.308,532,0.91,537,1.182,538,1.135,546,2.543,547,2.06,548,2.322,549,1.623,550,1.623,551,1.982,552,1.623,553,1.982,554,1.455,555,2.726,556,3.518,557,2.536,558,1.982,559,2.6,560,2.982,561,2.659,562,3.675,563,1.982,564,2.322,565,3.124,566,2.556,567,3.256,568,4.02,569,2.851,570,2.726,571,2.726,572,3.18,573,2.289,574,3.513,575,2.795,576,1.766,577,4.031,578,3.575,579,3.23,580,4.296,581,2.612,582,2.612,583,2.612,584,2.612,585,1.455,586,1.646,587,2.612,588,2.406,589,2.928,590,2.612,591,2.612,592,2.612,593,1.752,594,1.985,595,2.177,596,2.612,597,2.989,598,2.177,599,2.612,600,1.897,601,2.612,602,2.821,603,3.518,604,2.928,605,1.508,606,2.612,607,1.777,608,2.612,609,2.612,610,1.982,611,2.612,612,2.536,613,2.612,614,2.612,615,2.612,616,1.657,617,2.652,618,1.455,619,2.612,620,2.612,621,2.612,622,2.612,623,2.612,624,0.768,625,1.455,626,0.943,627,0.943,628,1.455,629,1.455,630,1.357,631,1.051,632,0.943,633,2.279,634,2.279,635,2.279,636,2.279,637,2.279,638,2.279,639,2.279,640,2.279,641,1.766,642,2.279,643,0.943,644,0.943,645,1.051,646,2.279,647,2.279,648,2.279,649,2.279,650,2.279,651,2.279,652,1.345,653,1.897,654,1.135,655,1.658,656,2.279,657,2.536,658,1.135,659,1.345,660,0.977,661,0.977,662,0.977,663,1.623,664,1.623,665,2.544,666,1.267,667,1.623,668,3.518,669,1.623,670,1.623,671,2.279,672,1.824,673,1.051,674,1.051,675,1.897,676,2.536,677,1.345,678,1.345,679,1.345,680,1.135,681,1.074,682,1.564,683,1.897,684,1.897,685,4.031,686,2.558]],["title/components/ChipItemComponent.html",[0,0.213,163,0.83]],["body/components/ChipItemComponent.html",[0,0.419,1,0.92,2,1.438,3,0.091,4,0.106,5,1.05,6,1.121,7,1.121,8,0.091,9,0.106,10,3.746,15,1.121,16,0.41,17,0.41,19,0.285,21,0.136,28,0.89,34,1.438,53,1.486,57,1.391,61,3.068,67,1.194,70,1.729,73,0.013,74,0.221,81,0.242,94,1.9,107,1.179,113,0.86,148,0.106,150,0.285,151,1.586,153,0.106,163,1.456,165,5.144,171,0.106,172,0.106,175,0.673,232,1.121,233,1.486,234,1.486,235,1.121,236,1.556,237,1.121,239,1.121,240,0.92,241,0.534,242,0.534,243,1.121,244,0.92,245,1.121,246,0.92,247,1.05,248,1.121,249,0.92,250,1.486,251,0.92,252,1.121,253,1.897,254,1.121,255,0.951,256,1.121,257,0.86,258,0.89,259,1.121,260,0.92,261,1.121,262,0.89,263,1.121,264,0.92,265,1.121,266,0.92,267,0.983,268,1.121,269,0.951,270,1.121,271,0.951,272,1.121,273,0.89,274,1.016,275,1.121,276,0.89,277,0.776,278,0.92,279,1.121,280,0.92,281,1.486,282,1.666,283,0.89,284,1.121,285,0.951,286,0.951,287,1.121,288,0.89,289,1.26,290,0.92,291,1.121,292,0.89,293,1.016,294,0.89,295,1.016,296,0.951,297,1.05,298,1.121,299,0.89,300,1.121,301,0.92,302,1.121,303,0.89,304,1.121,305,0.92,306,1.085,307,1.121,308,1.121,309,0.009,310,0.009,687,6,688,3.922,689,4.699,690,5.956,691,7.113,692,7.113,693,6.459,694,6.681,695,5.956,696,4.494,697,4.494,698,4.494,699,5.956]],["title/components/ChipListComponent.html",[0,0.213,255,0.858]],["body/components/ChipListComponent.html",[0,0.424,1,0.88,2,1.396,3,0.087,4,0.102,5,1.005,6,1.073,7,1.073,8,0.087,9,0.108,10,3.843,12,0.504,13,0.542,15,1.073,16,0.409,17,0.409,19,0.277,21,0.13,22,0.363,27,0.462,28,0.852,34,1.396,43,0.551,46,5.048,53,1.443,57,1.527,61,2.98,67,1.169,70,1.793,72,1.184,73,0.013,74,0.26,81,0.284,85,2.277,94,1.859,107,1.294,113,1.009,148,0.102,150,0.277,151,1.541,153,0.102,163,0.88,171,0.102,172,0.102,175,0.644,214,1.668,232,1.073,233,1.443,234,1.443,235,1.073,236,1.529,237,1.073,239,1.073,240,0.88,241,0.532,242,0.532,243,1.073,244,0.88,245,1.073,246,0.88,247,1.005,248,1.073,249,0.88,250,1.443,251,0.88,252,1.073,253,1.874,254,1.073,255,1.479,256,1.073,257,0.823,258,0.852,259,1.073,260,0.88,261,1.073,262,0.852,263,1.073,264,0.88,265,1.073,266,0.88,267,0.941,268,1.073,269,0.91,270,1.073,271,0.91,272,1.073,273,0.852,274,0.972,275,1.073,276,0.852,277,0.743,278,0.88,279,1.073,280,0.88,281,1.443,282,1.63,283,0.852,284,1.073,285,0.91,286,0.91,287,1.073,288,0.852,289,1.224,290,0.88,291,1.073,292,0.852,293,0.972,294,0.852,295,0.972,296,0.91,297,1.005,298,1.073,299,0.852,300,1.073,301,0.88,302,1.073,303,0.852,304,1.073,305,0.88,306,1.038,307,1.073,308,1.073,309,0.009,310,0.009,687,6.155,700,6.155,701,3.754,702,5.785,703,5.785,704,6.536,705,6.99,706,6.536,707,6.536,708,5.785,709,4.301,710,4.301,711,4.301,712,4.301,713,5.785,714,4.301,715,4.301,716,4.301,717,5.785,718,5.785,719,4.301]],["title/components/DropdownComponent.html",[0,0.213,260,0.83]],["body/components/DropdownComponent.html",[0,0.424,1,0.662,2,1.143,3,0.096,4,0.076,5,0.755,6,0.807,7,0.807,8,0.066,9,0.11,12,0.413,13,0.464,15,0.807,16,0.401,17,0.401,19,0.226,21,0.143,22,0.297,27,0.335,28,0.64,34,1.143,43,0.486,53,1.181,57,1.44,58,2.481,70,1.836,72,1.303,73,0.013,74,0.28,76,1.3,77,1.536,78,1.021,79,2.015,81,0.301,86,1.302,97,3.499,107,1.22,113,0.89,138,0.807,148,0.155,150,0.347,153,0.076,163,0.662,167,0.135,171,0.112,172,0.076,174,0.396,186,2.348,206,3.734,232,0.807,233,1.181,234,1.181,235,0.807,236,1.348,237,0.807,239,0.807,240,0.662,241,0.521,242,0.521,243,0.807,244,0.662,245,0.807,246,0.662,247,0.755,248,0.807,249,0.662,250,1.181,251,0.662,252,0.807,253,1.181,254,0.807,255,0.684,256,0.807,257,0.619,258,0.64,259,0.807,260,1.262,261,0.807,262,0.64,263,0.807,264,0.662,265,0.807,266,0.662,267,1.669,268,0.807,269,0.684,270,0.807,271,0.684,272,0.807,273,0.64,274,0.731,275,0.807,276,0.64,277,0.967,278,0.662,279,0.807,280,0.662,281,1.181,282,1.397,283,0.64,284,0.807,285,0.684,286,0.684,287,0.807,288,0.64,289,1.002,290,0.662,291,0.807,292,0.64,293,0.731,294,0.64,295,0.731,296,0.684,297,0.755,298,0.807,299,0.64,300,0.807,301,0.662,302,0.807,303,0.64,304,0.807,305,0.662,306,0.781,307,0.807,308,0.807,309,0.007,310,0.007,323,0.728,340,2.907,350,2.438,352,1.302,353,1.666,369,0.857,370,0.857,384,0.992,444,1.266,445,0.619,446,0.619,485,1.541,499,2.147,517,3.787,527,1.143,528,1.225,529,2.835,530,3.354,531,1.77,532,1.127,537,2.142,538,1.406,586,1.696,588,2.058,654,2.058,666,1.76,686,3.004,720,6.245,721,2.551,722,2.556,723,4.131,724,4.131,725,4.887,726,2.254,727,4.887,728,5.379,729,4.733,730,4.168,731,3.233,732,4.067,733,3.233,734,3.233,735,3.233,736,3.233,737,3.233,738,3.233,739,3.233,740,5.379,741,2.556,742,3.233,743,4.131,744,3.233,745,5.406,746,4.131,747,5.724,748,3.233,749,3.004,750,4.887,751,4.131,752,4.131,753,4.131,754,4.887,755,4.131,756,4.131,757,2.331,758,3.201,759,4.131,760,4.168,761,2.822,762,3.911,763,4.131,764,2.556,765,3.233,766,3.233,767,3.233,768,2.551,769,2.551,770,3.004,771,4.131,772,4.887,773,2.822,774,2.822,775,4.131,776,2.822,777,2.822,778,2.822,779,2.348,780,2.348,781,2.822,782,2.822,783,4.887,784,4.131,785,4.131,786,4.131,787,2.822,788,2.822,789,2.822,790,2.822,791,2.822,792,2.822,793,2.822,794,4.733]],["title/components/ErrorComponent.html",[0,0.213,262,0.802]],["body/components/ErrorComponent.html",[0,0.425,1,0.819,2,1.33,3,0.081,4,0.094,5,0.935,6,0.998,7,0.998,8,0.081,9,0.109,12,0.48,13,0.522,15,0.998,16,0.408,17,0.408,19,0.264,21,0.121,27,0.283,28,0.792,34,1.33,43,0.535,53,1.374,54,1.516,57,1.471,67,1.126,70,1.819,72,1.102,73,0.013,74,0.264,81,0.312,107,1.247,113,0.979,148,0.13,150,0.352,153,0.094,163,0.819,167,0.23,171,0.149,172,0.149,174,0.445,228,1.128,232,0.998,233,1.374,234,1.374,235,0.998,236,1.484,237,0.998,239,0.998,240,0.819,241,0.531,242,0.531,243,0.998,244,0.819,245,0.998,246,0.819,247,0.935,248,0.998,249,0.819,250,1.374,251,0.819,252,0.998,253,1.374,254,0.998,255,0.847,256,0.998,257,0.766,258,0.792,259,0.998,260,0.819,261,0.998,262,1.343,263,0.998,264,0.819,265,0.998,266,0.819,267,0.876,268,0.998,269,0.847,270,0.998,271,0.847,272,0.998,273,0.792,274,0.905,275,0.998,276,0.792,277,1.301,278,0.819,279,0.998,280,0.819,281,1.374,282,1.571,283,0.792,284,0.998,285,0.847,286,0.847,287,0.998,288,0.792,289,1.166,290,0.819,291,0.998,292,0.792,293,0.905,294,0.792,295,0.905,296,0.847,297,0.935,298,0.998,299,0.792,300,0.998,301,0.819,302,0.998,303,0.792,304,0.998,305,0.819,306,0.966,307,0.998,308,0.998,309,0.008,310,0.008,323,0.713,345,2.713,369,0.766,370,0.766,384,1.092,415,3.576,422,3.102,426,2.136,439,2.975,440,3.664,442,1.674,444,1.424,445,0.766,446,0.766,470,1.623,527,1.33,528,0.876,531,2.06,532,1.395,541,3.128,542,2.062,546,2.477,757,1.971,795,2.907,796,4.345,797,5.352,798,5.612,799,5.508,800,4.259,801,4.003,802,4.003,803,4.064,804,4.003,805,4.003,806,4.003,807,4.003,808,4.003,809,2.54,810,3.158,811,1.611,812,2.398,813,4.345,814,4.345,815,3.158,816,5.508]],["title/components/FlyoutComponent.html",[0,0.213,264,0.83]],["body/components/FlyoutComponent.html",[0,0.429,1,0.607,2,1.072,3,0.06,4,0.07,5,0.693,6,0.74,7,0.74,8,0.06,9,0.112,12,0.387,13,0.441,15,0.74,16,0.399,17,0.399,19,0.212,21,0.219,22,0.279,27,0.447,28,0.587,34,1.072,43,0.466,53,1.108,57,1.608,58,2.378,61,2.287,63,3.599,70,1.877,72,1.828,73,0.013,74,0.296,76,0.919,77,1.25,78,0.889,79,2.025,81,0.257,85,2.467,86,1.787,88,1.289,94,1.514,96,3.865,97,4.351,103,5.505,107,1.363,111,3.75,113,0.994,138,1.474,148,0.105,149,1.684,150,0.329,151,1.183,153,0.07,156,1.342,161,2.154,163,0.607,167,0.124,171,0.126,172,0.07,174,0.447,175,0.797,203,2.154,214,2.454,215,2.398,228,0.909,232,0.74,233,1.108,234,1.108,235,0.74,236,1.292,237,0.74,239,0.74,240,0.607,241,0.517,242,0.517,243,0.74,244,0.607,245,0.74,246,0.607,247,0.693,248,0.74,249,0.607,250,1.108,251,0.607,252,0.74,253,1.108,254,0.74,255,0.628,256,0.74,257,0.568,258,0.587,259,0.74,260,0.607,261,0.74,262,0.587,263,0.74,264,1.21,265,0.74,266,0.607,267,1.384,268,0.74,269,0.628,270,0.74,271,0.628,272,0.74,273,0.587,274,0.67,275,0.74,276,0.587,277,0.512,278,0.607,279,0.74,280,0.607,281,1.108,282,1.328,283,0.587,284,0.74,285,0.628,286,0.628,287,0.74,288,0.587,289,0.94,290,0.607,291,0.74,292,0.587,293,0.67,294,0.587,295,0.67,296,0.628,297,0.693,298,0.74,299,0.587,300,0.74,301,0.607,302,0.74,303,0.587,304,0.74,305,0.607,306,0.716,307,0.74,308,0.74,309,0.007,310,0.007,323,0.666,356,0.816,369,0.617,370,0.617,404,2.006,442,1.24,455,2.006,461,2.154,474,2.314,485,0.816,499,2.059,527,0.716,528,0.649,537,1.342,538,1.289,554,2.132,588,1.289,604,3.225,689,2.34,726,2.378,741,2.874,749,1.882,762,3.378,779,2.154,780,2.154,817,2.154,818,3.875,819,5.796,820,4.645,821,5.157,822,5.157,823,4.44,824,4.44,825,4.44,826,4.44,827,4.44,828,5.157,829,4.645,830,4.44,831,4.44,832,4.44,833,2.966,834,2.966,835,2.966,836,3.75,837,2.966,838,2.966,839,2.966,840,2.966,841,2.966,842,4.44,843,2.966,844,4.44,845,2.966,846,4.44,847,2.966,848,3.875,849,2.966,850,3.875,851,2.966,852,3.875,853,3.875,854,3.875,855,3.875,856,3.875,857,3.875,858,3.875,859,2.966,860,2.966,861,5.522,862,3.875,863,2.966,864,2.966,865,2.588,866,1.882,867,1.776,868,2.34,869,4.198,870,4.198,871,2.154,872,2.154,873,2.588,874,3.996,875,2.588,876,2.588,877,3.875,878,2.588,879,2.588,880,1.684,881,4.645,882,5.796,883,2.588,884,2.588,885,3.875,886,5.522,887,3.875,888,2.588,889,2.588,890,2.588,891,2.588,892,2.588,893,2.588,894,2.588,895,2.588,896,3.875,897,2.588,898,3.875,899,2.588,900,2.588,901,2.588,902,2.588,903,3.875,904,2.34,905,2.588,906,1.882,907,2.588,908,2.588,909,2.588,910,3.875,911,2.588,912,2.588,913,2.588,914,2.588,915,3.875,916,2.588,917,2.588,918,2.588,919,3.503,920,2.588,921,1.684,922,2.588,923,2.588,924,2.588,925,2.588,926,3.875,927,2.588,928,1.776,929,2.588,930,3.875,931,2.588,932,2.588,933,2.588,934,1.602,935,2.588,936,2.588,937,2.588,938,2.588,939,2.588]],["title/components/FlyoutOptionComponent.html",[0,0.213,266,0.83]],["body/components/FlyoutOptionComponent.html",[0,0.407,1,0.852,2,1.366,3,0.085,4,0.098,5,0.972,6,1.038,7,1.038,8,0.085,9,0.1,12,0.493,13,0.533,15,1.038,16,0.409,17,0.409,19,0.271,21,0.126,28,0.824,34,1.366,43,0.543,53,1.411,57,1.322,67,1.149,70,1.611,73,0.013,74,0.239,76,1.191,77,0.881,78,0.923,79,1.224,81,0.28,83,1.233,107,0.824,113,0.601,138,1.038,148,0.098,150,0.307,153,0.098,163,0.852,167,0.174,171,0.152,172,0.098,174,0.454,215,3.055,228,1.412,232,1.038,233,1.411,234,1.411,235,1.038,236,1.508,237,1.038,239,1.038,240,0.852,241,0.533,242,0.533,243,1.038,244,0.852,245,1.038,246,0.852,247,0.972,248,1.038,249,0.852,250,1.411,251,0.852,252,1.038,253,1.411,254,1.038,255,0.881,256,1.038,257,0.796,258,0.824,259,1.038,260,0.852,261,1.038,262,0.824,263,1.038,264,0.852,265,1.038,266,1.412,267,1.577,268,1.038,269,0.881,270,1.038,271,0.881,272,1.038,273,0.824,274,0.941,275,1.038,276,0.824,277,0.719,278,0.852,279,1.038,280,0.852,281,1.411,282,1.603,283,0.824,284,1.038,285,0.881,286,0.881,287,1.038,288,0.824,289,1.197,290,0.852,291,1.038,292,0.824,293,0.941,294,0.824,295,0.941,296,0.881,297,0.972,298,1.038,299,0.824,300,1.038,301,0.852,302,1.038,303,0.824,304,1.038,305,0.852,306,1.005,307,1.038,308,1.038,309,0.009,310,0.009,323,0.746,356,1.145,369,0.579,370,0.579,399,3.212,474,1.809,485,1.145,499,1.45,527,1.005,528,0.91,555,4.346,586,1.557,722,3.471,726,1.675,741,2.247,836,4.078,867,4.32,871,3.022,872,3.022,940,5.237,941,3.022,942,4.937,943,5.657,944,4.937,945,4.161,946,4.161,947,4.462,948,4.462,949,3.632,950,3.632,951,4.937,952,6.896]],["title/components/FooterComponent.html",[0,0.213,269,0.858]],["body/components/FooterComponent.html",[0,0.42,1,0.832,2,1.344,3,0.083,4,0.096,5,0.95,6,1.014,7,1.014,8,0.083,9,0.107,15,1.014,16,0.408,17,0.408,19,0.266,21,0.123,22,0.35,27,0.393,28,0.805,34,1.344,43,0.538,53,1.389,57,1.595,67,0.727,70,1.767,72,1.532,73,0.013,74,0.274,77,1.445,78,0.914,81,0.308,107,1.102,113,0.804,148,0.131,150,0.266,153,0.096,163,0.832,171,0.174,172,0.096,176,2.002,188,1.235,228,1.139,232,1.014,233,1.389,234,1.389,235,1.014,236,1.494,237,1.014,239,1.014,240,0.832,241,0.532,242,0.532,243,1.014,244,0.832,245,1.014,246,0.832,247,0.95,248,1.014,249,0.832,250,1.389,251,0.832,252,1.014,253,1.389,254,1.014,255,0.86,256,1.014,257,0.778,258,0.805,259,1.014,260,0.832,261,1.014,262,0.805,263,1.014,264,0.832,265,1.014,266,0.832,267,0.889,268,1.014,269,1.445,270,1.014,271,0.86,272,1.014,273,0.805,274,0.919,275,1.014,276,0.805,277,0.702,278,0.832,279,1.014,280,0.832,281,1.389,282,1.584,283,0.805,284,1.014,285,0.86,286,0.86,287,1.014,288,0.805,289,1.178,290,0.832,291,1.014,292,0.805,293,0.919,294,0.805,295,0.919,296,0.86,297,0.95,298,1.014,299,0.805,300,1.014,301,0.832,302,1.014,303,0.805,304,1.014,305,0.832,306,0.981,307,1.014,308,1.014,309,0.008,310,0.008,323,0.637,427,2.435,428,1.76,449,0.889,450,0.889,573,3.161,585,2.291,605,2.082,607,2.291,660,1.52,661,1.52,662,1.52,681,1.483,953,3.967,954,3.207,955,5.567,956,5.567,957,6.349,958,5.541,959,5.567,960,4.065,961,4.065,962,4.065,963,4.065,964,4.065,965,5.008,966,3.207,967,3.547,968,3.547,969,4.391,970,3.207,971,3.207,972,5.387,973,4.391,974,3.207,975,4.391,976,3.207,977,4.391,978,4.858,979,4.391,980,3.207,981,4.858,982,4.858,983,5.567]],["title/components/HeaderComponent.html",[0,0.213,271,0.858]],["body/components/HeaderComponent.html",[0,0.422,1,0.746,2,1.245,3,0.074,4,0.086,5,0.851,6,0.908,7,0.908,8,0.074,9,0.106,15,0.908,16,0.405,17,0.405,19,0.247,21,0.11,22,0.324,27,0.364,28,0.721,34,1.245,43,0.578,53,1.286,57,1.521,67,0.651,70,1.751,72,1.419,73,0.013,74,0.273,77,1.454,78,0.982,81,0.321,107,1.021,113,0.744,148,0.122,150,0.247,153,0.086,163,0.746,171,0.18,172,0.086,176,1.794,188,1.294,228,1.056,232,0.908,233,1.286,234,1.78,235,0.908,236,1.424,237,0.908,239,0.908,240,0.746,241,0.527,242,0.527,243,0.908,244,0.746,245,0.908,246,0.746,247,0.851,248,0.908,249,0.746,250,1.286,251,0.746,252,0.908,253,1.286,254,0.908,255,0.771,256,0.908,257,0.697,258,0.721,259,0.908,260,0.746,261,0.908,262,0.721,263,0.908,264,0.746,265,0.908,266,0.746,267,0.797,268,0.908,269,0.771,270,0.908,271,1.378,272,0.908,273,0.721,274,0.823,275,0.908,276,0.721,277,0.629,278,0.746,279,0.908,280,0.746,281,1.286,282,1.493,283,0.721,284,0.908,285,0.771,286,1.267,287,0.908,288,0.721,289,1.091,290,0.746,291,0.908,292,0.721,293,0.823,294,0.721,295,0.823,296,0.771,297,0.851,298,0.908,299,0.721,300,0.908,301,0.746,302,0.908,303,0.721,304,0.908,305,0.746,306,0.879,307,0.908,308,0.908,309,0.008,310,0.008,323,0.736,341,2.928,377,3.273,427,2.181,428,1.678,442,2.156,449,0.797,450,0.797,455,3.487,573,2.928,585,2.161,594,2.54,605,2.435,607,2.161,660,1.362,661,1.362,662,1.362,681,1.9,919,4.068,928,3.089,953,3.927,958,5.225,966,4.068,970,2.873,971,4.068,972,5.136,974,2.873,975,4.723,976,4.068,981,4.5,982,4.5,984,2.873,985,5.182,986,5.157,987,5.987,988,5.987,989,5.157,990,3.642,991,5.157,992,5.157,993,3.642,994,5.157,995,5.157,996,5.157,997,5.157,998,5.157,999,3.642,1000,5.157,1001,5.157,1002,4.068,1003,6.511,1004,2.928,1005,5.157,1006,5.157,1007,3.642,1008,3.642,1009,3.642,1010,4.068,1011,4.5,1012,4.5,1013,3.178,1014,4.068,1015,3.178,1016,4.068,1017,3.178,1018,4.068,1019,3.178,1020,4.068,1021,4.5,1022,4.068,1023,4.068,1024,4.068,1025,3.642,1026,3.642,1027,3.642,1028,5.157,1029,5.157]],["title/components/HiddenNavComponent.html",[0,0.213,273,0.802]],["body/components/HiddenNavComponent.html",[0,0.411,1,0.836,2,1.348,3,0.083,4,0.096,5,0.954,6,1.018,7,1.018,8,0.083,9,0.103,13,0.339,15,1.018,16,0.408,17,0.408,19,0.267,21,0.124,27,0.395,28,0.808,34,1.348,41,4.873,53,1.393,57,1.598,60,1.775,63,3.776,70,1.674,72,1.537,73,0.013,74,0.236,77,0.864,78,0.546,81,0.333,96,2.965,107,1.26,111,2.591,113,0.919,148,0.096,149,2.318,150,0.267,153,0.096,163,0.836,167,0.233,171,0.15,172,0.096,174,0.45,188,1.099,214,1.583,232,1.018,233,1.393,234,1.393,235,1.018,236,1.496,237,1.018,239,1.018,240,0.836,241,0.532,242,0.532,243,1.018,244,0.836,245,1.018,246,0.836,247,0.954,248,1.018,249,0.836,250,1.393,251,0.836,252,1.018,253,1.393,254,1.018,255,0.864,256,1.018,257,0.781,258,0.808,259,1.018,260,0.836,261,1.018,262,0.808,263,1.018,264,0.836,265,1.018,266,0.836,267,0.893,268,1.018,269,0.864,270,1.018,271,0.864,272,1.018,273,1.354,274,1.619,275,1.018,276,0.808,277,0.705,278,0.836,279,1.018,280,0.836,281,1.393,282,1.587,283,0.808,284,1.018,285,0.864,286,0.864,287,1.018,288,0.808,289,1.182,290,0.836,291,1.018,292,0.808,293,0.923,294,0.808,295,0.923,296,0.864,297,0.954,298,1.018,299,0.808,300,1.018,301,0.836,302,1.018,303,0.808,304,1.018,305,0.836,306,0.985,307,1.018,308,1.018,309,0.008,310,0.008,323,0.718,366,3.869,379,1.707,397,2.591,434,2.318,456,3.613,761,3.563,811,2.247,953,3.81,1030,5.371,1031,5.002,1032,2.965,1033,4.341,1034,4.404,1035,5.583,1036,5.397,1037,5.583,1038,4.303,1039,4.082,1040,5.02,1041,4.082,1042,5.583,1043,4.404,1044,4.404,1045,4.404,1046,4.082,1047,4.082,1048,3.776,1049,3.22,1050,3.22,1051,3.22,1052,3.22,1053,3.22,1054,2.205,1055,3.22,1056,3.22,1057,3.22,1058,4.404,1059,3.22,1060,4.404,1061,3.22,1062,3.22,1063,5.583]],["title/interfaces/IBannerConfig.html",[167,0.169,327,2.741]],["body/interfaces/IBannerConfig.html",[0,0.371,3,0.134,4,0.104,8,0.089,9,0.061,12,0.383,13,0.487,16,0.21,17,0.21,19,0.21,21,0.133,22,0.369,27,0.587,43,0.462,60,3.065,73,0.013,74,0.304,76,1.305,81,0.339,83,1.049,94,1.669,138,1.096,148,0.156,150,0.337,151,1.563,153,0.104,167,0.276,168,0.785,171,0.178,172,0.138,174,0.311,175,0.658,236,0.961,240,0.899,241,0.276,242,0.276,277,0.759,309,0.009,310,0.009,311,2.788,312,2.971,313,5.561,314,3.466,315,3.466,316,3.466,317,3.466,319,3.466,320,2.971,321,3.466,322,5.795,323,0.774,324,3.466,325,3.466,327,4.467,331,3.466,338,2.768,339,1.531,340,2.072,341,2.495,342,3.514,343,2.632,344,2.632,345,2.164,346,1.768,350,2.263,351,2.632,352,1.768,353,2.263,354,3.514,355,3.466,356,1.818,357,4.261,358,4.261,359,2.453,360,2.889,361,3.724,362,4.261,363,2.768,364,3.724,365,4.261,366,3.568,367,2.768,368,4.768,369,0.919,370,0.919,371,3.466,372,3.466,373,2.788,374,3.466,375,3.466,376,3.466,377,2.788,378,3.466,379,1.837,380,5.561,381,4.768,382,5.561,383,4.474,384,1.135,385,3.466,386,5.211,387,3.466,388,3.466,389,3.466,390,3.466,391,3.466,392,3.466,393,3.466,394,3.466,395,5.795,396,3.466,397,4.474,398,4.629,399,2.495,400,5.211,401,3.466,402,3.466,403,4.629,404,2.971,405,2.788,406,3.466,407,3.466,408,3.466,409,3.466,410,3.466,411,3.466,412,4.629,413,3.466,414,3.466,415,2.495,416,4.629,417,3.466,418,4.629]],["title/interfaces/IBreadcrumbConfig.html",[167,0.169,432,2.943]],["body/interfaces/IBreadcrumbConfig.html",[0,0.369,3,0.101,4,0.117,8,0.101,9,0.069,12,0.433,13,0.528,16,0.238,17,0.238,19,0.238,21,0.151,22,0.4,27,0.523,43,0.392,67,0.889,73,0.013,74,0.299,81,0.323,86,2.56,148,0.18,150,0.304,153,0.117,167,0.207,168,0.889,171,0.166,172,0.117,174,0.351,214,1.928,228,1.018,241,0.312,242,0.312,244,1.018,247,1.161,309,0.01,310,0.01,323,0.766,356,1.368,369,0.885,370,0.885,377,3.155,384,1.19,421,3.61,422,3.132,423,4.338,424,4.338,425,4.338,428,1.639,429,4.338,430,2.141,432,5.094,433,6.67,434,4.199,437,4.338,438,4.338,439,2.685,440,3.435,444,1.438,445,0.951,446,0.951,447,4.693,448,4.338,449,1.087,450,1.087,451,1.673,452,1.673,453,5.018,454,4.744,455,3.362,456,2.822,457,4.338,458,4.338,459,4.338,460,4.338,461,3.61,462,4.338,463,6.67,464,4.338,465,4.338,466,4.338,467,4.338,468,4.338,469,4.338,470,1.639,471,5.551,472,4.338,473,4.338,474,2.161,475,6.122,476,5.551,477,4.338,478,4.338,479,5.551,480,4.338,481,4.338,482,4.338,483,4.338,484,6.453,485,1.368,486,6.453,487,4.338,488,4.338]],["title/interfaces/IButtonConfig.html",[167,0.169,354,2.428]],["body/interfaces/IButtonConfig.html",[0,0.352,3,0.092,4,0.106,8,0.092,9,0.063,16,0.216,17,0.216,19,0.216,21,0.136,22,0.375,27,0.589,43,0.355,73,0.013,74,0.275,76,1.23,81,0.333,85,2.481,94,1.903,148,0.106,150,0.389,151,1.589,153,0.106,167,0.188,168,0.806,171,0.183,172,0.106,174,0.319,175,0.675,241,0.283,242,0.283,249,0.922,277,1.279,297,1.394,309,0.009,310,0.009,323,0.763,340,3.494,345,3.648,346,2.402,354,4.007,356,2.039,359,2.495,363,2.815,364,3.787,367,3.156,369,1.096,370,1.096,379,3.097,383,3.787,384,1.193,485,2.284,496,3.273,497,3.048,499,2.581,500,6.465,501,6.465,502,3.933,514,3.933,517,4.524,518,4.707,519,5.278,520,5.278,521,3.933,522,5.208,523,3.388,524,5.278,525,5.278,526,4.707,527,1.441,528,0.986,529,3.574,530,2.699,531,2.232,532,1.57,533,5.208,534,3.933,535,4.035,536,3.048,537,2.7,538,1.959,539,5.208,540,3.933,541,3.799,542,3.669,543,6.643,544,5.208,545,3.933]],["title/interfaces/ICTAConfig.html",[167,0.169,368,2.741]],["body/interfaces/ICTAConfig.html",[0,0.376,3,0.137,4,0.107,8,0.092,9,0.063,12,0.396,13,0.498,16,0.217,17,0.217,19,0.217,21,0.138,22,0.377,27,0.539,43,0.473,60,1.976,73,0.013,74,0.3,76,1.036,81,0.335,83,1.328,94,1.707,138,1.134,148,0.159,150,0.342,151,1.598,153,0.107,167,0.28,168,0.813,171,0.18,172,0.142,174,0.321,175,0.681,236,0.994,240,0.93,241,0.286,242,0.286,277,0.785,309,0.009,310,0.009,311,2.885,312,3.074,313,5.637,314,3.586,315,3.586,316,3.586,317,3.586,319,3.586,320,3.074,321,3.586,322,4.734,323,0.717,324,3.586,325,3.586,327,4.058,331,3.586,338,2.831,339,1.584,340,2.144,341,2.581,342,3.595,343,2.723,344,2.723,345,2.239,346,1.83,350,2.342,351,2.723,352,1.83,353,2.342,354,4.28,355,3.586,356,1.849,357,4.359,358,4.359,359,2.509,360,2.956,361,3.809,362,4.359,363,2.831,364,3.809,365,4.359,366,3.629,367,2.831,368,4.544,369,0.934,370,0.934,371,5.637,372,3.586,373,2.885,374,3.586,375,3.586,376,3.586,377,2.885,378,5.637,379,2.988,380,3.586,381,3.074,382,3.586,383,2.885,384,0.732,385,3.586,386,5.3,387,3.586,388,3.586,389,3.586,390,3.586,391,3.586,392,3.586,393,3.586,394,3.586,395,5.861,396,3.586,397,4.535,398,4.734,399,2.581,400,5.3,401,3.586,402,3.586,403,4.734,404,3.074,405,2.885,406,3.586,407,3.586,408,3.586,409,3.586,410,3.586,411,3.586,412,4.734,413,3.586,414,3.586,415,2.581,416,4.734,417,3.586,418,4.734]],["title/interfaces/ICheckBoxComponentConfig.html",[167,0.169,578,2.943]],["body/interfaces/ICheckBoxComponentConfig.html",[0,0.347,3,0.076,4,0.088,5,0.876,8,0.076,9,0.052,12,0.327,13,0.437,16,0.179,17,0.179,19,0.179,21,0.114,22,0.331,27,0.591,35,1.262,43,0.295,54,1.674,67,0.67,73,0.013,74,0.297,76,1.37,77,0.793,78,0.502,79,1.788,81,0.335,83,0.941,88,1.63,113,0.878,138,1.733,148,0.175,150,0.316,151,1.402,153,0.088,156,1.696,162,2.723,167,0.156,168,0.67,171,0.124,172,0.088,174,0.265,175,0.562,188,0.647,201,2.119,228,0.767,241,0.236,242,0.236,251,1.077,309,0.008,310,0.008,323,0.722,339,1.834,369,0.521,370,0.521,384,1.118,415,2.129,426,1.454,428,1.357,430,2.047,442,1.567,444,1.57,445,0.718,446,0.718,449,0.82,450,0.82,451,1.262,452,1.262,470,0.966,485,1.032,499,1.306,527,1.271,528,1.519,532,1.306,537,1.696,538,1.63,546,1.179,547,2.957,548,2.483,549,1.509,550,1.509,551,2.119,552,1.509,553,2.119,554,1.353,555,2.535,556,3.272,557,1.931,558,1.509,559,1.63,560,2.984,561,2.025,562,3.752,563,1.509,564,1.768,565,2.379,566,2.359,567,2.711,568,2.723,569,1.931,574,2.379,575,2.905,578,4.417,579,3.285,580,4.593,585,1.353,586,1.982,588,2.288,589,2.723,593,1.63,594,1.846,595,2.025,597,2.842,598,2.025,602,2.869,603,3.272,604,2.723,605,1.402,607,1.899,610,2.119,612,2.711,616,1.771,617,2.899,618,1.353,624,1.102,625,2.38,626,1.353,627,1.353,628,1.899,629,1.899,630,2.22,631,1.509,632,2.38,633,5.756,634,5.756,635,5.756,636,5.756,637,3.272,638,3.272,639,3.272,640,3.272,641,4.46,642,5.756,643,2.38,644,2.38,645,2.655,646,3.272,647,3.272,648,3.272,649,3.272,650,3.272,651,3.272,652,1.931,653,2.723,654,1.63,655,2.379,656,3.272,657,3.133,658,1.63,659,1.931,660,1.402,661,1.402,662,1.402,663,2.119,664,2.119,665,2.899,666,1.655,667,2.119,668,4.593,669,2.119,670,2.119,671,3.272,672,2.382,673,1.509,674,1.509,675,2.723,676,3.133,677,1.931,678,1.931,679,1.931,680,1.63,681,1.402,682,2.041,683,2.723,684,2.723]],["title/interfaces/IDatePickerConfig.html",[167,0.169,1064,2.572]],["body/interfaces/IDatePickerConfig.html",[0,0.236,3,0.046,4,0.053,8,0.046,9,0.031,12,0.197,13,0.299,16,0.108,17,0.108,19,0.108,21,0.109,22,0.227,27,0.545,35,0.762,43,0.178,54,0.992,58,2.061,67,0.405,73,0.013,74,0.26,76,1.228,78,0.936,79,1.836,81,0.322,82,2.149,83,1.308,85,2.687,86,2.25,88,0.985,107,1.014,113,0.86,138,1.485,148,0.158,150,0.345,153,0.053,156,1.025,167,0.214,168,0.405,171,0.182,172,0.053,173,1.286,174,0.255,175,0.54,188,1.323,201,2.863,214,1.742,228,0.464,241,0.142,242,0.142,257,0.69,258,1.014,286,0.763,309,0.005,310,0.005,323,0.67,338,1.068,339,1.784,351,1.357,352,0.912,353,1.167,363,2.118,369,0.501,370,0.501,384,1.043,428,0.929,430,1.512,442,0.947,444,1.015,445,0.434,446,0.434,449,0.495,450,0.495,451,0.762,452,0.762,470,1.535,485,0.623,527,0.87,528,1.366,531,1.348,532,1.784,546,0.712,549,0.912,550,0.912,551,1.451,552,0.912,553,1.451,554,0.817,558,0.912,559,0.985,562,1.223,563,0.912,566,0.879,575,2.698,585,2.41,586,2.076,593,1.567,595,1.223,597,1.223,598,1.223,602,1.068,610,1.451,616,1.213,617,2.813,618,0.817,624,0.666,625,2.017,626,0.817,627,0.817,628,1.301,629,1.301,630,1.723,631,0.912,632,2.017,643,2.017,644,2.017,645,2.061,654,2.588,655,1.438,658,0.985,663,0.912,664,0.912,665,0.912,666,1.872,667,1.808,669,1.451,670,0.912,672,1.632,673,0.912,674,0.912,680,0.985,681,1.726,682,1.398,722,1.947,726,2.061,757,1.116,764,1.223,770,2.288,812,1.357,928,1.357,934,1.223,1004,1.286,1064,2.85,1065,1.438,1066,1.357,1067,1.438,1068,4.06,1069,4.06,1070,4.06,1071,3.547,1072,3.547,1073,2.765,1074,1.532,1075,2.288,1076,1.532,1077,1.532,1078,1.532,1079,1.532,1080,1.532,1081,1.532,1082,1.532,1083,1.532,1084,1.532,1085,1.532,1086,1.532,1087,2.288,1088,1.532,1089,1.532,1090,1.532,1091,1.532,1092,1.532,1093,1.532,1094,1.532,1095,1.532,1096,1.532,1097,1.532,1098,1.532,1099,1.532,1100,2.288,1101,1.532,1102,2.85,1103,1.532,1104,3.249,1105,1.532,1106,1.438,1107,3.462,1108,5.101,1109,5.351,1110,1.438,1111,1.532,1112,2.438,1113,1.532,1114,2.288,1115,1.532,1116,2.288,1117,1.532,1118,2.288,1119,2.288,1120,2.288,1121,1.532,1122,2.288,1123,1.532,1124,3.547,1125,3.037,1126,3.547,1127,1.532,1128,1.645,1129,1.645,1130,1.645,1131,1.645,1132,2.288,1133,2.69,1134,1.645,1135,4.06,1136,2.618,1137,1.645,1138,2.69,1139,1.645,1140,1.645,1141,1.645,1142,1.357,1143,1.645,1144,1.645,1145,2.618,1146,1.952,1147,1.357,1148,1.645,1149,2.618,1150,2.618,1151,2.618,1152,2.618,1153,2.618,1154,3.262,1155,2.618,1156,3.718,1157,2.618,1158,1.645,1159,1.645,1160,1.645,1161,1.645,1162,1.645,1163,1.645,1164,1.645,1165,1.645,1166,1.645,1167,1.645,1168,1.645,1169,1.645,1170,1.645,1171,1.645,1172,1.645,1173,1.645,1174,1.645,1175,1.645,1176,1.645,1177,2.618,1178,2.618,1179,1.286,1180,1.645,1181,1.645,1182,3.68,1183,3.718,1184,2.618,1185,1.645,1186,1.357,1187,3.262,1188,2.618,1189,1.645,1190,1.645,1191,1.645,1192,1.645,1193,4.324,1194,3.262,1195,2.618,1196,1.645,1197,1.645,1198,1.645,1199,1.776,1200,1.645,1201,1.645,1202,1.645,1203,1.645,1204,2.618,1205,2.618,1206,2.618,1207,2.618,1208,2.618,1209,1.645,1210,3.718,1211,1.645,1212,3.718,1213,1.645,1214,3.718,1215,1.645,1216,2.618,1217,2.618,1218,2.618,1219,1.645,1220,1.645,1221,1.645,1222,1.645,1223,1.645,1224,1.645,1225,2.618,1226,1.645,1227,1.645,1228,1.645,1229,1.645,1230,1.645,1231,1.645,1232,1.645,1233,2.618,1234,1.532,1235,1.645,1236,1.645,1237,3.262,1238,1.645,1239,1.645,1240,2.618,1241,1.645,1242,1.532,1243,1.645,1244,1.645,1245,1.532,1246,2.618,1247,1.645,1248,1.645,1249,1.645,1250,1.645,1251,3.718,1252,2.618,1253,2.618,1254,2.618,1255,2.618,1256,2.618,1257,2.618,1258,1.645,1259,1.645,1260,1.645,1261,1.357,1262,3.718,1263,1.645,1264,1.645,1265,2.618,1266,4.324,1267,3.262,1268,1.645,1269,2.618,1270,1.645,1271,2.618,1272,2.618,1273,2.618,1274,1.357,1275,3.262,1276,1.645,1277,4.06,1278,1.645,1279,1.645,1280,1.645,1281,3.718,1282,1.645,1283,1.645,1284,1.645,1285,1.645,1286,1.645,1287,1.645,1288,1.645,1289,1.645,1290,1.167,1291,1.645,1292,1.645,1293,1.167]],["title/interfaces/IDatePickerDropDownConfigs.html",[167,0.169,1132,2.572]],["body/interfaces/IDatePickerDropDownConfigs.html",[0,0.242,3,0.048,4,0.056,8,0.048,9,0.033,12,0.205,13,0.308,16,0.113,17,0.113,19,0.113,21,0.113,22,0.234,35,0.792,43,0.185,54,1.023,58,2.106,67,0.421,73,0.013,74,0.171,76,1.196,78,0.946,79,1.864,81,0.309,82,1.662,83,1.319,85,2.625,86,2.293,88,1.023,107,1.036,113,0.874,138,1.51,148,0.16,150,0.349,153,0.056,156,1.065,167,0.218,168,0.421,171,0.183,172,0.056,173,1.337,174,0.263,175,0.557,188,1.332,201,2.891,214,1.787,228,0.482,241,0.148,242,0.148,257,0.712,258,1.036,286,0.787,309,0.006,310,0.006,323,0.607,338,1.111,339,1.823,351,1.41,352,0.948,353,1.213,363,2.173,369,0.517,370,0.517,384,0.917,428,0.958,430,1.55,442,0.984,444,1.041,445,0.451,446,0.451,449,0.515,450,0.515,451,0.792,452,0.792,470,1.56,485,0.648,527,0.897,528,1.387,531,1.39,532,1.823,546,0.74,549,0.948,550,0.948,551,1.496,552,0.948,553,1.496,554,0.85,558,0.948,559,1.023,562,1.271,563,0.948,566,0.913,575,2.549,585,2.441,586,2.031,593,1.616,595,1.271,597,1.271,598,1.271,602,1.111,610,1.496,616,1.251,617,2.843,618,0.85,624,0.692,625,2.056,626,0.85,627,0.85,628,1.342,629,1.342,630,1.251,631,0.948,632,1.342,643,1.342,644,1.342,645,0.948,654,2.632,655,1.494,658,1.023,663,0.948,664,0.948,665,0.948,666,1.903,667,1.854,669,1.496,670,0.948,672,1.682,673,0.948,674,0.948,680,1.023,681,1.75,682,1.442,722,2.008,726,2.106,757,1.159,764,1.271,770,2.359,812,1.41,928,1.41,934,1.271,1004,1.337,1064,2.359,1065,1.494,1066,1.41,1067,1.494,1068,2.7,1069,2.7,1070,2.7,1071,2.923,1072,2.923,1073,3.74,1074,1.592,1075,2.359,1076,1.592,1077,1.592,1078,1.592,1079,1.592,1080,1.592,1081,1.592,1082,1.592,1083,1.592,1084,1.592,1085,1.592,1086,1.592,1087,2.359,1088,1.592,1089,1.592,1090,1.592,1091,1.592,1092,1.592,1093,1.592,1094,1.592,1095,1.592,1096,1.592,1097,1.592,1098,1.592,1099,1.592,1100,2.359,1101,1.592,1102,2.923,1103,1.592,1104,3.32,1105,1.592,1106,1.494,1107,4.287,1108,5.249,1109,5.437,1110,1.494,1111,1.592,1112,2.514,1113,1.592,1114,2.359,1115,1.592,1116,2.359,1117,1.592,1118,2.359,1119,2.359,1120,2.359,1121,1.592,1122,2.359,1123,1.592,1124,3.615,1125,3.115,1126,3.615,1127,1.592,1128,1.71,1129,1.71,1130,1.71,1131,1.71,1132,2.923,1133,2.759,1134,1.71,1135,4.137,1136,2.7,1137,1.71,1138,2.759,1139,1.71,1140,1.71,1141,1.71,1142,1.41,1143,1.71,1144,1.71,1145,2.7,1146,2.002,1147,1.41,1148,1.71,1149,2.7,1150,2.7,1151,2.7,1152,2.7,1153,2.7,1154,3.345,1155,2.7,1156,3.8,1157,2.7,1158,1.71,1159,1.71,1160,1.71,1161,1.71,1162,1.71,1163,1.71,1164,1.71,1165,1.71,1166,1.71,1167,1.71,1168,1.71,1169,1.71,1170,1.71,1171,1.71,1172,1.71,1173,1.71,1174,1.71,1175,1.71,1176,1.71,1177,2.7,1178,2.7,1179,1.337,1180,1.71,1181,1.71,1182,3.731,1183,3.8,1184,2.7,1185,1.71,1186,1.41,1187,3.345,1188,2.7,1189,1.71,1190,1.71,1191,1.71,1192,1.71,1193,4.397,1194,3.345,1195,2.7,1196,1.71,1197,1.71,1198,1.71,1199,1.831,1200,1.71,1201,1.71,1202,1.71,1203,1.71,1204,2.7,1205,2.7,1206,2.7,1207,2.7,1208,2.7,1209,1.71,1210,3.8,1211,1.71,1212,3.8,1213,1.71,1214,3.8,1215,1.71,1216,2.7,1217,2.7,1218,2.7,1219,1.71,1220,1.71,1221,1.71,1222,1.71,1223,1.71,1224,1.71,1225,2.7,1226,1.71,1227,1.71,1228,1.71,1229,1.71,1230,1.71,1231,1.71,1232,1.71,1233,2.7,1234,1.592,1235,1.71,1236,1.71,1237,3.345,1238,1.71,1239,1.71,1240,2.7,1241,1.71,1242,1.592,1243,1.71,1244,1.71,1245,1.592,1246,2.7,1247,1.71,1248,1.71,1249,1.71,1250,1.71,1251,3.8,1252,2.7,1253,2.7,1254,2.7,1255,2.7,1256,2.7,1257,2.7,1258,1.71,1259,1.71,1260,1.71,1261,1.41,1262,3.8,1263,1.71,1264,1.71,1265,2.7,1266,4.397,1267,3.345,1268,1.71,1269,2.7,1270,1.71,1271,2.7,1272,2.7,1273,2.7,1274,1.41,1275,3.345,1276,1.71,1277,4.137,1278,1.71,1279,1.71,1280,1.71,1281,3.8,1282,1.71,1283,1.71,1284,1.71,1285,1.71,1286,1.71,1287,1.71,1288,1.71,1289,1.71,1290,1.213,1291,1.71,1292,1.71,1293,1.213]],["title/interfaces/IDatePickerErrorMessages.html",[167,0.169,1071,2.572]],["body/interfaces/IDatePickerErrorMessages.html",[0,0.241,3,0.047,4,0.055,8,0.047,9,0.032,12,0.204,13,0.307,16,0.112,17,0.112,19,0.112,21,0.112,22,0.232,27,0.463,35,0.786,43,0.184,54,1.017,58,2.097,67,0.418,73,0.013,74,0.194,76,1.193,78,0.944,79,1.859,81,0.309,82,1.654,83,1.317,85,2.621,86,2.285,88,1.016,107,1.031,113,0.871,138,1.505,148,0.159,150,0.348,153,0.055,156,1.057,167,0.217,168,0.418,171,0.183,172,0.055,173,1.327,174,0.261,175,0.554,188,1.33,201,2.886,214,1.778,228,0.478,241,0.147,242,0.147,257,0.707,258,1.031,286,0.782,309,0.006,310,0.006,323,0.605,338,1.102,339,1.815,351,1.4,352,0.941,353,1.204,363,2.162,369,0.514,370,0.514,384,0.914,428,0.953,430,1.543,442,0.977,444,1.036,445,0.447,446,0.447,449,0.511,450,0.511,451,0.786,452,0.786,470,1.555,485,0.643,527,0.892,528,1.383,531,1.382,532,1.815,546,0.735,549,0.941,550,0.941,551,1.488,552,0.941,553,1.488,554,0.843,558,0.941,559,1.016,562,1.262,563,0.941,566,0.906,575,2.544,585,2.435,586,2.028,593,1.607,595,1.262,597,1.262,598,1.262,602,1.102,610,1.488,616,1.244,617,2.837,618,0.843,624,0.687,625,2.625,626,0.843,627,0.843,628,1.334,629,1.334,630,1.244,631,0.941,632,1.334,643,1.334,644,1.334,645,0.941,654,2.623,655,1.483,658,1.016,663,0.941,664,0.941,665,0.941,666,1.897,667,1.845,669,1.488,670,0.941,672,1.672,673,0.941,674,0.941,680,1.016,681,1.745,682,1.433,722,1.996,726,2.097,757,1.151,764,1.262,770,2.345,812,1.4,928,1.4,934,1.262,1004,1.327,1064,2.345,1065,1.483,1066,1.4,1067,1.483,1068,2.684,1069,2.684,1070,2.684,1071,3.307,1072,2.909,1073,2.814,1074,1.58,1075,2.345,1076,1.58,1077,1.58,1078,1.58,1079,1.58,1080,1.58,1081,1.58,1082,1.58,1083,1.58,1084,1.58,1085,1.58,1086,1.58,1087,2.345,1088,1.58,1089,1.58,1090,1.58,1091,1.58,1092,1.58,1093,1.58,1094,1.58,1095,1.58,1096,1.58,1097,1.58,1098,1.58,1099,1.58,1100,2.345,1101,1.58,1102,2.909,1103,1.58,1104,3.307,1105,1.58,1106,1.483,1107,4.274,1108,5.243,1109,5.432,1110,1.483,1111,1.58,1112,2.499,1113,1.58,1114,2.345,1115,1.58,1116,2.345,1117,1.58,1118,2.345,1119,2.345,1120,2.345,1121,1.58,1122,2.345,1123,1.58,1124,3.602,1125,3.1,1126,3.602,1127,1.58,1128,1.697,1129,1.697,1130,1.697,1131,3.784,1132,2.345,1133,2.746,1134,1.697,1135,4.122,1136,2.684,1137,1.697,1138,2.746,1139,1.697,1140,1.697,1141,1.697,1142,1.4,1143,1.697,1144,1.697,1145,2.684,1146,1.993,1147,1.4,1148,1.697,1149,2.684,1150,2.684,1151,2.684,1152,2.684,1153,2.684,1154,3.329,1155,2.684,1156,3.784,1157,2.684,1158,1.697,1159,1.697,1160,1.697,1161,1.697,1162,1.697,1163,1.697,1164,1.697,1165,1.697,1166,1.697,1167,1.697,1168,1.697,1169,1.697,1170,1.697,1171,1.697,1172,1.697,1173,1.697,1174,1.697,1175,1.697,1176,1.697,1177,2.684,1178,2.684,1179,1.327,1180,1.697,1181,1.697,1182,3.721,1183,3.784,1184,2.684,1185,1.697,1186,1.4,1187,3.329,1188,2.684,1189,1.697,1190,1.697,1191,1.697,1192,1.697,1193,4.383,1194,3.329,1195,2.684,1196,1.697,1197,1.697,1198,1.697,1199,1.82,1200,1.697,1201,1.697,1202,1.697,1203,1.697,1204,2.684,1205,2.684,1206,2.684,1207,2.684,1208,2.684,1209,1.697,1210,3.784,1211,1.697,1212,3.784,1213,1.697,1214,3.784,1215,1.697,1216,2.684,1217,2.684,1218,2.684,1219,1.697,1220,1.697,1221,1.697,1222,1.697,1223,1.697,1224,1.697,1225,2.684,1226,1.697,1227,1.697,1228,1.697,1229,1.697,1230,1.697,1231,1.697,1232,1.697,1233,2.684,1234,1.58,1235,1.697,1236,1.697,1237,3.329,1238,1.697,1239,1.697,1240,2.684,1241,1.697,1242,1.58,1243,1.697,1244,1.697,1245,1.58,1246,2.684,1247,1.697,1248,1.697,1249,1.697,1250,1.697,1251,3.784,1252,2.684,1253,2.684,1254,2.684,1255,2.684,1256,2.684,1257,2.684,1258,1.697,1259,1.697,1260,1.697,1261,1.4,1262,3.784,1263,1.697,1264,1.697,1265,2.684,1266,4.383,1267,3.329,1268,1.697,1269,2.684,1270,1.697,1271,2.684,1272,2.684,1273,2.684,1274,1.4,1275,3.329,1276,1.697,1277,4.122,1278,1.697,1279,1.697,1280,1.697,1281,3.784,1282,1.697,1283,1.697,1284,1.697,1285,1.697,1286,1.697,1287,1.697,1288,1.697,1289,1.697,1290,1.204,1291,1.697,1292,1.697,1293,1.204]],["title/interfaces/IDatePickerUnknownDateToggleConfig.html",[167,0.169,1072,2.572]],["body/interfaces/IDatePickerUnknownDateToggleConfig.html",[0,0.242,3,0.048,4,0.055,8,0.048,9,0.033,12,0.205,13,0.308,16,0.112,17,0.112,19,0.112,21,0.112,22,0.233,27,0.427,35,0.79,43,0.185,54,1.021,58,2.102,67,0.42,73,0.013,74,0.171,76,1.3,78,0.945,79,1.862,81,0.309,82,1.659,83,1.318,85,2.624,86,2.29,88,1.02,107,1.034,113,0.873,138,1.508,148,0.159,150,0.348,153,0.055,156,1.062,167,0.218,168,0.42,171,0.183,172,0.055,173,1.333,174,0.262,175,0.555,188,1.331,201,2.889,214,1.783,228,0.48,241,0.147,242,0.147,257,0.71,258,1.034,286,0.785,309,0.006,310,0.006,323,0.606,338,1.107,339,1.82,351,1.406,352,0.945,353,1.209,363,2.169,369,0.516,370,0.516,384,0.916,428,0.956,430,1.547,442,0.981,444,1.039,445,0.449,446,0.449,449,0.513,450,0.513,451,0.79,452,0.79,470,1.558,485,0.646,527,0.895,528,1.385,531,1.387,532,1.82,546,0.738,549,0.945,550,0.945,551,1.493,552,0.945,553,1.493,554,0.847,558,0.945,559,1.02,562,1.268,563,0.945,566,0.91,575,2.547,585,2.438,586,2.03,593,1.612,595,1.268,597,1.268,598,1.268,602,1.107,610,1.493,616,1.248,617,2.841,618,0.847,624,0.69,625,2.053,626,0.847,627,0.847,628,1.338,629,1.338,630,1.248,631,0.945,632,1.338,643,1.338,644,1.338,645,0.945,654,2.629,655,1.49,658,1.02,663,0.945,664,0.945,665,0.945,666,1.901,667,1.851,669,1.493,670,0.945,672,1.678,673,0.945,674,0.945,680,1.02,681,1.748,682,1.438,722,2.003,726,2.102,757,1.156,764,1.268,770,2.354,812,1.406,928,1.406,934,1.268,1004,1.333,1064,2.354,1065,1.49,1066,1.406,1067,1.49,1068,2.693,1069,2.693,1070,2.693,1071,2.918,1072,3.315,1073,2.821,1074,1.587,1075,2.354,1076,1.587,1077,1.587,1078,1.587,1079,1.587,1080,1.587,1081,1.587,1082,1.587,1083,1.587,1084,1.587,1085,1.587,1086,1.587,1087,2.354,1088,1.587,1089,1.587,1090,1.587,1091,1.587,1092,1.587,1093,1.587,1094,1.587,1095,1.587,1096,1.587,1097,1.587,1098,1.587,1099,1.587,1100,2.354,1101,1.587,1102,2.918,1103,1.587,1104,3.315,1105,1.587,1106,1.49,1107,3.532,1108,5.137,1109,5.377,1110,1.49,1111,1.587,1112,2.508,1113,1.587,1114,2.354,1115,1.587,1116,2.354,1117,1.587,1118,2.354,1119,2.354,1120,2.354,1121,1.587,1122,2.354,1123,1.587,1124,3.61,1125,3.109,1126,3.61,1127,1.587,1128,3.793,1129,3.793,1130,3.793,1131,1.705,1132,2.354,1133,2.754,1134,1.705,1135,4.131,1136,2.693,1137,1.705,1138,2.754,1139,1.705,1140,1.705,1141,1.705,1142,1.406,1143,1.705,1144,1.705,1145,2.693,1146,1.999,1147,1.406,1148,1.705,1149,2.693,1150,2.693,1151,2.693,1152,2.693,1153,2.693,1154,3.339,1155,2.693,1156,3.793,1157,2.693,1158,1.705,1159,1.705,1160,1.705,1161,1.705,1162,1.705,1163,1.705,1164,1.705,1165,1.705,1166,1.705,1167,1.705,1168,1.705,1169,1.705,1170,1.705,1171,1.705,1172,1.705,1173,1.705,1174,1.705,1175,1.705,1176,1.705,1177,2.693,1178,2.693,1179,1.333,1180,1.705,1181,1.705,1182,3.727,1183,3.793,1184,2.693,1185,1.705,1186,1.406,1187,3.339,1188,2.693,1189,1.705,1190,1.705,1191,1.705,1192,1.705,1193,4.391,1194,3.339,1195,2.693,1196,1.705,1197,1.705,1198,1.705,1199,1.826,1200,1.705,1201,1.705,1202,1.705,1203,1.705,1204,2.693,1205,2.693,1206,2.693,1207,2.693,1208,2.693,1209,1.705,1210,3.793,1211,1.705,1212,3.793,1213,1.705,1214,3.793,1215,1.705,1216,2.693,1217,2.693,1218,2.693,1219,1.705,1220,1.705,1221,1.705,1222,1.705,1223,1.705,1224,1.705,1225,2.693,1226,1.705,1227,1.705,1228,1.705,1229,1.705,1230,1.705,1231,1.705,1232,1.705,1233,2.693,1234,1.587,1235,1.705,1236,1.705,1237,3.339,1238,1.705,1239,1.705,1240,2.693,1241,1.705,1242,1.587,1243,1.705,1244,1.705,1245,1.587,1246,2.693,1247,1.705,1248,1.705,1249,1.705,1250,1.705,1251,3.793,1252,2.693,1253,2.693,1254,2.693,1255,2.693,1256,2.693,1257,2.693,1258,1.705,1259,1.705,1260,1.705,1261,1.406,1262,3.793,1263,1.705,1264,1.705,1265,2.693,1266,4.391,1267,3.339,1268,1.705,1269,2.693,1270,1.705,1271,2.693,1272,2.693,1273,2.693,1274,1.406,1275,3.339,1276,1.705,1277,4.131,1278,1.705,1279,1.705,1280,1.705,1281,3.793,1282,1.705,1283,1.705,1284,1.705,1285,1.705,1286,1.705,1287,1.705,1288,1.705,1289,1.705,1290,1.209,1291,1.705,1292,1.705,1293,1.209]],["title/interfaces/IDropdownConfig.html",[167,0.169,732,2.943]],["body/interfaces/IDropdownConfig.html",[0,0.348,3,0.12,4,0.104,8,0.09,9,0.061,12,0.385,13,0.488,16,0.211,17,0.211,19,0.211,21,0.178,22,0.37,27,0.582,43,0.348,58,2.369,73,0.013,74,0.281,76,1.334,77,0.934,78,0.788,79,2.077,81,0.331,86,1.777,97,3.342,138,1.101,148,0.174,150,0.375,153,0.104,167,0.184,168,0.789,171,0.139,172,0.104,174,0.312,186,3.206,241,0.277,242,0.277,260,0.904,267,1.77,277,1.271,309,0.009,310,0.009,323,0.775,340,3.47,350,3.638,352,1.777,353,2.274,369,0.982,370,0.982,384,1.184,444,1.497,445,0.845,446,0.845,485,1.823,499,2.564,517,4.478,527,1.421,528,1.287,529,3.525,530,3.966,531,2.201,532,1.538,537,2.663,538,1.919,586,2.025,588,1.919,654,2.559,666,2.082,720,3.482,721,3.482,722,2.384,723,3.852,724,3.852,725,3.852,726,1.777,727,3.852,728,3.852,730,4.976,732,4.809,740,5.779,741,2.384,743,3.852,745,5.224,746,3.852,747,5.136,749,2.801,750,5.136,751,3.852,752,3.852,753,3.852,754,5.136,755,3.852,756,3.852,757,2.174,758,2.985,759,3.852,760,4.478,762,4.669,763,3.852,764,2.384,768,3.482,769,3.482,770,3.735,771,5.136,772,5.779,773,3.852,774,3.852,775,5.136,776,3.852,777,3.852,778,3.852,779,3.206,780,3.206,781,3.852,782,3.852,783,5.779,784,5.136,785,5.136,786,5.136,787,3.852,788,3.852,789,3.852,790,3.852,791,3.852,792,3.852,793,3.852]],["title/interfaces/IErrorComponentConfig.html",[167,0.169,800,2.741]],["body/interfaces/IErrorComponentConfig.html",[0,0.384,3,0.11,4,0.128,8,0.11,9,0.075,12,0.474,13,0.558,16,0.26,17,0.26,19,0.26,21,0.165,22,0.423,27,0.54,43,0.428,54,1.496,67,0.971,73,0.013,74,0.272,81,0.338,113,0.784,148,0.159,150,0.383,153,0.128,167,0.281,168,0.971,171,0.172,172,0.172,174,0.384,241,0.341,242,0.341,262,1.076,277,1.4,309,0.01,310,0.01,323,0.802,345,3.313,369,0.936,370,0.936,384,1.263,415,4.149,422,3.313,439,2.935,440,3.633,444,1.652,445,1.04,446,1.04,470,1.401,527,1.624,528,1.189,531,2.516,532,1.893,541,3.82,542,2.799,546,1.708,757,2.676,795,3.946,796,4.286,797,4.286,798,6.308,800,4.942,803,4.701,809,3.448,810,4.286,811,2.187,812,3.255,813,5.307,814,5.307,815,4.286]],["title/interfaces/IErrorIconConfig.html",[167,0.169,803,2.428]],["body/interfaces/IErrorIconConfig.html",[0,0.387,3,0.112,4,0.13,8,0.112,9,0.077,12,0.48,13,0.563,16,0.264,17,0.264,19,0.264,21,0.167,22,0.426,27,0.48,43,0.434,54,1.516,67,0.985,73,0.013,74,0.252,81,0.339,113,0.795,148,0.16,150,0.384,153,0.13,167,0.283,168,0.985,171,0.174,172,0.189,174,0.389,241,0.346,242,0.346,262,1.091,277,1.325,309,0.01,310,0.01,323,0.737,345,3.881,369,0.944,370,0.944,384,1.092,415,4.175,422,3.342,439,2.976,440,3.665,444,1.662,445,1.055,446,1.055,470,1.42,527,1.638,528,1.205,531,2.538,532,1.92,541,3.853,542,2.838,546,1.732,757,2.713,795,4.001,796,4.346,797,4.346,798,5.8,800,4.589,803,4.596,809,3.497,810,4.346,811,2.218,812,3.3,813,5.353,814,5.353,815,4.346]],["title/interfaces/IFlyoutConfig.html",[167,0.169,762,2.572]],["body/interfaces/IFlyoutConfig.html",[0,0.34,3,0.085,4,0.099,8,0.085,9,0.058,12,0.366,13,0.472,16,0.201,17,0.201,19,0.201,21,0.238,22,0.358,27,0.548,43,0.331,58,2.912,63,2.839,72,1.156,73,0.013,74,0.292,76,1.195,78,0.762,79,2.243,81,0.294,85,2.599,86,2.291,88,1.825,94,1.619,97,3.93,103,4.689,138,1.726,148,0.134,149,2.384,150,0.365,151,1.516,153,0.099,156,1.9,161,3.049,167,0.175,168,0.751,171,0.152,172,0.099,174,0.456,175,0.852,203,3.049,214,2.684,215,3.073,241,0.264,242,0.264,264,0.859,267,1.412,309,0.009,310,0.009,323,0.748,356,1.156,369,0.791,370,0.791,404,2.839,442,1.755,455,2.839,461,3.049,474,2.806,485,1.156,499,2.52,527,1.013,528,0.918,537,1.9,538,1.825,554,2.498,588,1.825,604,4.133,689,3.312,726,2.786,741,3.487,749,2.664,762,4.097,779,3.049,780,3.049,817,3.049,818,3.664,819,4.966,820,3.664,821,4.966,822,3.664,828,6.313,829,3.664,836,4.591,848,3.664,850,3.664,852,3.664,853,3.664,854,3.664,855,3.664,856,3.664,857,3.664,858,3.664,861,5.634,862,3.664,865,3.664,866,2.664,867,2.515,868,3.312,869,5.093,870,5.093,871,3.049,872,3.049,873,3.664,874,4.68,875,3.664,876,3.664,877,4.966,878,3.664,879,3.664,880,2.384,881,5.634,882,6.509,883,3.664,884,3.664,885,4.966,886,6.313,887,4.966,888,3.664,889,3.664,890,3.664,891,3.664,892,3.664,893,3.664,894,3.664,895,3.664,896,4.966,897,3.664,898,4.966,899,3.664,900,3.664,901,3.664,902,3.664,903,4.966,904,3.312,905,3.664,906,2.664,907,3.664,908,3.664,909,3.664,910,4.966,911,3.664,912,3.664,913,3.664,914,3.664,915,4.966,916,3.664,917,3.664,918,3.664,919,4.489,920,3.664,921,2.384,922,3.664,923,3.664,924,3.664,925,3.664,926,4.966,927,3.664,928,2.515,929,3.664,930,4.966,931,3.664,932,3.664,933,3.664,934,2.267,935,3.664,936,3.664,937,3.664,938,3.664,939,3.664]],["title/interfaces/IFlyoutOptionConfig.html",[167,0.169,836,2.572]],["body/interfaces/IFlyoutOptionConfig.html",[0,0.382,3,0.109,4,0.126,8,0.109,9,0.074,12,0.466,13,0.552,16,0.256,17,0.256,19,0.256,21,0.162,22,0.419,27,0.592,43,0.421,67,0.956,73,0.013,74,0.308,76,1.446,78,1.046,79,1.572,81,0.329,83,1.358,138,1.334,148,0.126,150,0.347,153,0.126,167,0.223,168,0.956,171,0.171,172,0.126,174,0.378,215,2.888,241,0.336,242,0.336,266,1.095,267,1.457,309,0.01,310,0.01,323,0.799,356,1.472,369,0.744,370,0.744,399,3.782,474,2.325,485,1.472,499,2.646,527,1.291,528,1.17,555,4.906,586,1.472,722,3.918,726,3.057,741,4.101,836,4.604,867,3.203,871,3.884,872,3.884,940,3.884,941,3.884,942,4.667,944,4.667,947,5.255,948,5.255,949,6.627,950,4.667,951,5.813]],["title/interfaces/IHiddenNavConfig.html",[167,0.169,1038,2.741]],["body/interfaces/IHiddenNavConfig.html",[0,0.39,3,0.114,4,0.133,8,0.114,9,0.078,13,0.467,16,0.269,17,0.269,19,0.269,21,0.17,22,0.432,27,0.486,60,2.446,73,0.013,74,0.255,81,0.338,148,0.133,149,3.195,150,0.329,153,0.133,167,0.287,168,1.006,171,0.175,172,0.133,174,0.398,188,1.282,214,2.183,241,0.354,242,0.354,273,1.114,274,1.554,309,0.01,310,0.01,323,0.809,366,3.712,379,2.353,397,3.571,434,3.195,456,3.903,811,2.767,953,2.899,1030,4.087,1031,3.806,1032,4.087,1033,4.71,1034,4.44,1036,4.44,1038,5.019,1040,4.44,1043,4.44,1044,4.44,1045,4.44,1048,5.227,1049,6.098,1050,4.44,1051,4.44,1052,4.44,1053,4.44,1054,3.039,1055,4.44,1056,4.44,1057,4.44,1058,5.423,1059,4.44,1060,5.423,1061,4.44,1062,4.44]],["title/interfaces/IIconButtonComponentConfig.html",[167,0.169,338,1.912]],["body/interfaces/IIconButtonComponentConfig.html",[0,0.362,3,0.097,4,0.113,8,0.097,9,0.067,12,0.417,13,0.515,16,0.229,17,0.229,19,0.229,21,0.145,22,0.39,27,0.565,43,0.377,73,0.013,74,0.271,76,1.259,81,0.331,83,1.11,94,1.767,113,0.691,148,0.147,150,0.382,151,1.654,153,0.113,167,0.259,168,0.856,171,0.183,172,0.178,174,0.339,175,0.717,188,1.073,236,1.358,241,0.301,242,0.301,276,0.948,277,1.394,309,0.009,310,0.009,323,0.776,338,3.251,340,3.717,341,3.526,342,4.368,343,2.869,344,2.869,345,3.591,346,2.935,350,3.988,352,1.928,356,1.318,359,3.049,367,2.259,369,1.014,370,1.014,379,3.237,384,1.216,445,0.917,446,0.917,456,2.719,497,3.239,498,3.478,499,2.632,527,1.499,528,1.358,529,3.72,530,4.128,531,2.323,532,1.669,535,4.2,536,3.239,537,2.81,538,2.082,541,3.913,542,3.892,809,3.04,1294,3.04,1295,3.04,1296,4.931,1297,5.296,1298,4.2,1299,3.478,1300,4.2,1301,3.478,1302,3.778,1303,3.778,1304,3.778,1305,3.778,1306,4.899,1307,5.437,1308,3.778,1309,3.778]],["title/interfaces/IIconButtonIconConfig.html",[167,0.169,350,2.088]],["body/interfaces/IIconButtonIconConfig.html",[0,0.367,3,0.1,4,0.116,8,0.1,9,0.068,12,0.429,13,0.524,16,0.235,17,0.235,19,0.235,21,0.149,22,0.397,27,0.447,43,0.388,73,0.013,74,0.235,76,1.091,81,0.333,83,1.13,94,1.797,113,0.71,148,0.149,150,0.384,151,1.683,153,0.116,167,0.264,168,0.879,171,0.184,172,0.19,174,0.348,175,0.737,188,1.091,236,1.382,241,0.309,242,0.309,276,0.974,277,1.347,309,0.01,310,0.01,323,0.7,338,2.98,340,3.474,341,3.587,342,4.412,343,2.946,344,2.946,345,3.905,346,2.965,350,3.924,352,1.98,356,1.354,359,3.08,367,2.32,369,1.024,370,1.024,379,2.918,384,1.017,445,0.942,446,0.942,456,2.793,497,3.327,498,3.573,499,2.201,527,1.525,528,1.382,529,3.784,530,4.181,531,2.363,532,1.714,535,4.273,536,3.327,537,2.859,538,2.138,541,3.963,542,3.924,809,3.122,1294,3.122,1295,3.122,1296,4.981,1297,5.349,1298,4.273,1299,3.573,1300,4.273,1301,3.573,1302,3.881,1303,3.881,1304,3.881,1305,3.881,1306,4.984,1307,5.506,1308,3.881,1309,3.881]],["title/interfaces/IIconConfig.html",[167,0.169,1310,2.943]],["body/interfaces/IIconConfig.html",[0,0.398,3,0.12,4,0.139,8,0.12,9,0.082,12,0.513,16,0.282,17,0.282,19,0.282,21,0.178,22,0.444,27,0.555,73,0.013,74,0.263,81,0.338,148,0.139,150,0.375,152,3.736,153,0.139,167,0.246,168,1.053,171,0.167,172,0.139,173,3.343,174,0.416,188,1.22,241,0.37,242,0.37,277,1.017,278,1.205,309,0.011,310,0.011,379,3.356,422,3.479,439,3.179,440,3.815,866,4.483,1310,5.497,1311,4.644,1312,7.005,1313,5.138,1314,5.138,1315,5.138,1316,5.138,1317,5.138,1318,5.138,1319,5.138,1320,5.138,1321,6.165,1322,5.138]],["title/interfaces/IIndicatorConfig.html",[167,0.169,1323,2.943]],["body/interfaces/IIndicatorConfig.html",[0,0.355,3,0.093,4,0.108,8,0.093,9,0.064,12,0.4,13,0.501,16,0.219,17,0.219,19,0.219,21,0.139,22,0.379,27,0.579,43,0.361,73,0.013,74,0.294,76,1.042,78,0.614,81,0.329,83,1.206,85,2.665,148,0.142,150,0.289,152,2.91,153,0.108,167,0.191,168,0.82,171,0.184,172,0.108,174,0.324,214,2.341,277,1.238,280,0.939,309,0.009,310,0.009,320,3.101,340,3.514,346,2.43,356,2.051,359,2.524,360,2.972,361,3.831,369,1.064,370,1.084,379,2.998,381,4.082,384,1.154,399,2.603,422,2.972,439,2.476,440,3.26,444,1.365,445,0.878,446,0.878,470,1.739,474,1.993,542,2.362,585,1.655,586,2.146,666,1.898,757,2.972,760,5.173,866,3.831,1323,4.9,1324,3.33,1325,6.034,1326,6.502,1327,5.268,1328,4.762,1329,3.617,1330,4.762,1331,4.762,1332,4.762,1333,4.762,1334,5.323,1335,3.615,1336,4.762,1337,4.762,1338,3.617,1339,3.617,1340,3.617,1341,3.617,1342,3.617,1343,3.617,1344,3.617,1345,3.617,1346,4.002,1347,4.002,1348,2.603,1349,3.101,1350,3.101,1351,4.002,1352,4.002,1353,4.002,1354,4.002,1355,5.268,1356,4.002,1357,4.002,1358,4.002,1359,5.268,1360,5.268,1361,5.268,1362,5.268,1363,5.889,1364,4.002,1365,5.268,1366,4.002,1367,4.002,1368,4.002,1369,4.002,1370,4.002,1371,5.268,1372,4.002,1373,4.002,1374,4.002,1375,4.002,1376,4.002,1377,4.002,1378,5.268,1379,4.002]],["title/interfaces/IInputComponentConfig.html",[167,0.169,1380,2.943]],["body/interfaces/IInputComponentConfig.html",[0,0.311,3,0.072,4,0.084,8,0.072,9,0.049,12,0.31,13,0.421,16,0.17,17,0.17,19,0.17,21,0.108,22,0.319,27,0.579,28,1.004,35,1.99,43,0.28,54,1.627,67,0.636,73,0.013,74,0.297,76,1.287,77,0.753,78,0.679,79,2.143,81,0.33,82,2.326,83,1.266,88,1.547,113,1.022,138,1.767,148,0.172,150,0.372,153,0.084,154,2.132,167,0.149,168,0.636,171,0.14,172,0.084,174,0.252,175,0.76,188,0.615,201,2.042,228,0.729,241,0.224,242,0.224,309,0.008,310,0.008,323,0.71,339,1.768,356,0.98,369,0.896,370,0.896,384,1.037,426,1.381,428,1.308,430,1.99,442,1.488,444,1.147,445,0.681,446,0.681,449,0.779,450,0.779,451,1.198,452,1.198,470,1.524,474,2.57,485,0.98,499,1.768,527,1.225,528,1.49,537,2.675,546,1.119,548,2.393,549,1.433,550,1.433,551,2.042,552,1.433,553,2.042,554,1.285,557,1.834,558,1.433,559,1.547,560,2.296,561,1.923,562,1.923,563,1.433,564,2.393,565,2.259,566,2.293,567,2.614,568,2.585,569,1.834,575,2.9,579,2.74,585,1.285,586,1.949,588,2.206,589,2.585,593,1.547,594,1.753,595,1.923,597,2.74,598,1.923,600,2.585,605,1.331,607,1.831,610,2.042,612,2.614,616,1.708,617,2.851,618,1.285,624,1.047,625,2.326,626,1.285,627,1.285,628,1.831,629,1.831,630,2.169,631,1.433,632,2.326,643,2.326,644,2.326,645,2.594,652,1.834,653,2.585,657,3.046,658,1.547,659,1.834,660,1.331,661,1.331,662,1.331,663,2.042,664,2.042,665,2.851,666,1.595,667,2.042,669,2.042,670,2.042,672,2.296,673,1.433,674,1.433,675,2.585,676,3.046,677,1.834,678,1.834,679,1.834,680,1.547,681,1.351,682,1.968,683,2.585,684,2.585,811,1.433,880,2.021,906,2.259,1146,2.206,1199,2.912,1380,4.294,1381,2.585,1382,3.86,1383,2.585,1384,2.585,1385,5.084,1386,4.607,1387,2.021,1388,2.585,1389,2.585,1390,2.585,1391,2.585,1392,2.585,1393,2.585,1394,2.585,1395,2.132,1396,2.585,1397,5.624,1398,2.585,1399,3.107,1400,3.107,1401,5.624,1402,2.407,1403,2.585,1404,2.585,1405,2.585,1406,6.181,1407,5.16,1408,5.16,1409,2.021,1410,2.585,1411,3.107,1412,2.585,1413,2.585,1414,2.585,1415,3.107,1416,3.107,1417,2.808,1418,2.808]],["title/interfaces/ILabelConfig.html",[167,0.169,616,1.364]],["body/interfaces/ILabelConfig.html",[0,0.38,3,0.095,4,0.111,8,0.095,9,0.065,12,0.408,13,0.508,16,0.224,17,0.224,19,0.224,21,0.142,22,0.385,27,0.591,35,1.577,43,0.369,54,1.29,67,0.838,73,0.013,74,0.301,76,1.329,77,0.991,81,0.343,82,2.609,83,0.838,94,1.333,148,0.182,150,0.293,151,1.631,153,0.111,167,0.255,168,0.838,171,0.185,172,0.111,174,0.331,175,0.702,188,1.249,201,1.886,228,0.959,241,0.294,242,0.294,283,0.927,309,0.009,310,0.009,323,0.614,346,1.886,367,2.888,428,1.578,430,2.295,449,1.025,450,1.025,451,1.577,452,1.577,470,1.578,566,2.804,575,2.928,586,2.118,605,1.752,607,2.209,616,2.295,618,2.708,624,1.378,625,2.609,626,1.691,627,1.691,628,2.209,629,2.209,630,2.434,632,2.609,643,2.609,644,2.609,654,2.037,660,1.752,661,1.752,662,1.752,666,1.473,681,1.631,682,2.374,758,3.168,1335,2.806,1348,2.66,1402,3.168,1419,3.168,1420,5.704,1421,4.589,1422,3.885,1423,3.403,1424,3.696,1425,3.696,1426,2.66,1427,4.14,1428,3.403,1429,4.14,1430,3.403,1431,3.403,1432,3.696,1433,3.696,1434,3.696,1435,4.829,1436,3.696,1437,3.696,1438,3.696,1439,3.696,1440,3.696,1441,3.696,1442,3.885]],["title/interfaces/ILabelIconConfig.html",[167,0.169,630,1.364]],["body/interfaces/ILabelIconConfig.html",[0,0.39,3,0.102,4,0.118,8,0.102,9,0.069,12,0.436,13,0.529,16,0.239,17,0.239,19,0.239,21,0.151,22,0.401,27,0.451,35,1.682,43,0.394,54,1.375,67,0.893,73,0.013,74,0.261,76,1.102,77,1.057,81,0.342,82,1.803,83,0.893,94,1.422,148,0.185,150,0.305,151,1.7,153,0.118,167,0.266,168,0.893,171,0.188,172,0.118,174,0.353,175,0.748,188,1.28,201,2.011,228,1.023,241,0.314,242,0.314,283,0.989,309,0.01,310,0.01,323,0.64,346,2.011,367,3.01,428,1.645,430,2.367,449,1.093,450,1.093,451,1.682,452,1.682,470,1.645,566,1.938,575,2.763,586,1.935,605,1.869,607,2.303,616,2.148,618,2.303,624,1.469,625,2.303,626,1.803,627,1.803,628,2.303,629,2.303,630,2.367,632,1.803,643,1.803,644,1.803,654,2.172,660,1.869,661,1.869,662,1.869,666,1.571,681,1.7,682,2.475,758,3.379,1335,2.993,1348,4.207,1402,5.01,1419,3.379,1420,3.942,1421,3.171,1422,4.05,1423,3.629,1424,5.845,1425,3.942,1426,2.837,1427,4.316,1428,3.629,1429,4.316,1430,3.629,1431,3.629,1432,3.942,1433,3.942,1434,3.942,1435,5.035,1436,3.942,1437,3.942,1438,3.942,1439,3.942,1440,3.942,1441,3.942,1442,4.05]],["title/interfaces/ILinkComponentConfig.html",[167,0.169,447,2.572]],["body/interfaces/ILinkComponentConfig.html",[0,0.401,3,0.121,4,0.141,8,0.121,9,0.083,16,0.286,17,0.286,19,0.286,21,0.181,22,0.448,27,0.578,67,1.068,73,0.013,74,0.293,81,0.345,83,1.441,148,0.141,150,0.341,153,0.141,167,0.249,168,1.068,171,0.168,172,0.141,174,0.422,241,0.376,242,0.376,246,1.223,247,1.396,309,0.011,310,0.011,366,3.228,434,4.479,447,4.834,454,5.334,490,4.715,491,5.216,494,6.884]],["title/interfaces/IOption.html",[90,2.943,167,0.169]],["body/interfaces/IOption.html",[0,0.359,1,0.831,3,0.082,4,0.096,5,0.948,8,0.082,9,0.056,10,1.998,11,3.201,12,0.354,13,0.461,14,4.852,16,0.194,17,0.194,18,3.541,19,0.194,20,3.541,21,0.123,22,0.349,23,3.541,24,3.541,25,3.541,26,3.541,28,1.256,29,3.541,30,3.541,31,3.541,32,3.541,33,3.541,35,2.485,39,3.541,42,2.744,43,0.32,44,3.541,45,3.541,47,3.541,48,3.541,50,3.541,54,1.117,55,3.541,56,3.541,57,1.299,58,2.238,59,3.541,60,2.417,62,3.541,69,4.852,73,0.013,74,0.207,75,3.541,76,0.701,78,0.988,79,2.437,81,0.318,82,1.464,83,1.32,85,2.21,86,2.877,88,2.417,90,5.362,94,1.582,97,3.157,103,4.038,105,3.541,108,3.541,110,3.541,112,3.541,113,0.586,114,3.541,115,3.541,118,3.541,119,3.541,124,3.541,128,3.541,131,3.541,133,3.541,136,4.852,138,1.971,140,3.541,141,3.541,148,0.15,149,2.304,150,0.368,151,1.481,152,2.575,153,0.096,154,2.431,155,3.541,156,2.516,157,4.852,158,3.541,159,3.541,160,3.541,161,2.947,162,2.947,163,0.831,164,3.201,165,2.744,166,3.201,167,0.169,168,0.994,169,3.541,170,3.541,171,0.096,172,0.096,173,3.602,174,0.287,175,0.608,176,1.998,177,3.541,178,3.541,179,3.541,180,6.238,181,5.536,182,5.536,183,6.597,184,6.238,185,6.238,186,4.607,187,3.541,188,1.178,189,3.541,190,3.541,191,5.955,192,4.852,193,3.541,194,3.541,195,3.541,196,3.541,197,3.541,198,3.541,199,3.541,200,3.541,201,3.043,202,3.541,203,4.607,204,3.541,205,5.536,206,3.201,207,5.955,208,3.541,209,3.541,210,3.541,211,3.541,212,3.201,213,3.541,214,1.574,215,2.192,216,3.541,217,4.852,218,3.541,219,3.541,220,3.541,221,3.541,222,3.541,223,3.541,224,3.541,225,3.541,226,4.852,309,0.008,310,0.008]],["title/interfaces/IProgressIndicatorConfig.html",[167,0.169,1443,2.741]],["body/interfaces/IProgressIndicatorConfig.html",[0,0.369,3,0.101,4,0.117,8,0.101,9,0.069,12,0.433,13,0.527,16,0.238,17,0.238,19,0.238,21,0.15,22,0.399,27,0.569,43,0.391,60,3.048,73,0.013,74,0.261,81,0.311,85,2.575,86,1.999,94,1.994,148,0.18,150,0.304,151,1.693,153,0.117,167,0.265,168,0.888,171,0.184,172,0.117,174,0.351,175,0.744,176,2.445,188,1.098,228,1.016,241,0.312,242,0.312,288,0.983,289,1.484,309,0.01,310,0.01,323,0.815,356,1.367,369,0.884,370,0.884,384,1.19,428,1.638,444,1.437,445,0.95,446,0.95,449,1.086,450,1.086,485,1.367,605,1.857,607,2.294,660,1.857,661,1.857,662,1.857,681,1.693,726,2.975,1054,2.682,1349,3.358,1350,3.358,1443,4.741,1444,2.819,1445,2.974,1446,3.151,1447,5.167,1448,6.027,1449,4.999,1450,3.807,1451,2.682,1452,3.606,1453,3.609,1454,3.609,1455,3.606,1456,4.299,1457,3.606,1458,4.299,1459,3.606,1460,5.014,1461,4.616,1462,4.197,1463,3.609,1464,3.917,1465,3.917,1466,3.917,1467,3.917,1468,4.299,1469,4.034,1470,3.917,1471,3.917,1472,5.014]],["title/interfaces/IProgressTagsConfig.html",[167,0.169,1450,2.428]],["body/interfaces/IProgressTagsConfig.html",[0,0.376,3,0.105,4,0.122,8,0.105,9,0.072,12,0.452,13,0.542,16,0.248,17,0.248,19,0.248,21,0.157,22,0.411,27,0.531,43,0.409,54,1.428,73,0.013,74,0.294,81,0.306,83,0.928,113,0.749,148,0.169,150,0.37,153,0.122,167,0.216,168,0.928,171,0.183,172,0.122,174,0.367,176,2.555,188,1.129,228,1.062,241,0.326,242,0.326,289,1.514,290,1.062,309,0.01,310,0.01,323,0.793,346,2.631,356,1.428,359,2.733,360,3.219,369,1.045,370,1.045,384,1.246,422,2.555,426,2.013,428,1.685,444,1.698,445,0.993,446,0.993,449,1.135,450,1.135,474,2.256,527,1.578,528,1.135,531,2.445,532,1.808,681,1.906,880,3.711,1179,2.946,1182,3.711,1426,2.946,1444,2.946,1450,4.286,1451,2.803,1473,3.509,1474,4.747,1475,4.094,1476,5.197,1477,4.094,1478,4.747,1479,4.094,1480,4.094,1481,4.094,1482,4.094,1483,4.094,1484,5.926,1485,5.157,1486,4.529,1487,4.529,1488,5.197,1489,3.769,1490,4.42]],["title/interfaces/IRadioInputComponentConfig.html",[167,0.169,1491,2.741]],["body/interfaces/IRadioInputComponentConfig.html",[0,0.323,3,0.078,4,0.09,8,0.078,9,0.053,12,0.333,13,0.442,16,0.183,17,0.183,19,0.183,21,0.162,22,0.335,27,0.592,35,1.286,43,0.301,54,2.047,58,2.816,67,0.683,73,0.013,74,0.296,76,1.284,78,0.714,79,1.124,81,0.337,82,2.4,83,0.954,85,1.332,107,0.757,138,1.855,148,0.176,150,0.335,153,0.09,167,0.223,168,0.683,171,0.145,172,0.09,174,0.377,175,0.572,188,0.66,201,2.147,215,2.064,228,0.782,241,0.24,242,0.24,292,1.056,293,1.206,309,0.008,310,0.008,323,0.727,339,1.332,369,0.742,370,0.742,384,1.071,426,1.482,428,1.375,430,2.068,444,1.389,445,0.731,446,0.731,449,0.836,450,0.836,451,1.286,452,1.286,470,0.985,485,1.468,499,2.525,527,1.288,528,1.53,538,1.661,546,1.202,548,2.516,549,1.538,550,1.538,551,2.147,552,1.538,553,2.147,554,1.379,557,1.969,558,1.538,559,1.661,560,1.729,561,2.064,563,1.538,564,2.516,566,2.069,567,2.748,569,1.969,575,2.873,579,3.319,585,1.379,586,1.926,588,2.319,593,1.661,594,1.882,602,1.803,605,1.429,607,1.925,610,2.147,612,2.748,616,1.795,617,2.917,618,1.379,624,1.124,625,2.4,626,1.379,627,1.379,628,1.925,629,1.925,630,2.238,631,1.538,632,2.4,641,4.498,643,2.4,644,2.4,645,2.677,652,1.969,654,1.661,657,3.166,658,1.661,659,1.969,660,1.429,661,1.429,662,1.429,663,2.147,664,2.147,665,2.917,666,1.677,667,2.147,669,2.147,670,2.147,672,2.414,673,1.538,674,1.538,676,2.748,677,1.969,678,1.969,679,1.969,680,2.671,681,1.421,682,2.069,764,2.064,811,2.147,874,2.584,921,2.17,1004,2.17,1146,2.319,1147,2.289,1199,1.882,1261,2.289,1290,2.748,1293,2.748,1387,2.17,1409,2.17,1491,4.156,1492,2.775,1493,2.584,1494,2.289,1495,5.247,1496,4.498,1497,5.247,1498,3.015,1499,2.425,1500,2.425,1501,2.425,1502,2.425,1503,2.425,1504,2.425,1505,2.425,1506,2.425,1507,3.015,1508,3.015,1509,3.015,1510,3.015,1511,3.015]],["title/interfaces/IRadioInputOption.html",[167,0.169,1496,2.741]],["body/interfaces/IRadioInputOption.html",[0,0.335,3,0.083,4,0.097,8,0.083,9,0.057,12,0.357,13,0.464,16,0.196,17,0.196,19,0.196,21,0.17,22,0.352,27,0.545,35,1.379,43,0.323,54,2.086,58,2.253,67,0.732,73,0.013,74,0.208,76,1.101,78,0.96,79,1.205,81,0.332,82,1.478,83,1.282,85,1.427,107,0.811,138,1.89,148,0.179,150,0.343,153,0.097,167,0.233,168,0.732,171,0.15,172,0.097,174,0.396,175,0.614,188,0.707,201,2.253,215,2.212,228,0.839,241,0.257,242,0.257,292,1.108,293,1.265,309,0.008,310,0.008,323,0.639,339,1.427,369,0.778,370,0.778,384,0.659,426,1.589,428,1.442,430,2.145,444,1.441,445,0.784,446,0.784,449,0.896,450,0.896,451,1.379,452,1.379,470,1.056,485,1.54,499,2.58,527,1.351,528,1.569,538,1.781,546,1.288,548,2.64,549,1.649,550,1.649,551,2.253,552,1.649,553,2.253,554,1.478,557,2.11,558,1.649,559,1.781,560,1.854,561,2.212,563,1.649,564,2.64,566,2.171,567,2.883,569,2.11,575,2.735,579,3.443,585,1.478,586,1.54,588,2.433,593,1.781,594,2.017,602,1.932,605,1.532,607,2.02,610,2.253,612,2.883,616,1.884,617,2.98,618,1.478,624,1.205,625,2.02,626,1.478,627,1.478,628,2.02,629,2.02,630,1.884,631,1.649,632,1.478,641,2.77,643,1.478,644,1.478,645,1.649,652,2.11,654,1.781,657,3.284,658,1.781,659,2.11,660,1.532,661,1.532,662,1.532,663,2.253,664,2.253,665,2.98,666,1.76,667,2.253,669,2.253,670,2.253,672,2.533,673,1.649,674,1.649,676,2.883,677,2.11,678,2.11,679,2.11,680,2.771,681,1.491,682,2.171,764,2.212,811,2.253,874,2.77,921,2.326,1004,2.326,1146,2.433,1147,2.454,1199,2.017,1261,2.454,1290,2.883,1293,2.883,1387,2.326,1409,2.326,1491,3.785,1492,2.975,1493,2.77,1494,2.454,1495,3.232,1496,4.311,1497,4.415,1498,5.404,1499,2.6,1500,2.6,1501,2.6,1502,2.6,1503,2.6,1504,2.6,1505,2.6,1506,2.6,1507,3.232,1508,3.232,1509,3.232,1510,3.232,1511,3.232]],["title/interfaces/ISearchInputButtonConfig.html",[167,0.169,1512,2.741]],["body/interfaces/ISearchInputButtonConfig.html",[0,0.398,3,0.119,4,0.139,8,0.119,9,0.082,10,2.896,12,0.512,13,0.585,16,0.281,17,0.281,19,0.281,21,0.178,22,0.444,27,0.555,43,0.463,67,1.051,73,0.013,74,0.262,81,0.338,83,1.403,94,2.152,113,0.849,148,0.167,150,0.362,151,1.88,153,0.139,167,0.294,168,1.051,171,0.179,172,0.139,174,0.416,175,1.057,294,1.164,295,1.596,309,0.011,310,0.011,560,3.194,624,1.729,730,3.976,1348,4.455,1387,3.338,1494,3.522,1512,5.116,1513,4.27,1514,3.976,1515,4.774,1516,4.638,1517,4.638,1518,4.638,1519,4.638,1520,4.638]],["title/interfaces/ISearchInputConfig.html",[167,0.169,1515,2.741]],["body/interfaces/ISearchInputConfig.html",[0,0.396,3,0.118,4,0.137,8,0.118,9,0.081,10,2.864,12,0.507,13,0.582,16,0.278,17,0.278,19,0.278,21,0.176,22,0.441,27,0.574,43,0.458,67,1.04,73,0.013,74,0.28,81,0.337,83,1.04,94,2.142,113,0.839,148,0.165,150,0.36,151,1.867,153,0.137,167,0.293,168,1.04,171,0.178,172,0.137,174,0.411,175,1.05,294,1.151,295,1.585,309,0.011,310,0.011,560,3.173,624,1.71,730,5.286,1348,3.301,1387,3.301,1494,3.483,1512,5.286,1513,4.223,1514,3.932,1515,5.091,1516,6.166,1517,6.166,1518,4.587,1519,4.587,1520,4.587]],["title/interfaces/ISelectConfig.html",[167,0.169,1073,2.189]],["body/interfaces/ISelectConfig.html",[0,0.328,3,0.08,4,0.092,8,0.08,9,0.054,12,0.342,13,0.45,16,0.188,17,0.188,19,0.188,21,0.119,22,0.341,27,0.59,35,1.319,42,2.651,43,0.309,54,1.714,58,2.707,67,0.701,73,0.013,74,0.297,76,1.339,78,0.525,79,1.977,81,0.34,82,2.427,83,0.971,138,1.822,148,0.177,150,0.26,153,0.092,156,1.774,167,0.227,168,0.701,171,0.147,172,0.092,174,0.384,175,0.587,188,0.677,228,0.802,241,0.246,242,0.246,258,1.075,299,1.075,309,0.008,310,0.008,323,0.708,339,1.366,369,0.545,370,0.545,373,2.488,384,1.082,428,1.399,430,2.096,444,1.227,445,0.75,446,0.75,449,0.857,450,0.857,451,1.319,452,1.319,470,1.01,528,1.471,546,1.232,548,2.561,549,1.578,550,1.578,551,2.185,552,1.578,553,2.185,554,1.415,557,2.019,558,1.578,559,1.704,560,1.774,563,1.578,564,2.561,566,2.106,567,2.797,569,2.019,575,2.861,585,1.959,586,1.943,588,2.36,593,1.704,594,1.93,602,2.561,605,1.466,607,1.959,610,2.185,612,2.797,616,1.827,617,2.842,618,1.415,624,1.153,625,2.427,626,1.415,627,1.415,628,1.959,629,1.959,630,2.263,631,1.578,632,2.427,643,2.427,644,2.427,645,2.707,652,2.019,657,3.209,658,1.704,659,2.019,660,1.466,661,1.466,662,1.466,663,2.185,664,2.185,665,2.94,666,1.707,667,2.185,669,2.185,670,2.185,673,1.578,674,1.578,676,2.797,677,2.019,678,2.019,679,2.019,680,2.923,681,1.446,682,2.106,921,2.226,934,2.117,1073,3.364,1133,3.252,1138,4.028,1142,2.348,1146,2.36,1186,2.348,1290,2.797,1293,2.797,1382,4.028,1395,2.348,1409,2.226,1421,4.267,1442,3.446,1499,3.446,1500,2.488,1501,2.488,1502,2.488,1503,2.488,1504,2.488,1505,2.488,1506,2.488,1521,2.847,1522,4.547,1523,3.092,1524,3.092,1525,3.092,1526,3.092,1527,3.092,1528,3.092,1529,3.092,1530,3.092,1531,3.092,1532,4.914,1533,3.092,1534,3.092,1535,3.092,1536,3.092,1537,3.092,1538,3.092]],["title/interfaces/ISelectOptionsConfig.html",[167,0.169,1522,2.741]],["body/interfaces/ISelectOptionsConfig.html",[0,0.342,3,0.086,4,0.1,8,0.086,9,0.059,12,0.37,13,0.476,16,0.203,17,0.203,19,0.203,21,0.129,22,0.36,27,0.405,35,1.43,42,2.872,43,0.335,54,1.787,58,1.71,67,0.759,73,0.013,74,0.213,76,1.254,78,0.931,79,2.045,81,0.333,82,1.533,83,1.298,138,1.867,148,0.181,150,0.274,153,0.1,156,1.922,167,0.239,168,0.759,171,0.153,172,0.1,174,0.405,175,0.636,188,0.734,228,0.869,241,0.267,242,0.267,258,1.135,299,1.135,309,0.009,310,0.009,323,0.575,339,1.48,369,0.591,370,0.591,373,2.696,384,0.684,428,1.478,430,2.186,444,1.297,445,0.813,446,0.813,449,0.929,450,0.929,451,1.43,452,1.43,470,1.095,528,1.521,546,1.335,548,2.705,549,1.71,550,1.71,551,2.309,552,1.71,553,2.309,554,1.533,557,2.188,558,1.71,559,1.846,560,1.922,563,1.71,564,2.705,566,2.225,567,2.955,569,2.188,575,2.701,585,2.07,586,1.579,588,2.493,593,1.846,594,2.092,602,2.705,605,1.589,607,2.07,610,2.309,612,2.955,616,1.93,617,2.923,618,1.533,624,1.249,625,2.07,626,1.533,627,1.533,628,2.07,629,2.07,630,1.93,631,1.71,632,1.533,643,1.533,644,1.533,645,1.71,652,2.188,657,3.345,658,1.846,659,2.188,660,1.589,661,1.589,662,1.589,663,2.309,664,2.309,665,3.012,666,1.803,667,2.309,669,2.309,670,2.309,673,1.71,674,1.71,676,2.955,677,2.188,678,2.188,679,2.188,680,3.023,681,1.528,682,2.225,921,2.412,934,2.294,1073,3.098,1133,3.436,1138,2.544,1142,2.544,1146,2.493,1186,2.544,1290,2.955,1293,2.955,1382,2.544,1395,2.544,1409,2.412,1421,2.696,1442,3.64,1499,3.64,1500,2.696,1501,2.696,1502,2.696,1503,2.696,1504,2.696,1505,2.696,1506,2.696,1521,3.085,1522,4.392,1523,3.351,1524,3.351,1525,3.351,1526,3.351,1527,3.351,1528,3.351,1529,3.351,1530,3.351,1531,3.351,1532,5.123,1533,3.351,1534,3.351,1535,3.351,1536,3.351,1537,3.351,1538,3.351]],["title/interfaces/ISkipLinkConfig.html",[167,0.169,1048,2.741]],["body/interfaces/ISkipLinkConfig.html",[0,0.389,3,0.113,4,0.132,8,0.113,9,0.078,13,0.463,16,0.267,17,0.267,19,0.267,21,0.169,22,0.43,27,0.483,60,3.351,73,0.013,74,0.275,81,0.344,148,0.132,149,3.169,150,0.327,153,0.132,167,0.285,168,0.998,171,0.175,172,0.132,174,0.394,188,1.277,214,2.165,241,0.351,242,0.351,273,1.105,274,1.546,309,0.01,310,0.01,323,0.742,366,3.694,379,3.223,397,3.542,434,4.376,456,3.883,811,2.753,953,2.875,1030,4.053,1031,3.774,1032,4.053,1033,4.693,1034,4.403,1036,4.403,1038,4.625,1040,4.403,1043,4.403,1044,4.403,1045,4.403,1048,5.001,1049,4.403,1050,4.403,1051,4.403,1052,4.403,1053,4.403,1054,3.014,1055,4.403,1056,4.403,1057,4.403,1058,5.395,1059,4.403,1060,5.395,1061,4.403,1062,4.403]],["title/interfaces/ISpinnerConfig.html",[167,0.169,1539,2.943]],["body/interfaces/ISpinnerConfig.html",[0,0.367,3,0.1,4,0.116,8,0.1,9,0.068,12,0.427,13,0.523,16,0.235,17,0.235,19,0.235,21,0.149,22,0.396,27,0.578,43,0.386,54,1.35,73,0.013,74,0.298,81,0.332,83,0.877,148,0.164,150,0.384,153,0.116,167,0.205,168,0.877,171,0.18,172,0.116,174,0.347,176,2.415,188,1.089,228,1.004,241,0.308,242,0.308,301,1.004,309,0.009,310,0.009,323,0.781,356,1.35,359,2.636,360,3.432,363,2.974,369,1.083,370,1.083,384,1.225,426,1.902,428,1.625,445,0.939,446,0.939,449,1.073,450,1.073,474,2.132,527,1.522,528,1.073,531,2.358,532,2.563,586,2.095,681,1.679,741,3.405,880,3.58,1179,2.784,1182,3.58,1274,4.559,1296,4.975,1426,2.784,1447,5.147,1462,3.58,1463,2.784,1468,5.147,1488,5.062,1489,3.561,1490,4.264,1539,5.062,1540,3.316,1541,6.421,1542,4.579,1543,3.868,1544,4.579,1545,3.868,1546,3.868,1547,5.804,1548,4.28,1549,4.28,1550,5.503,1551,4.28,1552,4.28]],["title/interfaces/IStepConfig.html",[167,0.169,1449,2.741]],["body/interfaces/IStepConfig.html",[0,0.372,3,0.103,4,0.12,8,0.103,9,0.07,12,0.442,13,0.534,16,0.242,17,0.242,19,0.242,21,0.153,22,0.405,27,0.455,43,0.399,60,3.416,73,0.013,74,0.239,81,0.313,85,2.243,86,2.039,94,2.013,148,0.181,150,0.308,151,1.715,153,0.12,167,0.269,168,0.906,171,0.185,172,0.12,174,0.358,175,0.759,176,2.495,188,1.112,228,1.037,241,0.318,242,0.318,288,1.003,289,1.498,309,0.01,310,0.01,323,0.788,356,1.395,369,0.895,370,0.895,384,0.816,428,1.66,444,1.456,445,0.97,446,0.97,449,1.108,450,1.108,485,1.395,605,1.895,607,2.324,660,1.895,661,1.895,662,1.895,681,1.715,726,2.039,1054,2.736,1349,3.426,1350,3.426,1443,4.354,1444,2.877,1445,3.035,1446,3.216,1447,4.354,1448,5.079,1449,4.786,1450,4.461,1451,2.736,1452,3.68,1453,3.656,1454,3.656,1455,3.68,1456,4.354,1457,3.68,1458,4.354,1459,3.68,1460,6.065,1461,4.676,1462,4.228,1463,3.656,1464,3.997,1465,3.997,1466,3.997,1467,3.997,1468,4.354,1469,4.086,1470,3.997,1471,3.997,1472,5.079]],["title/interfaces/ITabConfig.html",[167,0.169,1453,2.301]],["body/interfaces/ITabConfig.html",[0,0.385,3,0.111,4,0.129,8,0.111,9,0.076,12,0.475,13,0.559,16,0.261,17,0.261,19,0.261,21,0.165,22,0.424,27,0.54,43,0.43,52,3.687,60,3.324,73,0.013,74,0.272,76,0.942,78,1.024,81,0.34,94,1.918,138,1.36,148,0.173,150,0.323,151,1.796,153,0.159,167,0.281,168,0.975,171,0.173,172,0.129,174,0.385,175,0.817,241,0.343,242,0.343,303,1.079,309,0.01,310,0.01,323,0.803,339,1.9,369,0.758,370,0.758,384,0.878,444,1.524,445,1.044,446,1.044,485,1.501,726,2.714,811,2.195,1033,4.852,1054,3.953,1453,4.155,1454,3.828,1469,4.645,1553,3.96,1554,5.318,1555,4.301,1556,4.301,1557,4.301,1558,4.301,1559,4.301,1560,4.301,1561,5.318,1562,4.301,1563,4.301,1564,5.773,1565,4.301,1566,5.318,1567,4.301,1568,4.301]],["title/interfaces/ITabNavConfig.html",[167,0.169,1454,2.301]],["body/interfaces/ITabNavConfig.html",[0,0.382,3,0.109,4,0.127,8,0.109,9,0.075,12,0.468,13,0.554,16,0.257,17,0.257,19,0.257,21,0.163,22,0.419,27,0.577,43,0.423,52,3.629,60,2.333,73,0.013,74,0.283,76,1.255,78,0.718,81,0.335,94,1.899,138,1.338,148,0.171,150,0.319,151,1.778,153,0.158,167,0.278,168,0.959,171,0.171,172,0.127,174,0.379,175,0.804,241,0.337,242,0.337,303,1.062,309,0.01,310,0.01,323,0.799,339,1.87,369,0.746,370,0.746,384,1.224,444,1.509,445,1.027,446,1.027,485,1.477,726,3.148,811,2.16,1033,4.825,1054,4.305,1453,4.317,1454,4.126,1469,4.611,1553,3.897,1554,6.169,1555,4.233,1556,4.233,1557,4.233,1558,4.233,1559,4.233,1560,4.233,1561,5.266,1562,4.233,1563,4.233,1564,5.732,1565,4.233,1566,5.266,1567,4.233,1568,4.233]],["title/interfaces/ITextareaComponentConfig.html",[167,0.169,1569,2.943]],["body/interfaces/ITextareaComponentConfig.html",[0,0.335,3,0.083,4,0.097,8,0.083,9,0.057,12,0.357,13,0.464,16,0.196,17,0.196,19,0.196,21,0.124,22,0.352,27,0.594,35,1.38,43,0.323,73,0.013,74,0.297,76,1.184,77,0.868,78,0.549,79,1.647,81,0.337,82,2.473,88,1.782,113,0.989,138,1.023,148,0.179,150,0.354,153,0.097,167,0.171,168,0.733,171,0.15,172,0.097,174,0.29,175,0.839,241,0.258,242,0.258,305,1.146,306,0.99,309,0.008,310,0.008,323,0.743,356,1.128,369,0.779,370,0.779,384,1.103,405,3.554,426,1.59,430,2.146,444,1.266,445,0.785,446,0.785,451,1.38,452,1.38,470,1.443,499,1.429,527,1.352,528,1.499,546,1.289,548,2.641,549,1.65,550,1.65,551,2.254,552,1.65,553,2.254,554,1.48,558,1.65,561,2.214,563,1.65,564,2.641,565,2.602,575,2.944,579,3.024,586,1.975,610,2.254,616,1.885,617,2.888,618,1.48,624,1.206,625,2.473,626,1.48,627,1.48,630,2.307,631,1.65,632,2.473,643,2.473,644,2.473,645,2.759,663,2.254,664,2.254,665,2.759,666,1.761,667,2.254,669,2.254,670,2.254,672,2.534,673,1.65,674,1.65,803,4.105,811,1.65,906,2.602,1146,2.434,1199,2.758,1382,4.105,1383,2.978,1384,2.978,1386,2.773,1388,2.978,1389,2.978,1390,2.978,1391,2.978,1392,2.978,1393,2.978,1394,2.978,1395,2.456,1396,2.978,1398,2.978,1403,2.978,1404,2.978,1405,2.978,1410,2.978,1412,2.978,1413,2.978,1414,2.978,1462,2.328,1463,3.179,1569,4.632,1570,2.978,1571,6.261,1572,5.981,1573,5.981,1574,3.234,1575,4.417,1576,4.417,1577,3.578,1578,3.578,1579,3.578,1580,3.578,1581,4.887,1582,3.578,1583,3.578,1584,3.578,1585,3.578,1586,3.578,1587,3.578,1588,4.887,1589,5.566,1590,4.887,1591,3.578,1592,4.887,1593,3.578,1594,4.887,1595,3.234,1596,3.578,1597,3.578]],["title/components/IconButtonComponent.html",[0,0.213,276,0.802]],["body/components/IconButtonComponent.html",[0,0.422,1,0.717,2,1.211,3,0.071,4,0.083,5,0.818,6,0.873,7,0.873,8,0.071,9,0.109,12,0.437,13,0.486,15,0.873,16,0.404,17,0.404,19,0.24,21,0.106,22,0.315,27,0.248,28,0.693,34,1.211,43,0.504,53,1.251,57,1.369,61,2.583,70,1.812,72,0.964,73,0.013,74,0.285,76,1.012,77,1.354,78,0.856,81,0.302,83,1.144,94,1.667,99,3.056,107,0.993,113,0.846,148,0.118,150,0.355,151,1.336,153,0.083,163,0.717,167,0.209,171,0.166,172,0.171,174,0.414,175,0.524,188,0.866,232,0.873,233,1.251,234,1.251,235,0.873,236,1.623,237,0.873,239,0.873,240,0.717,241,0.525,242,0.525,243,0.873,244,0.717,245,0.873,246,0.717,247,0.818,248,0.873,249,0.717,250,1.251,251,0.717,252,0.873,253,1.251,254,0.873,255,0.741,256,0.873,257,0.67,258,0.693,259,0.873,260,0.717,261,0.873,262,0.693,263,0.873,264,0.717,265,0.873,266,0.717,267,0.766,268,0.873,269,0.741,270,0.873,271,0.741,272,0.873,273,0.693,274,0.792,275,0.873,276,1.266,277,1.34,278,0.717,279,0.873,280,0.717,281,1.251,282,1.461,283,0.693,284,0.873,285,0.741,286,0.741,287,0.873,288,0.693,289,1.061,290,0.717,291,0.873,292,0.693,293,0.792,294,0.693,295,0.792,296,0.741,297,0.818,298,0.873,299,0.693,300,0.873,301,0.717,302,0.873,303,0.693,304,0.873,305,0.717,306,0.845,307,0.873,308,0.873,309,0.008,310,0.008,323,0.727,338,2.763,340,3.421,341,2.847,342,3.831,343,2.097,344,2.097,345,3.469,346,2.835,350,3.487,352,3.154,356,0.964,359,2.945,367,2.365,369,0.89,370,0.89,379,2.945,384,1.03,445,0.67,446,0.67,456,1.988,497,3.391,498,4.255,499,2.229,527,1.211,528,1.281,529,3.004,530,3.509,531,1.876,532,1.22,535,3.391,536,2.368,537,2.269,538,1.522,541,3.326,542,3.487,809,2.222,1294,4.973,1295,2.222,1296,4.578,1297,4.916,1298,3.962,1299,2.543,1300,3.962,1301,2.543,1302,3.956,1303,2.762,1304,2.762,1305,4.622,1306,3.956,1307,4.622,1308,3.956,1309,2.762,1598,5.015,1599,3.502,1600,3.502,1601,3.502,1602,3.502,1603,3.502,1604,3.502,1605,3.502,1606,3.502,1607,3.502,1608,3.502,1609,3.502]],["title/components/IconComponent.html",[0,0.213,278,0.83]],["body/components/IconComponent.html",[0,0.418,1,0.9,2,1.417,3,0.089,4,0.104,5,1.027,6,1.097,7,1.097,8,0.089,9,0.105,12,0.512,15,1.097,16,0.41,17,0.41,19,0.281,21,0.133,22,0.369,27,0.311,28,0.871,34,1.417,53,1.464,57,1.544,70,1.717,72,1.21,73,0.013,74,0.273,77,0.931,78,0.589,81,0.307,107,0.871,111,2.791,113,0.635,148,0.104,150,0.337,152,2.791,153,0.104,163,0.9,167,0.183,171,0.139,172,0.104,173,2.497,174,0.467,188,1.014,232,1.097,233,1.464,234,1.464,235,1.097,236,1.543,237,1.097,239,1.097,240,0.9,241,0.535,242,0.535,243,1.097,244,0.9,245,1.097,246,0.9,247,1.027,248,1.097,249,0.9,250,1.464,251,0.9,252,1.097,253,1.464,254,1.097,255,0.931,256,1.097,257,0.842,258,0.871,259,1.097,260,0.9,261,1.097,262,0.871,263,1.097,264,0.9,265,1.097,266,0.9,267,0.962,268,1.097,269,0.931,270,1.097,271,0.931,272,1.097,273,0.871,274,0.994,275,1.097,276,0.871,277,1.141,278,1.444,279,1.097,280,0.9,281,1.464,282,1.649,283,0.871,284,1.097,285,0.931,286,0.931,287,1.097,288,0.871,289,1.242,290,0.9,291,1.097,292,0.871,293,0.994,294,0.871,295,0.994,296,0.931,297,1.027,298,1.097,299,0.871,300,1.097,301,0.9,302,1.097,303,0.871,304,1.097,305,0.9,306,1.062,307,1.097,308,1.097,309,0.009,310,0.009,379,2.949,422,3.255,426,2.277,439,3.171,440,3.809,442,1.839,866,4.194,1310,4.8,1311,3.469,1312,6.155,1313,5.124,1314,5.124,1315,5.768,1316,3.838,1317,3.838,1318,3.838,1319,3.838,1320,3.838,1321,5.124,1322,3.838,1610,4.397,1611,4.397,1612,4.397,1613,4.397,1614,4.397]],["title/components/IndicatorComponent.html",[0,0.213,280,0.83]],["body/components/IndicatorComponent.html",[0,0.421,1,0.713,2,1.206,3,0.071,4,0.082,5,0.814,6,0.869,7,0.869,8,0.071,9,0.109,12,0.435,13,0.484,15,0.869,16,0.404,17,0.404,19,0.239,21,0.106,22,0.314,27,0.512,28,0.69,34,1.206,43,0.503,53,1.246,57,1.365,70,1.81,72,0.959,73,0.013,74,0.275,76,1.102,77,1.057,78,0.782,81,0.26,83,1.141,85,2.223,107,1.392,111,2.211,113,1.015,148,0.118,150,0.239,152,2.211,153,0.082,163,0.713,167,0.145,171,0.171,172,0.082,174,0.413,214,1.938,232,0.869,233,1.246,234,1.246,235,0.869,236,1.396,237,0.869,239,0.869,240,0.713,241,0.523,242,0.523,243,0.869,244,0.713,245,0.869,246,0.713,247,0.814,248,0.869,249,0.713,250,1.246,251,0.713,252,0.869,253,1.246,254,0.869,255,0.737,256,0.869,257,0.667,258,0.69,259,0.869,260,0.713,261,0.869,262,0.69,263,0.869,264,0.713,265,0.869,266,0.713,267,0.762,268,0.869,269,0.737,270,0.869,271,0.737,272,0.869,273,0.69,274,0.788,275,0.869,276,0.69,277,0.863,278,0.713,279,0.869,280,1.306,281,1.246,282,1.457,283,0.69,284,0.869,285,0.737,286,0.737,287,0.869,288,0.69,289,1.057,290,0.713,291,0.869,292,0.69,293,0.788,294,0.69,295,0.788,296,0.737,297,0.814,298,0.869,299,0.69,300,0.869,301,0.713,302,0.869,303,0.69,304,0.869,305,0.713,306,0.841,307,0.869,308,0.869,309,0.008,310,0.008,320,4.315,340,2.755,346,2.011,356,1.86,359,2.089,360,2.46,361,3.171,369,0.978,370,1.007,379,1.457,381,4.315,384,0.561,399,1.978,422,2.877,426,1.938,439,2.698,440,3.446,442,1.457,444,1.129,445,0.667,446,0.667,470,1.944,474,1.514,542,1.795,585,1.257,586,1.935,666,1.571,757,2.46,760,3.95,866,3.707,1323,4.242,1324,2.53,1325,4.608,1326,5.098,1327,5.098,1328,3.941,1329,2.748,1330,3.941,1331,3.941,1332,3.941,1333,3.941,1334,5.034,1335,2.993,1336,3.941,1337,3.941,1338,2.748,1339,2.748,1340,2.748,1341,2.748,1342,2.748,1343,2.748,1344,2.748,1345,2.748,1346,3.04,1347,3.04,1348,1.978,1349,3.379,1350,3.379,1351,4.36,1352,4.36,1353,4.36,1354,5.098,1355,5.569,1356,3.04,1357,3.04,1358,3.04,1359,4.36,1360,4.36,1361,4.36,1362,4.36,1363,5.098,1364,5.569,1365,4.36,1366,3.04,1367,5.569,1368,3.04,1369,3.04,1370,3.04,1371,4.36,1372,5.569,1373,3.04,1374,3.04,1375,3.04,1376,3.04,1377,3.04,1378,4.36,1379,3.04,1615,3.484,1616,3.484,1617,3.484,1618,3.484,1619,3.484,1620,3.484,1621,3.484,1622,3.484,1623,3.484,1624,3.484,1625,3.484,1626,6.381]],["title/components/InputComponent.html",[0,0.213,28,0.802]],["body/components/InputComponent.html",[0,0.432,1,0.483,2,0.899,3,0.048,4,0.056,5,0.551,6,0.588,7,0.588,8,0.048,9,0.113,12,0.325,13,0.383,15,0.588,16,0.39,17,0.39,19,0.178,21,0.071,22,0.234,27,0.533,28,1.2,34,0.899,35,2.278,43,0.413,53,0.929,54,1.569,57,1.581,67,0.666,70,1.904,72,1.746,73,0.013,74,0.296,76,1.259,77,1.58,78,1.018,79,2.037,81,0.304,82,0.851,83,1.176,88,1.025,107,1.443,113,1.106,138,1.64,148,0.15,150,0.349,153,0.056,154,1.413,163,0.483,167,0.098,171,0.109,172,0.056,174,0.326,175,0.785,188,0.407,201,1.857,228,1.167,232,0.588,233,0.929,234,0.929,235,0.588,236,1.146,237,0.588,239,0.588,240,0.483,241,0.504,242,0.504,243,0.588,244,0.483,245,0.588,246,0.483,247,0.551,248,0.588,249,0.483,250,0.929,251,0.483,252,0.588,253,0.929,254,0.588,255,0.499,256,0.588,257,0.452,258,0.467,259,0.588,260,0.483,261,0.588,262,0.467,263,0.588,264,0.483,265,0.588,266,0.483,267,0.516,268,0.588,269,0.499,270,0.588,271,0.499,272,0.588,273,0.467,274,0.533,275,0.588,276,0.467,277,0.407,278,0.483,279,0.588,280,0.483,281,0.929,282,1.151,283,0.467,284,0.588,285,0.499,286,0.499,287,0.588,288,0.467,289,0.788,290,0.483,291,0.588,292,0.467,293,0.533,294,0.467,295,0.533,296,0.499,297,0.551,298,0.588,299,0.467,300,0.588,301,0.483,302,0.588,303,0.467,304,0.588,305,0.483,306,0.569,307,0.588,308,0.588,309,0.006,310,0.006,323,0.608,339,1.607,356,0.649,369,0.728,370,0.728,384,0.38,426,2.032,428,1.35,430,2.278,442,0.986,444,0.842,445,0.452,446,0.452,449,0.516,450,0.516,451,0.794,452,0.794,470,1.635,474,2.005,485,0.649,499,1.825,527,0.899,528,1.247,537,2.087,546,2.569,548,2.176,549,1.499,550,1.499,551,1.857,552,1.499,553,1.857,554,1.344,557,2.376,558,1.857,559,2.479,560,2.37,561,2.491,562,2.011,563,1.857,564,2.471,565,2.927,566,2.46,567,3.121,568,3.35,569,2.698,570,2.518,571,2.518,572,2.937,573,2.114,574,2.363,575,2.785,576,1.595,579,2.491,585,1.344,586,1.442,588,2.277,589,2.704,593,1.619,594,1.834,595,2.011,597,2.829,598,2.011,600,2.704,605,1.393,607,1.665,610,1.857,612,2.376,616,1.552,617,2.553,618,1.344,624,0.694,625,1.344,626,0.851,627,0.851,628,1.344,629,1.344,630,1.253,631,0.95,632,0.851,643,0.851,644,0.851,645,0.95,652,1.215,653,1.713,657,2.376,658,1.025,659,1.215,660,0.882,661,0.882,662,0.882,663,1.499,664,1.499,665,2.439,666,1.171,667,1.499,669,1.499,670,1.499,672,1.685,673,0.95,674,0.95,675,1.713,676,2.376,677,1.215,678,1.215,679,1.215,680,1.025,681,0.992,682,1.444,683,1.713,684,1.713,686,2.363,749,2.363,811,0.95,880,1.339,906,1.497,1146,1.619,1199,2.579,1380,3.35,1381,1.713,1382,1.413,1383,1.713,1384,1.713,1385,4.132,1386,4.098,1387,2.114,1388,1.713,1389,1.713,1390,1.713,1391,1.713,1392,1.713,1393,1.713,1394,1.713,1395,1.413,1396,1.713,1397,4.976,1398,3.35,1399,4.025,1400,4.025,1401,4.976,1402,3.119,1403,1.713,1404,1.713,1405,1.713,1406,5.288,1407,4.025,1408,4.025,1409,1.339,1410,1.713,1411,2.059,1412,2.704,1413,1.713,1414,2.704,1415,3.249,1416,4.571,1417,4.132,1418,2.937,1627,3.249,1628,3.723,1629,3.723,1630,2.359,1631,2.359,1632,2.359,1633,2.359,1634,2.359,1635,2.359,1636,2.359,1637,2.359,1638,2.359,1639,2.359,1640,2.359,1641,2.359,1642,2.359,1643,2.359,1644,2.359,1645,2.359,1646,2.359,1647,2.359,1648,2.359,1649,2.359,1650,2.359,1651,2.359,1652,2.359,1653,2.359,1654,2.359,1655,2.359,1656,2.359,1657,2.359,1658,2.359,1659,2.359,1660,2.359,1661,2.359]],["title/modules/IrccDsAngularBannerModule.html",[1662,2.741,1663,2.943]],["body/modules/IrccDsAngularBannerModule.html",[0,0.377,3,0.122,4,0.142,8,0.122,9,0.084,73,0.013,148,0.191,153,0.142,171,0.142,172,0.142,240,1.74,309,0.011,310,0.011,311,3.822,449,1.317,450,1.317,523,3.419,1663,6.012,1664,3.419,1665,4.066,1666,5.255,1667,5.255,1668,5.255,1669,4.544,1670,3.822,1671,6.022,1672,4.289,1673,4.289,1674,6.022,1675,4.842,1676,4.842,1677,4.842,1678,6.022,1679,4.066,1680,4.373,1681,4.373,1682,4.842,1683,3.822,1684,4.842,1685,4.072]],["title/modules/IrccDsAngularComponentsSharedModule.html",[1662,2.741,1679,2.301]],["body/modules/IrccDsAngularComponentsSharedModule.html",[0,0.311,3,0.09,4,0.105,8,0.09,9,0.062,73,0.013,148,0.198,153,0.105,171,0.105,172,0.105,188,0.769,244,1.659,246,1.659,249,1.659,260,1.659,264,1.659,266,1.659,267,0.974,276,1.604,277,0.769,278,1.659,280,1.659,283,1.604,288,1.604,289,1.253,290,1.67,301,1.659,303,1.604,309,0.009,310,0.009,352,1.792,353,2.293,449,0.974,450,0.974,523,2.527,768,3.512,769,3.512,867,2.666,868,3.512,1445,2.666,1451,2.404,1452,3.233,1455,3.233,1664,2.527,1665,3.361,1669,3.756,1670,2.825,1672,2.666,1673,2.666,1675,4.003,1676,4.003,1677,4.003,1679,4.908,1682,4.497,1683,2.825,1684,4.497,1685,3.01,1686,3.885,1687,3.885,1688,3.885,1689,3.512,1690,3.512,1691,6.649,1692,4.451,1693,4.451,1694,4.451,1695,4.451,1696,4.451,1697,4.451,1698,4.451,1699,4.451,1700,4.451,1701,4.451,1702,5.246]],["title/modules/IrccDsAngularFormComponentsModule.html",[1662,2.741,1703,2.943]],["body/modules/IrccDsAngularFormComponentsModule.html",[0,0.34,3,0.104,4,0.12,8,0.104,9,0.071,28,1.639,73,0.013,148,0.196,153,0.12,154,3.058,171,0.12,172,0.12,188,0.882,251,1.695,257,1.585,258,1.011,262,1.639,292,1.639,293,1.154,299,1.639,305,1.695,309,0.01,310,0.01,449,1.117,450,1.117,523,2.899,546,1.605,624,1.501,1066,3.058,1074,3.452,1493,3.452,1574,4.027,1664,2.899,1665,3.673,1669,4.106,1670,3.24,1672,3.875,1673,3.875,1675,4.375,1676,4.375,1677,4.375,1679,3.673,1680,3.708,1681,3.708,1682,4.375,1683,3.24,1684,4.375,1685,3.452,1703,6.231,1704,4.455,1705,4.455,1706,4.455,1707,4.027,1708,4.027,1709,5.105,1710,4.455,1711,5.105,1712,5.104,1713,5.104,1714,5.105,1715,5.105,1716,5.603]],["title/modules/IrccDsAngularHeaderFooterModule.html",[1662,2.741,1717,2.943]],["body/modules/IrccDsAngularHeaderFooterModule.html",[0,0.355,3,0.111,4,0.129,8,0.111,9,0.076,73,0.013,148,0.195,153,0.129,171,0.129,172,0.129,188,0.943,269,1.769,271,1.769,273,1.655,274,1.234,285,1.769,286,1.155,309,0.01,310,0.01,449,1.194,450,1.194,523,3.099,624,1.605,953,2.812,985,3.964,1031,3.691,1664,3.099,1665,3.831,1669,4.282,1670,3.464,1672,4.041,1673,4.041,1675,4.562,1676,4.562,1677,4.562,1679,3.831,1680,3.964,1681,3.964,1682,4.562,1683,3.464,1684,4.562,1685,3.691,1712,5.322,1713,5.322,1717,6.174,1718,4.764,1719,4.764,1720,4.764,1721,4.306,1722,4.306,1723,5.459,1724,5.459,1725,3.691,1726,5.459,1727,5.459,1728,5.776]],["title/modules/IrccDsAngularLegacyOldModule.html",[1662,2.741,1729,2.943]],["body/modules/IrccDsAngularLegacyOldModule.html",[0,0.349,1,1.705,3,0.108,4,0.125,8,0.108,9,0.074,10,2.616,73,0.013,148,0.195,153,0.125,163,1.705,164,5.233,165,3.592,166,4.19,171,0.125,172,0.125,188,0.917,255,1.762,294,1.649,295,1.201,296,1.762,309,0.01,310,0.01,449,1.162,450,1.162,523,3.016,624,1.562,700,4.19,1514,3.592,1664,3.016,1665,3.766,1669,4.209,1670,3.371,1672,3.973,1673,3.973,1675,4.486,1676,4.486,1677,4.486,1679,3.766,1680,3.858,1681,3.858,1682,4.486,1683,3.371,1684,4.486,1685,3.592,1710,4.635,1712,5.233,1713,5.233,1729,6.196,1730,4.635,1731,4.635,1732,4.635,1733,4.19,1734,4.19,1735,4.19,1736,5.311,1737,5.311,1738,5.233,1739,5.311,1740,5.706]],["title/injectables/LabelButtonService.html",[1422,2.572,1741,2.741]],["body/injectables/LabelButtonService.html",[0,0.415,3,0.121,4,0.141,8,0.121,9,0.11,21,0.181,22,0.448,27,0.422,34,1.719,57,1.394,70,1.779,72,1.643,73,0.013,74,0.222,77,1.507,78,0.954,81,0.31,107,1.182,113,0.862,148,0.168,153,0.141,171,0.141,172,0.141,175,1.067,309,0.011,310,0.011,323,0.599,470,1.962,1422,4.52,1741,4.817,1742,4.709,1743,6.881,1744,4.709,1745,7.613,1746,7.613,1747,7.123,1748,7.123,1749,5.209,1750,7.123,1751,5.209,1752,6.644,1753,5.209,1754,5.209,1755,5.209,1756,5.209,1757,5.969]],["title/components/LabelComponent.html",[0,0.213,283,0.802]],["body/components/LabelComponent.html",[0,0.417,1,0.733,2,1.23,3,0.073,4,0.085,5,0.837,6,0.893,7,0.893,8,0.073,9,0.105,12,0.444,13,0.492,15,0.893,16,0.404,17,0.404,19,0.244,21,0.108,22,0.32,27,0.36,28,0.709,34,1.23,35,1.996,43,0.509,53,1.271,54,0.986,57,1.51,67,0.911,70,1.743,72,1.403,73,0.013,74,0.254,76,0.88,77,1.255,78,0.682,81,0.323,82,1.292,83,0.64,94,1.019,107,1.279,113,0.856,148,0.167,150,0.244,151,1.58,153,0.085,163,0.733,167,0.213,171,0.172,172,0.085,174,0.419,175,0.763,188,1.116,201,1.442,228,1.576,232,0.893,233,1.271,234,1.271,235,0.893,236,1.413,237,0.893,239,0.893,240,0.733,241,0.526,242,0.526,243,0.893,244,0.733,245,0.893,246,0.733,247,0.837,248,0.893,249,0.733,250,1.271,251,0.733,252,0.893,253,1.271,254,0.893,255,0.758,256,0.893,257,0.685,258,0.709,259,0.893,260,0.733,261,0.893,262,0.709,263,0.893,264,0.733,265,0.893,266,0.733,267,0.783,268,0.893,269,0.758,270,0.893,271,0.758,272,0.893,273,0.709,274,0.81,275,0.893,276,0.709,277,0.619,278,0.733,279,0.893,280,0.733,281,1.271,282,1.48,283,1.279,284,0.893,285,0.758,286,0.758,287,0.893,288,0.709,289,1.078,290,0.733,291,0.893,292,0.709,293,0.81,294,0.709,295,0.81,296,0.758,297,0.837,298,0.893,299,0.709,300,0.893,301,0.733,302,0.893,303,0.709,304,0.893,305,0.733,306,0.865,307,0.893,308,0.893,309,0.008,310,0.008,323,0.511,346,1.442,367,2.798,427,2.145,428,1.666,430,2.592,449,0.783,450,0.783,451,1.205,452,1.205,470,1.313,566,1.389,573,2.893,575,2.635,586,1.779,605,1.906,607,2.141,616,1.996,618,2.141,624,1.053,625,1.839,626,1.292,627,1.292,628,1.839,629,1.839,630,1.715,632,1.292,643,1.292,644,1.292,654,1.557,660,1.339,661,1.339,662,1.339,666,1.126,681,1.357,682,1.976,686,4.101,758,2.422,1335,2.145,1348,2.033,1402,2.422,1419,2.422,1420,2.825,1421,2.273,1422,4.101,1423,2.601,1424,2.825,1425,2.825,1426,2.033,1427,3.446,1428,2.601,1429,3.446,1430,2.601,1431,2.601,1432,4.02,1433,4.68,1434,4.68,1435,4.02,1436,4.02,1437,2.825,1438,2.825,1439,5.098,1440,2.825,1441,5.098,1442,3.234,1758,5.096,1759,3.581,1760,3.581,1761,3.581,1762,3.581,1763,3.581,1764,3.581,1765,5.096,1766,5.096]],["title/injectables/LanguageSwitchButtonService.html",[1741,2.741,1767,2.943]],["body/injectables/LanguageSwitchButtonService.html",[0,0.414,3,0.121,4,0.14,8,0.121,9,0.109,21,0.18,22,0.447,34,1.716,70,1.776,73,0.013,77,1.504,78,0.951,107,1.177,113,0.858,148,0.168,153,0.14,171,0.14,172,0.14,175,1.064,309,0.011,310,0.011,470,1.959,953,4.057,1725,5.325,1741,4.806,1742,4.691,1744,4.691,1749,5.189,1751,5.189,1752,5.189,1753,5.189,1754,5.189,1755,5.189,1756,5.189,1767,5.161,1768,5.719,1769,6.212,1770,7.601,1771,7.601,1772,7.875,1773,7.106,1774,7.106,1775,5.946]],["title/components/LanguageSwitchComponent.html",[0,0.213,285,0.858]],["body/components/LanguageSwitchComponent.html",[0,0.423,1,0.759,2,1.261,3,0.075,4,0.087,5,0.866,6,0.925,7,0.925,8,0.075,9,0.109,12,0.455,13,0.501,15,0.925,16,0.405,17,0.405,19,0.25,21,0.112,22,0.328,27,0.427,28,0.734,34,1.261,43,0.476,53,1.303,57,1.616,63,3.532,67,0.934,70,1.812,72,1.664,73,0.013,74,0.267,76,0.902,77,1.389,78,0.879,79,1.536,81,0.292,83,1.237,96,2.693,97,2.965,107,1.299,111,2.353,113,0.947,148,0.155,149,2.105,150,0.25,153,0.087,163,0.759,171,0.163,172,0.087,188,1.133,228,1.238,232,0.925,233,1.303,234,1.303,235,0.925,236,1.436,237,0.925,239,0.925,240,0.759,241,0.528,242,0.528,243,0.925,244,0.759,245,0.925,246,0.759,247,0.866,248,0.925,249,0.759,250,1.303,251,0.759,252,0.925,253,1.303,254,0.925,255,0.785,256,0.925,257,0.71,258,0.734,259,0.925,260,0.759,261,0.925,262,0.734,263,0.925,264,0.759,265,0.925,266,0.759,267,0.811,268,0.925,269,0.785,270,0.925,271,0.785,272,0.925,273,0.734,274,0.838,275,0.925,276,0.734,277,0.64,278,0.759,279,0.925,280,0.759,281,1.303,282,1.508,283,0.734,284,0.925,285,1.389,286,1.519,287,0.925,288,0.734,289,1.105,290,0.759,291,0.925,292,0.734,293,0.838,294,0.734,295,0.838,296,0.785,297,0.866,298,0.925,299,0.734,300,0.925,301,0.759,302,0.925,303,0.734,304,0.925,305,0.759,306,0.895,307,0.925,308,0.925,309,0.008,310,0.008,323,0.606,428,1.692,449,0.811,450,0.811,470,1.558,585,2.182,607,2.182,681,1.61,745,2.925,904,4.12,953,4.041,980,2.925,1002,2.925,1423,2.693,1490,4.438,1683,2.353,1725,5.305,1767,4.766,1768,5.697,1769,5.94,1776,2.925,1777,5.222,1778,6.046,1779,5.222,1780,5.222,1781,5.222,1782,3.708,1783,6.046,1784,6.046,1785,5.222,1786,5.222,1787,3.708,1788,3.708,1789,5.222,1790,5.222,1791,5.222,1792,5.222,1793,5.222,1794,5.222,1795,3.708,1796,3.708,1797,3.708,1798,5.222,1799,3.708,1800,3.708,1801,3.708,1802,3.708,1803,3.708,1804,3.708,1805,3.708,1806,4.12,1807,3.236,1808,4.12,1809,4.12,1810,4.12,1811,3.708,1812,6.046,1813,3.708,1814,3.708,1815,3.708,1816,3.708]],["title/components/ProgressIndicatorComponent.html",[0,0.213,288,0.802]],["body/components/ProgressIndicatorComponent.html",[0,0.416,1,0.715,2,1.209,3,0.071,4,0.082,5,0.816,6,0.872,7,0.872,8,0.071,9,0.106,12,0.436,13,0.485,15,0.872,16,0.404,17,0.404,19,0.24,21,0.106,22,0.315,27,0.414,28,0.692,34,1.209,43,0.503,53,1.249,57,1.58,60,2.94,61,2.579,67,0.625,70,1.763,72,1.61,73,0.013,74,0.276,77,1.352,78,0.855,81,0.286,85,2.227,86,1.406,94,1.818,107,1.158,113,0.845,148,0.16,150,0.24,151,1.333,153,0.082,163,0.715,167,0.209,171,0.166,172,0.082,174,0.414,175,0.523,176,1.721,188,0.865,214,2.478,228,1.025,232,0.872,233,1.249,234,1.249,235,0.872,236,1.398,237,0.872,239,0.872,240,0.715,241,0.525,242,0.525,243,0.872,244,0.715,245,0.872,246,0.715,247,0.816,248,0.872,249,0.715,250,1.249,251,0.715,252,0.872,253,1.249,254,0.872,255,0.739,256,0.872,257,0.669,258,0.692,259,0.872,260,0.715,261,0.872,262,0.692,263,0.872,264,0.715,265,0.872,266,0.715,267,0.764,268,0.872,269,0.739,270,0.872,271,0.739,272,0.872,273,0.692,274,0.79,275,0.872,276,0.692,277,0.603,278,0.715,279,0.872,280,0.715,281,1.249,282,1.46,283,0.692,284,0.872,285,0.739,286,0.739,287,0.872,288,1.265,289,1.534,290,0.715,291,0.872,292,0.692,293,0.79,294,0.692,295,0.79,296,0.739,297,0.816,298,0.872,299,0.692,300,0.872,301,0.715,302,0.872,303,0.692,304,0.872,305,0.715,306,0.843,307,0.872,308,0.872,309,0.008,310,0.008,323,0.777,356,0.962,369,0.696,370,0.696,384,0.562,427,2.093,428,1.647,444,1.132,445,0.669,446,0.669,449,0.764,450,0.764,485,0.962,573,2.843,605,1.873,607,2.112,660,1.307,661,1.307,662,1.307,681,1.333,726,2.015,1054,2.704,1349,3.386,1350,3.386,1443,3.957,1444,4.349,1445,4.588,1446,2.217,1447,3.957,1448,4.616,1449,3.386,1450,2.999,1451,1.887,1452,2.538,1453,3.322,1454,3.322,1455,2.538,1456,3.386,1457,2.538,1458,3.386,1459,2.538,1460,4.616,1461,3.636,1462,3.84,1463,2.843,1464,4.616,1465,4.616,1466,4.616,1467,5.718,1468,3.386,1469,3.177,1470,3.95,1471,2.756,1472,3.95,1817,5.007,1818,5.007,1819,3.494,1820,3.494,1821,3.494,1822,3.494,1823,3.494,1824,3.494,1825,3.494]],["title/components/ProgressTagsComponent.html",[0,0.213,290,0.83]],["body/components/ProgressTagsComponent.html",[0,0.42,1,0.757,2,1.258,3,0.075,4,0.087,5,0.863,6,0.922,7,0.922,8,0.075,9,0.108,12,0.454,13,0.501,15,0.922,16,0.405,17,0.405,19,0.249,21,0.112,22,0.327,27,0.261,28,0.732,34,1.258,43,0.516,53,1.3,54,1.017,57,1.41,67,0.661,70,1.787,72,1.017,73,0.013,74,0.288,77,1.277,78,0.808,81,0.267,83,1.079,107,1.195,113,0.946,148,0.142,150,0.331,153,0.087,163,0.757,167,0.154,171,0.163,172,0.087,174,0.427,176,1.82,188,0.9,228,1.067,232,0.922,233,1.3,234,1.3,235,0.922,236,1.434,237,0.922,239,0.922,240,0.757,241,0.528,242,0.528,243,0.922,244,0.757,245,0.922,246,0.757,247,0.863,248,0.922,249,0.757,250,1.3,251,0.757,252,0.922,253,1.3,254,0.922,255,0.782,256,0.922,257,0.707,258,0.732,259,0.922,260,0.757,261,0.922,262,0.732,263,0.922,264,0.757,265,0.922,266,0.757,267,0.808,268,0.922,269,0.782,270,0.922,271,0.782,272,0.922,273,0.732,274,0.836,275,0.922,276,0.732,277,0.638,278,0.757,279,0.922,280,0.757,281,1.3,282,1.505,283,0.732,284,0.922,285,0.782,286,0.782,287,0.922,288,0.732,289,1.559,290,1.342,291,0.922,292,0.732,293,0.836,294,0.732,295,0.836,296,0.782,297,0.863,298,0.922,299,0.732,300,0.922,301,0.757,302,0.922,303,0.732,304,0.922,305,0.757,306,0.892,307,0.922,308,0.922,309,0.008,310,0.008,323,0.719,346,2.097,356,1.017,359,2.179,360,2.566,369,0.911,370,0.911,384,1.055,422,1.82,426,2.542,427,2.214,428,1.689,444,1.562,445,0.707,446,0.707,449,0.808,450,0.808,474,1.607,527,1.258,528,0.808,531,1.949,532,1.288,681,1.607,880,2.959,1179,2.099,1182,2.959,1426,2.099,1444,4.402,1450,3.615,1451,4.187,1473,2.5,1474,3.784,1475,2.916,1476,4.383,1477,2.916,1478,3.784,1479,2.916,1480,2.916,1481,2.916,1482,2.916,1483,2.916,1484,5.451,1485,4.111,1486,4.548,1487,4.548,1488,4.383,1489,4.76,1490,3.524,1826,5.211,1827,3.696,1828,3.696,1829,3.696,1830,3.696,1831,3.696,1832,3.696,1833,3.696,1834,5.211,1835,5.211,1836,5.211,1837,5.211,1838,5.211]],["title/components/RadioInputComponent.html",[0,0.213,292,0.802]],["body/components/RadioInputComponent.html",[0,0.427,1,0.528,2,0.964,3,0.052,4,0.061,5,0.603,6,0.644,7,0.644,8,0.052,9,0.112,12,0.348,13,0.405,15,0.644,16,0.394,17,0.394,19,0.191,21,0.148,22,0.251,27,0.479,28,0.511,34,0.964,35,1.644,43,0.433,53,0.996,54,1.637,57,1.583,58,1.967,67,0.714,70,1.874,72,1.731,73,0.013,74,0.283,76,0.95,77,1.531,78,1.008,79,1.174,81,0.314,82,0.931,83,0.873,85,1.702,107,1.433,113,1.004,138,1.735,148,0.155,150,0.301,153,0.061,163,0.528,167,0.167,171,0.115,172,0.061,174,0.42,175,0.598,188,0.446,201,1.608,215,2.157,228,1.343,232,0.644,233,0.996,234,0.996,235,0.644,236,1.203,237,0.644,239,0.644,240,0.528,241,0.509,242,0.509,243,0.644,244,0.528,245,0.644,246,0.528,247,0.603,248,0.644,249,0.528,250,0.996,251,0.528,252,0.644,253,0.996,254,0.644,255,0.546,256,0.644,257,0.494,258,0.511,259,0.644,260,0.528,261,0.644,262,0.511,263,0.644,264,0.528,265,0.644,266,0.528,267,0.564,268,0.644,269,0.546,270,0.644,271,0.546,272,0.644,273,0.511,274,0.583,275,0.644,276,0.511,277,0.446,278,0.528,279,0.644,280,0.528,281,0.996,282,1.219,283,0.511,284,0.644,285,0.546,286,0.546,287,0.644,288,0.511,289,0.845,290,0.528,291,0.644,292,1.245,293,1.345,294,0.511,295,0.583,296,0.546,297,0.603,298,0.644,299,0.511,300,0.644,301,0.528,302,0.644,303,0.511,304,0.644,305,0.528,306,0.623,307,0.644,308,0.644,309,0.006,310,0.006,323,0.631,339,1.392,369,0.555,370,0.555,384,0.415,426,2.133,428,1.418,430,2.342,444,1.104,445,0.494,446,0.494,449,0.564,450,0.564,451,0.868,452,0.868,470,0.665,485,1.345,499,1.916,527,0.964,528,1.301,538,1.122,546,2.531,548,2.305,549,1.608,550,1.608,551,1.967,552,1.608,553,1.967,554,1.441,557,2.517,558,1.967,559,2.586,560,2.211,561,2.639,563,1.967,564,2.806,566,2.307,567,3.241,569,2.833,570,2.701,571,2.701,573,2.268,574,2.535,575,2.651,576,1.745,579,3.213,585,1.441,586,1.345,588,2.124,593,1.736,594,1.967,602,1.884,605,1.494,607,1.763,610,1.967,612,2.517,616,1.644,617,2.641,618,1.441,624,0.759,625,1.441,626,0.931,627,0.931,628,1.441,629,1.441,630,1.344,631,1.039,632,0.931,641,1.745,643,0.931,644,0.931,645,1.039,652,1.329,654,1.122,657,2.517,658,1.122,659,1.329,660,0.965,661,0.965,662,0.965,663,1.608,664,1.608,665,2.532,666,1.256,667,1.608,669,1.608,670,1.608,672,1.807,673,1.039,674,1.039,676,2.057,677,1.329,678,1.329,679,1.329,680,2.124,681,1.064,682,1.549,686,2.535,764,2.157,811,1.967,874,1.745,921,1.465,1004,2.268,1146,1.736,1147,2.392,1199,1.967,1261,2.392,1274,1.546,1290,2.057,1293,3.064,1387,2.268,1409,2.268,1491,3.304,1492,5.846,1493,5.444,1494,1.546,1495,2.036,1496,2.701,1497,3.151,1498,2.036,1499,1.638,1500,1.638,1501,2.535,1502,2.535,1503,1.638,1504,2.535,1505,2.535,1506,3.49,1507,3.151,1508,3.151,1509,3.151,1510,3.151,1511,2.036,1839,3.994,1840,3.994,1841,2.58,1842,2.58,1843,2.58,1844,2.58,1845,2.58,1846,2.58,1847,2.58,1848,2.58,1849,2.58,1850,2.58,1851,2.58,1852,2.58,1853,2.58,1854,2.58,1855,2.58,1856,2.58,1857,2.58,1858,2.58,1859,2.58,1860,2.58,1861,2.58,1862,2.58,1863,3.485]],["title/components/SearchInputComponent.html",[0,0.213,294,0.802]],["body/components/SearchInputComponent.html",[0,0.417,1,0.894,2,1.411,3,0.089,4,0.103,5,1.021,6,1.09,7,1.09,8,0.089,9,0.105,10,3.716,12,0.51,13,0.546,15,1.09,16,0.41,17,0.41,19,0.28,21,0.132,22,0.367,28,0.865,34,1.411,43,0.554,53,1.458,57,1.366,61,3.011,67,1.178,70,1.713,73,0.013,74,0.217,77,0.925,78,0.585,81,0.286,83,0.781,94,2.001,107,0.865,113,0.844,148,0.138,150,0.337,151,1.557,153,0.103,163,0.894,167,0.244,171,0.155,172,0.103,174,0.466,175,0.987,232,1.09,233,1.458,234,1.458,235,1.09,236,1.539,237,1.09,239,1.09,240,0.894,241,0.533,242,0.533,243,1.09,244,0.894,245,1.09,246,0.894,247,1.021,248,1.09,249,0.894,250,1.458,251,0.894,252,1.09,253,1.458,254,1.09,255,0.925,256,1.09,257,0.836,258,0.865,259,1.09,260,0.894,261,1.09,262,0.865,263,1.09,264,0.894,265,1.09,266,0.894,267,0.956,268,1.09,269,0.925,270,1.09,271,0.925,272,1.09,273,0.865,274,0.988,275,1.09,276,0.865,277,0.755,278,0.894,279,1.09,280,0.894,281,1.458,282,1.643,283,0.865,284,1.09,285,0.925,286,0.925,287,1.09,288,0.865,289,1.237,290,0.894,291,1.09,292,0.865,293,0.988,294,1.392,295,1.658,296,0.925,297,1.021,298,1.09,299,0.865,300,1.09,301,0.894,302,1.09,303,0.865,304,1.09,305,0.894,306,1.055,307,1.09,308,1.09,309,0.009,310,0.009,560,2.981,624,1.285,730,2.955,1348,2.481,1387,3.319,1494,2.617,1512,3.953,1513,5.48,1514,5.103,1515,4.455,1516,3.447,1517,3.447,1518,5.197,1519,5.197,1520,3.447,1864,5.846,1865,4.369,1866,4.369,1867,4.369,1868,5.846]],["title/components/SecondaryChipsComponent.html",[0,0.213,296,0.858]],["body/components/SecondaryChipsComponent.html",[0,0.411,1,0.948,2,1.466,3,0.094,4,0.109,5,1.082,6,1.155,7,1.155,8,0.094,9,0.1,10,3.545,12,0.529,13,0.562,15,1.155,16,0.411,17,0.411,19,0.291,21,0.14,28,0.917,34,1.466,43,0.567,53,1.515,57,1.419,67,1.212,70,1.584,73,0.013,74,0.172,81,0.247,107,0.917,113,0.877,148,0.109,150,0.291,153,0.109,163,0.948,171,0.109,172,0.109,228,1.243,232,1.155,233,1.515,234,1.515,235,1.155,236,1.574,237,1.155,239,1.155,240,0.948,241,0.535,242,0.535,243,1.155,244,0.948,245,1.155,246,0.948,247,1.082,248,1.155,249,0.948,250,1.515,251,0.948,252,1.155,253,1.515,254,1.155,255,0.98,256,1.155,257,0.886,258,0.917,259,1.155,260,0.948,261,1.155,262,0.917,263,1.155,264,0.948,265,1.155,266,0.948,267,1.013,268,1.155,269,0.98,270,1.155,271,0.98,272,1.155,273,0.917,274,1.047,275,1.155,276,0.917,277,0.8,278,0.948,279,1.155,280,0.948,281,1.515,282,1.691,283,0.917,284,1.155,285,0.98,286,0.98,287,1.155,288,0.917,289,1.286,290,0.948,291,1.155,292,0.917,293,1.047,294,0.917,295,1.047,296,1.523,297,1.746,298,1.155,299,0.917,300,1.155,301,0.948,302,1.155,303,0.917,304,1.155,305,0.948,306,1.118,307,1.155,308,1.155,309,0.009,310,0.009,693,6.522,1738,5.678,1869,6.281,1870,4.041,1871,6.075,1872,6.075,1873,6.075,1874,4.63]],["title/components/SelectComponent.html",[0,0.213,299,0.802]],["body/components/SelectComponent.html",[0,0.431,1,0.551,2,0.996,3,0.055,4,0.063,5,0.629,6,0.671,7,0.671,8,0.055,9,0.113,12,0.359,13,0.416,15,0.671,16,0.395,17,0.395,19,0.197,21,0.081,22,0.259,27,0.486,28,0.533,34,0.996,35,1.688,42,3.802,43,0.443,52,2.789,53,1.029,54,1.548,57,1.605,58,1.083,67,0.737,70,1.89,72,1.761,73,0.013,74,0.285,76,1.187,77,1.521,78,0.979,79,1.958,81,0.309,82,0.971,83,0.897,97,1.528,107,1.469,113,1.071,138,1.714,148,0.157,150,0.197,153,0.063,156,1.218,163,0.551,167,0.172,171,0.118,172,0.063,174,0.397,175,0.618,188,0.465,228,1.442,232,0.671,233,1.029,234,1.029,235,0.671,236,1.23,237,0.671,239,0.671,240,0.551,241,0.512,242,0.512,243,0.671,244,0.551,245,0.671,246,0.551,247,0.629,248,0.671,249,0.551,250,1.029,251,0.551,252,0.671,253,1.029,254,0.671,255,0.569,256,0.671,257,0.515,258,0.993,259,0.671,260,0.551,261,0.671,262,0.533,263,0.671,264,0.551,265,0.671,266,0.551,267,0.589,268,0.671,269,0.569,270,0.671,271,0.569,272,0.671,273,0.533,274,0.608,275,0.671,276,0.533,277,0.465,278,0.551,279,0.671,280,0.551,281,1.029,282,1.251,283,0.533,284,0.671,285,0.569,286,0.569,287,0.671,288,0.533,289,0.873,290,0.551,291,0.671,292,0.533,293,0.608,294,0.533,295,0.608,296,0.569,297,0.629,298,0.671,299,1.266,300,0.671,301,0.551,302,0.671,303,0.533,304,0.671,305,0.551,306,0.65,307,0.671,308,0.671,309,0.006,310,0.006,323,0.503,339,1.437,369,0.374,370,0.374,373,1.708,384,0.433,428,1.449,430,2.371,444,0.932,445,0.515,446,0.515,449,0.589,450,0.589,451,0.906,452,0.906,470,0.693,528,1.23,546,2.552,548,2.366,549,1.66,550,1.66,551,2.019,552,1.66,553,2.019,554,1.488,557,2.584,558,2.019,559,2.636,560,2.269,563,2.019,564,2.86,566,2.352,567,3.295,569,2.896,570,2.789,571,2.789,573,2.342,574,2.617,575,2.542,576,1.82,585,1.81,586,1.38,588,2.18,593,1.793,594,2.031,602,1.945,605,1.543,607,1.81,610,2.019,612,2.584,616,1.688,617,2.575,618,1.488,624,0.791,625,1.488,626,0.971,627,0.971,628,1.488,629,1.488,630,1.388,631,1.083,632,0.971,643,0.971,644,0.971,645,1.083,652,1.386,657,2.584,658,1.17,659,1.386,660,1.006,661,1.006,662,1.006,663,1.66,664,1.66,665,2.575,666,1.297,667,1.66,669,1.66,670,1.66,673,1.083,674,1.083,676,2.125,677,1.386,678,1.386,679,1.386,680,2.444,681,1.098,682,1.6,686,2.617,921,1.528,934,2.227,1073,2.709,1133,2.47,1138,1.612,1142,1.612,1146,1.793,1186,1.612,1290,2.125,1293,3.123,1382,1.612,1395,1.612,1409,1.528,1421,1.708,1442,2.617,1499,2.617,1500,1.708,1501,2.617,1502,2.617,1503,1.708,1504,2.617,1505,2.617,1506,3.568,1521,1.954,1522,2.789,1523,2.123,1524,2.123,1525,2.123,1526,3.254,1527,3.956,1528,3.956,1529,3.254,1530,2.123,1531,4.435,1532,3.956,1533,4.435,1534,2.123,1535,2.123,1536,2.123,1537,2.123,1538,2.123,1863,3.599,1875,4.124,1876,2.691,1877,2.691,1878,2.691,1879,2.691,1880,2.691,1881,2.691,1882,2.691,1883,2.691,1884,2.691,1885,2.691,1886,2.691,1887,2.691,1888,2.691,1889,2.691,1890,2.691,1891,2.691,1892,2.691,1893,2.691,1894,2.691,1895,2.691,1896,2.691,1897,2.691,1898,2.691,1899,4.124]],["title/components/SpinnerComponent.html",[0,0.213,301,0.83]],["body/components/SpinnerComponent.html",[0,0.429,1,0.75,2,1.25,3,0.074,4,0.086,5,0.855,6,0.913,7,0.913,8,0.074,9,0.111,12,0.451,13,0.498,15,0.913,16,0.405,17,0.405,19,0.248,21,0.111,22,0.325,27,0.259,28,0.725,34,1.25,43,0.514,53,1.291,54,1.008,57,1.403,67,0.655,70,1.861,72,1.008,73,0.013,74,0.291,77,1.271,78,0.804,81,0.291,83,1.074,107,1.292,113,0.942,148,0.142,150,0.359,153,0.086,163,0.75,167,0.153,171,0.162,172,0.086,174,0.424,176,1.803,188,0.894,228,1.06,232,0.913,233,1.291,234,1.291,235,0.913,236,1.428,237,0.913,239,0.913,240,0.75,241,0.527,242,0.527,243,0.913,244,0.75,245,0.913,246,0.75,247,0.855,248,0.913,249,0.75,250,1.291,251,0.75,252,0.913,253,1.291,254,0.913,255,0.775,256,0.913,257,0.701,258,0.725,259,0.913,260,0.75,261,0.913,262,0.725,263,0.913,264,0.75,265,0.913,266,0.75,267,0.801,268,0.913,269,0.775,270,0.913,271,0.775,272,0.913,273,0.725,274,0.828,275,0.913,276,0.725,277,0.632,278,0.75,279,0.913,280,0.75,281,1.291,282,1.498,283,0.725,284,0.913,285,0.775,286,0.775,287,0.913,288,0.725,289,1.095,290,0.75,291,0.913,292,0.725,293,0.828,294,0.725,295,0.828,296,0.775,297,0.855,298,0.913,299,0.725,300,0.913,301,1.336,302,0.913,303,0.725,304,0.913,305,0.75,306,0.884,307,0.913,308,0.913,309,0.008,310,0.008,323,0.717,356,1.008,359,2.164,360,2.957,363,2.442,369,0.994,370,0.994,384,1.051,426,2.531,427,2.193,428,1.682,445,0.701,446,0.701,449,0.801,450,0.801,474,1.592,527,1.25,528,0.801,531,1.936,532,2.274,586,1.796,681,1.379,741,2.796,880,2.939,1179,2.079,1182,2.939,1274,3.909,1296,4.657,1426,2.079,1447,4.414,1462,2.939,1463,2.079,1468,4.657,1488,4.361,1489,4.74,1490,3.501,1539,4.361,1540,2.476,1541,6.009,1542,3.76,1543,2.889,1544,3.76,1545,2.889,1546,2.889,1547,5.432,1548,4.518,1549,4.518,1550,4.518,1551,3.196,1552,5.696,1900,5.177,1901,3.662,1902,3.662,1903,3.662,1904,3.662,1905,3.662,1906,3.662,1907,3.662,1908,3.662,1909,3.662,1910,3.662,1911,3.662]],["title/components/TabsComponent.html",[0,0.213,303,0.802]],["body/components/TabsComponent.html",[0,0.407,1,0.847,2,1.361,3,0.084,4,0.098,5,0.967,6,1.033,7,1.033,8,0.084,9,0.1,12,0.491,13,0.532,15,1.033,16,0.408,17,0.408,19,0.27,21,0.125,27,0.293,28,0.819,34,1.361,43,0.542,52,4.334,53,1.406,57,1.497,60,1.8,61,2.904,70,1.607,72,1.139,73,0.013,74,0.238,76,0.715,77,0.876,78,0.755,81,0.293,94,1.823,107,1.116,113,0.814,138,1.406,148,0.151,150,0.27,151,1.501,153,0.133,163,0.847,167,0.235,171,0.151,172,0.098,174,0.453,175,0.62,232,1.033,233,1.406,234,1.406,235,1.033,236,1.505,237,1.033,239,1.033,240,0.847,241,0.532,242,0.532,243,1.033,244,0.847,245,1.033,246,0.847,247,0.967,248,1.033,249,0.847,250,1.406,251,0.847,252,1.033,253,1.406,254,1.033,255,0.876,256,1.033,257,0.792,258,0.819,259,1.033,260,0.847,261,1.033,262,0.819,263,1.033,264,0.847,265,1.033,266,0.847,267,0.905,268,1.033,269,0.876,270,1.033,271,0.876,272,1.033,273,0.819,274,0.936,275,1.033,276,0.819,277,0.715,278,0.847,279,1.033,280,0.847,281,1.406,282,1.599,283,0.819,284,1.033,285,0.876,286,0.876,287,1.033,288,0.819,289,1.193,290,0.847,291,1.033,292,0.819,293,0.936,294,0.819,295,0.936,296,0.876,297,0.967,298,1.033,299,0.819,300,1.033,301,0.847,302,1.033,303,1.362,304,1.033,305,0.847,306,0.999,307,1.033,308,1.033,309,0.008,310,0.008,323,0.69,339,1.442,369,0.576,370,0.576,384,0.666,444,1.274,445,0.792,446,0.792,485,1.139,726,2.269,811,1.666,1033,4.367,1054,3.461,1453,3.2,1454,3.639,1469,4.067,1553,3.006,1554,5.056,1555,4.446,1556,4.446,1557,3.266,1558,3.266,1559,3.266,1560,4.446,1561,5.056,1562,3.266,1563,3.266,1564,5.056,1565,3.266,1566,4.446,1567,3.266,1568,3.266,1912,5.636,1913,4.139,1914,4.139,1915,4.139,1916,4.139,1917,6.881,1918,5.636]],["title/components/TextareaComponent.html",[0,0.213,305,0.83]],["body/components/TextareaComponent.html",[0,0.432,1,0.583,2,1.039,3,0.058,4,0.067,5,0.665,6,0.71,7,0.71,8,0.058,9,0.113,12,0.375,13,0.431,15,0.71,16,0.397,17,0.397,19,0.206,21,0.086,22,0.27,27,0.531,28,0.563,34,1.039,35,2.285,43,0.456,53,1.074,57,1.672,67,0.509,70,1.897,72,1.869,73,0.013,74,0.295,76,1.129,77,1.59,78,1.017,79,1.702,81,0.306,82,1.027,88,1.237,107,1.417,113,1.097,138,1.074,148,0.16,150,0.313,153,0.067,163,0.583,167,0.119,171,0.123,172,0.067,174,0.367,175,0.867,232,0.71,233,1.074,234,1.074,235,0.71,236,1.266,237,0.71,239,0.71,240,0.583,241,0.515,242,0.515,243,0.71,244,0.583,245,0.71,246,0.583,247,0.665,248,0.71,249,0.583,250,1.074,251,0.583,252,0.71,253,1.074,254,0.71,255,0.602,256,0.71,257,0.545,258,0.563,259,0.71,260,0.583,261,0.71,262,0.563,263,0.71,264,0.583,265,0.71,266,0.583,267,0.623,268,0.71,269,0.602,270,0.71,271,0.602,272,0.71,273,0.563,274,0.643,275,0.71,276,0.563,277,0.492,278,0.583,279,0.71,280,0.583,281,1.074,282,1.295,283,0.563,284,0.71,285,0.602,286,0.602,287,0.71,288,0.563,289,0.911,290,0.583,291,0.71,292,0.563,293,0.643,294,0.563,295,0.643,296,0.602,297,0.665,298,0.71,299,0.563,300,0.71,301,0.583,302,0.71,303,0.563,304,0.71,305,1.338,306,1.253,307,0.71,308,0.71,309,0.006,310,0.006,323,0.656,356,0.783,369,0.599,370,0.599,384,0.458,405,2.732,426,2.245,430,2.409,444,0.973,445,0.545,446,0.545,451,0.958,452,0.958,470,1.685,499,1.809,527,1.039,528,1.266,546,2.561,548,2.449,549,1.733,550,1.733,551,2.09,552,1.733,553,2.09,554,1.554,558,2.09,561,2.804,562,1.537,563,2.09,564,2.73,565,3.295,570,2.911,571,2.911,572,3.396,574,2.732,575,2.836,576,1.925,579,2.804,586,1.185,595,1.537,597,2.325,598,1.537,600,2.067,610,2.09,616,1.747,617,2.632,618,1.554,624,0.837,625,1.554,626,1.027,627,1.027,630,1.449,631,1.146,632,1.027,643,1.027,644,1.027,645,1.146,663,1.733,664,1.733,665,2.33,666,1.353,667,1.733,669,1.733,670,1.733,672,1.948,673,1.146,674,1.146,749,2.732,803,2.578,811,1.146,906,1.806,1146,1.871,1199,2.12,1382,1.705,1383,2.067,1384,2.067,1386,1.925,1388,2.067,1389,2.067,1390,2.067,1391,2.067,1392,2.067,1393,2.067,1394,2.067,1395,1.705,1396,2.067,1398,3.77,1403,2.067,1404,2.067,1405,2.067,1410,2.067,1412,3.126,1413,2.067,1414,3.126,1417,4.095,1418,2.245,1462,1.616,1463,2.444,1569,3.77,1570,2.067,1571,5.051,1572,2.484,1573,2.484,1574,2.245,1575,3.396,1576,3.396,1577,3.757,1578,4.531,1579,4.531,1580,2.484,1581,3.757,1582,2.484,1583,2.484,1584,2.484,1585,2.484,1586,2.484,1587,3.757,1588,3.757,1589,5.051,1590,3.757,1591,2.484,1592,3.757,1593,2.484,1594,3.757,1595,2.245,1596,2.484,1597,2.484,1627,3.757,1919,4.305,1920,2.846,1921,2.846,1922,2.846,1923,2.846,1924,2.846,1925,2.846,1926,2.846,1927,2.846,1928,2.846,1929,2.846,1930,2.846,1931,2.846,1932,2.846,1933,2.846,1934,2.846,1935,2.846,1936,2.846,1937,2.846,1938,2.846,1939,2.846,1940,2.846,1941,2.846,1942,2.846,1943,2.846,1944,4.305,1945,4.305,1946,4.305]],["title/coverage.html",[1947,4.848]],["body/coverage.html",[0,0.457,1,0.519,8,0.052,9,0.12,10,3.408,11,3.109,28,0.502,73,0.013,74,0.094,86,3.475,90,1.842,154,1.519,163,0.519,165,1.715,167,0.346,175,0.38,212,2.001,240,0.519,244,0.519,246,0.519,249,0.519,251,0.519,255,0.537,257,0.485,260,0.519,262,0.502,264,0.519,266,0.519,269,0.537,271,0.537,273,0.502,276,0.502,278,0.519,280,0.519,283,0.502,285,0.537,288,0.502,290,0.519,292,0.502,294,0.502,296,0.537,299,0.502,301,0.519,303,0.502,305,0.519,309,0.006,310,0.006,311,3.067,312,3.268,327,1.715,338,1.196,350,1.306,352,2.375,354,1.519,368,1.715,421,2.862,432,1.842,447,1.61,490,3.109,496,2.862,546,2.597,547,3.109,578,1.842,616,0.854,628,0.915,629,0.915,630,0.854,687,3.109,688,2.213,700,2.001,701,2.213,720,3.109,721,3.109,732,1.842,762,1.61,795,3.51,800,1.715,803,1.519,817,2.862,836,1.61,867,2.36,940,2.862,941,2.862,953,4.138,954,4.927,965,2.001,969,2.001,973,2.001,977,2.001,979,2.001,984,5.46,985,1.842,1010,2.001,1014,2.001,1016,2.001,1018,2.001,1020,2.001,1022,2.001,1023,2.001,1024,2.001,1030,3.51,1031,3.268,1032,3.51,1038,1.715,1048,1.715,1064,1.61,1065,4.985,1066,4.705,1067,4.985,1071,1.61,1072,1.61,1073,1.37,1075,1.61,1087,1.61,1100,1.61,1102,1.61,1104,1.61,1106,1.61,1110,1.61,1114,1.61,1116,1.61,1118,1.61,1119,1.61,1120,1.61,1122,1.61,1124,1.61,1126,1.61,1132,1.61,1242,1.715,1294,3.745,1295,3.745,1298,1.715,1300,1.715,1310,1.842,1311,3.109,1323,1.842,1324,2.862,1380,1.842,1381,2.862,1419,4.408,1422,1.61,1427,1.715,1429,1.715,1443,1.715,1444,3.93,1445,3.535,1446,3.745,1449,1.715,1450,1.519,1451,2.943,1453,1.44,1454,1.44,1456,1.715,1458,1.715,1473,3.685,1474,1.842,1478,1.842,1491,1.715,1492,3.51,1493,3.268,1494,3.741,1496,1.715,1512,1.715,1513,3.51,1514,3.268,1515,1.715,1521,3.51,1522,1.715,1539,1.842,1540,3.685,1542,1.842,1544,1.842,1553,3.51,1569,1.842,1570,2.862,1595,2.001,1672,3.264,1673,3.264,1689,2.001,1690,2.001,1702,2.001,1707,2.001,1708,2.001,1716,2.001,1721,2.001,1722,2.001,1725,4.224,1728,2.001,1733,2.001,1734,2.001,1735,2.001,1738,2.001,1740,2.001,1741,2.665,1743,2.213,1744,3.109,1767,1.842,1768,4.536,1769,2.001,1776,4.655,1806,2.001,1808,2.001,1809,2.001,1810,2.001,1869,2.213,1870,2.213,1947,2.213,1948,2.536,1949,2.536,1950,2.536,1951,3.94,1952,6.246,1953,7.074,1954,2.536,1955,3.94,1956,2.536,1957,2.536,1958,7.074,1959,5.901,1960,8.395,1961,8.395,1962,6.921,1963,2.536,1964,4.832,1965,2.536,1966,2.536,1967,2.536,1968,2.536,1969,5.449,1970,2.536,1971,4.832,1972,2.536,1973,2.536,1974,2.536,1975,2.536,1976,2.536,1977,2.536,1978,2.536,1979,2.536,1980,2.536,1981,2.536,1982,3.94,1983,2.536,1984,2.536,1985,2.536,1986,2.536,1987,2.536]],["title/dependencies.html",[1665,2.771,1988,2.943]],["body/dependencies.html",[73,0.013,309,0.011,310,0.011,1665,3.707,1989,6.529,1990,6.529,1991,7.507,1992,6.529,1993,6.529,1994,7.507,1995,6.529,1996,6.529,1997,6.529,1998,6.529,1999,6.529,2000,6.529,2001,6.529,2002,6.529]],["title/miscellaneous/enumerations.html",[2003,2.45,2004,4.26]],["body/miscellaneous/enumerations.html",[0,0.451,3,0.119,9,0.113,21,0.133,73,0.013,78,1.161,83,1.314,85,1.532,297,1.372,309,0.009,310,0.009,311,2.791,312,2.974,341,3.333,346,3.156,352,1.77,357,4.264,358,4.264,359,3.406,360,3.862,361,4.476,362,4.264,363,3.327,364,4.476,365,4.264,366,3.171,367,2.769,383,3.726,399,3.333,405,3.726,421,3.194,434,3.333,453,4.631,454,3.97,496,3.194,517,3.97,518,4.631,519,4.631,520,4.631,524,4.631,525,4.631,526,4.631,546,1.846,554,2.119,555,3.97,722,3.171,741,3.171,760,3.97,817,3.194,867,2.634,869,4.631,870,4.631,940,3.194,941,4.264,947,4.631,948,4.631,1294,2.791,1295,3.726,1297,4.264,1324,3.194,1325,4.631,1328,4.631,1329,3.469,1330,4.631,1331,4.631,1332,4.631,1333,4.631,1334,4.631,1335,3.517,1336,4.631,1337,4.631,1338,3.469,1339,3.469,1340,3.469,1341,3.469,1342,3.469,1343,3.469,1344,3.469,1345,3.469,1381,3.194,1385,4.631,1386,4.469,1444,3.333,1445,2.634,1446,3.726,1451,2.375,1461,4.264,1462,3.753,1463,4.004,1473,3.97,1476,4.264,1484,4.631,1485,4.631,1540,2.974,1547,4.631,1570,3.194,1575,4.631,1576,4.631,2003,3.194,2004,3.838,2005,6.609,2006,7.052,2007,3.838,2008,4.397,2009,4.397,2010,7.348,2011,4.397,2012,4.397,2013,5.124,2014,4.397,2015,3.838]],["title/index.html",[21,0.123,2016,3.537]],["body/index.html",[1,1.566,2,1.024,28,1.514,73,0.013,163,1.566,168,0.759,240,1.566,244,1.566,246,1.566,249,1.566,251,1.566,255,1.619,257,1.464,260,1.566,262,1.514,264,1.566,266,1.566,269,1.619,271,1.619,273,1.514,276,1.514,278,1.566,280,1.566,283,1.514,285,1.619,288,1.514,290,1.566,292,1.514,294,1.514,296,1.619,299,1.514,301,1.566,303,1.514,305,1.566,309,0.009,310,0.009,523,2.409,1234,2.87,1245,2.87,1663,5.273,1664,2.409,1665,3.255,1666,3.703,1667,3.703,1668,3.703,1669,3.638,1670,2.693,1679,4.893,1686,3.703,1687,3.703,1688,3.703,1703,6.125,1704,3.703,1705,3.703,1706,3.703,1717,5.953,1718,3.703,1719,3.703,1720,3.703,1729,6.029,1730,3.703,1731,3.703,1732,3.703,1742,3.348,2016,3.703,2017,4.243,2018,4.243]],["title/modules.html",[1664,3.154]],["body/modules.html",[73,0.011,309,0.011,310,0.011,1663,4.716,1664,3.687,1679,3.687,1703,4.716,1717,4.716,1729,4.716,2019,8.237,2020,8.237,2021,8.237,2022,8.237]],["title/properties.html",[22,0.307,1988,2.943]],["body/properties.html",[22,0.421,73,0.012,309,0.011,310,0.011,2023,6.696,2024,6.696]],["title/miscellaneous/variables.html",[2003,2.45,2025,4.26]],["body/miscellaneous/variables.html",[0,0.452,1,0.66,9,0.108,10,1.588,21,0.098,28,0.638,54,1.539,73,0.013,74,0.317,77,1.803,78,1.141,81,0.343,154,2.83,163,0.66,244,0.66,246,0.66,249,0.66,251,0.66,255,0.682,257,0.617,260,0.66,262,0.638,264,0.66,266,0.66,269,0.682,271,0.682,273,0.638,276,0.638,278,0.66,280,0.66,283,0.638,285,0.682,288,0.638,289,0.682,290,0.967,292,0.638,294,0.638,296,0.682,299,0.638,301,0.66,303,0.638,305,0.66,309,0.007,310,0.007,342,3.687,343,1.931,344,1.931,352,1.298,360,1.588,546,1.485,628,1.705,629,1.705,681,1.258,953,3.171,954,2.544,965,3.727,966,4.41,967,2.814,968,2.814,969,3.727,970,3.727,971,4.41,972,5.722,973,3.727,974,3.727,975,5.169,976,4.41,977,3.727,978,4.123,979,3.727,980,3.727,984,2.544,985,3.431,1002,2.544,1010,3.727,1011,4.123,1012,4.123,1013,2.814,1014,3.727,1015,2.814,1016,3.727,1017,2.814,1018,3.727,1019,2.814,1020,3.727,1021,4.123,1022,3.727,1023,3.727,1024,3.727,1065,2.046,1066,1.931,1067,5.054,1075,2.998,1076,2.181,1077,2.181,1078,2.181,1079,2.181,1080,2.181,1081,2.181,1082,2.181,1083,2.181,1084,2.181,1085,2.181,1086,2.181,1087,2.998,1088,2.181,1089,2.181,1090,2.181,1091,2.181,1092,2.181,1093,2.181,1094,2.181,1095,2.181,1096,2.181,1097,2.181,1098,2.181,1099,2.181,1100,2.998,1101,2.181,1102,2.998,1103,2.181,1104,2.998,1105,2.181,1106,2.998,1107,2.181,1108,3.195,1109,2.181,1110,2.998,1111,2.181,1112,3.195,1113,2.181,1114,2.998,1115,2.181,1116,2.998,1117,2.181,1118,2.998,1119,2.998,1120,2.998,1121,2.181,1122,2.998,1123,2.181,1124,2.998,1125,2.181,1126,2.998,1127,2.181,1294,2.046,1295,3.548,1298,3.195,1299,2.342,1300,3.195,1301,2.342,1335,1.931,1419,2.181,1426,3.174,1427,3.195,1428,2.342,1429,3.195,1430,2.342,1431,2.342,1444,2.682,1445,1.931,1446,3.548,1451,1.742,1456,3.195,1457,2.342,1458,3.195,1459,2.342,1473,3.781,1474,3.431,1475,2.544,1476,2.342,1477,2.544,1478,3.431,1479,2.544,1480,2.544,1481,2.544,1482,2.544,1483,2.544,1540,2.181,1542,3.431,1543,2.544,1544,3.431,1545,2.544,1546,2.544,1672,4.345,1673,4.345,1689,2.544,1690,3.727,1702,3.727,1707,2.544,1708,3.727,1716,3.727,1721,2.544,1722,3.727,1725,2.181,1728,3.727,1733,2.544,1734,3.727,1735,3.727,1740,3.727,1768,2.342,1776,5.169,1806,3.727,1807,2.814,1808,3.727,1809,3.727,1810,3.727,2003,2.342,2007,4.123,2013,5.372,2015,4.123,2025,2.814,2026,7.253,2027,7.913,2028,6.155,2029,6.552,2030,6.155,2031,6.155]]],"invertedIndex":[["",{"_index":73,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":86,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2024,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":1961,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1952,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1964,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1951,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1969,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1955,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1970,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1962,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1958,"title":{},"body":{"coverage.html":{}}}],["0/40",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1959,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1953,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1971,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":214,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IOption.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{}}}],["1).foreach((option",{"_index":884,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["1).tostring().padstart(2",{"_index":1197,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["1.0.0",{"_index":1998,"title":{},"body":{"dependencies.html":{}}}],["1/7",{"_index":1978,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1248,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["11",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["11].includes(monthnum",{"_index":1243,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["12",{"_index":1965,"title":{},"body":{"coverage.html":{}}}],["123",{"_index":1944,"title":{},"body":{"components/TextareaComponent.html":{}}}],["13",{"_index":212,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{},"coverage.html":{}}}],["14",{"_index":1977,"title":{},"body":{"coverage.html":{}}}],["14.2.11",{"_index":1990,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1595,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["18",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["184",{"_index":1379,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["2",{"_index":1234,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"index.html":{}}}],["2.1.35",{"_index":2002,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":1975,"title":{},"body":{"coverage.html":{}}}],["2/15",{"_index":1979,"title":{},"body":{"coverage.html":{}}}],["2/26",{"_index":1968,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1956,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1371,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["23",{"_index":402,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["28",{"_index":1239,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["29",{"_index":1237,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["3.321.1",{"_index":1994,"title":{},"body":{"dependencies.html":{}}}],["3/25",{"_index":1966,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":1963,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1244,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["31",{"_index":1245,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"index.html":{}}}],["33",{"_index":1972,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":401,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["38",{"_index":2018,"title":{},"body":{"index.html":{}}}],["4",{"_index":1240,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["4/26",{"_index":1954,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1249,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["5",{"_index":2017,"title":{},"body":{"index.html":{}}}],["6",{"_index":1241,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["7",{"_index":1967,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":392,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["8px",{"_index":1375,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["9",{"_index":1242,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["9/44",{"_index":1957,"title":{},"body":{"coverage.html":{}}}],["99",{"_index":1363,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["_closebtn",{"_index":407,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["_daycontrol",{"_index":1101,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["_flyout",{"_index":763,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["_monthcontrol",{"_index":1103,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["_text",{"_index":409,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["_yearcontrol",{"_index":1105,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["_yearcontrol')?.value",{"_index":1189,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["a11ytext",{"_index":819,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["aaaa",{"_index":1117,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["abbr",{"_index":1355,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["abstractcontrol",{"_index":612,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["accepts",{"_index":1000,"title":{},"body":{"components/HeaderComponent.html":{}}}],["accessors",{"_index":1628,"title":{},"body":{"components/InputComponent.html":{}}}],["active",{"_index":741,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activiatedselect",{"_index":1527,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["actual_component",{"_index":308,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["add",{"_index":88,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["added",{"_index":1404,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["addhover",{"_index":23,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["adds",{"_index":1383,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["afterviewinit",{"_index":1327,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["again",{"_index":921,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["alloptionsforautocomplete",{"_index":227,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["allows",{"_index":1499,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["alone.functions",{"_index":452,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["altimage",{"_index":957,"title":{},"body":{"components/FooterComponent.html":{}}}],["always",{"_index":169,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["ancestor",{"_index":462,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["angular",{"_index":1673,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/cli",{"_index":1989,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1683,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LanguageSwitchComponent.html":{}}}],["angular/core",{"_index":153,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["angular/forms",{"_index":624,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["angular/router",{"_index":1692,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["année",{"_index":1113,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["anything",{"_index":647,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["août",{"_index":1095,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["applied",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{}}}],["approaches",{"_index":650,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["appropriate",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{}}}],["april",{"_index":1079,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":96,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["aria",{"_index":585,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["ariadissmissible",{"_index":322,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["arialabel",{"_index":379,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{}}}],["ariatext",{"_index":1402,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{}}}],["array",{"_index":1223,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["arrays",{"_index":1176,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["arrow",{"_index":897,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["attr.disabled",{"_index":1509,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["august",{"_index":1082,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["autocomplete",{"_index":18,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["autocomplete'},{'name",{"_index":239,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["autocomplete.component.html",{"_index":20,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["autocomplete/autocomplete.component",{"_index":1736,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{}}}],["autocompletecomponent",{"_index":1,"title":{"components/AutocompleteComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":603,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["avril",{"_index":1091,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":1991,"title":{},"body":{"dependencies.html":{}}}],["banner",{"_index":313,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner'},{'name",{"_index":243,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["banner.component.html",{"_index":314,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner.module.ts",{"_index":1674,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{}}}],["banner/banner.component",{"_index":1678,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{}}}],["banner?.classlist.add('bannerdismissed",{"_index":388,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner?.classlist.add('nodisplay",{"_index":390,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner?.classlist.remove('bannerdismissed",{"_index":391,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner?.classlist.remove('nodisplay",{"_index":394,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["bannercomponent",{"_index":240,"title":{"components/BannerComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{}}}],["bannersize",{"_index":362,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["bannertype",{"_index":357,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["base",{"_index":457,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["based",{"_index":1225,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["baseurl",{"_index":424,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["baseurlkey",{"_index":433,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["behavior",{"_index":912,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["behaviorsubject",{"_index":1752,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["behaviorsubject(false",{"_index":1774,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["being",{"_index":758,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["below",{"_index":893,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["blank",{"_index":944,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["blk",{"_index":1012,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["blk.svg",{"_index":968,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":404,"title":{},"body":{"components/BannerComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["blue",{"_index":1342,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["blunt",{"_index":1538,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["boew/assets/sig",{"_index":1011,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["boew/assets/wmms",{"_index":967,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":76,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["both",{"_index":1576,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["breadcrumb",{"_index":247,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["breadcrumb'},{'name",{"_index":245,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["breadcrumb.component.html",{"_index":423,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["breadcrumb/breadcrumb.component",{"_index":1698,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["breadcrumb/link/link.component",{"_index":1699,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["breadcrumbcomponent",{"_index":244,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["breadcrumblinkcomponent",{"_index":246,"title":{"components/BreadcrumbLinkComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ILinkComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":2022,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2019,"title":{},"body":{"modules.html":{}}}],["btnaction",{"_index":502,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["btnconfig",{"_index":378,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["btnevent",{"_index":324,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["btns",{"_index":1060,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["build",{"_index":372,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["button",{"_index":367,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/IconButtonComponent.html":{},"components/LabelComponent.html":{},"miscellaneous/enumerations.html":{}}}],["button'},{'name",{"_index":250,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["button.component",{"_index":353,"title":{},"body":{"components/BannerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["button.component.html",{"_index":497,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["button.component.ts",{"_index":1295,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["button.component.ts:30",{"_index":1601,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":1604,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1600,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:37",{"_index":1605,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:38",{"_index":1599,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:39",{"_index":1602,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:40",{"_index":1603,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:41",{"_index":1606,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:43",{"_index":1609,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:54",{"_index":1608,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:73",{"_index":1607,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.service",{"_index":1423,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["button.service.ts",{"_index":1744,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{},"coverage.html":{}}}],["button.service.ts:11",{"_index":1749,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["button.service.ts:8",{"_index":1753,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["button.service.ts:9",{"_index":1751,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["button/button.component",{"_index":768,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["button/icon",{"_index":352,"title":{},"body":{"components/BannerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["buttoncategories",{"_index":517,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDropdownConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttoncategories.primary",{"_index":773,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["buttonclick",{"_index":1598,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["buttonclick(id",{"_index":1308,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["buttoncolor",{"_index":520,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttoncomponent",{"_index":249,"title":{"components/ButtonComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IButtonConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["buttonicondirection",{"_index":524,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttonpress",{"_index":1747,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["buttonpress(id",{"_index":1748,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["buttonsize",{"_index":519,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttontype",{"_index":521,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["canada",{"_index":972,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["canada_logo_aria_label_english",{"_index":1023,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["canada_logo_aria_label_french",{"_index":1024,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":1405,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["category",{"_index":340,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{}}}],["change",{"_index":173,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IOption.html":{},"components/IconComponent.html":{}}}],["change.foreachchangeditem((item",{"_index":196,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["change[this.config.id",{"_index":1411,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["changed",{"_index":157,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["changes",{"_index":442,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{}}}],["changes['config",{"_index":1316,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["changes['config'].currentvalue",{"_index":1318,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["changes['config'].firstchange",{"_index":1317,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["character",{"_index":1366,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["charactercountstatus",{"_index":1919,"title":{},"body":{"components/TextareaComponent.html":{}}}],["charactercountstatus(currcharcount",{"_index":1587,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["chargement",{"_index":1545,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["charlimit",{"_index":1571,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["charlimitstatus",{"_index":1578,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["check",{"_index":757,"title":{},"body":{"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checkactive",{"_index":36,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["checkactive(value",{"_index":105,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["checkbox",{"_index":555,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox'},{'name",{"_index":252,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["checkbox.component.html",{"_index":556,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["checkbox/checkbox.component",{"_index":1711,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["checkboxcomponent",{"_index":251,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkduplicated",{"_index":37,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["checkduplicated(index",{"_index":108,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["checklabellength",{"_index":1372,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checklabelrounded",{"_index":1367,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checknumber",{"_index":1364,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checks",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cheerio",{"_index":1997,"title":{},"body":{"dependencies.html":{}}}],["child",{"_index":468,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["chip",{"_index":253,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["chipcontent",{"_index":693,"title":{},"body":{"components/ChipItemComponent.html":{},"components/SecondaryChipsComponent.html":{}}}],["chipcontenttext",{"_index":704,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chipidx",{"_index":715,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chipitemcomponent",{"_index":163,"title":{"components/ChipItemComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chiplist",{"_index":706,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chiplistchange",{"_index":707,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chiplistcomponent",{"_index":255,"title":{"components/ChipListComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chips",{"_index":1871,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips'},{'name",{"_index":298,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["chips.component",{"_index":1739,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{}}}],["chips.component.html",{"_index":1872,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips.component.ts",{"_index":1870,"title":{},"body":{"components/SecondaryChipsComponent.html":{},"coverage.html":{}}}],["chips.component.ts:12",{"_index":1874,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips.component.ts:8",{"_index":1873,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips/chip",{"_index":164,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["chips/secondary",{"_index":1738,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"components/SecondaryChipsComponent.html":{},"coverage.html":{}}}],["cl",{"_index":242,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["class",{"_index":172,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["class_trashcan",{"_index":1300,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class_x_mark",{"_index":1298,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":740,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["clearflyoutfocus",{"_index":728,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["clearoptions",{"_index":822,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["clears",{"_index":923,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["clearvalue",{"_index":1417,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["click",{"_index":64,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["click(event",{"_index":98,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["clickable",{"_index":949,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["clickevent",{"_index":498,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["clickevent(id",{"_index":514,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["clickinside",{"_index":38,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["clickinside(event",{"_index":110,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["clickout",{"_index":39,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["close",{"_index":325,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["closed",{"_index":786,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["closes",{"_index":754,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["cluster_irccdsangularbannermodule",{"_index":1666,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{}}}],["cluster_irccdsangularbannermodule_declarations",{"_index":1668,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{}}}],["cluster_irccdsangularbannermodule_exports",{"_index":1667,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{}}}],["cluster_irccdsangularcomponentssharedmodule",{"_index":1686,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"index.html":{}}}],["cluster_irccdsangularcomponentssharedmodule_declarations",{"_index":1688,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"index.html":{}}}],["cluster_irccdsangularcomponentssharedmodule_exports",{"_index":1687,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"index.html":{}}}],["cluster_irccdsangularformcomponentsmodule",{"_index":1704,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{}}}],["cluster_irccdsangularformcomponentsmodule_declarations",{"_index":1706,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{}}}],["cluster_irccdsangularformcomponentsmodule_exports",{"_index":1705,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{}}}],["cluster_irccdsangularheaderfootermodule",{"_index":1718,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{}}}],["cluster_irccdsangularheaderfootermodule_declarations",{"_index":1719,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{}}}],["cluster_irccdsangularheaderfootermodule_exports",{"_index":1720,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{}}}],["cluster_irccdsangularlegacyoldmodule",{"_index":1730,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["cluster_irccdsangularlegacyoldmodule_declarations",{"_index":1731,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["cluster_irccdsangularlegacyoldmodule_exports",{"_index":1732,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["color",{"_index":345,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["colour",{"_index":1348,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/IndicatorComponent.html":{},"components/LabelComponent.html":{},"components/SearchInputComponent.html":{}}}],["commenc",{"_index":1483,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["comment",{"_index":1026,"title":{},"body":{"components/HeaderComponent.html":{}}}],["commonmodule",{"_index":1682,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["completed",{"_index":1475,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["complét",{"_index":1480,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["component/banner/banner.component.ts",{"_index":312,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["component/banner/banner.component.ts:114",{"_index":335,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:118",{"_index":334,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:52",{"_index":348,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:53",{"_index":349,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:55",{"_index":328,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:56",{"_index":329,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:57",{"_index":326,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:59",{"_index":330,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:61",{"_index":347,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:70",{"_index":332,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:84",{"_index":337,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:98",{"_index":336,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/ircc",{"_index":1671,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{}}}],["component_template",{"_index":237,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["components.constants",{"_index":446,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["components.module.ts",{"_index":1708,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/checkbox/checkbox.component.ts",{"_index":547,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"coverage.html":{}}}],["components/checkbox/checkbox.component.ts:144",{"_index":590,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:160",{"_index":584,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:174",{"_index":592,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:179",{"_index":606,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:191",{"_index":587,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:51",{"_index":614,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:54",{"_index":581,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:60",{"_index":582,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:61",{"_index":583,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:63",{"_index":615,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:64",{"_index":611,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:65",{"_index":613,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:66",{"_index":619,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:70",{"_index":623,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:71",{"_index":609,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:72",{"_index":577,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:75",{"_index":622,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:79",{"_index":621,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:80",{"_index":620,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:82",{"_index":608,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:83",{"_index":596,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:86",{"_index":599,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:94",{"_index":601,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:99",{"_index":591,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/date",{"_index":1065,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/error/error.component.ts",{"_index":795,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"coverage.html":{}}}],["components/error/error.component.ts:27",{"_index":801,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:28",{"_index":805,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:29",{"_index":802,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:30",{"_index":804,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:31",{"_index":799,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:34",{"_index":807,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:44",{"_index":806,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:48",{"_index":808,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/input/input.component",{"_index":155,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["components/input/input.component.ts",{"_index":1381,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/input/input.component.ts:154",{"_index":1636,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:168",{"_index":1640,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:173",{"_index":1644,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:182",{"_index":1638,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:195",{"_index":1635,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:202",{"_index":1637,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:214",{"_index":1634,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:215",{"_index":1645,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:216",{"_index":1641,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:219",{"_index":1642,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:222",{"_index":1643,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:229",{"_index":1661,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:52",{"_index":1652,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:54",{"_index":1630,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:59",{"_index":1632,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:60",{"_index":1631,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:61",{"_index":1633,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:63",{"_index":1647,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:64",{"_index":1650,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:65",{"_index":1656,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:66",{"_index":1659,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:67",{"_index":1646,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:68",{"_index":1649,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:69",{"_index":1648,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:70",{"_index":1651,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:71",{"_index":1653,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:75",{"_index":1658,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:76",{"_index":1629,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:79",{"_index":1657,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:84",{"_index":1655,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:85",{"_index":1654,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:87",{"_index":1639,"title":{},"body":{"components/InputComponent.html":{}}}],["components/ircc",{"_index":1707,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/radio",{"_index":1492,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts",{"_index":1521,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts:100",{"_index":1882,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:104",{"_index":1881,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:109",{"_index":1880,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:142",{"_index":1879,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:159",{"_index":1877,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:173",{"_index":1883,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:178",{"_index":1886,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:54",{"_index":1898,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:55",{"_index":1891,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:56",{"_index":1889,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:57",{"_index":1896,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:59",{"_index":1876,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:63",{"_index":1892,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:64",{"_index":1890,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:66",{"_index":1893,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:70",{"_index":1875,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:73",{"_index":1897,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:77",{"_index":1894,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:78",{"_index":1895,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:79",{"_index":1888,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:82",{"_index":1884,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:85",{"_index":1885,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:89",{"_index":1878,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:96",{"_index":1887,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/textarea/textarea.component.ts",{"_index":1570,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/textarea/textarea.component.ts:124",{"_index":1928,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:137",{"_index":1927,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:141",{"_index":1925,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:159",{"_index":1926,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:160",{"_index":1933,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:161",{"_index":1930,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:164",{"_index":1931,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:167",{"_index":1932,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:54",{"_index":1939,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:56",{"_index":1922,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:61",{"_index":1924,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:62",{"_index":1923,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:63",{"_index":1921,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:65",{"_index":1936,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:66",{"_index":1938,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:67",{"_index":1937,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:68",{"_index":1934,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:69",{"_index":1935,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:70",{"_index":1940,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:73",{"_index":1920,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:75",{"_index":1943,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:78",{"_index":1942,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:79",{"_index":1941,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:81",{"_index":1929,"title":{},"body":{"components/TextareaComponent.html":{}}}],["config",{"_index":174,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["config.charlimit",{"_index":1946,"title":{},"body":{"components/TextareaComponent.html":{}}}],["config.desc",{"_index":1765,"title":{},"body":{"components/LabelComponent.html":{}}}],["config.hint",{"_index":1766,"title":{},"body":{"components/LabelComponent.html":{}}}],["config.inlinelabel",{"_index":685,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["config.label",{"_index":686,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["config.placeholder",{"_index":1899,"title":{},"body":{"components/SelectComponent.html":{}}}],["config.placeholdertext",{"_index":794,"title":{},"body":{"components/DropdownComponent.html":{}}}],["config.text",{"_index":495,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{}}}],["config.value",{"_index":952,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["config?.errorlov",{"_index":816,"title":{},"body":{"components/ErrorComponent.html":{}}}],["config?.label",{"_index":1626,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["config?.searchbutton?.text",{"_index":1868,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["config?.title",{"_index":419,"title":{},"body":{"components/BannerComponent.html":{}}}],["configs",{"_index":627,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["consider",{"_index":646,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["console.log('testing",{"_index":1520,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["console.log(emitvalue",{"_index":385,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["console.log(newlang.lang",{"_index":1814,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["const",{"_index":188,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{}}}],["constructor",{"_index":67,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{}}}],["constructor(differs",{"_index":68,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["constructor(platformid",{"_index":1782,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["constructor(private",{"_index":176,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["constructor(public",{"_index":1580,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["constructor(standalonefunctions",{"_index":576,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["constructor(translate",{"_index":427,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["cont.value",{"_index":1918,"title":{},"body":{"components/TabsComponent.html":{}}}],["container",{"_index":1058,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["container?.classlist.add('active",{"_index":1062,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["containerheight",{"_index":395,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["content",{"_index":380,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["controlvalueaccessor",{"_index":548,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["core",{"_index":1273,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["correct",{"_index":1224,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["cours",{"_index":1479,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":1947,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":437,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["createlinks",{"_index":425,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["critical",{"_index":359,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cta",{"_index":383,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["cta.text",{"_index":420,"title":{},"body":{"components/BannerComponent.html":{}}}],["ctas",{"_index":400,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["ctatype",{"_index":365,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["currcharcount",{"_index":1589,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["current",{"_index":928,"title":{},"body":{"components/FlyoutComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["currentcharacterstatusaria",{"_index":1579,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["currently",{"_index":919,"title":{},"body":{"components/FlyoutComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["currentyear",{"_index":1143,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["custom",{"_index":341,"title":{},"body":{"components/BannerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["customerrortext",{"_index":642,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["customicon",{"_index":1516,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["d'information",{"_index":1431,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":258,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["date().getfullyear",{"_index":1144,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_day_control_id_extension",{"_index":1100,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_labels_en",{"_index":1106,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_labels_en[0",{"_index":1211,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_en[1",{"_index":1213,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_en[2",{"_index":1215,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_fr",{"_index":1110,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_labels_fr[0",{"_index":1219,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_fr[1",{"_index":1220,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_fr[2",{"_index":1221,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_month_control_id_extension",{"_index":1102,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_months_en",{"_index":1075,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_months_fr",{"_index":1087,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_day_en",{"_index":1120,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_day_fr",{"_index":1122,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_month_en",{"_index":1118,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_month_fr",{"_index":1119,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_year_en",{"_index":1114,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_year_fr",{"_index":1116,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_unkown_en",{"_index":1124,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_unkown_fr",{"_index":1126,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_year_control_id_extension",{"_index":1104,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datepickercomponent",{"_index":257,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["datepickerstate",{"_index":1251,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["datepickertouchedorinvalid",{"_index":1250,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["day",{"_index":1107,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["day.tostring",{"_index":1231,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["days",{"_index":1135,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dayselect",{"_index":1141,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dayunknown",{"_index":1128,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dd",{"_index":1121,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["december",{"_index":1086,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":1675,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["decorators",{"_index":111,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["default",{"_index":77,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":70,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["delete",{"_index":476,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["dependencies",{"_index":1665,"title":{"dependencies.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":643,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["description",{"_index":1274,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/RadioInputComponent.html":{},"components/SpinnerComponent.html":{}}}],["determines",{"_index":752,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["differ",{"_index":24,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["different",{"_index":649,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["differs",{"_index":75,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["directive",{"_index":235,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["directives",{"_index":307,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["disable",{"_index":1409,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["disabled",{"_index":499,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["disableerror",{"_index":1138,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["disablefocus",{"_index":634,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["dismissible",{"_index":382,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["display",{"_index":1356,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["div",{"_index":1370,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["docheck",{"_index":14,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["document.getelementbyid('hidden",{"_index":1059,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["document.getelementbyid(id",{"_index":1050,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["document.getelementbyid(this.config?.id",{"_index":387,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["document.getelementbyid(this.config?.selected",{"_index":1563,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["document.getelementbyid(this.textid)?.offsetheight",{"_index":396,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["document.getelementsbyclassname('hidden",{"_index":1061,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["document.queryselector('.page",{"_index":1566,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["document.queryselector(`#${this.config?.id",{"_index":398,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["document:click",{"_index":65,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["document:keydown.arrowdown",{"_index":830,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.arrowdown(event",{"_index":841,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.arrowup",{"_index":831,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.arrowup(event",{"_index":843,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.enter",{"_index":832,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.enter(event",{"_index":845,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["documentation",{"_index":1948,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":159,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["don't",{"_index":1388,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["dot",{"_index":1329,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["down.component",{"_index":1695,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["down.component.html",{"_index":724,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["down.component.ts",{"_index":721,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"coverage.html":{}}}],["down.component.ts:22",{"_index":733,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:26",{"_index":735,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:27",{"_index":738,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:28",{"_index":736,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:29",{"_index":737,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:30",{"_index":734,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:31",{"_index":731,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:33",{"_index":767,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:34",{"_index":766,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:36",{"_index":765,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:43",{"_index":742,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:66",{"_index":744,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:84",{"_index":748,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:95",{"_index":739,"title":{},"body":{"components/DropdownComponent.html":{}}}],["drop",{"_index":723,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["dropdown",{"_index":722,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["dropdown'},{'name",{"_index":261,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["dropdown/drop",{"_index":1694,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["dropdowncomponent",{"_index":260,"title":{"components/DropdownComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDropdownConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dropdownconfigs",{"_index":1137,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dropdowns",{"_index":1160,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["ds",{"_index":1672,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dsfullsizes",{"_index":1296,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/SpinnerComponent.html":{}}}],["dsorientations",{"_index":1541,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["dssizes",{"_index":444,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["dssizes.large",{"_index":580,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["du",{"_index":975,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["décembre",{"_index":1099,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":745,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["e.tostring",{"_index":782,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["e?.relatedtarget",{"_index":788,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["each",{"_index":1208,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["eindicatorstatus",{"_index":1354,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["el",{"_index":397,"title":{},"body":{"components/BannerComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el.style.display",{"_index":403,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["el?.focus",{"_index":1053,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el?.scrollintoview",{"_index":1051,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el?.setattribute('tabindex",{"_index":1052,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el_id",{"_index":850,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["element",{"_index":234,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["element.value",{"_index":222,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["elementref",{"_index":866,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{}}}],["emitevent",{"_index":1288,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["emits",{"_index":898,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["emitvalue",{"_index":333,"title":{},"body":{"components/BannerComponent.html":{}}}],["empty",{"_index":764,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["emptyresults",{"_index":25,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["en",{"_index":681,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["en.svg",{"_index":1013,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":914,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["english",{"_index":1002,"title":{},"body":{"components/HeaderComponent.html":{},"components/LanguageSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["english_banner_url",{"_index":1010,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":891,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["enter",{"_index":1056,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["enum",{"_index":356,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{}}}],["enumerations",{"_index":2004,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["erreur",{"_index":1426,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/LabelComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":54,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":263,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["error.component.html",{"_index":796,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["error/error.component",{"_index":1574,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/TextareaComponent.html":{}}}],["error_text_stub_en",{"_index":628,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_text_stub_fr",{"_index":629,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["erroraria",{"_index":557,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["errorcomponent",{"_index":262,"title":{"components/ErrorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["erroricon",{"_index":1572,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["errorids",{"_index":558,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["errorlov",{"_index":798,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["errormessages",{"_index":644,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["errors",{"_index":1281,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["errorstubtext",{"_index":559,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["event",{"_index":97,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"components/LanguageSwitchComponent.html":{},"components/SelectComponent.html":{}}}],["event.key",{"_index":1040,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["event.keycode",{"_index":211,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["event.preventdefault",{"_index":881,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["event.stoppropagation",{"_index":179,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["event.target",{"_index":189,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["eventemitter",{"_index":94,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/SearchInputComponent.html":{},"components/TabsComponent.html":{}}}],["eventhandler",{"_index":318,"title":{},"body":{"components/BannerComponent.html":{}}}],["eventhandler(emitvalue",{"_index":331,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["everywhere",{"_index":638,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["exceeds",{"_index":1362,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["export",{"_index":171,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["exports",{"_index":1676,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["fa",{"_index":342,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["fa_keywords",{"_index":1312,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["fall",{"_index":892,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["false",{"_index":79,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["feature",{"_index":935,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["feb",{"_index":1236,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["february",{"_index":1077,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1199,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["fields",{"_index":1261,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["filteredoptions.slice(0",{"_index":204,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["filterlist",{"_index":40,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["filterlist(filtervalue",{"_index":115,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["filtervalue",{"_index":117,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["filtervalue.length",{"_index":200,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["flyout",{"_index":267,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["flyout'},{'name",{"_index":265,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["flyout.component.html",{"_index":818,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["flyout/flyout.component",{"_index":769,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["flyoutcomponent",{"_index":264,"title":{"components/FlyoutComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["flyoutconfig",{"_index":725,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["flyoutoptioncomponent",{"_index":266,"title":{"components/FlyoutOptionComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fn",{"_index":597,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focus",{"_index":785,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["focusevent",{"_index":747,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["focusinput",{"_index":1627,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focusinput(focusvalue",{"_index":1412,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focusstate",{"_index":1398,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focusvalue",{"_index":1414,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["fontawesome",{"_index":809,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["footer",{"_index":955,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":270,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["footer.component.html",{"_index":956,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.module.ts",{"_index":1722,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/footer.component",{"_index":1724,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["footer/footer/footer.component.ts",{"_index":954,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/footer/footer.component.ts:18",{"_index":960,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:20",{"_index":964,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:21",{"_index":963,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:22",{"_index":959,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:26",{"_index":961,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:33",{"_index":962,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/header/header.component.ts",{"_index":984,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/header/header.component.ts:25",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:26",{"_index":1009,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:27",{"_index":1007,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:28",{"_index":1008,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:29",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:36",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:50",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/hidden",{"_index":1030,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["footer/ircc",{"_index":1721,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/language",{"_index":1768,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footercomponent",{"_index":269,"title":{"components/FooterComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["foreach((option",{"_index":890,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["form",{"_index":154,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":560,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{}}}],["formgroup",{"_index":575,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["formgroupempty",{"_index":561,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["formsmodule",{"_index":1712,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["formvalue",{"_index":1501,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["forwardref",{"_index":553,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["foundclickable",{"_index":882,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["fr",{"_index":980,"title":{},"body":{"components/FooterComponent.html":{},"components/LanguageSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["fr.svg",{"_index":1015,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["français",{"_index":1807,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["french",{"_index":1005,"title":{},"body":{"components/HeaderComponent.html":{}}}],["french_banner_url",{"_index":1014,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":749,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["future",{"_index":933,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["février",{"_index":1089,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":1131,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["generates",{"_index":1272,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["generic",{"_index":358,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["get(this.config.id",{"_index":1190,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getariaerrortext",{"_index":567,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["getariaoverride(haserror",{"_index":1263,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getdisabled",{"_index":1839,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["getdisabled(index",{"_index":1510,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["geterroraria",{"_index":1282,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["geterrorstate",{"_index":568,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["getgeterrorstate",{"_index":1660,"title":{},"body":{"components/InputComponent.html":{}}}],["getlabelcore",{"_index":1276,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getnumdaysinmonth(month",{"_index":1232,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["gouvernement",{"_index":976,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_alt_text_en",{"_index":977,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_alt_text_fr",{"_index":979,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_aria_label_english",{"_index":969,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_aria_label_french",{"_index":973,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_footer",{"_index":965,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["govcanadaalt",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{}}}],["govcanadalink",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{}}}],["government",{"_index":971,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["green",{"_index":1343,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["grey",{"_index":1341,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["handlekeydown",{"_index":41,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HiddenNavComponent.html":{}}}],["handlekeydown(event",{"_index":118,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["handlekeydown(key",{"_index":1043,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["handleresize",{"_index":1779,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["handleresize(e",{"_index":1795,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["haserror",{"_index":1262,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["hasn't",{"_index":895,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["header",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":272,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["header.component.html",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1723,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["header_img_link_en",{"_index":1016,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_img_link_fr",{"_index":1018,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_link_alt_fr",{"_index":1022,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_link_atl_en",{"_index":1020,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headercomponent",{"_index":271,"title":{"components/HeaderComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["heading",{"_index":948,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["help_icon_alt_en",{"_index":1427,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["help_icon_alt_fr",{"_index":1429,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["helptext",{"_index":641,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["here",{"_index":1186,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["hidden",{"_index":274,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["hiddennavcomponent",{"_index":273,"title":{"components/HiddenNavComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hidedropdown",{"_index":26,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["hideshow",{"_index":1416,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["highlightindex",{"_index":823,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["highlightindex(el_id",{"_index":848,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hint",{"_index":82,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["hinttext",{"_index":55,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["horizontal",{"_index":1462,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["hostlistener",{"_index":149,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IOption.html":{},"interfaces/ISkipLinkConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["hostlistener('click",{"_index":112,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["hostlistener('document:click",{"_index":114,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["hostlistener('document:keydown.arrowdown",{"_index":853,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hostlistener('document:keydown.arrowup",{"_index":855,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hostlistener('document:keydown.enter",{"_index":857,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hostlistener('keydown",{"_index":1044,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["hostlistener('window:keydown.escape",{"_index":119,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["hostlistener('window:resize",{"_index":1796,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["hostlisteners",{"_index":63,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["href",{"_index":434,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"miscellaneous/enumerations.html":{}}}],["html",{"_index":233,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["htmlelement",{"_index":789,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["htmlinputelement",{"_index":187,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["https://www.canada.ca/en.html",{"_index":1017,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["https://www.canada.ca/etc/designs/canada/wet",{"_index":966,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["https://www.canada.ca/fr.html",{"_index":1019,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["i.active",{"_index":793,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["ibannerconfig",{"_index":327,"title":{"interfaces/IBannerConfig.html":{}},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{}}}],["ibreadcrumbconfig",{"_index":432,"title":{"interfaces/IBreadcrumbConfig.html":{}},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"coverage.html":{}}}],["ibuttonconfig",{"_index":354,"title":{"interfaces/IButtonConfig.html":{}},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{}}}],["icheckboxcomponentconfig",{"_index":578,"title":{"interfaces/ICheckBoxComponentConfig.html":{}},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"coverage.html":{}}}],["icon",{"_index":277,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["icon'},{'name",{"_index":279,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["icon.component.html",{"_index":1313,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["icon/icon.component",{"_index":1693,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["iconbutton",{"_index":1420,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["iconbuttoncategories",{"_index":1297,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["iconbuttoncategories.custom",{"_index":1306,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["iconbuttoncategories.primary",{"_index":1302,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["iconbuttonclick",{"_index":1439,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["iconbuttoncomponent",{"_index":276,"title":{"components/IconButtonComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["iconclass",{"_index":1424,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["iconclickevent",{"_index":694,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["iconcomponent",{"_index":278,"title":{"components/IconComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["iconconfig",{"_index":315,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["iconconfigs",{"_index":1305,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["icondirection",{"_index":500,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["icons",{"_index":1304,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["iconspan",{"_index":1315,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["ictaconfig",{"_index":368,"title":{"interfaces/ICTAConfig.html":{}},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{}}}],["id",{"_index":323,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["idatepickerconfig",{"_index":1064,"title":{"interfaces/IDatePickerConfig.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["idatepickerdropdownconfigs",{"_index":1132,"title":{"interfaces/IDatePickerDropDownConfigs.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["idatepickererrormessages",{"_index":1071,"title":{"interfaces/IDatePickerErrorMessages.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["idatepickerunknowndatetoggleconfig",{"_index":1072,"title":{"interfaces/IDatePickerUnknownDateToggleConfig.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["ideally",{"_index":158,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["identifier",{"_index":1949,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":637,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["idropdownconfig",{"_index":732,"title":{"interfaces/IDropdownConfig.html":{}},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"coverage.html":{}}}],["ids",{"_index":1159,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["ierrorcomponentconfig",{"_index":800,"title":{"interfaces/IErrorComponentConfig.html":{}},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"coverage.html":{}}}],["ierroriconconfig",{"_index":803,"title":{"interfaces/IErrorIconConfig.html":{}},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ierrorids",{"_index":610,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ierrorpairs",{"_index":625,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["if(!target?.id.includes(this.config.id",{"_index":790,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["if((this.config.type",{"_index":950,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["if(e",{"_index":781,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["if(el_id",{"_index":907,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(option.id",{"_index":909,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(option.selected",{"_index":922,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.config.flyout",{"_index":776,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["if(this.config.options",{"_index":929,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.config.type",{"_index":871,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["if(this.disabled",{"_index":875,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.id",{"_index":872,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["if(this.options",{"_index":873,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.selection",{"_index":876,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.type",{"_index":879,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["iflyoutconfig",{"_index":762,"title":{"interfaces/IFlyoutConfig.html":{}},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"coverage.html":{}}}],["iflyoutoptionconfig",{"_index":836,"title":{"interfaces/IFlyoutOptionConfig.html":{}},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"coverage.html":{}}}],["iflyoutoptiontype",{"_index":947,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["iflyoutselecttypes",{"_index":869,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"miscellaneous/enumerations.html":{}}}],["ihiddennavconfig",{"_index":1038,"title":{"interfaces/IHiddenNavConfig.html":{}},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["iiconbuttoncomponentconfig",{"_index":338,"title":{"interfaces/IIconButtonComponentConfig.html":{}},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{}}}],["iiconbuttoniconconfig",{"_index":350,"title":{"interfaces/IIconButtonIconConfig.html":{}},"body":{"components/BannerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{}}}],["iiconconfig",{"_index":1310,"title":{"interfaces/IIconConfig.html":{}},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"coverage.html":{}}}],["iindicatorconfig",{"_index":1323,"title":{"interfaces/IIndicatorConfig.html":{}},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"coverage.html":{}}}],["iinputcomponentconfig",{"_index":1380,"title":{"interfaces/IInputComponentConfig.html":{}},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"coverage.html":{}}}],["ilabelconfig",{"_index":616,"title":{"interfaces/ILabelConfig.html":{}},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ilabeliconconfig",{"_index":630,"title":{"interfaces/ILabelIconConfig.html":{}},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ilinkcomponentconfig",{"_index":447,"title":{"interfaces/ILinkComponentConfig.html":{}},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"coverage.html":{}}}],["ilinkconfig",{"_index":374,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["imageurl",{"_index":958,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["import",{"_index":148,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["imports",{"_index":1685,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["include",{"_index":1389,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["inconnu",{"_index":1127,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":918,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["indicator",{"_index":1349,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{}}}],["indicator'},{'name",{"_index":281,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["indicator.component",{"_index":1697,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["indicator.component.html",{"_index":1350,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":1446,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicator.component.ts:30",{"_index":1819,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:36",{"_index":1820,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:38",{"_index":1824,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:42",{"_index":1825,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:47",{"_index":1818,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:51",{"_index":1821,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:63",{"_index":1823,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:67",{"_index":1822,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator/indicator.component",{"_index":1700,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["indicator/progress",{"_index":1445,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicatorcomponent",{"_index":280,"title":{"components/IndicatorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["indicatorpalette",{"_index":1337,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatorpurpose",{"_index":1333,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatorpurpose.status",{"_index":1352,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["indicatorstatus",{"_index":1334,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatortreatment",{"_index":1330,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatortreatment.weak",{"_index":1351,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["indicatortype",{"_index":1328,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["individual",{"_index":1147,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":1335,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/IndicatorComponent.html":{},"components/LabelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":810,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["inject",{"_index":1804,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["inject(platform_id",{"_index":1811,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["injectable",{"_index":1741,"title":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{},"coverage.html":{}}}],["injectables",{"_index":1742,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{},"index.html":{}}}],["inlinelabel",{"_index":635,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["inlinelabelbold",{"_index":636,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["input",{"_index":150,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["input'},{'name",{"_index":282,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["input.component",{"_index":1710,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["input.component.html",{"_index":1387,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{}}}],["input.component.ts",{"_index":1494,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:103",{"_index":1848,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:137",{"_index":1847,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:153",{"_index":1844,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:167",{"_index":1849,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:172",{"_index":1852,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:186",{"_index":1845,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:20",{"_index":1865,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:21",{"_index":1866,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:23",{"_index":1864,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:26",{"_index":1867,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:60",{"_index":1857,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:61",{"_index":1862,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:62",{"_index":1854,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:63",{"_index":1856,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:65",{"_index":1841,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:69",{"_index":1843,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:70",{"_index":1842,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:72",{"_index":1858,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:76",{"_index":1855,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:77",{"_index":1840,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:80",{"_index":1861,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:84",{"_index":1859,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:85",{"_index":1860,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:86",{"_index":1853,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:89",{"_index":1850,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:92",{"_index":1851,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:96",{"_index":1846,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input/input.component",{"_index":1709,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["input/radio",{"_index":1493,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["input/search",{"_index":1514,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["inputcomponent",{"_index":28,"title":{"components/InputComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":53,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["inputtypes",{"_index":1385,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inputtypes.password",{"_index":1397,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["inputtypes.text",{"_index":1401,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["inputvalue",{"_index":29,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["inside",{"_index":1027,"title":{},"body":{"components/HeaderComponent.html":{}}}],["instead",{"_index":1395,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["interacted",{"_index":759,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["interface",{"_index":167,"title":{"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":168,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"index.html":{}}}],["invalid",{"_index":589,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["ioption",{"_index":90,"title":{"interfaces/IOption.html":{}},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{},"coverage.html":{}}}],["iprogressindicatorconfig",{"_index":1443,"title":{"interfaces/IProgressIndicatorConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{}}}],["iprogresstagsconfig",{"_index":1450,"title":{"interfaces/IProgressTagsConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{}}}],["iradioinputcomponentconfig",{"_index":1491,"title":{"interfaces/IRadioInputComponentConfig.html":{}},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["iradioinputoption",{"_index":1496,"title":{"interfaces/IRadioInputOption.html":{}},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["ircc",{"_index":241,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["irccdsangularbannermodule",{"_index":1663,"title":{"modules/IrccDsAngularBannerModule.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularcomponentssharedmodule",{"_index":1679,"title":{"modules/IrccDsAngularComponentsSharedModule.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularformcomponents",{"_index":1716,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["irccdsangularformcomponentsmodule",{"_index":1703,"title":{"modules/IrccDsAngularFormComponentsModule.html":{}},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularheaderfootermodule",{"_index":1717,"title":{"modules/IrccDsAngularHeaderFooterModule.html":{}},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularlegacyoldmodule",{"_index":1729,"title":{"modules/IrccDsAngularLegacyOldModule.html":{}},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsheaderfootercomponents",{"_index":1728,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["irccdslegacyoldcomponents",{"_index":1740,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["irccdssharedcomponents",{"_index":1702,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iscomponentclicked",{"_index":30,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["isdisabled",{"_index":562,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["isearchinputbuttonconfig",{"_index":1512,"title":{"interfaces/ISearchInputButtonConfig.html":{}},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["isearchinputconfig",{"_index":1515,"title":{"interfaces/ISearchInputConfig.html":{}},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["iselectconfig",{"_index":1073,"title":{"interfaces/ISelectConfig.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["iselectoptionsconfig",{"_index":1522,"title":{"interfaces/ISelectOptionsConfig.html":{}},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["isfocusinsidecomponent",{"_index":31,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["iskiplinkconfig",{"_index":1048,"title":{"interfaces/ISkipLinkConfig.html":{}},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["isleapyear(year",{"_index":1247,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["ismobile",{"_index":1778,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["ispinnerconfig",{"_index":1539,"title":{"interfaces/ISpinnerConfig.html":{}},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["isplatformbrowser",{"_index":1803,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["isselected",{"_index":829,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["istepconfig",{"_index":1449,"title":{"interfaces/IStepConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{}}}],["it's",{"_index":779,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["itabconfig",{"_index":1453,"title":{"interfaces/ITabConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"coverage.html":{}}}],["itabnavconfig",{"_index":1454,"title":{"interfaces/ITabNavConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"coverage.html":{}}}],["item",{"_index":689,"title":{},"body":{"components/ChipItemComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["item'},{'name",{"_index":254,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["item.arialabel",{"_index":412,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["item.btnconfig",{"_index":413,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["item.btnconfig.arialabel",{"_index":414,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["item.component",{"_index":166,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["item.component.html",{"_index":690,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts",{"_index":688,"title":{},"body":{"components/ChipItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:13",{"_index":698,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts:17",{"_index":697,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts:8",{"_index":696,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts:9",{"_index":695,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.key",{"_index":197,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["item/chip",{"_index":165,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ChipItemComponent.html":{},"interfaces/IOption.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{}}}],["itextareacomponentconfig",{"_index":1569,"title":{"interfaces/ITextareaComponentConfig.html":{}},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["january",{"_index":1076,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["janvier",{"_index":1088,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["jj",{"_index":1123,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["jour",{"_index":1111,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["juillet",{"_index":1094,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["juin",{"_index":1093,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["july",{"_index":1081,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["june",{"_index":1080,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":456,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{}}}],["keyboardevent",{"_index":103,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{}}}],["keydown",{"_index":1037,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["keydown(key",{"_index":1041,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["keyof",{"_index":369,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["keys",{"_index":1319,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["keyvaluediffer",{"_index":136,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["keyvaluediffers",{"_index":69,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["know",{"_index":161,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{}}}],["label",{"_index":586,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{}}}],["label'},{'name",{"_index":284,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["label.component.html",{"_index":1432,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["label/label.component",{"_index":1696,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["labelbutton",{"_index":1434,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["labelbuttonclickobs",{"_index":1745,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["labelbuttonclicksubj",{"_index":1746,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["labelbuttonservice",{"_index":1422,"title":{"injectables/LabelButtonService.html":{}},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"coverage.html":{}}}],["labelcomponent",{"_index":283,"title":{"components/LabelComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["labelconfig",{"_index":563,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["labelcore",{"_index":1277,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["labeliconconfig",{"_index":645,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["labelicontext",{"_index":1433,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["labels",{"_index":1207,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["lang",{"_index":607,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["langauge",{"_index":1200,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["langtoggle",{"_index":1784,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["language",{"_index":286,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["language_switch_text_english",{"_index":1806,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language_switch_text_english_mobile",{"_index":1808,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language_switch_text_french",{"_index":1809,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language_switch_text_french_mobile",{"_index":1810,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["languageclickobs",{"_index":1770,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["languageclicksub",{"_index":1771,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["languageswitchbuttonservice",{"_index":1767,"title":{"injectables/LanguageSwitchButtonService.html":{}},"body":{"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["languageswitchcomponent",{"_index":285,"title":{"components/LanguageSwitchComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["languagetoggleclick",{"_index":1772,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["large",{"_index":363,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["layer",{"_index":460,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["lead",{"_index":466,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["leap",{"_index":1246,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["left",{"_index":525,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["legacy",{"_index":1734,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":232,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["less",{"_index":1537,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["lets",{"_index":899,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["lib",{"_index":17,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["lib/src/lib/banner",{"_index":311,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"modules/IrccDsAngularBannerModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/form",{"_index":546,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/header",{"_index":953,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/legacy",{"_index":10,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"interfaces/IOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts",{"_index":421,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:33",{"_index":435,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:38",{"_index":431,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:44",{"_index":443,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:48",{"_index":441,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:66",{"_index":436,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/link/link.component.ts",{"_index":490,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{},"interfaces/ILinkComponentConfig.html":{},"coverage.html":{}}}],["lib/src/lib/shared/breadcrumb/link/link.component.ts:15",{"_index":493,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/link/link.component.ts:17",{"_index":492,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts",{"_index":496,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/button/button.component.ts:47",{"_index":506,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:50",{"_index":510,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:51",{"_index":504,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:52",{"_index":511,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:53",{"_index":505,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:54",{"_index":503,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:55",{"_index":507,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:56",{"_index":508,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:57",{"_index":509,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:58",{"_index":512,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:60",{"_index":513,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:62",{"_index":516,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:81",{"_index":515,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/dropdown/drop",{"_index":720,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"coverage.html":{}}}],["lib/src/lib/shared/flyout",{"_index":940,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts",{"_index":817,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:111",{"_index":847,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:118",{"_index":859,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:22",{"_index":863,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:24",{"_index":833,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:27",{"_index":835,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:28",{"_index":837,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:29",{"_index":834,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:30",{"_index":838,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:31",{"_index":839,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:34",{"_index":840,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:36",{"_index":864,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:37",{"_index":860,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:39",{"_index":851,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:49",{"_index":842,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:64",{"_index":844,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:84",{"_index":846,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:91",{"_index":849,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/icon",{"_index":1294,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts",{"_index":1311,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"coverage.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:20",{"_index":1614,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:21",{"_index":1611,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:22",{"_index":1610,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:23",{"_index":1612,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:25",{"_index":1613,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts",{"_index":1324,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:103",{"_index":1617,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:110",{"_index":1616,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:66",{"_index":1615,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:71",{"_index":1624,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:72",{"_index":1623,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:73",{"_index":1625,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:74",{"_index":1622,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:76",{"_index":1621,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:81",{"_index":1619,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:85",{"_index":1620,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:92",{"_index":1618,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/ircc",{"_index":1689,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/label/label",{"_index":1743,"title":{},"body":{"injectables/LabelButtonService.html":{},"coverage.html":{}}}],["lib/src/lib/shared/label/label.component.ts",{"_index":1419,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/label/label.component.ts:38",{"_index":1759,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:42",{"_index":1758,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:46",{"_index":1764,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:50",{"_index":1761,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:57",{"_index":1763,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:71",{"_index":1760,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:75",{"_index":1762,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/progress",{"_index":1444,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts",{"_index":1540,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:29",{"_index":1911,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:31",{"_index":1901,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:34",{"_index":1902,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:35",{"_index":1906,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:36",{"_index":1905,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:37",{"_index":1904,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:38",{"_index":1903,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:39",{"_index":1900,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:43",{"_index":1908,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:59",{"_index":1907,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:63",{"_index":1910,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:74",{"_index":1909,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts",{"_index":1553,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{},"coverage.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:21",{"_index":1913,"title":{},"body":{"components/TabsComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:25",{"_index":1914,"title":{},"body":{"components/TabsComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:27",{"_index":1915,"title":{},"body":{"components/TabsComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:34",{"_index":1916,"title":{},"body":{"components/TabsComponent.html":{}}}],["library/.../banner.component.ts",{"_index":2005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../breadcrumb.component.ts",{"_index":2012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../button.component.ts",{"_index":2006,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../date",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../flyout",{"_index":2008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../flyout.component.ts",{"_index":2009,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../footer.component.ts",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../header.component.ts",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../icon",{"_index":2007,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/.../indicator.component.ts",{"_index":2010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../input.component.ts",{"_index":2011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../ircc",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../label.component.ts",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../language",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../progress",{"_index":2013,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/.../spinner.component.ts",{"_index":2015,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/.../textarea.component.ts",{"_index":2014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/component",{"_index":9,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["limit",{"_index":56,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["line",{"_index":399,"title":{},"body":{"components/BannerComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["linevisible",{"_index":316,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["link",{"_index":366,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"miscellaneous/enumerations.html":{}}}],["link'},{'name",{"_index":248,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["link.component.html",{"_index":491,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{},"interfaces/ILinkComponentConfig.html":{}}}],["link.href",{"_index":477,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.linkkey",{"_index":487,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.routerlink",{"_index":478,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.text",{"_index":489,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["link.title",{"_index":1063,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["link/link.component",{"_index":448,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link[this.config.type",{"_index":486,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["linkconfig",{"_index":371,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["linkkey",{"_index":494,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{},"interfaces/ILinkComponentConfig.html":{}}}],["links",{"_index":463,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["linktype",{"_index":453,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"miscellaneous/enumerations.html":{}}}],["list",{"_index":702,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list'},{'name",{"_index":256,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["list.component",{"_index":1737,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{}}}],["list.component.html",{"_index":703,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts",{"_index":701,"title":{},"body":{"components/ChipListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":708,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:13",{"_index":711,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:15",{"_index":714,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:20",{"_index":712,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:8",{"_index":709,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:9",{"_index":710,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list/chip",{"_index":700,"title":{},"body":{"components/ChipListComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{}}}],["listens",{"_index":1790,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["literal",{"_index":99,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/IconButtonComponent.html":{}}}],["live",{"_index":1523,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["loading",{"_index":1543,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["locked",{"_index":1476,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":1021,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["looks",{"_index":756,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["lov",{"_index":1226,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["mai",{"_index":1092,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":1396,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["makes",{"_index":1393,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["many",{"_index":648,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["mapping",{"_index":1303,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["march",{"_index":1078,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["markastouched",{"_index":1506,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["mars",{"_index":1090,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":310,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(this.selectedindex",{"_index":894,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["max",{"_index":1373,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["maxlimit",{"_index":1591,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["maxyear",{"_index":1068,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["mid",{"_index":459,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["mime",{"_index":2000,"title":{},"body":{"dependencies.html":{}}}],["minyear",{"_index":1069,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["miscellaneous",{"_index":2003,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":640,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["mixed",{"_index":633,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["mobile",{"_index":1793,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["module",{"_index":1662,"title":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}},"body":{}}],["modules",{"_index":1664,"title":{"modules.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{},"modules.html":{}}}],["mois",{"_index":1112,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["month",{"_index":1108,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["monthnum",{"_index":1233,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["months",{"_index":1136,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["monthselect",{"_index":1140,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["monthunknown",{"_index":1129,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["more",{"_index":1428,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"miscellaneous/variables.html":{}}}],["mostly",{"_index":1524,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["multi",{"_index":554,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["nav",{"_index":1033,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["nav'},{'name",{"_index":275,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["nav.component",{"_index":1727,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["nav.component.html",{"_index":1034,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["nav.component.ts",{"_index":1032,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["nav.component.ts:19",{"_index":1039,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.component.ts:23",{"_index":1046,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.component.ts:33",{"_index":1042,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.component.ts:38",{"_index":1047,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.scrollleft",{"_index":1567,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["nav/hidden",{"_index":1031,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{}}}],["navigation",{"_index":461,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["navy",{"_index":1345,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["need",{"_index":160,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["needs",{"_index":1001,"title":{},"body":{"components/HeaderComponent.html":{}}}],["nested",{"_index":1525,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["neutral",{"_index":1336,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["never",{"_index":639,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["new",{"_index":175,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ng_value_accessor",{"_index":551,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ngafterviewchecked",{"_index":319,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["ngafterviewinit",{"_index":320,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["ngdocheck",{"_index":42,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["ngmodule",{"_index":1677,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["ngonchange",{"_index":1534,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["ngonchanges",{"_index":426,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{}}}],["ngonchanges(changes",{"_index":439,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{}}}],["ngoninit",{"_index":43,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["ngx",{"_index":449,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{}}}],["none",{"_index":405,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["noresults",{"_index":231,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["nothing",{"_index":900,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["notstarted",{"_index":1485,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["november",{"_index":1085,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["novembre",{"_index":1098,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["now",{"_index":375,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["null",{"_index":811,"title":{},"body":{"components/ErrorComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["number",{"_index":85,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ButtonComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/IStepConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"miscellaneous/enumerations.html":{}}}],["number(this.config?.charlimit",{"_index":1594,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["numdays",{"_index":1187,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["obj",{"_index":1286,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["object",{"_index":1783,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["object.keys(change",{"_index":1320,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["october",{"_index":1084,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["octobre",{"_index":1097,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["old.module.ts",{"_index":1735,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["old/autocomplete/autocomplete.component.ts",{"_index":11,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{},"coverage.html":{}}}],["old/autocomplete/autocomplete.component.ts:107",{"_index":122,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:111",{"_index":120,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:122",{"_index":134,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:126",{"_index":116,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:142",{"_index":106,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:151",{"_index":126,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:156",{"_index":130,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:161",{"_index":132,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:167",{"_index":125,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:172",{"_index":123,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:177",{"_index":127,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:184",{"_index":129,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:196",{"_index":109,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:206",{"_index":121,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:36",{"_index":142,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:39",{"_index":91,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:40",{"_index":93,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:41",{"_index":84,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:42",{"_index":89,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:43",{"_index":80,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:44",{"_index":87,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:45",{"_index":95,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:46",{"_index":92,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:48",{"_index":147,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:49",{"_index":146,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:50",{"_index":143,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:51",{"_index":139,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:52",{"_index":145,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:53",{"_index":144,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:54",{"_index":135,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:55",{"_index":137,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:57",{"_index":71,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:63",{"_index":104,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:75",{"_index":100,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/autocomplete/autocomplete.component.ts:97",{"_index":101,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["old/chips/chip",{"_index":687,"title":{},"body":{"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"coverage.html":{}}}],["old/chips/secondary",{"_index":1869,"title":{},"body":{"components/SecondaryChipsComponent.html":{},"coverage.html":{}}}],["old/ircc",{"_index":1733,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["old/search",{"_index":1513,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["onarrowdown",{"_index":824,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["onarrowdown(event",{"_index":852,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["onarrowup",{"_index":825,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["onarrowup(event",{"_index":854,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["onblur",{"_index":1533,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["onchange",{"_index":564,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["onchanges",{"_index":422,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/ProgressTagsComponent.html":{}}}],["onclicked",{"_index":1531,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["onenter",{"_index":826,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["onenter(event",{"_index":856,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["onenterkeypress",{"_index":691,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["oniconclick",{"_index":692,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["onmouseenter",{"_index":44,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["onsubmit",{"_index":705,"title":{},"body":{"components/ChipListComponent.html":{}}}],["ontouch",{"_index":565,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["ontouched",{"_index":1293,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["ontouchedlabel",{"_index":569,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["opens",{"_index":755,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["option",{"_index":215,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["option'},{'name",{"_index":268,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["option.active",{"_index":910,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option.clickable",{"_index":885,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option.component",{"_index":868,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["option.component.html",{"_index":942,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["option.component.ts",{"_index":941,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["option.component.ts:27",{"_index":945,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["option.component.ts:32",{"_index":943,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["option.component.ts:36",{"_index":946,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["option.selected",{"_index":926,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option.text",{"_index":1863,"title":{},"body":{"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["option.value",{"_index":916,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option/flyout",{"_index":867,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["option['text",{"_index":230,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["option[\\'text",{"_index":238,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["optional",{"_index":27,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["optioncontainers",{"_index":820,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["options",{"_index":58,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["optionselected",{"_index":827,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["optionselected(i",{"_index":858,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["orange",{"_index":1339,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["orientation",{"_index":1447,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["orientations",{"_index":1461,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["originaloptions",{"_index":32,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["otherwise",{"_index":1004,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["out",{"_index":1670,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["output",{"_index":151,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/SearchInputComponent.html":{},"components/TabsComponent.html":{}}}],["outputs",{"_index":61,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"components/IconButtonComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/SearchInputComponent.html":{},"components/TabsComponent.html":{}}}],["override",{"_index":812,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["overview",{"_index":2016,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":1988,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1374,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["page",{"_index":469,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["pages",{"_index":465,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["palette",{"_index":1325,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":654,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["parent",{"_index":604,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["parentid",{"_index":618,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["pas",{"_index":1482,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":1386,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["picker",{"_index":1133,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["picker'},{'name",{"_index":259,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["picker.component",{"_index":1714,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["picker.component.html",{"_index":1134,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["picker.component.ts",{"_index":1067,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picker/date",{"_index":1066,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["placeholder",{"_index":1382,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["placeholdertext",{"_index":730,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["plain",{"_index":518,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["platform_id",{"_index":1805,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["platformid",{"_index":1786,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["plus",{"_index":1430,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"miscellaneous/variables.html":{}}}],["populate",{"_index":1174,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["portinputvalues",{"_index":797,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["possible",{"_index":651,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["present",{"_index":1148,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["press",{"_index":1436,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["pressed",{"_index":1437,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["prev",{"_index":484,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["previous",{"_index":464,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["primary",{"_index":346,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/LabelComponent.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":470,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["progress",{"_index":289,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["progress_indicator_step_en",{"_index":1456,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["progress_indicator_step_fr",{"_index":1458,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["progressindicatorcomponent",{"_index":288,"title":{"components/ProgressIndicatorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progresstagscomponent",{"_index":290,"title":{"components/ProgressTagsComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IProgressTagsConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"properties.html":{}}}],["provide",{"_index":550,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["providedin",{"_index":1755,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["providers",{"_index":549,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["public",{"_index":35,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["pulled",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{}}}],["purple",{"_index":1344,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["purpose",{"_index":1326,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["push(this.config.options[i]);*/console.log('multi",{"_index":937,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["querylist",{"_index":861,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["radio",{"_index":293,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["radioinputcomponent",{"_index":292,"title":{"components/RadioInputComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rc.12",{"_index":1999,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":1713,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["really",{"_index":1392,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["receives",{"_index":750,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["red",{"_index":1340,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["registeronchange",{"_index":570,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(fn",{"_index":595,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(onchange",{"_index":1504,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["registerontouched",{"_index":571,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(fn",{"_index":598,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(ontouched",{"_index":1505,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["removeallchipitems",{"_index":45,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["removechipitem",{"_index":46,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ChipListComponent.html":{}}}],["removechipitem(chipidx",{"_index":713,"title":{},"body":{"components/ChipListComponent.html":{}}}],["removechipitem(index",{"_index":124,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["removed",{"_index":1403,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["removevertical",{"_index":1552,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["replace",{"_index":373,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["representing",{"_index":593,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["required",{"_index":632,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["reset",{"_index":523,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["resizable",{"_index":1573,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["resizabletypes",{"_index":1575,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["resizes",{"_index":1792,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["result",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{}}}],["results",{"_index":309,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retcontrol",{"_index":657,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["return",{"_index":201,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{}}}],["returnlabel",{"_index":1441,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["returnoptionstodefault",{"_index":47,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["returns",{"_index":107,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["reverse",{"_index":889,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["right",{"_index":526,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":1756,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["rotatechevron",{"_index":1528,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["rounded",{"_index":381,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["routerlink",{"_index":454,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"miscellaneous/enumerations.html":{}}}],["routerlinks",{"_index":438,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["routermodule",{"_index":1691,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["rxjs",{"_index":1754,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["s",{"_index":229,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["s3",{"_index":1993,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":1438,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["savedselectedoptions",{"_index":59,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["screen",{"_index":1791,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["scrolling",{"_index":920,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["scrolltoanchor",{"_index":1035,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["scrolltoanchor(id",{"_index":1045,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["sdk/client",{"_index":1992,"title":{},"body":{"dependencies.html":{}}}],["sdk/lib",{"_index":1995,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":295,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["searchbutton",{"_index":1517,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["searchevent",{"_index":1518,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["searchinputcomponent",{"_index":294,"title":{"components/SearchInputComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["searchinputcontrol",{"_index":1519,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["secondary",{"_index":297,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IButtonConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["secondarychipscomponent",{"_index":296,"title":{"components/SecondaryChipsComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["segment",{"_index":458,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["select",{"_index":934,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["select'},{'name",{"_index":300,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["select.component.html",{"_index":1526,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["select/select.component",{"_index":1074,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"modules/IrccDsAngularFormComponentsModule.html":{}}}],["selectall",{"_index":48,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["selectcomponent",{"_index":299,"title":{"components/SelectComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":726,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{}}}],["selectedid",{"_index":1561,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["selectedindex",{"_index":821,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selectedoption",{"_index":206,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IOption.html":{}}}],["selectedoption(e",{"_index":743,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["selectedoption.value",{"_index":208,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["selectedoptions",{"_index":33,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["selectindex",{"_index":49,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selectindex(index",{"_index":128,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["selection",{"_index":828,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selections",{"_index":924,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["selects",{"_index":780,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selectvaluechange",{"_index":62,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["sense",{"_index":1394,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["sentiment",{"_index":1347,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["september",{"_index":1083,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["septembre",{"_index":1096,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":339,"title":{},"body":{"components/BannerComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{}}}],["setdisabledstate",{"_index":572,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":600,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":655,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["setlabellanguage",{"_index":1209,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["setlang",{"_index":573,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["setlang(lang",{"_index":605,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["sets",{"_index":904,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["setselected",{"_index":1912,"title":{},"body":{"components/TabsComponent.html":{}}}],["setselected(selectedid",{"_index":1560,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["settext",{"_index":1780,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["settext(lang",{"_index":1798,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["settimeout(function",{"_index":389,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["setting",{"_index":925,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["settypetitle",{"_index":1489,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["setup",{"_index":932,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["setyeardaylanguage",{"_index":1201,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["shared.module",{"_index":1681,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["shared.module.ts",{"_index":1690,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/button/button.component",{"_index":355,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["shared/constants/jl",{"_index":445,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["shared/functions/stand",{"_index":451,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["shared/icon",{"_index":351,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["shared/interfaces/component",{"_index":626,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["shared/ircc",{"_index":1680,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["shared/label/label.component",{"_index":631,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["showcontent",{"_index":1554,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["shownav",{"_index":1036,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["showpassword",{"_index":1399,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["showplaceholder",{"_index":727,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["simplechanges",{"_index":440,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{}}}],["single",{"_index":870,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"miscellaneous/enumerations.html":{}}}],["size",{"_index":384,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["sizeoverride",{"_index":1498,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["skiplinks",{"_index":1049,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["slice(0",{"_index":888,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["small",{"_index":364,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["smooth",{"_index":913,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["solid",{"_index":343,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["something",{"_index":1536,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["spancontent",{"_index":1321,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["spinner",{"_index":1548,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":302,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["spinner.component.html",{"_index":1549,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["spinner/spinner.component",{"_index":1701,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["spinner_labels_en",{"_index":1542,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spinner_labels_fr",{"_index":1544,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spinnercomponent",{"_index":301,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["spinnertype",{"_index":1547,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["standalone",{"_index":429,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["standalonefunctions",{"_index":430,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["start",{"_index":170,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["started",{"_index":1477,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":588,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["statement",{"_index":1185,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["statements",{"_index":1950,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":141,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["status",{"_index":760,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["step",{"_index":1457,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["steps",{"_index":1448,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["steptext",{"_index":1467,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["storage",{"_index":1996,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":81,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["string(year",{"_index":1235,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["strong",{"_index":1331,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["styling",{"_index":906,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["submit",{"_index":522,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["subscribes",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{}}}],["success",{"_index":360,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["succès",{"_index":1546,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":2020,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2021,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1769,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["switch'},{'name",{"_index":287,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["switch.component",{"_index":1726,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["switch.component.html",{"_index":1777,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts",{"_index":1776,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["switch.component.ts:24",{"_index":1787,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:26",{"_index":1801,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:28",{"_index":1802,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:29",{"_index":1785,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:41",{"_index":1789,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:48",{"_index":1797,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:57",{"_index":1800,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:61",{"_index":1799,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch/language",{"_index":1725,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["symbol",{"_index":970,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["symbole",{"_index":974,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":1054,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{}}}],["tab?.getboundingclientrect().left",{"_index":1565,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["tabclick",{"_index":1464,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabclickfn",{"_index":1817,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["tabclickfn(selected",{"_index":1470,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabconfig",{"_index":1465,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabindex",{"_index":501,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["table",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":1794,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["tabnavconfig",{"_index":1466,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabs",{"_index":1555,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["tabs'},{'name",{"_index":304,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["tabs.component.html",{"_index":1556,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":1455,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabscomponent",{"_index":303,"title":{"components/TabsComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tag",{"_index":1357,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["tag_labels_en",{"_index":1474,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag_labels_fr",{"_index":1478,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tagconfig",{"_index":1460,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tags",{"_index":1486,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{}}}],["tags'},{'name",{"_index":291,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["tags.component",{"_index":1452,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tags.component.html",{"_index":1487,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{}}}],["tags.component.ts",{"_index":1473,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tags.component.ts:37",{"_index":1833,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:39",{"_index":1827,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:42",{"_index":1828,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:43",{"_index":1829,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:44",{"_index":1826,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:48",{"_index":1831,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:58",{"_index":1830,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:62",{"_index":1832,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags/progress",{"_index":1451,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tagtype",{"_index":1484,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["take",{"_index":376,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["takes",{"_index":903,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["tap",{"_index":1459,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":186,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IOption.html":{}}}],["target.classlist.contains('select",{"_index":193,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["target.classlist.contains(`selected",{"_index":194,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["target.type",{"_index":190,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["teal",{"_index":1338,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["testing",{"_index":1025,"title":{},"body":{"components/HeaderComponent.html":{}}}],["text",{"_index":83,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/CheckboxComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["text[0",{"_index":1838,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[1",{"_index":1834,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[2",{"_index":1835,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[3",{"_index":1836,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[4",{"_index":1837,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["textarea",{"_index":306,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["textarea.component.html",{"_index":1577,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textarea/textarea.component",{"_index":1715,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["textarea_component.maxlimit",{"_index":1593,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textarea_component.warninglimit",{"_index":1597,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textareacomponent",{"_index":305,"title":{"components/TextareaComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textareainput.value.length",{"_index":1945,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textid",{"_index":317,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["thin",{"_index":1299,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["this.a11ytext",{"_index":915,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.abbr",{"_index":1377,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.activiatedselect",{"_index":1530,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["this.addhover",{"_index":192,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.altimage",{"_index":983,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.aria",{"_index":982,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["this.ariadissmissible",{"_index":417,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.arialabel",{"_index":535,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.ariatext",{"_index":1408,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.baseurl",{"_index":479,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.btnaction.emit(id",{"_index":545,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.btnevent?.emit(this.config.id",{"_index":393,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.category",{"_index":529,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.charactercountstatus",{"_index":1584,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.charactercountstatus(change[this.config.id]?.length",{"_index":1586,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.charlimit",{"_index":1581,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.charlimitstatus",{"_index":1590,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.checkduplicated(index",{"_index":219,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.checklabellength",{"_index":1361,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.checklabelrounded",{"_index":1359,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.checknumber",{"_index":1360,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.chipcontenttext",{"_index":718,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.chiplist?.push(this.chipcontenttext",{"_index":719,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.chiplist?.splice(chipidx",{"_index":716,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.chiplistchange.emit(this.chiplist",{"_index":717,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.clearflyoutfocus",{"_index":784,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.clearoptions",{"_index":936,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.clickevent.emit(id",{"_index":1309,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.color",{"_index":533,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config",{"_index":415,"title":{},"body":{"components/BannerComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.config.ariadissmissible",{"_index":416,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config.arialabel",{"_index":536,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.config.baseurlkey",{"_index":481,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config.category",{"_index":530,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.config.charlimit",{"_index":1582,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config.clickable",{"_index":951,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["this.config.color",{"_index":534,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config.desc",{"_index":667,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.disabled",{"_index":538,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/RadioInputComponent.html":{}}}],["this.config.errorlov",{"_index":815,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.config.errormessages",{"_index":665,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.errormessages.general",{"_index":1173,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.errormessages?.general",{"_index":1145,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.flyout",{"_index":778,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.flyout.options.foreach(i",{"_index":792,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.formgroup",{"_index":617,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.controls[this.config.id].value",{"_index":1583,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.controls[this.config.id].value.length",{"_index":1585,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.disable",{"_index":1291,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.enable",{"_index":1292,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get",{"_index":1192,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.config.id",{"_index":658,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.config.formgroup.get(this.config.id)?.invalid",{"_index":684,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.config.formgroup.get(this.config.id)?.statuschanges.subscribe",{"_index":675,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.config.formgroup.get(this.config.id)?.touched",{"_index":683,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.day.id)?.invalid",{"_index":1257,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.day.id)?.touched",{"_index":1256,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.month.id)?.invalid",{"_index":1255,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.month.id)?.touched",{"_index":1254,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.year.id)?.invalid",{"_index":1253,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.year.id)?.touched",{"_index":1252,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.setvalue(obj",{"_index":1287,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.valuechanges.subscribe((change",{"_index":1410,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.valuechanges.subscribe(fn",{"_index":1289,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup?.invalid",{"_index":1260,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup?.touched",{"_index":1259,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.helptext",{"_index":668,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["this.config.hint",{"_index":1146,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.icon",{"_index":542,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{}}}],["this.config.icondirection",{"_index":543,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config.id",{"_index":528,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.label",{"_index":666,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.label.length",{"_index":1369,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.config.label.trim().length",{"_index":774,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.labeliconconfig",{"_index":670,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.links",{"_index":482,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config.links.length",{"_index":483,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config.maxyear",{"_index":1154,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.minyear",{"_index":1156,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.options",{"_index":874,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["this.config.options.slice(this.selectedindex",{"_index":883,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options?.foreach(option",{"_index":908,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options[i].clickable",{"_index":931,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options[i].selected",{"_index":930,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options[index].disabled",{"_index":1511,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["this.config.orientation",{"_index":1468,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.config.placeholdertext",{"_index":772,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.required",{"_index":669,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.selected",{"_index":1469,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{}}}],["this.config.selection",{"_index":877,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.size",{"_index":532,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.config.tab",{"_index":1557,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.config.tab[0].id",{"_index":1558,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.config.tabindex",{"_index":540,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config.toplabel",{"_index":1442,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/LabelComponent.html":{},"components/SelectComponent.html":{}}}],["this.config.type",{"_index":474,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.config.unknowndatetoggle",{"_index":1158,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.unknowndatetoggle?.dayunknown",{"_index":1193,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.unknowndatetoggle?.yearunknown",{"_index":1183,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config?.charlimit",{"_index":1588,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config?.cta",{"_index":410,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config?.cta.foreach((item",{"_index":411,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config?.flyout?.options",{"_index":791,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config?.id",{"_index":386,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config?.label",{"_index":1365,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.config?.links",{"_index":472,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.links.foreach((link",{"_index":475,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.links.length",{"_index":473,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.options?.foreach(option",{"_index":927,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config?.selected",{"_index":1562,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.config?.size",{"_index":671,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["this.createlinks",{"_index":471,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.currentcharacterstatusaria",{"_index":1592,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.days",{"_index":1228,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dayselect",{"_index":1270,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dayselect?.setattribute",{"_index":1271,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.desc",{"_index":1151,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.differ",{"_index":177,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.differ.diff(this",{"_index":195,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.differs.find({}).create",{"_index":178,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.disabled",{"_index":537,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{}}}],["this.dropdownconfigs.day.formgroup",{"_index":1164,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.id",{"_index":1161,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.label",{"_index":1210,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options",{"_index":1229,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.length",{"_index":1195,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.push",{"_index":1194,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.shift",{"_index":1202,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.unshift",{"_index":1205,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.placeholder",{"_index":1216,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.size",{"_index":1167,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.toplabel",{"_index":1170,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.formgroup",{"_index":1165,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.id",{"_index":1162,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.label",{"_index":1212,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.options?.push",{"_index":1196,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.placeholder",{"_index":1217,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.size",{"_index":1168,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.toplabel",{"_index":1171,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.formgroup",{"_index":1166,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.id",{"_index":1163,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.label",{"_index":1214,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.options?.push",{"_index":1184,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.options?.shift",{"_index":1203,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.options?.unshift",{"_index":1206,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.placeholder",{"_index":1218,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.size",{"_index":1169,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.toplabel",{"_index":1172,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.emptyresults",{"_index":205,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.erroraria",{"_index":678,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.errorids",{"_index":673,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.errorids.foreach((error",{"_index":1283,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.errorlov",{"_index":814,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.errormessages",{"_index":1152,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.errorstubtext",{"_index":682,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.filterlist(event",{"_index":199,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.flyoutconfig",{"_index":777,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.focusstate",{"_index":1413,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.form.get('formcontrol')?.setvalue(formvalue",{"_index":1503,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.formcontrol",{"_index":659,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.formcontrol?.markasdirty",{"_index":677,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.formgroup",{"_index":672,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.formgroupempty",{"_index":579,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.getariaerrortext",{"_index":676,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.getariaoverride",{"_index":1181,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getariaoverride(datepickerstate",{"_index":1258,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.geterroraria",{"_index":1267,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getlabelcore",{"_index":1266,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getnumdaysinmonth(month",{"_index":1230,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.govcanadaalt",{"_index":1029,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.govcanadalink",{"_index":1028,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.hidedropdown",{"_index":180,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.highlightindex(option.id",{"_index":887,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.hint",{"_index":1150,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.icon",{"_index":541,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.iconclickevent.emit",{"_index":699,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["this.iconconfig.id",{"_index":406,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.iconconfigs[this.config.category",{"_index":1307,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.icondirection",{"_index":544,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.iconspan.nativeelement.innerhtml",{"_index":1322,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["this.id",{"_index":527,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{}}}],["this.imageurl",{"_index":981,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["this.inputcomponent?.clearvalue",{"_index":182,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.inputcomponent?.focusinput(this.hidedropdown",{"_index":210,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.iscomponentclicked",{"_index":184,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.isdisabled",{"_index":656,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["this.isfocusinsidecomponent",{"_index":185,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.isleapyear(year",{"_index":1238,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.ismobile",{"_index":1812,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["this.isselected.emit(null",{"_index":902,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.isselected.emit(this.config.options[i].value",{"_index":939,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.label",{"_index":770,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.label?.nativeelement?.offsetwidth",{"_index":1378,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.labelbutton.buttonpress(this.config.parentid",{"_index":1440,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["this.labelbuttonclicksubj.asobservable",{"_index":1750,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["this.labelbuttonclicksubj.next(id",{"_index":1757,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["this.labelconfig",{"_index":663,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.labelicontext",{"_index":1435,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["this.langtoggle.languagetoggleclick",{"_index":1816,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["this.languageclicksub.asobservable",{"_index":1773,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["this.languageclicksub.next(true",{"_index":1775,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["this.limit",{"_index":217,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.maxyear",{"_index":1153,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.minyear",{"_index":1155,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.months",{"_index":1204,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.monthselect",{"_index":1268,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.monthselect?.setattribute",{"_index":1269,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.onchange",{"_index":652,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.ontouch",{"_index":653,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.ontouched",{"_index":1290,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.optioncontainers.toarray()[this.selectedindex]?.nativeelement?.scrollintoview",{"_index":911,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.options",{"_index":203,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{}}}],["this.options.length",{"_index":181,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.options.slice(0",{"_index":225,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.options[index].value",{"_index":223,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.optionselected(this.selectedindex",{"_index":901,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.orientation",{"_index":1550,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["this.originaloptions",{"_index":224,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.originaloptions.slice(0",{"_index":209,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.placeholdertext",{"_index":771,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.portinputvalues",{"_index":813,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.removevertical",{"_index":1551,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["this.required",{"_index":1149,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.returnoptionstodefault",{"_index":183,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.rotatechevron",{"_index":1532,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["this.rounded",{"_index":1368,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.savedselectedoptions",{"_index":226,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.scrolltoanchor(link",{"_index":1057,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["this.selected",{"_index":783,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.selectedindex",{"_index":886,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.selectedoptions",{"_index":207,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.selectedoptions.length",{"_index":218,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.selectedoptions.push(option",{"_index":216,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.selectedoptions.push(this.options[index",{"_index":220,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.selectedoptions.some((element",{"_index":221,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.selectedoptions.splice(index",{"_index":213,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.selection",{"_index":878,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.selectvaluechange.emit(this.selectedoptions",{"_index":198,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.setlabellanguage",{"_index":1178,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.setlang(change.lang",{"_index":662,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.setlang(this.translate.currentlang",{"_index":660,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.setmonthslanguage",{"_index":1177,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.settext(newlang.lang",{"_index":1815,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["this.settypetitle",{"_index":1488,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.setyeardaylanguage",{"_index":1180,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.shownav",{"_index":1055,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["this.showpassword",{"_index":1406,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.showplaceholder",{"_index":775,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.size",{"_index":531,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.standalone.getbaseurl",{"_index":480,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.standalonefunctions.geterroraria",{"_index":679,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.standalonefunctions.geterrorids",{"_index":674,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.standalonefunctions.makelabelconfig",{"_index":664,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.steptext",{"_index":1472,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["this.tabclick.emit(selected",{"_index":1471,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["this.tabindex",{"_index":539,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.text",{"_index":1490,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.textid",{"_index":408,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.toggledropdown",{"_index":191,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["this.toggleflyout(false",{"_index":787,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.toggleline",{"_index":418,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.touched",{"_index":680,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.translate.currentlang",{"_index":1182,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.translate.instant(error.errorlov",{"_index":1284,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.instant(link.linkkey",{"_index":488,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.translate.instant(this.config.desc",{"_index":1279,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.instant(this.config.hint",{"_index":1280,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.instant(this.config.label",{"_index":1278,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.onlangchange.subscribe",{"_index":1179,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.translate.onlangchange.subscribe((change",{"_index":661,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.type",{"_index":880,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.typecontrol",{"_index":1407,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.unknowndatetoggle",{"_index":1157,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.updatedaysarray",{"_index":1188,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.valuechange.emit(selectedid",{"_index":1568,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.valuechange.emit(this.config.selected",{"_index":1559,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.yearselect",{"_index":1264,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.yearselect?.setattribute",{"_index":1265,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["through",{"_index":896,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["title",{"_index":60,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{}}}],["todo",{"_index":156,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["toggle",{"_index":1415,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["toggledropdown",{"_index":50,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["toggledropdownkey",{"_index":51,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["toggledropdownkey(event",{"_index":131,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["toggleflyout",{"_index":729,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggleflyout(status",{"_index":746,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["toggleline",{"_index":321,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["token",{"_index":1425,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["toplabel",{"_index":1421,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/LabelComponent.html":{},"components/SelectComponent.html":{}}}],["touched",{"_index":566,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["translate",{"_index":228,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{}}}],["translate/core",{"_index":450,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{}}}],["translated",{"_index":1275,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["translatemodule",{"_index":1684,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["translateservice",{"_index":428,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{}}}],["translation",{"_index":455,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["translations",{"_index":1003,"title":{},"body":{"components/HeaderComponent.html":{}}}],["trash",{"_index":1301,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["treatment",{"_index":1346,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["trigger",{"_index":594,"title":{},"body":{"components/CheckboxComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["triggered",{"_index":1006,"title":{},"body":{"components/HeaderComponent.html":{}}}],["triggers",{"_index":905,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["true",{"_index":138,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["truncated",{"_index":1358,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["truthy",{"_index":751,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["turned",{"_index":1500,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["type",{"_index":74,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typecontrol",{"_index":1400,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["typeof",{"_index":370,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["types",{"_index":2001,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":485,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/TabsComponent.html":{}}}],["under",{"_index":1507,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["unknown",{"_index":1125,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["unknowndatetoggle",{"_index":1070,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["unless",{"_index":1391,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["update",{"_index":1222,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["updated",{"_index":1535,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["updatedaysarray(month",{"_index":1227,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["updates",{"_index":917,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["url",{"_index":377,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["use",{"_index":1142,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["used",{"_index":602,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["useexisting",{"_index":552,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["users",{"_index":467,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["using",{"_index":162,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IOption.html":{}}}],["val.title",{"_index":1917,"title":{},"body":{"components/TabsComponent.html":{}}}],["validation",{"_index":1384,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["validatorfn",{"_index":1497,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["validators",{"_index":1495,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["value",{"_index":78,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.text.tolowercase().includes(filtervalue.tolowercase",{"_index":202,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["valuechange",{"_index":52,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{}}}],["valuechange($event",{"_index":1529,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["valuechange(event",{"_index":133,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["valuechanges.subscribe((year",{"_index":1191,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["values",{"_index":1390,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["var",{"_index":236,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["variable",{"_index":1960,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2025,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verrouill",{"_index":1481,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2023,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":1463,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["viewchild",{"_index":152,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IOption.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{}}}],["viewchild('iconspan",{"_index":1314,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["viewchild('label",{"_index":1353,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["viewchild(inputcomponent",{"_index":140,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/IOption.html":{}}}],["viewchildren",{"_index":865,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["viewchildren('option",{"_index":862,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["visible",{"_index":938,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["void",{"_index":113,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["warning",{"_index":361,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warninglimit",{"_index":1596,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["weak",{"_index":1332,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["wether",{"_index":753,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["window.innerwidth",{"_index":1813,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["window:keydown.escape",{"_index":66,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["window:keydown.escape(event",{"_index":102,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["window:resize",{"_index":1781,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["window:resize(e",{"_index":1788,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["within",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{}}}],["wordmark",{"_index":978,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":1508,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["writevalue",{"_index":574,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue(formvalue",{"_index":1502,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["writevalue(obj",{"_index":1285,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["writevalue(value",{"_index":1418,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["x",{"_index":1564,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["x2",{"_index":1376,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["xmark",{"_index":344,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":1109,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["year/day",{"_index":1198,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["years",{"_index":1175,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["yearselect",{"_index":1139,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["yearunknown",{"_index":1130,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["yes",{"_index":761,"title":{},"body":{"components/DropdownComponent.html":{},"components/HiddenNavComponent.html":{}}}],["yyyy",{"_index":1115,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":1669,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AutocompleteComponent.html":{"url":"components/AutocompleteComponent.html","title":"component - AutocompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-autocomplete\n            \n\n\n\n\n            \n                templateUrl\n                ./autocomplete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addHover\n                            \n                            \n                                differ\n                            \n                            \n                                emptyResults\n                            \n                            \n                                hideDropdown\n                            \n                            \n                                    Optional\n                                inputComponent\n                            \n                            \n                                    Optional\n                                inputValue\n                            \n                            \n                                isComponentClicked\n                            \n                            \n                                isFocusInsideComponent\n                            \n                            \n                                originalOptions\n                            \n                            \n                                selectedOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkActive\n                            \n                            \n                                checkDuplicated\n                            \n                            \n                                clickInside\n                            \n                            \n                                clickout\n                            \n                            \n                                filterList\n                            \n                            \n                                handleKeyDown\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                    Public\n                                removeAllChipItems\n                            \n                            \n                                removeChipItem\n                            \n                            \n                                returnOptionsToDefault\n                            \n                            \n                                    Public\n                                selectAll\n                            \n                            \n                                    Public\n                                selectIndex\n                            \n                            \n                                    Public\n                                toggleDropDown\n                            \n                            \n                                    Public\n                                toggleDropDownKey\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                hintText\n                            \n                            \n                                limit\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                savedSelectedOptions\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectValueChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                document:click\n                            \n                            \n                                window:keydown.escape\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(differs: KeyValueDiffers)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                        KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `Hint Text`\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        limit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `Add Name`\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         IOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        savedSelectedOptions\n                    \n                \n                \n                    \n                        Type :         IOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `Title`\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectValueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:45\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:75\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \ndocument:click()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:97\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:keydown.escape\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keydown.escape(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:63\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkActive(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkDuplicated\n                        \n                    \n                \n            \n            \n                \ncheckDuplicated(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickInside\n                        \n                    \n                \n            \n            \n                \nclickInside(event: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickout\n                        \n                    \n                \n            \n            \n                \nclickout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click')\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterList\n                        \n                    \n                \n            \n            \n                \nfilterList(filterValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \nhandleKeyDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:keydown.escape', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \nonMouseEnter()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeAllChipItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllChipItems()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeChipItem\n                        \n                    \n                \n            \n            \n                \nremoveChipItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnOptionsToDefault\n                        \n                    \n                \n            \n            \n                \nreturnOptionsToDefault()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectAll()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleDropDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleDropDown()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleDropDownKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleDropDownKey(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueChange\n                        \n                    \n                \n            \n            \n                \nvalueChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addHover\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        differ\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValueDiffer\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        inputComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InputComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(InputComponent, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        inputValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isComponentClicked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFocusInsideComponent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewChild\n} from '@angular/core';\nimport { InputComponent } from '../../form-components/input/input.component';\n//TODO: This should be changed. Ideally the component doesn't need to know about these, and can just\n//add them in using the template.\nimport { ChipItemComponent } from '../chips/chip-item/chip-item.component';\n\ninterface IOption {\n  //Changed: Interfaces should ALWAYS start with 'I'.\n  text: string;\n  value: string;\n}\n\n@Component({\n  selector: 'lib-autocomplete',\n  templateUrl: './autocomplete.component.html'\n})\nexport class AutocompleteComponent implements OnInit, DoCheck {\n  @ViewChild(InputComponent, { static: true })\n  inputComponent?: InputComponent;\n\n  //TODO: Change this to a config\n  @Input() options: IOption[] = [];\n  @Input() title = `Title`;\n  @Input() hintText = `Hint Text`;\n  @Input() name = `Add Name`;\n  @Input() error = false;\n  @Input() limit = 0;\n  @Output() selectValueChange = new EventEmitter();\n  @Input() savedSelectedOptions: IOption[] = [];\n\n  selectedOptions: IOption[] = [];\n  originalOptions: IOption[] = [];\n  inputValue?: string;\n  hideDropdown = true;\n  isFocusInsideComponent = false;\n  isComponentClicked = false;\n  addHover = false;\n  emptyResults = false;\n\n  differ: KeyValueDiffer;\n  constructor(private differs: KeyValueDiffers) {\n    this.differ = this.differs.find({}).create();\n  }\n\n  @HostListener('window:keydown.escape', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (this.hideDropdown === false || this.options.length > 0) {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  clickInside(event: { target: HTMLInputElement }) {\n    const target = event.target;\n    if (\n      this.hideDropdown === true &&\n      target.type === `text` &&\n      this.options.length > 0\n    ) {\n      this.isFocusInsideComponent = true;\n      this.isComponentClicked = true;\n      this.toggleDropDown();\n      this.addHover = true;\n    } else if (\n      target.classList.contains('select-target') ||\n      target.classList.contains(`selected`)\n    ) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.toggleDropDown();\n    }\n  }\n\n  @HostListener('document:click')\n  clickout() {\n    if (!this.isFocusInsideComponent && this.isComponentClicked) {\n      this.toggleDropDown();\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n    }\n    this.isFocusInsideComponent = false;\n  }\n\n  onMouseEnter() {\n    this.addHover = false;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this);\n    if (change) {\n      change.forEachChangedItem((item) => {\n        if (item.key === `options`) {\n          this.selectValueChange.emit(this.selectedOptions);\n        }\n      });\n    }\n  }\n\n  valueChange(event: any) {\n    this.filterList(event);\n  }\n\n  filterList(filterValue: any) {\n    if (filterValue.length  {\n        return value.text.toLowerCase().includes(filterValue.toLowerCase());\n      });\n      this.options = filteredOptions.slice(0);\n      if (this.options.length === 0) {\n        this.emptyResults = true;\n      } else {\n        this.emptyResults = false;\n      }\n    }\n  }\n\n  public checkActive(value: string): boolean {\n    for (const selectedOption of this.selectedOptions) {\n      if (selectedOption.value === value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  returnOptionsToDefault() {\n    this.emptyResults = false;\n    this.options = this.originalOptions.slice(0);\n  }\n\n  public toggleDropDown() {\n    this.hideDropdown = !this.hideDropdown;\n    this.inputComponent?.focusInput(this.hideDropdown);\n  }\n\n  public toggleDropDownKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.toggleDropDown();\n    }\n  }\n\n  removeChipItem(index: number) {\n    this.selectedOptions.splice(index, 1);\n    this.returnOptionsToDefault();\n  }\n\n  public removeAllChipItems() {\n    this.selectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n\n  public selectAll() {\n    for (const option of this.options) {\n      this.selectedOptions.push(option);\n    }\n    this.returnOptionsToDefault();\n  }\n\n  public selectIndex(index: number) {\n    if (this.limit !== 0 && this.selectedOptions.length >= this.limit) {\n      return;\n    } else {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      if (this.checkDuplicated(index) === false) {\n        this.selectedOptions.push(this.options[index]);\n      }\n    }\n  }\n\n  checkDuplicated(index: number) {\n    return this.selectedOptions.some((element: { value: string }) => {\n      if (element.value === this.options[index].value) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedOptions = [];\n    this.originalOptions = this.options.slice(0);\n    this.selectedOptions = this.savedSelectedOptions;\n    this.savedSelectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n}\n\n    \n\n    \n        \n  \n     -->\n    \n     -->\n  \n\n  \n    \n      \n        {{ 'AllOptionsForAutocomplete' | translate }} {{ title | translate }}s\n      \n    \n    \n      {{ option['text'] }}\n    \n    \n      {{ 'NoResults' | translate }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       -->         -->                      {{ \\'AllOptionsForAutocomplete\\' | translate }} {{ title | translate }}s                    {{ option[\\'text\\'] }}              {{ \\'NoResults\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-banner\n            \n\n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconConfig\n                            \n                            \n                                lineVisible\n                            \n                            \n                                textId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                eventHandler\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleLine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaDissmissible\n                            \n                            \n                                config\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaDissmissible\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'close'\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IBannerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:56\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:59\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        eventHandler\n                        \n                    \n                \n            \n            \n                \neventHandler(emitValue: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emitValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLine\n                        \n                    \n                \n            \n            \n                \ntoggleLine()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      \n    \n    \n      \n        \n          \n            {{ config?.title || '' | translate }}\n          \n          \n        \n      \n      \n        \n          {{ cta.text | translate }}\n          {{ cta.text | translate }}\n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            {{ config?.title || \\'\\' | translate }}                                                          {{ cta.text | translate }}          {{ cta.text | translate }}                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-breadcrumb\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLinks\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, standalone: StandAloneFunctions)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        standalone\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IBreadcrumbConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createLinks\n                        \n                    \n                \n            \n            \n                \ncreateLinks()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:66\n                \n            \n\n\n            \n                \n                    Create href or routerLinks\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ILinkComponentConfig } from './link/link.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\n\nexport enum LinkType {\n  href = 'href',\n  routerLink = 'routerLink'\n}\n\nexport interface IBreadcrumbConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof LinkType;\n  // Translation key of base url segment\n  baseUrlKey: string;\n  // The mid-layer navigation to the ancestor links, the previous pages that lead to users to the child page\n  links?: ILinkComponentConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n  @Input() config: IBreadcrumbConfig = {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  };\n  baseUrl = '';\n  constructor(\n    private translate: TranslateService,\n    private standalone: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.createLinks();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.config?.links && this.config?.links.length > 0) {\n      if (this.config.type == 'routerLink') {\n        this.config?.links.forEach((link) => {\n          delete link.href;\n        });\n      } else {\n        this.config?.links.forEach((link) => {\n          delete link.routerLink;\n        });\n      }\n    }\n    this.createLinks();\n  }\n\n  /**\n   * Create href or routerLinks\n   */\n  createLinks() {\n    this.baseUrl = this.standalone.getBaseUrl('', this.config.baseUrlKey);\n    if (this.config.links && this.config.links.length > 1) {\n      let prev: string | undefined;\n      this.config?.links.forEach((link, i) => {\n        if (i === 0) {\n          link[this.config.type] = this.baseUrl;\n          prev = link[this.config.type];\n        } else if (link.linkKey) {\n          link[this.config.type] =\n            prev + this.translate.instant(link.linkKey) + '/';\n          prev = link[this.config.type];\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n    \n    \n      \n      {{ link.text }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{ link.text }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbLinkComponent.html":{"url":"components/BreadcrumbLinkComponent.html","title":"component - BreadcrumbLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-breadcrumb-link\n            \n\n\n\n\n            \n                templateUrl\n                ./link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ILinkComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    text: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport interface ILinkComponentConfig {\n  text: string;\n  linkKey?: string;\n  href?: string;\n  routerLink?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb-link',\n  templateUrl: './link.component.html'\n})\nexport class BreadcrumbLinkComponent {\n  @Input() config: ILinkComponentConfig = {\n    text: ''\n  };\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  {{ config.text | translate }}\n\n\n  {{\n    config.text | translate\n  }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config.text | translate }}  {{    config.text | translate  }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/button/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-button\n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                category\n                            \n                            \n                                color\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                iconDirection\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnAction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n}\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconDirection\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:60\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickEvent\n                        \n                    \n                \n            \n            \n                \nclickEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum ButtonCategories {\n  primary = 'primary',\n  secondary = 'secondary',\n  plain = 'plain'\n}\n\nexport enum ButtonSize {\n  small = 'small',\n  large = 'large'\n}\n\nexport enum ButtonColor {\n  critical = 'critical',\n  CTA = 'CTA'\n}\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n  left = 'left',\n  right = 'right'\n}\n\nexport interface IButtonConfig {\n    id: string;\n    category?: keyof typeof ButtonCategories;\n    size?: keyof typeof ButtonSize;\n    color?: keyof typeof ButtonColor;\n    ariaLabel?: string;\n    disabled?: boolean;\n    icon?: string;\n    iconDirection?: keyof typeof ButtonIconDirection;\n    tabIndex?: number;\n};\n\n@Component({\n  selector: 'ircc-cl-lib-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n@Input() config: IButtonConfig = {\n    id: '',\n};\n    @Input() id = '';\n    @Input() category?: keyof typeof ButtonCategories;\n    @Input() size?: keyof typeof ButtonSize;\n    @Input() color?: keyof typeof ButtonColor;\n    @Input() ariaLabel?: string;\n    @Input() disabled?: boolean;\n    @Input() icon?: string;\n    @Input() iconDirection?: keyof typeof ButtonIconDirection;\n    @Input() tabIndex?: number;\n\n  @Output() btnAction: EventEmitter = new EventEmitter();\n\n    ngOnInit() {\n        (this.id !== '') ? this.config.id = this.id : undefined;\n        (this.category === undefined) ? undefined : this.config.category = this.category;\n        (this.size === undefined) ? undefined : this.config.size = this.size;\n        (this.color === undefined) ? undefined : this.config.color = this.color;\n        (this.ariaLabel !== undefined) ? this.config.ariaLabel = this.ariaLabel : undefined;\n        (this.disabled !== undefined) ? this.config.disabled = this.disabled : undefined;\n        (this.tabIndex !== undefined) ? this.config.tabIndex = this.tabIndex : undefined;\n        if (this.icon || this.config.icon) {\n            this.config.icon = this.icon ? this.icon : this.config.icon;\n            this.config.iconDirection = this.iconDirection? this.iconDirection : this.config.iconDirection;\n            this.config.iconDirection = this.config.iconDirection ? this.config.iconDirection : 'left'\n        } else {\n            this.config.icon = undefined;\n            this.config.iconDirection = undefined;\n        }\n    }\n\n\n  clickEvent(id: string) {\n    this.btnAction.emit(id);\n  }\n}\n\n    \n\n    \n           \n        \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                           '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CheckboxComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                isDisabled\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                getErrorState\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ICheckBoxComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:160\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorState\n                        \n                    \n                \n            \n            \n                \ngetErrorState()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:191\n                \n            \n\n\n            \n                \n                    Return error state from FormGroup, must be touched & invalid\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:174\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:94\n                \n            \n\n\n            \n                \n                    This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  label?: string;\n  required?: boolean;\n  size?: keyof typeof DSSizes | DSSizes;\n  mixed?: true;\n  disableFocus?: boolean; //Default is true\n  inlineLabel?: string;\n  inlineLabelBold?: boolean;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  helpText?: string;\n  customErrorText?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  isDisabled = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorAria = '';\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {};\n  onChange = () => {};\n\n  writeValue(): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n    if (!this.config?.size) this.config.size = DSSizes.large;\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        \n      \n      {{ config.inlineLabel || '' | translate }}\n      \n    \n    \n      \n        {{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}\n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{ config.inlineLabel || \\'\\' | translate }}                            {{          errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'        }}                                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipItemComponent.html":{"url":"components/ChipItemComponent.html","title":"component - ChipItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-chip-item\n            \n\n\n\n\n            \n                templateUrl\n                ./chip-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onEnterKeyPress\n                            \n                            \n                                onIconClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconClickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipContent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:8\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        iconClickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onEnterKeyPress\n                        \n                    \n                \n            \n            \n                \nonEnterKeyPress()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIconClick\n                        \n                    \n                \n            \n            \n                \nonIconClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-item',\n  templateUrl: './chip-item.component.html'\n})\nexport class ChipItemComponent {\n  @Input() chipContent?: string;\n  @Output() iconClickEvent = new EventEmitter();\n\n  constructor() {}\n\n  onIconClick() {\n    this.iconClickEvent.emit();\n  }\n\n  onEnterKeyPress() {\n    this.iconClickEvent.emit();\n  }\n}\n\n    \n\n    \n        \n  {{ chipContent || '' }}\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ chipContent || \\'\\' }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChipItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipListComponent.html":{"url":"components/ChipListComponent.html","title":"component - ChipListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-chip-list\n            \n\n\n\n\n            \n                templateUrl\n                ./chip-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chipContentText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeChipItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipListChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:8\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chipListChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeChipItem\n                        \n                    \n                \n            \n            \n                \nremoveChipItem(chipIdx: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chipIdx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chipContentText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-list',\n  templateUrl: './chip-list.component.html'\n})\nexport class ChipListComponent implements OnInit {\n  @Input() chipList?: string[];\n  @Output() chipListChange = new EventEmitter>();\n  chipContentText?: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  removeChipItem(chipIdx: number) {\n    this.chipList?.splice(chipIdx, 1);\n    this.chipListChange.emit(this.chipList);\n  }\n\n  onSubmit() {\n    if (this.chipContentText) {\n      this.chipList?.push(this.chipContentText);\n      this.chipListChange.emit(this.chipList);\n      this.chipContentText = '';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChipListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-dropdown\n            \n\n\n\n\n            \n                templateUrl\n                ./drop-down.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                flyoutConfig\n                            \n                            \n                                selected\n                            \n                            \n                                showPlaceholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFlyoutFocus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectedOption\n                            \n                            \n                                toggleFlyout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                placeholderText\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IDropdownConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearFlyoutFocus\n                        \n                    \n                \n            \n            \n                \nclearFlyoutFocus()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:95\n                \n            \n\n\n            \n                \n                    Clear the flyout active state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOption\n                        \n                    \n                \n            \n            \n                \nselectedOption(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFlyout\n                        \n                    \n                \n            \n            \n                \ntoggleFlyout(status: boolean, e?: FocusEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:84\n                \n            \n\n\n            \n                \n                    function receives a truthy value which determines wether it closes or opens,\nbut also looks for FocusEvent to check if flyout is being interacted with\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n                                    \n                                            FocusEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        flyoutConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFlyoutConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from \"../../../shared/constants/jl-components.constants\";\nimport { ButtonCategories } from '../button/button.component';\nimport { IIconButtonIconConfig } from '../icon-button/icon-button.component';\nimport { IFlyoutConfig } from '../flyout/flyout.component';\nexport interface IDropdownConfig {\n    id: string;\n    label?: string;\n    size?: keyof typeof DSSizes;\n    category?: keyof typeof ButtonCategories;\n    placeholderText?: string;\n    disabled?: boolean;\n    icon?: IIconButtonIconConfig;\n    flyout?: IFlyoutConfig;\n}\n@Component({\n  selector: 'ircc-cl-lib-dropdown',\n  templateUrl: './drop-down.component.html'\n})\nexport class DropdownComponent implements OnInit {\n\n  @Input() config: IDropdownConfig = {\n    id: ''\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string = '';\n  @Input() placeholderText?: string = '';\n  @Input() disabled?: boolean;\n  @Input() category?: keyof typeof ButtonCategories;\n\n  showPlaceholder: boolean = false;\n  selected: boolean = false;\n\n  flyoutConfig : IFlyoutConfig = {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n\n  ngOnInit() {\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.placeholderText !== '')\n      this.config.placeholderText = this.placeholderText;\n    if (this.disabled !== undefined) this.config.disabled = this.disabled;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n\n    if (!this.config.category) this.config.category = ButtonCategories.primary;\n\n    if (!this.config.label || this.config.label.trim().length == 0) {\n      if (!this.config.placeholderText) {\n        this.config.placeholderText = 'Default';\n      }\n      this.showPlaceholder = true;\n    }\n\n    if(this.config.flyout) this.flyoutConfig = this.config.flyout;\n  }\n\n  selectedOption(e: Event) {\n    //if it receives it's event info it selects the index - if not closes flyout\n    if(e){\n      this.showPlaceholder = false;\n      this.config.label = e.toString();\n      this.selected = !this.selected;\n      this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }else{\n      this.toggleFlyout(false);\n    }\n  }\n\n  /**\n   * function receives a truthy value which determines wether it closes or opens, \n   * but also looks for FocusEvent to check if flyout is being interacted with\n   * @param status \n   * @param e \n   */\n  toggleFlyout(status: boolean, e?: FocusEvent) {\n    let target = e?.relatedTarget as HTMLElement;\n    if(!target?.id.includes(this.config.id) || !e){\n      this.selected = status;\n      !status && this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }\n  }\n\n  /**\n   * Clear the flyout active state\n   */\n  clearFlyoutFocus() {\n    if (this.config?.flyout?.options) {\n      this.config.flyout.options.forEach(i => {\n        i.active = false;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n        {{config.placeholderText}}\n        {{config.label}}\n      \n      \n        \n      \n      \n        \n      \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{config.placeholderText}}        {{config.label}}                                                  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/error/error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                portInputValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                errorLOV\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IErrorComponentConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLOV\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         IErrorIconConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        portInputValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    portInputValues()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    {{ config?.errorLOV || '' | translate }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ config?.errorLOV || \\'\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlyoutComponent.html":{"url":"components/FlyoutComponent.html","title":"component - FlyoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlyoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-flyout\n            \n\n\n\n\n            \n                templateUrl\n                ./flyout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                a11yText\n                            \n                            \n                                optionContainers\n                            \n                            \n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearOptions\n                            \n                            \n                                highlightIndex\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onArrowDown\n                            \n                            \n                                onArrowUp\n                            \n                            \n                                onEnter\n                            \n                            \n                                optionSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                id\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.arrowdown\n                            \n                            \n                                document:keydown.arrowup\n                            \n                            \n                                document:keydown.enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IFlyoutConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         IFlyoutOptionConfig[]\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :      | number\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown.arrowdown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.arrowdown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:49\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown.arrowup\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.arrowup(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:64\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown.enter\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.enter(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:84\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearOptions\n                        \n                    \n                \n            \n            \n                \nclearOptions()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlightIndex\n                        \n                    \n                \n            \n            \n                \nhighlightIndex(el_id: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el_id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onArrowDown\n                        \n                    \n                \n            \n            \n                \nonArrowDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.arrowdown', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onArrowUp\n                        \n                    \n                \n            \n            \n                \nonArrowUp(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.arrowup', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnter\n                        \n                    \n                \n            \n            \n                \nonEnter(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.enter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionSelected\n                        \n                    \n                \n            \n            \n                \noptionSelected(i: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        a11yText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionContainers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Default value : new QueryList\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren('option')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter, HostListener, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { IFlyoutOptionConfig } from '../flyout-option/flyout-option.component';\n\nexport enum IFlyoutSelectTypes {\n  single = 'single',\n  multi = 'multi'\n}\n\nexport interface IFlyoutConfig {\n  id: string,\n  options?: IFlyoutOptionConfig[],\n  disabled?: boolean\n  selection?: [] | number,\n  type?: keyof typeof IFlyoutSelectTypes\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout',\n  templateUrl: './flyout.component.html'\n})\nexport class FlyoutComponent implements OnInit {\n  @ViewChildren('option') optionContainers: QueryList = new QueryList;\n\n  @Input() config : IFlyoutConfig = {\n    id: ''\n  }\n  @Input() id? : string;\n  @Input() options?: IFlyoutOptionConfig[];\n  @Input() disabled?: boolean;\n  @Input() selection?: [] | number;\n  @Input() type?: keyof typeof IFlyoutSelectTypes;\n\n  //TODO: Must add the other config parameters\n  @Output() isSelected = new EventEmitter();\n\n  selectedIndex : number = -1;\n  a11yText : string = '';\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'single';\n    if(this.id) this.config.id = this.id;\n    if(this.options) this.config.options = this.options;\n    if(this.disabled) this.config.disabled = this.disabled;\n    if(this.selection) this.config.selection = this.selection;\n    if(this.type) this.config.type = this.type;\n  };\n\n  @HostListener('document:keydown.arrowdown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options.slice(this.selectedIndex + 1).forEach((option, index) => {\n        if (!foundClickable && option.clickable !== false) {\n          this.selectedIndex += index + 1;\n          this.highlightIndex(option.id);\n          foundClickable = true;\n        }\n      });\n    }\n  }\n\n  @HostListener('document:keydown.arrowup', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(0, this.selectedIndex)\n        .reverse()\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex -= index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n      // Ensure selectedIndex does not fall below 0\n      this.selectedIndex = Math.max(this.selectedIndex, 0);\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    event.preventDefault();\n    //if the index hasn't changes through arrow navigation, emits our event but lets the parent know nothing was selected\n    this.selectedIndex != -1 ? this.optionSelected(this.selectedIndex) : this.isSelected.emit(null);\n  }\n\n  //takes in the active index from HostListeners and sets the config option to active state which triggers styling\n  highlightIndex(el_id: any) {\n    if(el_id){\n      this.config.options?.forEach(option => {\n        if(option.id === el_id){\n          option.active = true;\n          this.optionContainers.toArray()[this.selectedIndex]?.nativeElement?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n          this.a11yText = option.value;\n          //updates a11yText to indicate currently selected item if scrolling through flyout again\n          if(option.selected) this.a11yText += ' currently selected'; //translation?\n        }else{\n          option.active = false;\n        }\n      });\n    }\n  }\n\n  //clears all selections by setting the option.selected to false\n  clearOptions(){\n    this.config?.options?.forEach(option => {\n      option.selected = false;\n    });\n  }\n\n  //function takes in index value of current active option and selects it\n  optionSelected(i: number){\n    if(this.config.options && !this.config.options[i].selected && this.config.options[i].clickable){\n      //setup for future multi select feature\n      this.config.type !== 'multi' ? this.clearOptions() : /*this.config.selection = [].push(this.config.options[i]);*/console.log('MULTI');\n      this.config.options[i].selected = true;\n      //emits the value of the selected index so it's visible to the parent\n      this.isSelected.emit(this.config.options[i].value);\n      }\n  }\n\n};\n\n    \n\n    \n        \n  \n    \n  \n\n{{ a11yText || '' | translate }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ a11yText || \\'\\' | translate }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlyoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlyoutOptionComponent.html":{"url":"components/FlyoutOptionComponent.html","title":"component - FlyoutOptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlyoutOptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-flyout-option\n            \n\n\n\n\n            \n                templateUrl\n                ./flyout-option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IFlyoutOptionConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    value: 'Blank label'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nexport enum IFlyoutOptionType {\n  text = 'text',\n  checkbox = 'checkbox',\n  dropdown = 'dropdown',\n  line = 'line',\n  heading = 'heading'\n}\n\nexport interface IFlyoutOptionConfig {\n  id?: string,\n  value: string,\n  selected?: boolean,\n  active?: boolean,\n  disabled?: boolean,\n  type?: keyof typeof IFlyoutOptionType,\n  clickable?: boolean\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout-option',\n  templateUrl: './flyout-option.component.html'\n})\nexport class FlyoutOptionComponent implements OnInit {\n\n  @Input() config : IFlyoutOptionConfig = {\n    id: '',\n    value: 'Blank label'\n  }\n\n  @Input() id? : string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'text';\n    if((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false) this.config.clickable = true;\n    if(this.id) this.config.id = this.id;\n  };\n\n};\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{ config.value || '' | translate }}\n        \n          \n        \n      \n    \n  \n  \n    \n      {{ config.value || '' | translate }}\n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ config.value || \\'\\' | translate }}                                                  {{ config.value || \\'\\' | translate }}                          '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlyoutOptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-footer\n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                altImage\n                            \n                            \n                                aria\n                            \n                            \n                                imageURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        altImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const GOV_LOGO_FOOTER =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/wmms-blk.svg';\n\nexport const GOV_LOGO_ARIA_LABEL_ENGLISH = 'Symbol of the Government of Canada';\nexport const GOV_LOGO_ARIA_LABEL_FRENCH = 'Symbole du gouvernement du Canada';\n\nexport const GOV_LOGO_ALT_TEXT_EN = 'Canada wordmark';\nexport const GOV_LOGO_ALT_TEXT_FR = 'FR Canada wordmark';\n\n@Component({\n  selector: 'ircc-cl-lib-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent {\n  @Input() id = '';\n\n  imageURL = '';\n  altImage = '';\n  aria = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.imageURL = GOV_LOGO_FOOTER;\n      this.aria = GOV_LOGO_ARIA_LABEL_ENGLISH;\n      this.altImage = GOV_LOGO_ALT_TEXT_EN;\n    } else {\n      this.imageURL = GOV_LOGO_FOOTER;\n      this.aria = GOV_LOGO_ARIA_LABEL_FRENCH;\n      this.altImage = GOV_LOGO_ALT_TEXT_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-header\n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aria\n                            \n                            \n                                govCanadaAlt\n                            \n                            \n                                govCanadaLink\n                            \n                            \n                                imageURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:25\n                            \n                        \n                \n                    \n                        This is the ID of the header component. Will be applied as the ID of the header Element within the custom element.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:36\n                \n            \n\n\n            \n                \n                    ngOnInit checks for current url Language and subscribes to changes. Appropriate translation will be pulled as a result.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:50\n                \n            \n\n\n            \n                \n                    setLang(lang: string) accepts and string value which currently needs to be 'en' or 'en-US' to trigger English translations otherwise\nfrench translations will be triggered.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        govCanadaAlt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        govCanadaLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const ENGLISH_BANNER_URL =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-en.svg';\nexport const FRENCH_BANNER_URL =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-fr.svg';\nexport const HEADER_IMG_LINK_EN = 'https://www.canada.ca/en.html';\nexport const HEADER_IMG_LINK_FR = 'https://www.canada.ca/fr.html';\nexport const HEADER_LINK_ATL_EN = 'Government of Canada logo';\nexport const HEADER_LINK_ALT_FR = 'Gouvernement du Canada logo';\nexport const CANADA_LOGO_ARIA_LABEL_ENGLISH =\n  'Symbol of the Government of Canada';\nexport const CANADA_LOGO_ARIA_LABEL_FRENCH =\n  'Symbole du gouvernement du Canada';\n\n@Component({\n  selector: 'ircc-cl-lib-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {\n  /**\n   * This is the ID of the header component. Will be applied as the ID of the header Element within the custom element.\n   */\n  @Input() id = '';\n  imageURL = '';\n  aria = '';\n  govCanadaLink = '';\n  govCanadaAlt = '';\n\n  constructor(private translate: TranslateService) {}\n\n  /**\n  * ngOnInit checks for current url Language and subscribes to changes. Appropriate translation will be pulled as a result.\n  */\n  ngOnInit() {\n    /**\n     * testing comment inside ngOnInit()\n     */\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  /**\n  * setLang(lang: string) accepts and string value which currently needs to be 'en' or 'en-US' to trigger English translations otherwise\n  * french translations will be triggered.\n  */\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.imageURL = ENGLISH_BANNER_URL;\n      this.aria = CANADA_LOGO_ARIA_LABEL_ENGLISH;\n      this.govCanadaLink = HEADER_IMG_LINK_EN;\n      this.govCanadaAlt = HEADER_LINK_ATL_EN;\n    } else {\n      this.imageURL = FRENCH_BANNER_URL;\n      this.aria = CANADA_LOGO_ARIA_LABEL_FRENCH;\n      this.govCanadaLink = HEADER_IMG_LINK_FR;\n      this.govCanadaAlt = HEADER_LINK_ALT_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenNavComponent.html":{"url":"components/HiddenNavComponent.html","title":"component - HiddenNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HiddenNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-hidden-nav\n            \n\n\n\n\n            \n                templateUrl\n                ./hidden-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleKeyDown\n                            \n                            \n                                scrollToAnchor\n                            \n                            \n                                showNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IHiddenNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.key' \n                \n            \n            \n                \nkeydown(key: string, link?: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:33\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \nhandleKeyDown(key: string, link?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('keydown', ['$event.key'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToAnchor\n                        \n                    \n                \n            \n            \n                \nscrollToAnchor(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNav\n                        \n                    \n                \n            \n            \n                \nshowNav()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ link.title }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ link.title }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBannerConfig.html":{"url":"interfaces/IBannerConfig.html","title":"interface - IBannerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBannerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaDissmissible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissible\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rounded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaDissmissible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaDissmissible:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cta:         ICTAConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICTAConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rounded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rounded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBreadcrumbConfig.html":{"url":"interfaces/IBreadcrumbConfig.html","title":"interface - IBreadcrumbConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBreadcrumbConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            baseUrlKey\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrlKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrlKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         ILinkComponentConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILinkComponentConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ILinkComponentConfig } from './link/link.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\n\nexport enum LinkType {\n  href = 'href',\n  routerLink = 'routerLink'\n}\n\nexport interface IBreadcrumbConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof LinkType;\n  // Translation key of base url segment\n  baseUrlKey: string;\n  // The mid-layer navigation to the ancestor links, the previous pages that lead to users to the child page\n  links?: ILinkComponentConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n  @Input() config: IBreadcrumbConfig = {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  };\n  baseUrl = '';\n  constructor(\n    private translate: TranslateService,\n    private standalone: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.createLinks();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.config?.links && this.config?.links.length > 0) {\n      if (this.config.type == 'routerLink') {\n        this.config?.links.forEach((link) => {\n          delete link.href;\n        });\n      } else {\n        this.config?.links.forEach((link) => {\n          delete link.routerLink;\n        });\n      }\n    }\n    this.createLinks();\n  }\n\n  /**\n   * Create href or routerLinks\n   */\n  createLinks() {\n    this.baseUrl = this.standalone.getBaseUrl('', this.config.baseUrlKey);\n    if (this.config.links && this.config.links.length > 1) {\n      let prev: string | undefined;\n      this.config?.links.forEach((link, i) => {\n        if (i === 0) {\n          link[this.config.type] = this.baseUrl;\n          prev = link[this.config.type];\n        } else if (link.linkKey) {\n          link[this.config.type] =\n            prev + this.translate.instant(link.linkKey) + '/';\n          prev = link[this.config.type];\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IButtonConfig.html":{"url":"interfaces/IButtonConfig.html","title":"interface - IButtonConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/button/button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconDirection\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tabIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconDirection:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tabIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tabIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum ButtonCategories {\n  primary = 'primary',\n  secondary = 'secondary',\n  plain = 'plain'\n}\n\nexport enum ButtonSize {\n  small = 'small',\n  large = 'large'\n}\n\nexport enum ButtonColor {\n  critical = 'critical',\n  CTA = 'CTA'\n}\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n  left = 'left',\n  right = 'right'\n}\n\nexport interface IButtonConfig {\n    id: string;\n    category?: keyof typeof ButtonCategories;\n    size?: keyof typeof ButtonSize;\n    color?: keyof typeof ButtonColor;\n    ariaLabel?: string;\n    disabled?: boolean;\n    icon?: string;\n    iconDirection?: keyof typeof ButtonIconDirection;\n    tabIndex?: number;\n};\n\n@Component({\n  selector: 'ircc-cl-lib-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n@Input() config: IButtonConfig = {\n    id: '',\n};\n    @Input() id = '';\n    @Input() category?: keyof typeof ButtonCategories;\n    @Input() size?: keyof typeof ButtonSize;\n    @Input() color?: keyof typeof ButtonColor;\n    @Input() ariaLabel?: string;\n    @Input() disabled?: boolean;\n    @Input() icon?: string;\n    @Input() iconDirection?: keyof typeof ButtonIconDirection;\n    @Input() tabIndex?: number;\n\n  @Output() btnAction: EventEmitter = new EventEmitter();\n\n    ngOnInit() {\n        (this.id !== '') ? this.config.id = this.id : undefined;\n        (this.category === undefined) ? undefined : this.config.category = this.category;\n        (this.size === undefined) ? undefined : this.config.size = this.size;\n        (this.color === undefined) ? undefined : this.config.color = this.color;\n        (this.ariaLabel !== undefined) ? this.config.ariaLabel = this.ariaLabel : undefined;\n        (this.disabled !== undefined) ? this.config.disabled = this.disabled : undefined;\n        (this.tabIndex !== undefined) ? this.config.tabIndex = this.tabIndex : undefined;\n        if (this.icon || this.config.icon) {\n            this.config.icon = this.icon ? this.icon : this.config.icon;\n            this.config.iconDirection = this.iconDirection? this.iconDirection : this.config.iconDirection;\n            this.config.iconDirection = this.config.iconDirection ? this.config.iconDirection : 'left'\n        } else {\n            this.config.icon = undefined;\n            this.config.iconDirection = undefined;\n        }\n    }\n\n\n  clickEvent(id: string) {\n    this.btnAction.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICTAConfig.html":{"url":"interfaces/ICTAConfig.html","title":"interface - ICTAConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICTAConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            btnConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linkConfig\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        btnConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        btnConfig:         IButtonConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IButtonConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICheckBoxComponentConfig.html":{"url":"interfaces/ICheckBoxComponentConfig.html","title":"interface - ICheckBoxComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICheckBoxComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customErrorText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFocus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            helpText\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inlineLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inlineLabelBold\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mixed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customErrorText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customErrorText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFocus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helpText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helpText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inlineLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineLabelBold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inlineLabelBold:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixed:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:      | DSSizes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | DSSizes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  label?: string;\n  required?: boolean;\n  size?: keyof typeof DSSizes | DSSizes;\n  mixed?: true;\n  disableFocus?: boolean; //Default is true\n  inlineLabel?: string;\n  inlineLabelBold?: boolean;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  helpText?: string;\n  customErrorText?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  isDisabled = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorAria = '';\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {};\n  onChange = () => {};\n\n  writeValue(): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n    if (!this.config?.size) this.config.size = DSSizes.large;\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerConfig.html":{"url":"interfaces/IDatePickerConfig.html","title":"interface - IDatePickerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unknownDateToggle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:         IDatePickerErrorMessages\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatePickerErrorMessages\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unknownDateToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unknownDateToggle:         IDatePickerUnknownDateToggleConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatePickerUnknownDateToggleConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerDropDownConfigs.html":{"url":"interfaces/IDatePickerDropDownConfigs.html","title":"interface - IDatePickerDropDownConfigs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerDropDownConfigs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            day\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerErrorMessages.html":{"url":"interfaces/IDatePickerErrorMessages.html","title":"interface - IDatePickerErrorMessages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerErrorMessages\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            day\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            general\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            month\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        general\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        general:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerUnknownDateToggleConfig.html":{"url":"interfaces/IDatePickerUnknownDateToggleConfig.html","title":"interface - IDatePickerUnknownDateToggleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerUnknownDateToggleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dayUnknown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            monthUnknown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            yearUnknown\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dayUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monthUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monthUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yearUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDropdownConfig.html":{"url":"interfaces/IDropdownConfig.html","title":"interface - IDropdownConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDropdownConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flyout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholderText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flyout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flyout:         IFlyoutConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFlyoutConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IIconButtonIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IIconButtonIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholderText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from \"../../../shared/constants/jl-components.constants\";\nimport { ButtonCategories } from '../button/button.component';\nimport { IIconButtonIconConfig } from '../icon-button/icon-button.component';\nimport { IFlyoutConfig } from '../flyout/flyout.component';\nexport interface IDropdownConfig {\n    id: string;\n    label?: string;\n    size?: keyof typeof DSSizes;\n    category?: keyof typeof ButtonCategories;\n    placeholderText?: string;\n    disabled?: boolean;\n    icon?: IIconButtonIconConfig;\n    flyout?: IFlyoutConfig;\n}\n@Component({\n  selector: 'ircc-cl-lib-dropdown',\n  templateUrl: './drop-down.component.html'\n})\nexport class DropdownComponent implements OnInit {\n\n  @Input() config: IDropdownConfig = {\n    id: ''\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string = '';\n  @Input() placeholderText?: string = '';\n  @Input() disabled?: boolean;\n  @Input() category?: keyof typeof ButtonCategories;\n\n  showPlaceholder: boolean = false;\n  selected: boolean = false;\n\n  flyoutConfig : IFlyoutConfig = {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n\n  ngOnInit() {\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.placeholderText !== '')\n      this.config.placeholderText = this.placeholderText;\n    if (this.disabled !== undefined) this.config.disabled = this.disabled;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n\n    if (!this.config.category) this.config.category = ButtonCategories.primary;\n\n    if (!this.config.label || this.config.label.trim().length == 0) {\n      if (!this.config.placeholderText) {\n        this.config.placeholderText = 'Default';\n      }\n      this.showPlaceholder = true;\n    }\n\n    if(this.config.flyout) this.flyoutConfig = this.config.flyout;\n  }\n\n  selectedOption(e: Event) {\n    //if it receives it's event info it selects the index - if not closes flyout\n    if(e){\n      this.showPlaceholder = false;\n      this.config.label = e.toString();\n      this.selected = !this.selected;\n      this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }else{\n      this.toggleFlyout(false);\n    }\n  }\n\n  /**\n   * function receives a truthy value which determines wether it closes or opens, \n   * but also looks for FocusEvent to check if flyout is being interacted with\n   * @param status \n   * @param e \n   */\n  toggleFlyout(status: boolean, e?: FocusEvent) {\n    let target = e?.relatedTarget as HTMLElement;\n    if(!target?.id.includes(this.config.id) || !e){\n      this.selected = status;\n      !status && this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }\n  }\n\n  /**\n   * Clear the flyout active state\n   */\n  clearFlyoutFocus() {\n    if (this.config?.flyout?.options) {\n      this.config.flyout.options.forEach(i => {\n        i.active = false;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorComponentConfig.html":{"url":"interfaces/IErrorComponentConfig.html","title":"interface - IErrorComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/error/error.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorLOV\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorLOV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorLOV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IErrorIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IErrorIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorIconConfig.html":{"url":"interfaces/IErrorIconConfig.html","title":"interface - IErrorIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/error/error.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlyoutConfig.html":{"url":"interfaces/IFlyoutConfig.html","title":"interface - IFlyoutConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlyoutConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         IFlyoutOptionConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFlyoutOptionConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selection:      | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter, HostListener, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { IFlyoutOptionConfig } from '../flyout-option/flyout-option.component';\n\nexport enum IFlyoutSelectTypes {\n  single = 'single',\n  multi = 'multi'\n}\n\nexport interface IFlyoutConfig {\n  id: string,\n  options?: IFlyoutOptionConfig[],\n  disabled?: boolean\n  selection?: [] | number,\n  type?: keyof typeof IFlyoutSelectTypes\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout',\n  templateUrl: './flyout.component.html'\n})\nexport class FlyoutComponent implements OnInit {\n  @ViewChildren('option') optionContainers: QueryList = new QueryList;\n\n  @Input() config : IFlyoutConfig = {\n    id: ''\n  }\n  @Input() id? : string;\n  @Input() options?: IFlyoutOptionConfig[];\n  @Input() disabled?: boolean;\n  @Input() selection?: [] | number;\n  @Input() type?: keyof typeof IFlyoutSelectTypes;\n\n  //TODO: Must add the other config parameters\n  @Output() isSelected = new EventEmitter();\n\n  selectedIndex : number = -1;\n  a11yText : string = '';\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'single';\n    if(this.id) this.config.id = this.id;\n    if(this.options) this.config.options = this.options;\n    if(this.disabled) this.config.disabled = this.disabled;\n    if(this.selection) this.config.selection = this.selection;\n    if(this.type) this.config.type = this.type;\n  };\n\n  @HostListener('document:keydown.arrowdown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options.slice(this.selectedIndex + 1).forEach((option, index) => {\n        if (!foundClickable && option.clickable !== false) {\n          this.selectedIndex += index + 1;\n          this.highlightIndex(option.id);\n          foundClickable = true;\n        }\n      });\n    }\n  }\n\n  @HostListener('document:keydown.arrowup', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(0, this.selectedIndex)\n        .reverse()\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex -= index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n      // Ensure selectedIndex does not fall below 0\n      this.selectedIndex = Math.max(this.selectedIndex, 0);\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    event.preventDefault();\n    //if the index hasn't changes through arrow navigation, emits our event but lets the parent know nothing was selected\n    this.selectedIndex != -1 ? this.optionSelected(this.selectedIndex) : this.isSelected.emit(null);\n  }\n\n  //takes in the active index from HostListeners and sets the config option to active state which triggers styling\n  highlightIndex(el_id: any) {\n    if(el_id){\n      this.config.options?.forEach(option => {\n        if(option.id === el_id){\n          option.active = true;\n          this.optionContainers.toArray()[this.selectedIndex]?.nativeElement?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n          this.a11yText = option.value;\n          //updates a11yText to indicate currently selected item if scrolling through flyout again\n          if(option.selected) this.a11yText += ' currently selected'; //translation?\n        }else{\n          option.active = false;\n        }\n      });\n    }\n  }\n\n  //clears all selections by setting the option.selected to false\n  clearOptions(){\n    this.config?.options?.forEach(option => {\n      option.selected = false;\n    });\n  }\n\n  //function takes in index value of current active option and selects it\n  optionSelected(i: number){\n    if(this.config.options && !this.config.options[i].selected && this.config.options[i].clickable){\n      //setup for future multi select feature\n      this.config.type !== 'multi' ? this.clearOptions() : /*this.config.selection = [].push(this.config.options[i]);*/console.log('MULTI');\n      this.config.options[i].selected = true;\n      //emits the value of the selected index so it's visible to the parent\n      this.isSelected.emit(this.config.options[i].value);\n      }\n  }\n\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlyoutOptionConfig.html":{"url":"interfaces/IFlyoutOptionConfig.html","title":"interface - IFlyoutOptionConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlyoutOptionConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nexport enum IFlyoutOptionType {\n  text = 'text',\n  checkbox = 'checkbox',\n  dropdown = 'dropdown',\n  line = 'line',\n  heading = 'heading'\n}\n\nexport interface IFlyoutOptionConfig {\n  id?: string,\n  value: string,\n  selected?: boolean,\n  active?: boolean,\n  disabled?: boolean,\n  type?: keyof typeof IFlyoutOptionType,\n  clickable?: boolean\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout-option',\n  templateUrl: './flyout-option.component.html'\n})\nexport class FlyoutOptionComponent implements OnInit {\n\n  @Input() config : IFlyoutOptionConfig = {\n    id: '',\n    value: 'Blank label'\n  }\n\n  @Input() id? : string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'text';\n    if((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false) this.config.clickable = true;\n    if(this.id) this.config.id = this.id;\n  };\n\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHiddenNavConfig.html":{"url":"interfaces/IHiddenNavConfig.html","title":"interface - IHiddenNavConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHiddenNavConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipLinks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipLinks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipLinks:         ISkipLinkConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISkipLinkConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIconButtonComponentConfig.html":{"url":"interfaces/IIconButtonComponentConfig.html","title":"interface - IIconButtonComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconButtonComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IIconButtonIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IIconButtonIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIconButtonIconConfig.html":{"url":"interfaces/IIconButtonIconConfig.html","title":"interface - IIconButtonIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconButtonIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIconConfig.html":{"url":"interfaces/IIconConfig.html","title":"interface - IIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon/icon.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FA_keywords\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FA_keywords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FA_keywords:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface IIconConfig {\n  ariaLabel?: string;\n  FA_keywords?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent implements OnChanges {\n  @ViewChild('iconSpan') iconSpan!: ElementRef;\n  @Input() config: IIconConfig = {};\n  @Input() ariaLabel?: string;\n  @Input() FA_keywords?: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config'] && !changes['config'].firstChange) {\n      const change = changes['config'].currentValue;\n      const keys = Object.keys(change);\n      let spanContent = ``;\n      this.iconSpan.nativeElement.innerHTML = spanContent;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIndicatorConfig.html":{"url":"interfaces/IIndicatorConfig.html","title":"interface - IIndicatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIndicatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            palette\n                                        \n                                \n                                \n                                        \n                                            purpose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        palette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        palette:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purpose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        purpose:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IndicatorType {\n  dot,\n  text,\n  number\n}\n\nexport enum IndicatorTreatment {\n  strong = 'strong',\n  weak = 'weak'\n}\n\nexport enum IndicatorPurpose {\n  status = 'status',\n  palette = 'palette'\n}\n\nexport enum IndicatorStatus {\n  information = 'information',\n  warning = 'warning',\n  critical = 'critical',\n  neutral = 'neutral',\n  primary = 'primary',\n  success = 'success'\n}\n\nexport enum IndicatorPalette {\n  teal,\n  orange,\n  red,\n  grey,\n  blue,\n  green,\n  purple,\n  navy\n}\n\nexport interface IIndicatorConfig {\n  label?: string | number;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof IndicatorType;\n  icon?: string;\n  category: keyof typeof IndicatorTreatment; // Treatment\n  purpose: keyof typeof IndicatorPurpose;\n  status?: keyof typeof IndicatorStatus; // Sentiment\n  palette?: keyof typeof IndicatorPalette; // Colour\n  ariaLabel?: string; // Aria label line of value\n}\n\n@Component({\n  selector: 'lib-indicator',\n  templateUrl: './indicator.component.html'\n})\nexport class IndicatorComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: IIndicatorConfig = {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  };\n  @ViewChild('label') label?: ElementRef;\n  EIndicatorStatus = IndicatorStatus;\n  rounded?: boolean;\n  abbr?: boolean; // Display abbr tag when text is truncated\n\n  ngOnInit() {\n    this.checkLabelRounded();\n    this.checkNumber();\n  }\n\n  ngAfterViewInit() {\n    this.checkLabelLength();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.checkNumber();\n    this.checkLabelRounded();\n    this.checkLabelLength();\n  }\n\n  // Check if number exceeds 99\n  private checkNumber() {\n    if (\n      this.config.type === 'number' &&\n      this.config?.label &&\n      this.config.label > 99\n    ) {\n      this.config.label = '99+';\n    }\n  }\n\n  // If label only have 1 character, it should be rounded\n  private checkLabelRounded() {\n    if (typeof this.config?.label === 'string') {\n      this.rounded = this.config.label.length == 1 && !this.config.icon;\n    }\n  }\n\n  // Check if div exceeds 200px\n  private checkLabelLength() {\n    // Max 200px - padding 8px x2\n    this.abbr = (\n      (this.label?.nativeElement?.offsetWidth &&\n        this.label?.nativeElement?.offsetWidth > 184)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInputComponentConfig.html":{"url":"interfaces/IInputComponentConfig.html","title":"interface - IInputComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInputComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/input/input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IInputComponentConfig {\n  label?: string;\n  hint?: string;\n  desc?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  type?: keyof typeof InputTypes;\n  id: string;\n  size?: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password'\n}\n@Component({\n  selector: 'ircc-cl-lib-input',\n  templateUrl: './input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: IInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() type: keyof typeof InputTypes = InputTypes.password;\n\n  disabled = false;\n  focusState = false;\n  showPassword?: boolean;\n  typeControl: keyof typeof InputTypes = InputTypes.text;\n  ariaText = 'Text Input';\n  errorIds: IErrorIDs[] = [];\n  errorAria = '';\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (!this.config.type) {\n      this.config.type = InputTypes.text;\n    } else if (this.config.type === InputTypes.password) {\n      this.showPassword = false;\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n\n    this.type === InputTypes.text\n      ? (this.showPassword = false)\n      : (this.showPassword = true);\n\n    //set disable to true when form is disabled\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      if (change[this.config.id] === undefined) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n\n    if (this.showPassword) {\n      this.typeControl = InputTypes.text;\n      this.ariaText = 'Text Input';\n    } else {\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n  }\n\n  public clearvalue() {}\n  writeValue(value: string): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelConfig.html":{"url":"interfaces/ILabelConfig.html","title":"interface - ILabelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILabelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconButton\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            parentID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            touched\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconButton:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touched\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        touched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelIconConfig.html":{"url":"interfaces/ILabelIconConfig.html","title":"interface - ILabelIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILabelIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ariaText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            colour\n                                        \n                                \n                                \n                                        \n                                            iconClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colour:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILinkComponentConfig.html":{"url":"interfaces/ILinkComponentConfig.html","title":"interface - ILinkComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILinkComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            href\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linkKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routerLink\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport interface ILinkComponentConfig {\n  text: string;\n  linkKey?: string;\n  href?: string;\n  routerLink?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb-link',\n  templateUrl: './link.component.html'\n})\nexport class BreadcrumbLinkComponent {\n  @Input() config: ILinkComponentConfig = {\n    text: ''\n  };\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOption.html":{"url":"interfaces/IOption.html","title":"interface - IOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewChild\n} from '@angular/core';\nimport { InputComponent } from '../../form-components/input/input.component';\n//TODO: This should be changed. Ideally the component doesn't need to know about these, and can just\n//add them in using the template.\nimport { ChipItemComponent } from '../chips/chip-item/chip-item.component';\n\ninterface IOption {\n  //Changed: Interfaces should ALWAYS start with 'I'.\n  text: string;\n  value: string;\n}\n\n@Component({\n  selector: 'lib-autocomplete',\n  templateUrl: './autocomplete.component.html'\n})\nexport class AutocompleteComponent implements OnInit, DoCheck {\n  @ViewChild(InputComponent, { static: true })\n  inputComponent?: InputComponent;\n\n  //TODO: Change this to a config\n  @Input() options: IOption[] = [];\n  @Input() title = `Title`;\n  @Input() hintText = `Hint Text`;\n  @Input() name = `Add Name`;\n  @Input() error = false;\n  @Input() limit = 0;\n  @Output() selectValueChange = new EventEmitter();\n  @Input() savedSelectedOptions: IOption[] = [];\n\n  selectedOptions: IOption[] = [];\n  originalOptions: IOption[] = [];\n  inputValue?: string;\n  hideDropdown = true;\n  isFocusInsideComponent = false;\n  isComponentClicked = false;\n  addHover = false;\n  emptyResults = false;\n\n  differ: KeyValueDiffer;\n  constructor(private differs: KeyValueDiffers) {\n    this.differ = this.differs.find({}).create();\n  }\n\n  @HostListener('window:keydown.escape', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (this.hideDropdown === false || this.options.length > 0) {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  clickInside(event: { target: HTMLInputElement }) {\n    const target = event.target;\n    if (\n      this.hideDropdown === true &&\n      target.type === `text` &&\n      this.options.length > 0\n    ) {\n      this.isFocusInsideComponent = true;\n      this.isComponentClicked = true;\n      this.toggleDropDown();\n      this.addHover = true;\n    } else if (\n      target.classList.contains('select-target') ||\n      target.classList.contains(`selected`)\n    ) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.toggleDropDown();\n    }\n  }\n\n  @HostListener('document:click')\n  clickout() {\n    if (!this.isFocusInsideComponent && this.isComponentClicked) {\n      this.toggleDropDown();\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n    }\n    this.isFocusInsideComponent = false;\n  }\n\n  onMouseEnter() {\n    this.addHover = false;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this);\n    if (change) {\n      change.forEachChangedItem((item) => {\n        if (item.key === `options`) {\n          this.selectValueChange.emit(this.selectedOptions);\n        }\n      });\n    }\n  }\n\n  valueChange(event: any) {\n    this.filterList(event);\n  }\n\n  filterList(filterValue: any) {\n    if (filterValue.length  {\n        return value.text.toLowerCase().includes(filterValue.toLowerCase());\n      });\n      this.options = filteredOptions.slice(0);\n      if (this.options.length === 0) {\n        this.emptyResults = true;\n      } else {\n        this.emptyResults = false;\n      }\n    }\n  }\n\n  public checkActive(value: string): boolean {\n    for (const selectedOption of this.selectedOptions) {\n      if (selectedOption.value === value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  returnOptionsToDefault() {\n    this.emptyResults = false;\n    this.options = this.originalOptions.slice(0);\n  }\n\n  public toggleDropDown() {\n    this.hideDropdown = !this.hideDropdown;\n    this.inputComponent?.focusInput(this.hideDropdown);\n  }\n\n  public toggleDropDownKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.toggleDropDown();\n    }\n  }\n\n  removeChipItem(index: number) {\n    this.selectedOptions.splice(index, 1);\n    this.returnOptionsToDefault();\n  }\n\n  public removeAllChipItems() {\n    this.selectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n\n  public selectAll() {\n    for (const option of this.options) {\n      this.selectedOptions.push(option);\n    }\n    this.returnOptionsToDefault();\n  }\n\n  public selectIndex(index: number) {\n    if (this.limit !== 0 && this.selectedOptions.length >= this.limit) {\n      return;\n    } else {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      if (this.checkDuplicated(index) === false) {\n        this.selectedOptions.push(this.options[index]);\n      }\n    }\n  }\n\n  checkDuplicated(index: number) {\n    return this.selectedOptions.some((element: { value: string }) => {\n      if (element.value === this.options[index].value) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedOptions = [];\n    this.originalOptions = this.options.slice(0);\n    this.selectedOptions = this.savedSelectedOptions;\n    this.savedSelectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProgressIndicatorConfig.html":{"url":"interfaces/IProgressIndicatorConfig.html","title":"interface - IProgressIndicatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProgressIndicatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orientation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            steps\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:         IStepConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IStepConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProgressTagsConfig.html":{"url":"interfaces/IProgressTagsConfig.html","title":"interface - IProgressTagsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProgressTagsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport const TAG_LABELS_EN = [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n];\nexport const TAG_LABELS_FR = [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n];\n\nexport enum TagType {\n  primary = 'primary',\n  success = 'success',\n  critical = 'critical',\n  locked = 'locked',\n  notStarted = 'notStarted'\n}\nexport interface IProgressTagsConfig {\n  id: string;\n  type?: keyof typeof TagType;\n  size?: keyof typeof DSSizes;\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-tags',\n  templateUrl: './progress-tags.component.html'\n})\nexport class ProgressTagsComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: IProgressTagsConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof TagType | TagType;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = TAG_LABELS_EN;\n    } else {\n      this.text = TAG_LABELS_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioInputComponentConfig.html":{"url":"interfaces/IRadioInputComponentConfig.html","title":"interface - IRadioInputComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRadioInputComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            helpText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helpText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helpText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         IRadioInputOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRadioInputOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:     ValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioInputOption.html":{"url":"interfaces/IRadioInputOption.html","title":"interface - IRadioInputOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRadioInputOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizeOverride\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeOverride\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeOverride:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchInputButtonConfig.html":{"url":"interfaces/ISearchInputButtonConfig.html","title":"interface - ISearchInputButtonConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchInputButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            colour\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colour:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchInputConfig.html":{"url":"interfaces/ISearchInputConfig.html","title":"interface - ISearchInputConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchInputConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholderText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchButton\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholderText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchButton:         ISearchInputButtonConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISearchInputButtonConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectConfig.html":{"url":"interfaces/ISelectConfig.html","title":"interface - ISelectConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISelectConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/select/select.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableError\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ISelectOptionsConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectOptionsConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectOptionsConfig.html":{"url":"interfaces/ISelectOptionsConfig.html","title":"interface - ISelectOptionsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISelectOptionsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/select/select.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISkipLinkConfig.html":{"url":"interfaces/ISkipLinkConfig.html","title":"interface - ISkipLinkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISkipLinkConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpinnerConfig.html":{"url":"interfaces/ISpinnerConfig.html","title":"interface - ISpinnerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISpinnerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orientation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  DSFullSizes,\n  DSOrientations\n} from '../../../shared/constants/jl-components.constants';\n\nexport const SPINNER_LABELS_EN = ['Loading', 'Success', 'Error'];\nexport const SPINNER_LABELS_FR = ['Chargement', 'Succès', 'Erreur'];\n\nexport enum SpinnerType {\n  active = 'active',\n  success = 'success',\n  critical = 'critical'\n}\nexport interface ISpinnerConfig {\n  id: string;\n  type?: keyof typeof SpinnerType;\n  size?: keyof typeof DSFullSizes;\n  orientation?: keyof typeof DSOrientations;\n  label?: string;\n  description?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-spinner',\n  templateUrl: './spinner.component.html'\n})\nexport class SpinnerComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: ISpinnerConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof SpinnerType | SpinnerType;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() orientation?: keyof typeof DSOrientations | DSOrientations;\n  @Input() label?: '';\n  @Input() description?: '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    if (!this.config.size) this.config.size = 'large';\n\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    this.removeVertical();\n\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = SPINNER_LABELS_EN;\n    } else {\n      this.text = SPINNER_LABELS_FR;\n    }\n  }\n\n  removeVertical() {\n    if (\n      this.config.size !== 'large' &&\n      this.config.orientation === 'vertical'\n    ) {\n      this.config.orientation = 'horizontal';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStepConfig.html":{"url":"interfaces/IStepConfig.html","title":"interface - IStepConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStepConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tagConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tagConfig:         IProgressTagsConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProgressTagsConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITabConfig.html":{"url":"interfaces/ITabConfig.html","title":"interface - ITabConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITabConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITabNavConfig.html":{"url":"interfaces/ITabNavConfig.html","title":"interface - ITabNavConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITabNavConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tab\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ITabConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITabConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITextareaComponentConfig.html":{"url":"interfaces/ITextareaComponentConfig.html","title":"interface - ITextareaComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITextareaComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            charLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resizable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorIcon:         IErrorIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IErrorIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizable:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorIconConfig } from '../error/error.component';\n\nexport interface ITextareaComponentConfig {\n  formGroup: FormGroup;\n  id: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  charLimit?: string;\n  resizable?: keyof typeof ResizableTypes;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  errorIcon?: IErrorIconConfig;\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum ResizableTypes {\n  vertical = 'vertical',\n  horizontal = 'password',\n  both = 'both',\n  none = 'none'\n}\n\n@Component({\n  selector: 'ircc-cl-lib-textarea',\n  templateUrl: './textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: ITextareaComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() charLimit = '';\n\n  disabled = false;\n  focusState = false;\n  errorIds: IErrorIDs[] = [];\n  charLimitStatus = '';\n  currentCharacterStatusAria = '';\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n\n  constructor(public standAloneFunctions: StandAloneFunctions) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit(): void {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.charLimit !== '') {\n      this.config.charLimit = this.charLimit;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.characterCountStatus(\n        this.config.formGroup.controls[this.config.id].value.length\n      );\n    }\n\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.characterCountStatus(change[this.config.id]?.length);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  characterCountStatus(currCharCount: any) {\n    if (this.config?.charLimit) {\n      if (this.config?.charLimit == currCharCount) {\n        this.charLimitStatus = 'maxLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.maxLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount == 15) {\n        this.charLimitStatus = 'warningLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.warningLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconButtonComponent.html":{"url":"components/IconButtonComponent.html","title":"component - IconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-icon-button\n            \n\n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                category\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :      | IconButtonCategories\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         IIconButtonIconConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSFullSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClick\n                        \n                    \n                \n            \n            \n                \nbuttonClick(id)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.config.id\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/icon/icon.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconSpan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                config\n                            \n                            \n                                FA_keywords\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIconConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FA_keywords\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconSpan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('iconSpan')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface IIconConfig {\n  ariaLabel?: string;\n  FA_keywords?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent implements OnChanges {\n  @ViewChild('iconSpan') iconSpan!: ElementRef;\n  @Input() config: IIconConfig = {};\n  @Input() ariaLabel?: string;\n  @Input() FA_keywords?: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config'] && !changes['config'].firstChange) {\n      const change = changes['config'].currentValue;\n      const keys = Object.keys(change);\n      let spanContent = ``;\n      this.iconSpan.nativeElement.innerHTML = spanContent;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndicatorComponent.html":{"url":"components/IndicatorComponent.html","title":"component - IndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-indicator\n            \n\n\n\n\n            \n                templateUrl\n                ./indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                abbr\n                            \n                            \n                                EIndicatorStatus\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLabelLength\n                            \n                            \n                                    Private\n                                checkLabelRounded\n                            \n                            \n                                    Private\n                                checkNumber\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIndicatorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:66\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkLabelLength\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkLabelLength()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkLabelRounded\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkLabelRounded()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkNumber()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        abbr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EIndicatorStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : IndicatorStatus\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('label')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rounded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IndicatorType {\n  dot,\n  text,\n  number\n}\n\nexport enum IndicatorTreatment {\n  strong = 'strong',\n  weak = 'weak'\n}\n\nexport enum IndicatorPurpose {\n  status = 'status',\n  palette = 'palette'\n}\n\nexport enum IndicatorStatus {\n  information = 'information',\n  warning = 'warning',\n  critical = 'critical',\n  neutral = 'neutral',\n  primary = 'primary',\n  success = 'success'\n}\n\nexport enum IndicatorPalette {\n  teal,\n  orange,\n  red,\n  grey,\n  blue,\n  green,\n  purple,\n  navy\n}\n\nexport interface IIndicatorConfig {\n  label?: string | number;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof IndicatorType;\n  icon?: string;\n  category: keyof typeof IndicatorTreatment; // Treatment\n  purpose: keyof typeof IndicatorPurpose;\n  status?: keyof typeof IndicatorStatus; // Sentiment\n  palette?: keyof typeof IndicatorPalette; // Colour\n  ariaLabel?: string; // Aria label line of value\n}\n\n@Component({\n  selector: 'lib-indicator',\n  templateUrl: './indicator.component.html'\n})\nexport class IndicatorComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: IIndicatorConfig = {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  };\n  @ViewChild('label') label?: ElementRef;\n  EIndicatorStatus = IndicatorStatus;\n  rounded?: boolean;\n  abbr?: boolean; // Display abbr tag when text is truncated\n\n  ngOnInit() {\n    this.checkLabelRounded();\n    this.checkNumber();\n  }\n\n  ngAfterViewInit() {\n    this.checkLabelLength();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.checkNumber();\n    this.checkLabelRounded();\n    this.checkLabelLength();\n  }\n\n  // Check if number exceeds 99\n  private checkNumber() {\n    if (\n      this.config.type === 'number' &&\n      this.config?.label &&\n      this.config.label > 99\n    ) {\n      this.config.label = '99+';\n    }\n  }\n\n  // If label only have 1 character, it should be rounded\n  private checkLabelRounded() {\n    if (typeof this.config?.label === 'string') {\n      this.rounded = this.config.label.length == 1 && !this.config.icon;\n    }\n  }\n\n  // Check if div exceeds 200px\n  private checkLabelLength() {\n    // Max 200px - padding 8px x2\n    this.abbr = (\n      (this.label?.nativeElement?.offsetWidth &&\n        this.label?.nativeElement?.offsetWidth > 184)\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ config?.label }}\n    \n    \n      {{ config?.label }}\n    \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ config?.label }}              {{ config?.label }}          '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/input/input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-input\n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ariaText\n                            \n                            \n                                disabled\n                            \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                focusState\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                    Private\n                                    Optional\n                                onChange\n                            \n                            \n                                    Private\n                                    Optional\n                                onTouch\n                            \n                            \n                                    Optional\n                                showPassword\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                            \n                                typeControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearvalue\n                            \n                            \n                                    Public\n                                focusInput\n                            \n                            \n                                getAriaErrorText\n                            \n                            \n                                hideShow\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getErrorState\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IInputComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : InputTypes.password\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearvalue\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearvalue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        focusInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusInput(focusValue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focusValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:154\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideShow\n                        \n                    \n                \n            \n            \n                \nhideShow()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:202\n                \n            \n\n\n            \n                \n                    Toggle the password field\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:168\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ariaText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Text Input'\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : InputTypes.text\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:66\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getErrorState\n                    \n                \n\n                \n                    \n                        getgetErrorState()\n                    \n                \n                            \n                                \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:229\n                                \n                            \n                    \n                        \n                                Return error state from FormGroup, must be touched & invalid\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IInputComponentConfig {\n  label?: string;\n  hint?: string;\n  desc?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  type?: keyof typeof InputTypes;\n  id: string;\n  size?: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password'\n}\n@Component({\n  selector: 'ircc-cl-lib-input',\n  templateUrl: './input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: IInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() type: keyof typeof InputTypes = InputTypes.password;\n\n  disabled = false;\n  focusState = false;\n  showPassword?: boolean;\n  typeControl: keyof typeof InputTypes = InputTypes.text;\n  ariaText = 'Text Input';\n  errorIds: IErrorIDs[] = [];\n  errorAria = '';\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (!this.config.type) {\n      this.config.type = InputTypes.text;\n    } else if (this.config.type === InputTypes.password) {\n      this.showPassword = false;\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n\n    this.type === InputTypes.text\n      ? (this.showPassword = false)\n      : (this.showPassword = true);\n\n    //set disable to true when form is disabled\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      if (change[this.config.id] === undefined) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n\n    if (this.showPassword) {\n      this.typeControl = InputTypes.text;\n      this.ariaText = 'Text Input';\n    } else {\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n  }\n\n  public clearvalue() {}\n  writeValue(value: string): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n          \n\n          \n            \n              \n            \n            \n              \n            \n          \n        \n      \n      \n        \n          {{\n            errorStubText + ': ' + (config.label || '' | translate) + ': '\n          }}\n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                      {{            errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'          }}                                                                              '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularBannerModule.html":{"url":"modules/IrccDsAngularBannerModule.html","title":"module - IrccDsAngularBannerModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularBannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularBannerModule\n\n\n\ncluster_IrccDsAngularBannerModule_exports\n\n\n\ncluster_IrccDsAngularBannerModule_declarations\n\n\n\n\nBannerComponent\n\nBannerComponent\n\n\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule -->\n\nBannerComponent->IrccDsAngularBannerModule\n\n\n\n\n\nBannerComponent \n\nBannerComponent \n\nBannerComponent  -->\n\nIrccDsAngularBannerModule->BannerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/ircc-ds-angular-banner.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BannerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BannerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BannerComponent } from './banner/banner.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [BannerComponent],\n  imports: [IrccDsAngularComponentsSharedModule, CommonModule, TranslateModule],\n  exports: [BannerComponent]\n})\nexport class IrccDsAngularBannerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularComponentsSharedModule.html":{"url":"modules/IrccDsAngularComponentsSharedModule.html","title":"module - IrccDsAngularComponentsSharedModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularComponentsSharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularComponentsSharedModule\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_exports\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_declarations\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\n\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbLinkComponent\n\nBreadcrumbLinkComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbLinkComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nDropdownComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutComponent\n\nFlyoutComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutOptionComponent\n\nFlyoutOptionComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutOptionComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIndicatorComponent\n\nIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nLabelComponent\n\nLabelComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nLabelComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressIndicatorComponent\n\nProgressIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressTagsComponent\n\nProgressTagsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressTagsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nSpinnerComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nTabsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbComponent \n\n\n\n\n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbLinkComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->ButtonComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nIrccDsAngularComponentsSharedModule->DropdownComponent \n\n\n\n\n\nFlyoutComponent \n\nFlyoutComponent \n\nFlyoutComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutComponent \n\n\n\n\n\nFlyoutOptionComponent \n\nFlyoutOptionComponent \n\nFlyoutOptionComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutOptionComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconComponent \n\n\n\n\n\nIndicatorComponent \n\nIndicatorComponent \n\nIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->IndicatorComponent \n\n\n\n\n\nLabelComponent \n\nLabelComponent \n\nLabelComponent  -->\n\nIrccDsAngularComponentsSharedModule->LabelComponent \n\n\n\n\n\nProgressIndicatorComponent \n\nProgressIndicatorComponent \n\nProgressIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressIndicatorComponent \n\n\n\n\n\nProgressTagsComponent \n\nProgressTagsComponent \n\nProgressTagsComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressTagsComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nIrccDsAngularComponentsSharedModule->SpinnerComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nIrccDsAngularComponentsSharedModule->TabsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            BreadcrumbLinkComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FlyoutComponent\n                        \n                        \n                            FlyoutOptionComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            IndicatorComponent\n                        \n                        \n                            LabelComponent\n                        \n                        \n                            ProgressIndicatorComponent\n                        \n                        \n                            ProgressTagsComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            BreadcrumbLinkComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FlyoutComponent\n                        \n                        \n                            FlyoutOptionComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            IndicatorComponent\n                        \n                        \n                            LabelComponent\n                        \n                        \n                            ProgressIndicatorComponent\n                        \n                        \n                            ProgressTagsComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonComponent } from './button/button.component';\nimport { IconComponent } from './icon/icon.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { ProgressTagsComponent } from './progress-tags/progress-tags.component';\nimport { DropdownComponent } from './dropdown/drop-down.component';\nimport { LabelComponent } from './label/label.component';\nimport { ProgressIndicatorComponent } from './progress-indicator/progress-indicator.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { BreadcrumbLinkComponent } from './breadcrumb/link/link.component';\nimport { IndicatorComponent } from './indicator/indicator.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { FlyoutComponent } from './flyout/flyout.component';\nimport { FlyoutOptionComponent } from './flyout-option/flyout-option.component';\n\nconst IrccDsSharedComponents = [\n  ButtonComponent,\n  BreadcrumbComponent,\n  BreadcrumbLinkComponent,\n  IconComponent,\n  IconButtonComponent,\n  IndicatorComponent,\n  TabsComponent,\n  ProgressTagsComponent,\n  DropdownComponent,\n  LabelComponent,\n  ProgressTagsComponent,\n  ProgressIndicatorComponent,\n  SpinnerComponent,\n  FlyoutComponent,\n  FlyoutOptionComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsSharedComponents],\n  imports: [CommonModule, TranslateModule, RouterModule],\n  exports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule,\n    ...IrccDsSharedComponents\n  ]\n})\nexport class IrccDsAngularComponentsSharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularFormComponentsModule.html":{"url":"modules/IrccDsAngularFormComponentsModule.html","title":"module - IrccDsAngularFormComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularFormComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularFormComponentsModule\n\n\n\ncluster_IrccDsAngularFormComponentsModule_exports\n\n\n\ncluster_IrccDsAngularFormComponentsModule_declarations\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule -->\n\nCheckboxComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nDatePickerComponent\n\nDatePickerComponent\n\nIrccDsAngularFormComponentsModule -->\n\nDatePickerComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nIrccDsAngularFormComponentsModule -->\n\nErrorComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nRadioInputComponent\n\nRadioInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nRadioInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nIrccDsAngularFormComponentsModule -->\n\nSelectComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\nIrccDsAngularFormComponentsModule -->\n\nTextareaComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nIrccDsAngularFormComponentsModule->CheckboxComponent \n\n\n\n\n\nDatePickerComponent \n\nDatePickerComponent \n\nDatePickerComponent  -->\n\nIrccDsAngularFormComponentsModule->DatePickerComponent \n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nIrccDsAngularFormComponentsModule->ErrorComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIrccDsAngularFormComponentsModule->InputComponent \n\n\n\n\n\nRadioInputComponent \n\nRadioInputComponent \n\nRadioInputComponent  -->\n\nIrccDsAngularFormComponentsModule->RadioInputComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nIrccDsAngularFormComponentsModule->SelectComponent \n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nIrccDsAngularFormComponentsModule->TextareaComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                        \n                            DatePickerComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioInputComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            TextareaComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                        \n                            DatePickerComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioInputComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            TextareaComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorComponent } from './error/error.component';\nimport { InputComponent } from './input/input.component';\nimport { RadioInputComponent } from './radio-input/radio-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TextareaComponent } from './textarea/textarea.component';\nimport { SelectComponent } from './select/select.component';\n\nconst IrccDsAngularFormComponents = [\n  CheckboxComponent,\n  ErrorComponent,\n  InputComponent,\n  RadioInputComponent,\n  DatePickerComponent,\n  TextareaComponent,\n  SelectComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsAngularFormComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsAngularFormComponents]\n})\nexport class IrccDsAngularFormComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularHeaderFooterModule.html":{"url":"modules/IrccDsAngularHeaderFooterModule.html","title":"module - IrccDsAngularHeaderFooterModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularHeaderFooterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularHeaderFooterModule\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_declarations\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule -->\n\nFooterComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHeaderComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHiddenNavComponent\n\nHiddenNavComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHiddenNavComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nLanguageSwitchComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nIrccDsAngularHeaderFooterModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nIrccDsAngularHeaderFooterModule->HeaderComponent \n\n\n\n\n\nHiddenNavComponent \n\nHiddenNavComponent \n\nHiddenNavComponent  -->\n\nIrccDsAngularHeaderFooterModule->HiddenNavComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nIrccDsAngularHeaderFooterModule->LanguageSwitchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HiddenNavComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HiddenNavComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LanguageSwitchComponent } from './language-switch/language-switch.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HiddenNavComponent } from './hidden-nav/hidden-nav.component';\n\nconst IrccDsHeaderFooterComponents = [\n  HeaderComponent,\n  FooterComponent,\n  LanguageSwitchComponent,\n  HiddenNavComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsHeaderFooterComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsHeaderFooterComponents]\n})\nexport class IrccDsAngularHeaderFooterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularLegacyOldModule.html":{"url":"modules/IrccDsAngularLegacyOldModule.html","title":"module - IrccDsAngularLegacyOldModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularLegacyOldModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularLegacyOldModule\n\n\n\ncluster_IrccDsAngularLegacyOldModule_declarations\n\n\n\ncluster_IrccDsAngularLegacyOldModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule -->\n\nAutocompleteComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipItemComponent\n\nChipItemComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipItemComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipListComponent\n\nChipListComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipListComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSearchInputComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSecondaryChipsComponent\n\nSecondaryChipsComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSecondaryChipsComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nIrccDsAngularLegacyOldModule->AutocompleteComponent \n\n\n\n\n\nChipItemComponent \n\nChipItemComponent \n\nChipItemComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipItemComponent \n\n\n\n\n\nChipListComponent \n\nChipListComponent \n\nChipListComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipListComponent \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nIrccDsAngularLegacyOldModule->SearchInputComponent \n\n\n\n\n\nSecondaryChipsComponent \n\nSecondaryChipsComponent \n\nSecondaryChipsComponent  -->\n\nIrccDsAngularLegacyOldModule->SecondaryChipsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ChipItemComponent\n                        \n                        \n                            ChipListComponent\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            SecondaryChipsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ChipItemComponent\n                        \n                        \n                            ChipListComponent\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            SecondaryChipsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { ChipListComponent } from './chips/chip-list/chip-list.component';\nimport { SecondaryChipsComponent } from './chips/secondary-chips/secondary-chips.component';\nimport { ChipItemComponent } from './chips/chip-item/chip-item.component';\nimport { SearchInputComponent } from './search-input/search-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst IrccDsLegacyOldComponents = [\n  AutocompleteComponent,\n  ChipListComponent,\n  SecondaryChipsComponent,\n  ChipItemComponent,\n  SearchInputComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsLegacyOldComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsLegacyOldComponents]\n})\nexport class IrccDsAngularLegacyOldModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelButtonService.html":{"url":"injectables/LabelButtonService.html","title":"injectable - LabelButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labelButtonClickObs$\n                            \n                            \n                                    Private\n                                labelButtonClickSubj\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonPress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonPress\n                        \n                    \n                \n            \n            \n                \nbuttonPress(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labelButtonClickObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.labelButtonClickSubj.asObservable()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        labelButtonClickSubj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelButtonService {\n  private labelButtonClickSubj = new BehaviorSubject('');\n  labelButtonClickObs$ = this.labelButtonClickSubj.asObservable();\n\n  buttonPress(id: string) {\n    this.labelButtonClickSubj.next(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelComponent.html":{"url":"components/LabelComponent.html","title":"component - LabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/label/label.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-label\n            \n\n\n\n\n            \n                templateUrl\n                ./label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labelIconText\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                iconButtonClick\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnLabel\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, standAloneFunctions: StandAloneFunctions, labelButton: LabelButtonService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelButton\n                                                  \n                                                        \n                                                                        LabelButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        iconButtonClick\n                        \n                    \n                \n            \n            \n                \niconButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:71\n                \n            \n\n\n            \n                \n                    Output the button press\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnLabel\n                        \n                    \n                \n            \n            \n                \nreturnLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labelIconText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ config.label || '' | translate }}\n      \n      \n        {{ config.label || '' | translate }}\n      \n      \n        \n        \n      \n    \n  \n  \n    {{ config.desc || '' | translate }}\n  \n  \n    {{ config.hint | translate }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ config.label || \\'\\' | translate }}                    {{ config.label || \\'\\' | translate }}                                              {{ config.desc || \\'\\' | translate }}        {{ config.hint | translate }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageSwitchButtonService.html":{"url":"injectables/LanguageSwitchButtonService.html","title":"injectable - LanguageSwitchButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageSwitchButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                languageClickObs$\n                            \n                            \n                                    Private\n                                languageClickSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                languageToggleClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        languageToggleClick\n                        \n                    \n                \n            \n            \n                \nlanguageToggleClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        languageClickObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languageClickSub.asObservable()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languageClickSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageSwitchButtonService {\n  private languageClickSub = new BehaviorSubject(false);\n  languageClickObs$ = this.languageClickSub.asObservable();\n\n  languageToggleClick() {\n    this.languageClickSub.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitchComponent.html":{"url":"components/LanguageSwitchComponent.html","title":"component - LanguageSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-language-switch\n            \n\n\n\n\n            \n                templateUrl\n                ./language-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aria\n                            \n                            \n                                isMobile\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setText\n                            \n                            \n                                switch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: object, langToggle: LanguageSwitchButtonService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        langToggle\n                                                  \n                                                        \n                                                                        LanguageSwitchButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(e: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:41\n                \n            \n\n\n            \n                \n                    Listens for screen resizes and sets mobile-tablet boolean\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleResize\n                        \n                    \n                \n            \n            \n                \nhandleResize(e: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:41\n                \n            \n\n\n            \n                \n                    Listens for screen resizes and sets mobile-tablet boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setText\n                        \n                    \n                \n            \n            \n                \nsetText(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switch\n                        \n                    \n                \n            \n            \n                \nswitch()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  PLATFORM_ID\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguageSwitchButtonService } from './language-switch-button.service';\n\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH = 'Français';\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE = 'FR';\n\nexport const LANGUAGE_SWITCH_TEXT_FRENCH = 'English';\nexport const LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE = 'EN';\n\n@Component({\n  selector: 'ircc-cl-lib-language-switch',\n  templateUrl: './language-switch.component.html'\n})\nexport class LanguageSwitchComponent implements OnInit {\n  @Input() id = '';\n\n  isMobile = false;\n\n  text = '';\n  aria = '';\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private langToggle: LanguageSwitchButtonService,\n    private translate: TranslateService\n  ) {\n    this.isMobile = window.innerWidth  {\n      console.log(newLang.lang, 'switch');\n      this.setText(newLang.lang);\n    });\n  }\n\n  switch() {\n    this.langToggle.languageToggleClick();\n  }\n\n  setText(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH);\n    } else {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_FRENCH);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ text }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ text }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressIndicatorComponent.html":{"url":"components/ProgressIndicatorComponent.html","title":"component - ProgressIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProgressIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-progress-indicator\n            \n\n\n\n\n            \n                templateUrl\n                ./progress-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepText\n                            \n                            \n                                tabConfig\n                            \n                            \n                                tabNavConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                            \n                                tabClickFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tabClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IProgressIndicatorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tabClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabClickFn\n                        \n                    \n                \n            \n            \n                \ntabClickFn(selected: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stepText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    title: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabNavConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ stepText + ' ' + (i + 1) }}\n          \n          \n            {{ stepText + ' ' + (i + 1) }}\n          \n          \n          \n            \n          \n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ stepText + \\' \\' + (i + 1) }}                                {{ stepText + \\' \\' + (i + 1) }}                                                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressTagsComponent.html":{"url":"components/ProgressTagsComponent.html","title":"component - ProgressTagsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProgressTagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-progress-tags\n            \n\n\n\n\n            \n                templateUrl\n                ./progress-tags.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTypeTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IProgressTagsConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :          | TagType\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:43\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypeTitle\n                        \n                    \n                \n            \n            \n                \nsetTypeTitle()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport const TAG_LABELS_EN = [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n];\nexport const TAG_LABELS_FR = [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n];\n\nexport enum TagType {\n  primary = 'primary',\n  success = 'success',\n  critical = 'critical',\n  locked = 'locked',\n  notStarted = 'notStarted'\n}\nexport interface IProgressTagsConfig {\n  id: string;\n  type?: keyof typeof TagType;\n  size?: keyof typeof DSSizes;\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-tags',\n  templateUrl: './progress-tags.component.html'\n})\nexport class ProgressTagsComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: IProgressTagsConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof TagType | TagType;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = TAG_LABELS_EN;\n    } else {\n      this.text = TAG_LABELS_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          {{ text[1] }}\n        \n        \n          \n          {{ text[2] }}\n        \n        \n          \n          {{ text[3] }}\n        \n        \n          \n          {{ text[4] }}\n        \n        \n          \n          {{ text[0] }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ text[1] }}                                    {{ text[2] }}                                    {{ text[3] }}                                    {{ text[4] }}                                    {{ text[0] }}                    '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressTagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioInputComponent.html":{"url":"components/RadioInputComponent.html","title":"component - RadioInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RadioInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => RadioInputComponent)\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-radio-input\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                getDisabled\n                            \n                            \n                                markAsTouched\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IRadioInputComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: this.formGroupEmpty\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:69\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:153\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisabled\n                        \n                    \n                \n            \n            \n                \ngetDisabled(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:186\n                \n            \n\n\n            \n                \n                    used to disable individual fields (from the config under 'options')\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the option field to be disabled\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        null if value is undefined, empty string otherwise. This works with [attr.disabled].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsTouched\n                        \n                    \n                \n            \n            \n                \nmarkAsTouched()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:167\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(formValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      \n      {{ option.text || '' | translate }}\n    \n  \n  \n    \n      {{\n        errorStubText + ': ' + (config.label || '' | translate) + ': '\n      }}\n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ option.text || \\'\\' | translate }}                  {{        errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'      }}                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadioInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchInputComponent.html":{"url":"components/SearchInputComponent.html","title":"component - SearchInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-search-input\n            \n\n\n\n\n            \n                templateUrl\n                ./search-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInputControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISearchInputConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        searchInputControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n    \n        \n\n\n  {{ config?.searchButton?.text }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config?.searchButton?.text }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SecondaryChipsComponent.html":{"url":"components/SecondaryChipsComponent.html","title":"component - SecondaryChipsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SecondaryChipsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-secondary-chips\n            \n\n\n\n\n            \n                templateUrl\n                ./secondary-chips.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipContent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:8\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipContent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-secondary-chips',\n  templateUrl: './secondary-chips.component.html'\n})\nexport class SecondaryChipsComponent implements OnInit {\n  @Input() chipContent?: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  {{ chipContent || '' | translate }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ chipContent || \\'\\' | translate }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecondaryChipsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/select/select.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => SelectComponent)\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-select\n            \n\n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activiatedSelect\n                            \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                rotateChevron\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                markAsTouched\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onClicked\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setLang\n                            \n                            \n                                valueChange\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISelectConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:159\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsTouched\n                        \n                    \n                \n            \n            \n                \nmarkAsTouched()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClicked\n                        \n                    \n                \n            \n            \n                \nonClicked()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:173\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueChange\n                        \n                    \n                \n            \n            \n                \nvalueChange($event: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(formValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activiatedSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotateChevron\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          {{ config.placeholder || '' | translate }}\n        \n        \n          {{ option.text | translate }}\n        \n      \n      \n        \n      \n    \n    \n      \n        {{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}\n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ config.placeholder || \\'\\' | translate }}                          {{ option.text | translate }}                                                        {{          errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'        }}                                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-spinner\n            \n\n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeVertical\n                            \n                            \n                                setTypeTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                orientation\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISpinnerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        orientation\n                    \n                \n                \n                    \n                        Type :          | DSOrientations\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSFullSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :          | SpinnerType\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeVertical\n                        \n                    \n                \n            \n            \n                \nremoveVertical()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypeTitle\n                        \n                    \n                \n            \n            \n                \nsetTypeTitle()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  DSFullSizes,\n  DSOrientations\n} from '../../../shared/constants/jl-components.constants';\n\nexport const SPINNER_LABELS_EN = ['Loading', 'Success', 'Error'];\nexport const SPINNER_LABELS_FR = ['Chargement', 'Succès', 'Erreur'];\n\nexport enum SpinnerType {\n  active = 'active',\n  success = 'success',\n  critical = 'critical'\n}\nexport interface ISpinnerConfig {\n  id: string;\n  type?: keyof typeof SpinnerType;\n  size?: keyof typeof DSFullSizes;\n  orientation?: keyof typeof DSOrientations;\n  label?: string;\n  description?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-spinner',\n  templateUrl: './spinner.component.html'\n})\nexport class SpinnerComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: ISpinnerConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof SpinnerType | SpinnerType;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() orientation?: keyof typeof DSOrientations | DSOrientations;\n  @Input() label?: '';\n  @Input() description?: '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    if (!this.config.size) this.config.size = 'large';\n\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    this.removeVertical();\n\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = SPINNER_LABELS_EN;\n    } else {\n      this.text = SPINNER_LABELS_FR;\n    }\n  }\n\n  removeVertical() {\n    if (\n      this.config.size !== 'large' &&\n      this.config.orientation === 'vertical'\n    ) {\n      this.config.orientation = 'horizontal';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n          \n        \n      \n      \n        \n          \n        \n        \n          \n          \n        \n      \n      \n        \n          \n        \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    showContent: true\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelected\n                        \n                    \n                \n            \n            \n                \nsetSelected(selectedID: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ val.title }}\n      \n      \n        {{ val.title }}\n      \n    \n  \n  \n    \n    \n      \n        \n          \n            {{ cont.value }}\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ val.title }}                    {{ val.title }}                                                          {{ cont.value }}                              '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaComponent.html":{"url":"components/TextareaComponent.html","title":"component - TextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TextareaComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-textarea\n            \n\n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charLimitStatus\n                            \n                            \n                                currentCharacterStatusAria\n                            \n                            \n                                disabled\n                            \n                            \n                                errorIds\n                            \n                            \n                                focusState\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                    Private\n                                    Optional\n                                onChange\n                            \n                            \n                                    Private\n                                    Optional\n                                onTouch\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                characterCountStatus\n                            \n                            \n                                    Public\n                                clearvalue\n                            \n                            \n                                    Public\n                                focusInput\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                charLimit\n                            \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        charLimit\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ITextareaComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        characterCountStatus\n                        \n                    \n                \n            \n            \n                \ncharacterCountStatus(currCharCount: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currCharCount\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearvalue\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearvalue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        focusInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusInput(focusValue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focusValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        charLimitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCharacterStatusAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorIconConfig } from '../error/error.component';\n\nexport interface ITextareaComponentConfig {\n  formGroup: FormGroup;\n  id: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  charLimit?: string;\n  resizable?: keyof typeof ResizableTypes;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  errorIcon?: IErrorIconConfig;\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum ResizableTypes {\n  vertical = 'vertical',\n  horizontal = 'password',\n  both = 'both',\n  none = 'none'\n}\n\n@Component({\n  selector: 'ircc-cl-lib-textarea',\n  templateUrl: './textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: ITextareaComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() charLimit = '';\n\n  disabled = false;\n  focusState = false;\n  errorIds: IErrorIDs[] = [];\n  charLimitStatus = '';\n  currentCharacterStatusAria = '';\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n\n  constructor(public standAloneFunctions: StandAloneFunctions) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit(): void {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.charLimit !== '') {\n      this.config.charLimit = this.charLimit;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.characterCountStatus(\n        this.config.formGroup.controls[this.config.id].value.length\n      );\n    }\n\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.characterCountStatus(change[this.config.id]?.length);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  characterCountStatus(currCharCount: any) {\n    if (this.config?.charLimit) {\n      if (this.config?.charLimit == currCharCount) {\n        this.charLimitStatus = 'maxLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.maxLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount == 15) {\n        this.charLimitStatus = 'warningLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.warningLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount \n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n123\n          \n          \n            {{ textareaInput.value.length }}/{{ config.charLimit }}\n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      123                                {{ textareaInput.value.length }}/{{ config.charLimit }}                                                                                          '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            interface\n            IBannerConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            interface\n            ICTAConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                15 %\n                (4/26)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n            \n            interface\n            ICheckBoxComponentConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            component\n            DatePickerComponent\n            \n                20 %\n                (9/44)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerConfig\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerDropDownConfigs\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerErrorMessages\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerUnknownDateToggleConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_DAY_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTHS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTHS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_DAY_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_DAY_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_MONTH_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_MONTH_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_YEAR_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_YEAR_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_UNKOWN_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_UNKOWN_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_YEAR_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            interface\n            IErrorComponentConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            interface\n            IErrorIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/input/input.component.ts\n            \n            interface\n            IInputComponentConfig\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n            \n            variable\n            IrccDsAngularFormComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            component\n            RadioInputComponent\n            \n                12 %\n                (3/25)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            interface\n            IRadioInputComponentConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            interface\n            IRadioInputOption\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                7 %\n                (2/26)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            interface\n            ISelectConfig\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            interface\n            ISelectOptionsConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n            \n            component\n            TextareaComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n            \n            interface\n            ITextareaComponentConfig\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ALT_TEXT_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ALT_TEXT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ARIA_LABEL_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ARIA_LABEL_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_FOOTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            CANADA_LOGO_ARIA_LABEL_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            CANADA_LOGO_ARIA_LABEL_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            ENGLISH_BANNER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            FRENCH_BANNER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_IMG_LINK_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_IMG_LINK_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_LINK_ALT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_LINK_ATL_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            component\n            HiddenNavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            interface\n            IHiddenNavConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            interface\n            ISkipLinkConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n            \n            variable\n            IrccDsHeaderFooterComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts\n            \n            injectable\n            LanguageSwitchButtonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            component\n            LanguageSwitchComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n            \n            interface\n            IOption\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts\n            \n            component\n            ChipItemComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts\n            \n            component\n            ChipListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts\n            \n            component\n            SecondaryChipsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n            \n            variable\n            IrccDsLegacyOldComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            component\n            SearchInputComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            interface\n            ISearchInputButtonConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            interface\n            ISearchInputConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n            \n            interface\n            IBreadcrumbConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n            \n            component\n            BreadcrumbLinkComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n            \n            interface\n            ILinkComponentConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/button/button.component.ts\n            \n            interface\n            IButtonConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n            \n            component\n            DropdownComponent\n            \n                13 %\n                (2/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n            \n            interface\n            IDropdownConfig\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n            \n            component\n            FlyoutOptionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n            \n            interface\n            IFlyoutOptionConfig\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n            \n            component\n            FlyoutComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n            \n            interface\n            IFlyoutConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            component\n            IconButtonComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            interface\n            IIconButtonComponentConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            interface\n            IIconButtonIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            variable\n            CLASS_TRASHCAN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            variable\n            CLASS_X_MARK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon/icon.component.ts\n            \n            interface\n            IIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n            \n            component\n            IndicatorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n            \n            interface\n            IIndicatorConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n            \n            variable\n            IrccDsSharedComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label-button.service.ts\n            \n            injectable\n            LabelButtonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            component\n            LabelComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            interface\n            ILabelConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            interface\n            ILabelIconConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            ERROR_TEXT_STUB_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            ERROR_TEXT_STUB_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            HELP_ICON_ALT_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            HELP_ICON_ALT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            component\n            ProgressIndicatorComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            interface\n            IProgressIndicatorConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            interface\n            IStepConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            variable\n            PROGRESS_INDICATOR_STEP_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            variable\n            PROGRESS_INDICATOR_STEP_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            component\n            ProgressTagsComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            interface\n            IProgressTagsConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            variable\n            TAG_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            variable\n            TAG_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            interface\n            ISpinnerConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            variable\n            SPINNER_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            variable\n            SPINNER_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            interface\n            ITabConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            interface\n            ITabNavConfig\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cli : ^14.2.11\n        \n            @aws-sdk/client-s3 : ^3.321.1\n        \n            @aws-sdk/lib-storage : ^3.321.1\n        \n            cheerio : ^1.0.0-rc.12\n        \n            mime-types : ^2.1.35\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BannerSize   (component-library/.../banner.component.ts)\n                        \n                        \n                            BannerType   (component-library/.../banner.component.ts)\n                        \n                        \n                            ButtonCategories   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonColor   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonIconDirection   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonSize   (component-library/.../button.component.ts)\n                        \n                        \n                            CTAType   (component-library/.../banner.component.ts)\n                        \n                        \n                            IconButtonCategories   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            IFlyoutOptionType   (component-library/.../flyout-option.component.ts)\n                        \n                        \n                            IFlyoutSelectTypes   (component-library/.../flyout.component.ts)\n                        \n                        \n                            IndicatorPalette   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorPurpose   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorStatus   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorTreatment   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorType   (component-library/.../indicator.component.ts)\n                        \n                        \n                            InputTypes   (component-library/.../input.component.ts)\n                        \n                        \n                            LinkType   (component-library/.../breadcrumb.component.ts)\n                        \n                        \n                            Orientations   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            ResizableTypes   (component-library/.../textarea.component.ts)\n                        \n                        \n                            SpinnerType   (component-library/.../spinner.component.ts)\n                        \n                        \n                            TagType   (component-library/.../progress-tags.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n    \n        \n            \n                \n                    \n                        \n                        BannerSize\n                    \n                \n                        \n                            \n                                 large\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        BannerType\n                    \n                \n                        \n                            \n                                 generic\n                            \n                        \n                        \n                            \n                                Value : generic\n                            \n                        \n                        \n                            \n                                 info\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CTAType\n                    \n                \n                        \n                            \n                                 link\n                            \n                        \n                        \n                            \n                                Value : link\n                            \n                        \n                        \n                            \n                                 button\n                            \n                        \n                        \n                            \n                                Value : button\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/button/button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ButtonCategories\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 secondary\n                            \n                        \n                        \n                            \n                                Value : secondary\n                            \n                        \n                        \n                            \n                                 plain\n                            \n                        \n                        \n                            \n                                Value : plain\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonColor\n                    \n                \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 CTA\n                            \n                        \n                        \n                            \n                                Value : CTA\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonIconDirection\n                    \n                \n                        \n                            \n                                 left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n                        \n                            \n                                 right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonSize\n                    \n                \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n                        \n                            \n                                 large\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IconButtonCategories\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IFlyoutOptionType\n                    \n                \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 checkbox\n                            \n                        \n                        \n                            \n                                Value : checkbox\n                            \n                        \n                        \n                            \n                                 dropdown\n                            \n                        \n                        \n                            \n                                Value : dropdown\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n                        \n                            \n                                 heading\n                            \n                        \n                        \n                            \n                                Value : heading\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IFlyoutSelectTypes\n                    \n                \n                        \n                            \n                                 single\n                            \n                        \n                        \n                            \n                                Value : single\n                            \n                        \n                        \n                            \n                                 multi\n                            \n                        \n                        \n                            \n                                Value : multi\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IndicatorPalette\n                    \n                \n                        \n                            \n                                 teal\n                            \n                        \n                        \n                            \n                                 orange\n                            \n                        \n                        \n                            \n                                 red\n                            \n                        \n                        \n                            \n                                 grey\n                            \n                        \n                        \n                            \n                                 blue\n                            \n                        \n                        \n                            \n                                 green\n                            \n                        \n                        \n                            \n                                 purple\n                            \n                        \n                        \n                            \n                                 navy\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorPurpose\n                    \n                \n                        \n                            \n                                 status\n                            \n                        \n                        \n                            \n                                Value : status\n                            \n                        \n                        \n                            \n                                 palette\n                            \n                        \n                        \n                            \n                                Value : palette\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorStatus\n                    \n                \n                        \n                            \n                                 information\n                            \n                        \n                        \n                            \n                                Value : information\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 neutral\n                            \n                        \n                        \n                            \n                                Value : neutral\n                            \n                        \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorTreatment\n                    \n                \n                        \n                            \n                                 strong\n                            \n                        \n                        \n                            \n                                Value : strong\n                            \n                        \n                        \n                            \n                                 weak\n                            \n                        \n                        \n                            \n                                Value : weak\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorType\n                    \n                \n                        \n                            \n                                 dot\n                            \n                        \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/form-components/input/input.component.ts\n    \n        \n            \n                \n                    \n                        \n                        InputTypes\n                    \n                \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 password\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LinkType\n                    \n                \n                        \n                            \n                                 href\n                            \n                        \n                        \n                            \n                                Value : href\n                            \n                        \n                        \n                            \n                                 routerLink\n                            \n                        \n                        \n                            \n                                Value : routerLink\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Orientations\n                    \n                \n                        \n                            \n                                 horizontal\n                            \n                        \n                        \n                            \n                                Value : horizontal\n                            \n                        \n                        \n                            \n                                 vertical\n                            \n                        \n                        \n                            \n                                Value : vertical\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ResizableTypes\n                    \n                \n                        \n                            \n                                 vertical\n                            \n                        \n                        \n                            \n                                Value : vertical\n                            \n                        \n                        \n                            \n                                 horizontal\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n                        \n                            \n                                 both\n                            \n                        \n                        \n                            \n                                Value : both\n                            \n                        \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n    \n        \n            \n                \n                    \n                        \n                        SpinnerType\n                    \n                \n                        \n                            \n                                 active\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TagType\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 locked\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 notStarted\n                            \n                        \n                        \n                            \n                                Value : notStarted\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularBannerModule\n\n\n\ncluster_IrccDsAngularBannerModule_declarations\n\n\n\ncluster_IrccDsAngularBannerModule_exports\n\n\n\ncluster_IrccDsAngularComponentsSharedModule\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_declarations\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_exports\n\n\n\ncluster_IrccDsAngularFormComponentsModule\n\n\n\ncluster_IrccDsAngularFormComponentsModule_declarations\n\n\n\ncluster_IrccDsAngularFormComponentsModule_exports\n\n\n\ncluster_IrccDsAngularHeaderFooterModule\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_declarations\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_exports\n\n\n\ncluster_IrccDsAngularLegacyOldModule\n\n\n\ncluster_IrccDsAngularLegacyOldModule_declarations\n\n\n\ncluster_IrccDsAngularLegacyOldModule_exports\n\n\n\n\nBannerComponent\n\nBannerComponent\n\n\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule -->\n\nBannerComponent->IrccDsAngularBannerModule\n\n\n\n\n\nBannerComponent \n\nBannerComponent \n\nBannerComponent  -->\n\nIrccDsAngularBannerModule->BannerComponent \n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\n\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbLinkComponent\n\nBreadcrumbLinkComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbLinkComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nDropdownComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutComponent\n\nFlyoutComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutOptionComponent\n\nFlyoutOptionComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutOptionComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIndicatorComponent\n\nIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nLabelComponent\n\nLabelComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nLabelComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressIndicatorComponent\n\nProgressIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressTagsComponent\n\nProgressTagsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressTagsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nSpinnerComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nTabsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbComponent \n\n\n\n\n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbLinkComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->ButtonComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nIrccDsAngularComponentsSharedModule->DropdownComponent \n\n\n\n\n\nFlyoutComponent \n\nFlyoutComponent \n\nFlyoutComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutComponent \n\n\n\n\n\nFlyoutOptionComponent \n\nFlyoutOptionComponent \n\nFlyoutOptionComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutOptionComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconComponent \n\n\n\n\n\nIndicatorComponent \n\nIndicatorComponent \n\nIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->IndicatorComponent \n\n\n\n\n\nLabelComponent \n\nLabelComponent \n\nLabelComponent  -->\n\nIrccDsAngularComponentsSharedModule->LabelComponent \n\n\n\n\n\nProgressIndicatorComponent \n\nProgressIndicatorComponent \n\nProgressIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressIndicatorComponent \n\n\n\n\n\nProgressTagsComponent \n\nProgressTagsComponent \n\nProgressTagsComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressTagsComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nIrccDsAngularComponentsSharedModule->SpinnerComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nIrccDsAngularComponentsSharedModule->TabsComponent \n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule -->\n\nCheckboxComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nDatePickerComponent\n\nDatePickerComponent\n\nIrccDsAngularFormComponentsModule -->\n\nDatePickerComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nIrccDsAngularFormComponentsModule -->\n\nErrorComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nRadioInputComponent\n\nRadioInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nRadioInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nIrccDsAngularFormComponentsModule -->\n\nSelectComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\nIrccDsAngularFormComponentsModule -->\n\nTextareaComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nIrccDsAngularFormComponentsModule->CheckboxComponent \n\n\n\n\n\nDatePickerComponent \n\nDatePickerComponent \n\nDatePickerComponent  -->\n\nIrccDsAngularFormComponentsModule->DatePickerComponent \n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nIrccDsAngularFormComponentsModule->ErrorComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIrccDsAngularFormComponentsModule->InputComponent \n\n\n\n\n\nRadioInputComponent \n\nRadioInputComponent \n\nRadioInputComponent  -->\n\nIrccDsAngularFormComponentsModule->RadioInputComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nIrccDsAngularFormComponentsModule->SelectComponent \n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nIrccDsAngularFormComponentsModule->TextareaComponent \n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule -->\n\nFooterComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHeaderComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHiddenNavComponent\n\nHiddenNavComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHiddenNavComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nLanguageSwitchComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nIrccDsAngularHeaderFooterModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nIrccDsAngularHeaderFooterModule->HeaderComponent \n\n\n\n\n\nHiddenNavComponent \n\nHiddenNavComponent \n\nHiddenNavComponent  -->\n\nIrccDsAngularHeaderFooterModule->HiddenNavComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nIrccDsAngularHeaderFooterModule->LanguageSwitchComponent \n\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule -->\n\nAutocompleteComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipItemComponent\n\nChipItemComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipItemComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipListComponent\n\nChipListComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipListComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSearchInputComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSecondaryChipsComponent\n\nSecondaryChipsComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSecondaryChipsComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nIrccDsAngularLegacyOldModule->AutocompleteComponent \n\n\n\n\n\nChipItemComponent \n\nChipItemComponent \n\nChipItemComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipItemComponent \n\n\n\n\n\nChipListComponent \n\nChipListComponent \n\nChipListComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipListComponent \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nIrccDsAngularLegacyOldModule->SearchInputComponent \n\n\n\n\n\nSecondaryChipsComponent \n\nSecondaryChipsComponent \n\nSecondaryChipsComponent  -->\n\nIrccDsAngularLegacyOldModule->SecondaryChipsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    38 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        IrccDsAngularBannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularComponentsSharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularFormComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularHeaderFooterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularLegacyOldModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CANADA_LOGO_ARIA_LABEL_ENGLISH   (component-library/.../header.component.ts)\n                        \n                        \n                            CANADA_LOGO_ARIA_LABEL_FRENCH   (component-library/.../header.component.ts)\n                        \n                        \n                            CLASS_TRASHCAN   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            CLASS_X_MARK   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            DATE_PICKER_DAY_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_LABELS_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_LABELS_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTH_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTHS_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTHS_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_DAY_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_DAY_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_MONTH_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_MONTH_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_YEAR_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_YEAR_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_UNKOWN_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_UNKOWN_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_YEAR_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            ENGLISH_BANNER_URL   (component-library/.../header.component.ts)\n                        \n                        \n                            ERROR_TEXT_STUB_EN   (component-library/.../label.component.ts)\n                        \n                        \n                            ERROR_TEXT_STUB_FR   (component-library/.../label.component.ts)\n                        \n                        \n                            FRENCH_BANNER_URL   (component-library/.../header.component.ts)\n                        \n                        \n                            GOV_LOGO_ALT_TEXT_EN   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ALT_TEXT_FR   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ARIA_LABEL_ENGLISH   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ARIA_LABEL_FRENCH   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_FOOTER   (component-library/.../footer.component.ts)\n                        \n                        \n                            HEADER_IMG_LINK_EN   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_IMG_LINK_FR   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_LINK_ALT_FR   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_LINK_ATL_EN   (component-library/.../header.component.ts)\n                        \n                        \n                            HELP_ICON_ALT_EN   (component-library/.../label.component.ts)\n                        \n                        \n                            HELP_ICON_ALT_FR   (component-library/.../label.component.ts)\n                        \n                        \n                            IrccDsAngularFormComponents   (component-library/.../ircc-ds-angular-form-components.module.ts)\n                        \n                        \n                            IrccDsHeaderFooterComponents   (component-library/.../ircc-ds-angular-header-footer.module.ts)\n                        \n                        \n                            IrccDsLegacyOldComponents   (component-library/.../ircc-ds-angular-legacy-old.module.ts)\n                        \n                        \n                            IrccDsSharedComponents   (component-library/.../ircc-ds-angular-component-shared.module.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_ENGLISH   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_FRENCH   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            PROGRESS_INDICATOR_STEP_EN   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            PROGRESS_INDICATOR_STEP_FR   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            SPINNER_LABELS_EN   (component-library/.../spinner.component.ts)\n                        \n                        \n                            SPINNER_LABELS_FR   (component-library/.../spinner.component.ts)\n                        \n                        \n                            TAG_LABELS_EN   (component-library/.../progress-tags.component.ts)\n                        \n                        \n                            TAG_LABELS_FR   (component-library/.../progress-tags.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    component-library/component-lib/src/lib/header-footer/header/header.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CANADA_LOGO_ARIA_LABEL_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbol of the Government of Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CANADA_LOGO_ARIA_LABEL_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbole du gouvernement du Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENGLISH_BANNER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-en.svg'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FRENCH_BANNER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-fr.svg'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_IMG_LINK_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/en.html'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_IMG_LINK_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/fr.html'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_LINK_ALT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gouvernement du Canada logo'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_LINK_ATL_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Government of Canada logo'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CLASS_TRASHCAN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fa-solid fa-trash-can'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CLASS_X_MARK\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fa-thin fa-xmark'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_DAY_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_dayControl'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Day', 'Month', 'Year']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Jour', 'Mois', 'Année']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_monthControl'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTHS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTHS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_DAY_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DD'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_DAY_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JJ'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_MONTH_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Month'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_MONTH_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mois'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_YEAR_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'YYYY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_YEAR_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AAAA'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_UNKOWN_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Unknown'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_UNKOWN_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Inconnu'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_YEAR_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_yearControl'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/label/label.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_TEXT_STUB_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Error'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_TEXT_STUB_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Erreur'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HELP_ICON_ALT_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ', more information'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HELP_ICON_ALT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \", plus d'information\"\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ALT_TEXT_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Canada wordmark'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ALT_TEXT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR Canada wordmark'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ARIA_LABEL_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbol of the Government of Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ARIA_LABEL_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbole du gouvernement du Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_FOOTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/wmms-blk.svg'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsAngularFormComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CheckboxComponent,\n  ErrorComponent,\n  InputComponent,\n  RadioInputComponent,\n  DatePickerComponent,\n  TextareaComponent,\n  SelectComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsHeaderFooterComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  HeaderComponent,\n  FooterComponent,\n  LanguageSwitchComponent,\n  HiddenNavComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsLegacyOldComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  AutocompleteComponent,\n  ChipListComponent,\n  SecondaryChipsComponent,\n  ChipItemComponent,\n  SearchInputComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsSharedComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ButtonComponent,\n  BreadcrumbComponent,\n  BreadcrumbLinkComponent,\n  IconComponent,\n  IconButtonComponent,\n  IndicatorComponent,\n  TabsComponent,\n  ProgressTagsComponent,\n  DropdownComponent,\n  LabelComponent,\n  ProgressTagsComponent,\n  ProgressIndicatorComponent,\n  SpinnerComponent,\n  FlyoutComponent,\n  FlyoutOptionComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Français'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'English'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'EN'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PROGRESS_INDICATOR_STEP_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Step'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROGRESS_INDICATOR_STEP_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Étap'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SPINNER_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Loading', 'Success', 'Error']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPINNER_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Chargement', 'Succès', 'Erreur']\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TAG_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TAG_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
