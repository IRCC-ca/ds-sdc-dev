var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/BannerComponent.html",[0,0.229,1,0.779]],["body/components/BannerComponent.html",[0,0.457,1,1.192,2,1.067,3,0.113,4,0.069,5,0.71,6,0.753,7,0.753,8,0.06,9,0.334,10,5.156,11,2.296,12,0.422,13,0.521,14,0.753,15,0.362,16,0.493,17,0.551,18,0.441,19,4.626,20,0.204,21,3.888,22,0.089,23,0.283,24,4.238,25,4.591,26,4.591,27,1.133,28,4.896,29,5.048,30,3.678,31,0.556,32,5.048,33,1.1,34,5.048,35,0.435,36,0.731,37,2.374,38,4.591,39,0.251,40,0.012,41,0.362,42,1.267,43,0.837,44,3.589,45,1.679,46,3.355,47,3.956,48,3.355,49,3.355,50,1.505,51,3.355,52,3.888,53,3.355,54,0.9,55,1.187,56,0.252,57,3.355,58,1.307,59,0.921,60,3.355,61,3.355,62,3.355,63,3.355,64,2.501,65,1.786,66,1.845,67,2.473,68,0.899,69,0.119,70,3.211,71,2.473,72,2.982,73,1.974,74,1.365,75,0.572,76,1.729,77,3.355,78,1.275,79,3.355,80,3.355,81,0.119,82,0.285,83,1.202,84,0.069,85,1.695,86,2.043,87,1.307,88,1.627,89,2.473,90,2.664,91,0.146,92,1.551,93,3.589,94,3.589,95,2.118,96,2.473,97,3.152,98,3.589,99,2.374,100,2.374,101,3.589,102,2.803,103,1.908,104,0.208,105,3.351,106,0.899,107,0.899,108,2.664,109,2.664,110,2.16,111,2.664,112,2.664,113,2.664,114,0.976,115,2.664,116,1.185,117,0.762,118,1.941,119,2.296,120,0.762,121,2.664,122,2.16,123,0.489,124,0.505,125,2.664,126,4.591,127,2.664,128,2.664,129,2.664,130,2.664,131,2.664,132,2.46,133,2.664,134,2.664,135,5.368,136,2.664,137,4.092,138,3.888,139,1.695,140,4.591,141,2.664,142,2.664,143,3.888,144,1.941,145,1.941,146,2.664,147,2.664,148,2.664,149,2.664,150,2.664,151,2.664,152,3.888,153,2.664,154,2.664,155,1.769,156,3.888,157,2.664,158,3.888,159,4.896,160,1.407,161,6.356,162,0.753,163,1.1,164,1.036,165,0.753,166,0.753,167,0.689,168,1.497,169,0.731,170,1.1,171,0.649,172,0.753,173,0.753,174,0.629,175,0.753,176,0.629,177,0.71,178,0.753,179,0.629,180,1.1,181,0.629,182,0.753,183,0.629,184,1.1,185,0.753,186,0.649,187,0.753,188,0.689,189,0.731,190,0.753,191,0.71,192,0.753,193,0.592,194,0.61,195,0.753,196,0.629,197,0.753,198,0.61,199,0.753,200,0.629,201,0.753,202,0.629,203,0.669,204,0.753,205,0.649,206,0.753,207,0.649,208,0.753,209,0.61,210,0.689,211,0.753,212,0.61,213,0.629,214,0.753,215,0.629,216,1.1,217,0.71,218,0.753,219,0.61,220,1.298,221,0.71,222,0.753,223,0.753,224,0.61,225,0.753,226,0.649,227,0.629,228,0.753,229,0.61,230,0.947,231,0.629,232,0.753,233,0.61,234,0.689,235,0.71,236,0.731,237,0.61,238,0.689,239,0.649,240,0.689,241,0.753,242,0.61,243,0.753,244,0.629,245,0.753,246,0.61,247,0.753,248,0.629,249,0.753,250,0.689,251,0.689,252,0.753,253,0.753,254,0.006,255,0.006]],["title/components/BreadcrumbComponent.html",[0,0.229,174,0.779]],["body/components/BreadcrumbComponent.html",[0,0.46,1,0.52,2,0.925,3,0.076,4,0.057,5,0.586,6,0.622,7,0.622,8,0.049,9,0.342,12,0.366,13,0.464,14,0.622,15,0.357,16,0.483,17,0.54,18,0.434,20,0.177,22,0.073,23,0.246,27,0.982,30,3.344,31,0.456,33,0.953,35,0.388,36,0.61,39,0.259,40,0.012,41,0.307,42,1.31,43,0.865,45,1.73,54,1.55,55,1.35,56,0.573,58,1.399,59,0.932,64,2.231,66,1.599,67,2.144,68,0.969,69,0.107,70,2.919,71,2.144,73,1.711,74,1.271,75,0.561,76,1.499,81,0.136,82,0.19,84,0.057,87,1.08,88,1.344,91,0.107,92,0.743,102,2.058,104,0.1,106,0.66,107,0.66,114,0.846,117,0.66,120,0.899,123,0.908,139,1.4,160,0.846,162,0.622,163,0.953,164,1.091,165,0.622,166,0.622,167,0.569,168,1.405,169,0.604,170,0.953,171,0.536,172,0.622,173,0.622,174,1.084,175,0.622,176,0.52,177,1.223,178,0.622,179,0.52,180,0.953,181,0.52,182,0.622,183,0.52,184,0.953,185,0.622,186,0.536,187,0.622,188,0.569,189,0.604,190,0.622,191,0.586,192,0.622,193,0.489,194,0.504,195,0.622,196,0.52,197,0.622,198,0.504,199,0.622,200,0.52,201,0.622,202,0.52,203,0.552,204,0.622,205,0.536,206,0.622,207,0.536,208,0.622,209,0.504,210,0.569,211,0.622,212,0.504,213,0.52,214,0.622,215,0.52,216,0.953,217,0.586,218,0.622,219,0.504,220,1.158,221,0.586,222,0.622,223,0.622,224,0.504,225,0.622,226,0.536,227,0.52,228,0.622,229,0.504,230,0.821,231,0.52,232,0.622,233,0.504,234,0.569,235,0.586,236,0.604,237,0.504,238,0.569,239,0.536,240,0.569,241,0.622,242,0.504,243,0.622,244,0.52,245,0.622,246,0.504,247,0.622,248,0.52,249,0.622,250,0.569,251,0.569,252,0.622,253,0.622,254,0.006,255,0.006,256,2.031,257,2.605,258,3.781,259,3.717,260,4.517,261,4.517,262,4.517,263,4.517,264,4.517,265,1.89,266,5.457,267,4.517,268,4.517,269,4.517,270,5.062,271,5.062,272,4.243,273,5.062,274,5.062,275,1.654,276,4.243,277,2.904,278,3.717,279,0.726,280,1.603,281,1.418,282,4.517,283,2.041,284,4.095,285,4.589,286,4.517,287,5.062,288,4.243,289,3.781,290,4.517,291,3.802,292,2.771,293,2.031,294,3.72,295,2.771,296,4.243,297,2.771,298,3.111,299,3.717,300,2.771,301,3.717,302,2.771,303,2.771,304,2.771,305,2.771,306,1.858,307,2.771,308,2.144,309,2.919,310,2.771,311,1.199,312,2.771,313,3.717,314,3.141,315,3.37,316,2.771,317,3.436,318,3.717,319,4.237,320,1.883,321,2.771,322,2.771,323,3.717,324,2.771,325,3.02,326,2.771,327,4.231,328,2.771,329,2.771,330,3.717,331,3.111,332,3.717,333,2.771,334,1.528,335,1.603,336,1.041,337,0.586,338,0.586,339,2.427,340,0.586,341,0.586,342,0.979,343,0.979,344,3.37,345,3.529,346,2.031,347,1.603,348,2.427,349,2.427,350,2.427,351,2.427,352,2.031,353,2.427,354,5.062,355,2.427,356,2.427,357,2.427,358,2.427,359,4.517,360,3.111,361,2.732,362,2.732,363,2.341,364,2.2,365,4.517,366,3.717,367,1.452,368,3.717,369,3.717,370,2.427,371,2.427,372,2.427,373,2.427,374,3.717,375,3.717,376,3.717,377,2.427,378,2.427,379,3.717,380,1.784,381,3.111,382,2.427,383,2.427,384,2.427,385,2.427,386,2.427,387,2.427,388,2.427,389,1.244,390,4.517,391,3.717,392,2.427,393,2.427,394,3.717,395,2.427,396,2.427,397,2.427,398,3.717,399,1.599,400,5.062,401,0.7,402,5.062,403,2.427,404,2.427,405,5.457,406,3.717,407,4.517,408,4.517,409,1.16,410,2.427,411,3.717,412,2.427,413,4.517,414,2.427,415,2.427,416,2.427,417,2.427,418,2.427,419,2.427,420,2.427,421,2.427,422,1.784,423,2.427,424,2.427,425,2.031,426,2.427,427,1.711,428,2.427,429,2.427,430,2.427,431,2.427,432,3.717,433,1.292,434,2.427,435,2.427,436,2.427,437,2.427,438,5.779]],["title/components/BreadcrumbLinkComponent.html",[0,0.229,176,0.779]],["body/components/BreadcrumbLinkComponent.html",[0,0.439,1,0.865,2,1.332,3,0.109,4,0.095,5,0.976,6,1.035,7,1.035,8,0.082,9,0.286,14,1.035,15,0.368,16,0.506,17,0.565,18,0.451,20,0.255,22,0.122,33,1.372,35,0.516,39,0.15,40,0.012,41,0.327,42,0.919,43,0.607,45,1.293,55,1.255,68,0.717,69,0.095,74,1.411,75,0.657,81,0.095,82,0.274,84,0.095,91,0.126,102,2.963,104,0.166,114,0.919,117,0.717,120,0.717,160,1.454,162,1.035,163,1.372,164,1.293,165,1.035,166,1.035,167,0.947,168,1.635,169,1.005,170,1.372,171,0.892,172,1.035,173,1.035,174,0.865,175,1.035,176,1.369,177,1.45,178,1.035,179,0.865,180,1.372,181,0.865,182,1.035,183,0.865,184,1.372,185,1.035,186,0.892,187,1.035,188,0.947,189,1.005,190,1.035,191,0.976,192,1.035,193,0.813,194,0.839,195,1.035,196,0.865,197,1.035,198,0.839,199,1.035,200,0.865,201,1.035,202,0.865,203,0.919,204,1.035,205,0.892,206,1.035,207,0.892,208,1.035,209,0.839,210,0.947,211,1.035,212,0.839,213,0.865,214,1.035,215,0.865,216,1.372,217,0.976,218,1.035,219,0.839,220,1.539,221,0.976,222,1.035,223,1.035,224,0.839,225,1.035,226,0.892,227,0.865,228,1.035,229,0.839,230,1.182,231,0.865,232,1.035,233,0.839,234,0.947,235,0.976,236,1.005,237,0.839,238,0.947,239,0.892,240,0.947,241,1.035,242,0.839,243,1.035,244,0.865,245,1.035,246,0.839,247,1.035,248,0.865,249,1.035,250,0.947,251,0.947,252,1.035,253,1.035,254,0.008,255,0.008,279,1.172,291,2.667,320,1.591,327,4.412,345,3.155,361,4.412,439,3.661,440,5.351,441,4.61,442,4.61,443,4.038,444,7.297]],["title/components/ButtonComponent.html",[0,0.229,179,0.779]],["body/components/ButtonComponent.html",[0,0.461,1,0.673,2,1.12,3,0.091,4,0.074,5,0.759,6,0.806,7,0.806,8,0.064,9,0.34,14,0.806,15,0.363,16,0.496,17,0.554,18,0.444,20,0.214,22,0.095,27,1.189,31,0.517,33,1.154,35,0.452,36,0.728,37,2.492,39,0.247,40,0.012,41,0.356,42,1.024,43,0.677,45,1.715,50,1.707,54,0.962,55,1.233,56,0.27,58,0.994,59,0.7,66,2.471,68,1.079,69,0.074,73,2.644,74,1.268,75,0.323,76,1.815,81,0.074,82,0.356,83,1.261,84,0.074,89,3.033,91,0.154,92,1.861,95,2.223,99,2.492,100,2.492,103,2.555,104,0.129,106,1.183,107,1.183,114,0.715,116,2.316,117,0.558,120,0.934,122,3.308,123,0.955,124,0.54,162,0.806,163,1.154,164,1.088,165,0.806,166,0.806,167,0.737,168,1.527,169,0.782,170,1.154,171,0.694,172,0.806,173,0.806,174,0.673,175,0.806,176,0.673,177,0.759,178,0.806,179,1.23,180,1.154,181,0.673,182,0.806,183,0.673,184,1.154,185,0.806,186,0.694,187,0.806,188,0.737,189,0.782,190,0.806,191,0.759,192,0.806,193,0.633,194,0.653,195,0.806,196,0.673,197,0.806,198,0.653,199,0.806,200,0.673,201,0.806,202,0.673,203,0.715,204,0.806,205,0.694,206,0.806,207,0.694,208,0.806,209,0.653,210,0.737,211,0.806,212,0.653,213,0.673,214,0.806,215,0.673,216,1.154,217,0.759,218,0.806,219,0.653,220,1.349,221,0.759,222,0.806,223,0.806,224,0.653,225,0.806,226,0.694,227,0.673,228,0.806,229,0.653,230,0.994,231,0.673,232,0.806,233,0.653,234,0.737,235,0.759,236,0.782,237,0.653,238,0.737,239,0.694,240,1.233,241,0.806,242,0.653,243,0.806,244,0.673,245,0.806,246,0.653,247,0.806,248,0.673,249,0.806,250,0.737,251,0.737,252,0.806,253,0.806,254,0.007,255,0.007,306,1.93,367,1.227,401,2.078,445,2.63,446,3.517,447,3.767,448,2.392,449,4.807,450,5.743,451,5.259,452,3.587,453,3.587,454,3.587,455,3.587,456,3.587,457,3.587,458,3.587,459,3.587,460,3.587,461,3.587,462,3.587,463,4.501,464,3.587,465,3.587,466,4.109,467,3.13,468,4.769,469,4.769,470,3.142,471,4.501,472,2.973,473,4.769,474,3.657,475,3.517,476,1.261,477,0.806,478,3.13,479,2.185,480,2.002,481,4.501,482,3.142,483,3.517,484,2.455,485,2.396,486,1.61,487,4.501,488,3.142,489,3.474,490,3.457,491,6.325,492,4.501,493,3.142]],["title/components/CheckboxComponent.html",[0,0.229,181,0.779]],["body/components/CheckboxComponent.html",[0,0.464,1,0.504,2,0.903,3,0.074,4,0.055,5,1.07,6,0.603,7,0.603,8,0.048,9,0.346,12,0.357,13,0.455,14,0.603,15,0.356,16,0.482,17,0.538,18,0.433,20,0.173,22,0.071,23,0.24,27,0.958,31,0.448,33,0.93,35,0.38,36,0.635,39,0.254,40,0.012,41,0.339,42,1.526,43,1.009,45,1.75,54,1.647,55,1.389,56,0.539,58,1.416,59,1.03,65,2.073,68,0.418,69,0.055,74,1.099,75,0.512,78,1.761,81,0.14,82,0.255,83,1.017,84,0.055,91,0.086,104,0.097,106,0.418,107,0.418,114,0.535,117,0.418,120,1.138,123,0.737,124,0.624,155,1.416,160,1.348,162,0.603,163,0.93,164,0.877,165,0.603,166,0.603,167,0.551,168,1.389,169,0.585,170,0.93,171,0.519,172,0.603,173,0.603,174,0.504,175,0.603,176,0.504,177,0.568,178,0.603,179,0.504,180,0.93,181,1.218,182,0.603,183,0.504,184,0.93,185,0.603,186,0.519,187,0.603,188,0.551,189,0.585,190,0.603,191,0.568,192,0.603,193,0.474,194,0.489,195,0.603,196,0.504,197,0.603,198,0.489,199,0.603,200,0.504,201,0.603,202,0.504,203,0.535,204,0.603,205,0.519,206,0.603,207,0.519,208,0.603,209,0.489,210,0.551,211,0.603,212,0.489,213,0.504,214,0.603,215,0.504,216,0.93,217,0.568,218,0.603,219,0.489,220,1.136,221,0.568,222,0.603,223,0.603,224,0.489,225,0.603,226,0.519,227,0.504,228,0.603,229,0.489,230,0.801,231,0.504,232,0.603,233,0.489,234,0.551,235,0.568,236,0.585,237,0.489,238,0.551,239,0.519,240,0.551,241,0.603,242,0.489,243,0.603,244,0.504,245,0.603,246,0.489,247,0.603,248,0.504,249,0.603,250,0.551,251,0.551,252,0.603,253,0.603,254,0.005,255,0.005,265,0.742,275,2.215,279,0.708,281,1.395,283,2.531,311,1.162,320,1.599,331,1.968,336,1.241,337,0.568,338,0.568,340,0.568,341,0.568,342,0.948,343,0.948,367,0.919,401,0.679,409,0.474,427,2.039,448,1.511,476,1.017,477,1.379,485,1.252,486,1.205,494,2.751,495,2.132,496,2.452,497,1.614,498,1.729,499,2.111,500,1.729,501,2.111,502,1.561,503,2.835,504,3.628,505,2.666,506,2.111,507,2.757,508,3.153,509,2.789,510,3.852,511,2.111,512,2.452,513,3.255,514,1.844,515,2.727,516,3.422,517,4.167,518,2.997,519,2.835,520,2.835,521,3.289,522,2.285,523,3.659,524,2.995,525,1.838,526,4.142,527,3.707,528,3.388,529,4.429,530,2.685,531,2.685,532,2.685,533,2.685,534,1.561,535,1.857,536,1.802,537,2.685,538,2.551,539,3.037,540,2.685,541,2.685,542,2.685,543,1.859,544,2.184,545,2.285,546,2.685,547,3.135,548,2.285,549,2.685,550,1.968,551,2.685,552,2.657,553,3.628,554,3.037,555,1.614,556,2.685,557,1.906,558,2.685,559,2.685,560,2.111,561,2.685,562,2.666,563,2.685,564,2.685,565,2.685,566,1.786,567,2.823,568,1.561,569,2.685,570,2.685,571,2.685,572,2.685,573,2.685,574,0.837,575,1.561,576,1.012,577,1.012,578,1.561,579,1.561,580,1.463,581,1.121,582,1.012,583,2.352,584,2.352,585,2.352,586,2.352,587,2.352,588,2.352,589,2.352,590,2.352,591,1.838,592,2.352,593,1.012,594,1.012,595,1.121,596,1.302,597,1.252,598,2.352,599,2.132,600,2.352,601,2.352,602,1.968,603,2.352,604,2.352,605,1.416,606,1.968,607,1.205,608,1.729,609,2.352,610,2.666,611,1.205,612,1.416,613,1.046,614,1.046,615,1.046,616,1.729,617,1.729,618,2.709,619,1.373,620,1.729,621,3.628,622,1.729,623,1.729,624,1.931,625,1.121,626,1.121,627,1.968,628,2.666,629,1.416,630,1.416,631,1.416,632,1.205,633,1.179,634,1.67,635,1.968,636,1.968,637,4.142,638,2.666]],["title/components/ChipItemComponent.html",[0,0.229,183,0.779]],["body/components/ChipItemComponent.html",[0,0.454,1,0.846,2,1.313,3,0.107,4,0.093,5,0.955,6,1.013,7,1.013,8,0.08,9,0.323,14,1.013,15,0.368,16,0.504,17,0.563,18,0.45,20,0.251,22,0.119,27,1.393,33,1.352,37,2.92,39,0.195,40,0.012,41,0.27,45,1.595,50,1.765,55,1.237,58,1.165,59,0.821,68,0.702,69,0.093,74,1.399,75,0.406,81,0.093,82,0.27,83,1.478,84,0.093,91,0.093,114,0.899,117,0.702,124,0.679,162,1.013,163,1.352,164,1.274,165,1.013,166,1.013,167,0.926,168,1.626,169,0.983,170,1.352,171,0.872,172,1.013,173,1.013,174,0.846,175,1.013,176,0.846,177,0.955,178,1.013,179,0.846,180,1.352,181,0.846,182,1.013,183,1.357,184,1.741,185,1.013,186,0.872,187,1.013,188,0.926,189,0.983,190,1.013,191,0.955,192,1.013,193,0.796,194,0.821,195,1.013,196,0.846,197,1.013,198,0.821,199,1.013,200,0.846,201,1.013,202,0.846,203,0.899,204,1.013,205,0.872,206,1.013,207,0.872,208,1.013,209,0.821,210,0.926,211,1.013,212,0.821,213,0.846,214,1.013,215,0.846,216,1.352,217,0.955,218,1.013,219,0.821,220,1.522,221,0.955,222,1.013,223,1.013,224,0.821,225,1.013,226,0.872,227,0.846,228,1.013,229,0.821,230,1.165,231,0.846,232,1.013,233,0.821,234,0.926,235,0.955,236,0.983,237,0.821,238,0.926,239,0.872,240,0.926,241,1.013,242,0.821,243,1.013,244,0.846,245,1.013,246,0.821,247,1.013,248,0.846,249,1.013,250,0.926,251,0.926,252,1.013,253,1.013,254,0.008,255,0.008,279,1.159,639,4.088,640,6.158,641,5.684,642,3.951,643,4.782,644,6.022,645,7.234,646,7.234,647,6.602,648,6.779,649,6.022,650,4.511,651,4.511,652,4.511,653,6.022]],["title/components/ChipListComponent.html",[0,0.229,186,0.803]],["body/components/ChipListComponent.html",[0,0.458,1,0.812,2,1.277,3,0.104,4,0.089,5,0.916,6,0.972,7,0.972,8,0.077,9,0.332,12,0.505,13,0.598,14,0.972,15,0.367,16,0.502,17,0.561,18,0.449,20,0.244,22,0.115,23,0.339,27,1.355,31,0.561,33,1.315,37,2.84,39,0.231,40,0.012,41,0.319,45,1.658,50,1.729,54,1.161,55,1.364,56,0.499,58,1.284,59,0.969,68,0.673,69,0.089,74,1.376,75,0.39,81,0.089,82,0.263,83,1.437,84,0.089,91,0.089,114,0.863,117,0.673,124,0.652,162,0.972,163,1.315,164,1.239,165,0.972,166,0.972,167,0.889,168,1.609,169,0.944,170,1.315,171,0.837,172,0.972,173,0.972,174,0.812,175,0.972,176,0.812,177,0.916,178,0.972,179,0.812,180,1.315,181,0.812,182,0.972,183,0.812,184,1.721,185,0.972,186,1.376,187,0.972,188,0.889,189,0.944,190,0.972,191,0.916,192,0.972,193,0.764,194,0.788,195,0.972,196,0.812,197,0.972,198,0.788,199,0.972,200,0.812,201,0.972,202,0.812,203,0.863,204,0.972,205,0.837,206,0.972,207,0.837,208,0.972,209,0.788,210,0.889,211,0.972,212,0.788,213,0.812,214,0.972,215,0.812,216,1.315,217,0.916,218,0.972,219,0.788,220,1.491,221,0.916,222,0.972,223,0.972,224,0.788,225,0.972,226,0.837,227,0.812,228,0.972,229,0.788,230,1.133,231,0.812,232,0.972,233,0.788,234,0.889,235,0.916,236,0.944,237,0.788,238,0.889,239,0.837,240,0.889,241,0.972,242,0.788,243,0.972,244,0.812,245,0.972,246,0.788,247,0.972,248,0.812,249,0.972,250,0.889,251,0.889,252,0.972,253,0.972,254,0.008,255,0.008,279,1.136,306,2.134,399,1.631,639,4.201,640,6.328,654,6.328,655,3.791,656,5.857,657,5.857,658,6.639,659,7.113,660,5.857,661,6.639,662,6.639,663,5.857,664,4.328,665,4.328,666,4.328,667,4.328,668,5.857,669,4.328,670,4.328,671,4.328,672,5.857,673,5.857,674,4.328]],["title/components/ComponentPreviewComponent.html",[0,0.229,191,0.879]],["body/components/ComponentPreviewComponent.html",[0,0.467,1,0.832,2,1.298,3,0.106,4,0.092,5,0.939,6,0.996,7,0.996,8,0.079,14,0.996,15,0.368,16,0.503,17,0.562,18,0.449,20,0.248,22,0.117,33,1.337,39,0.193,40,0.012,41,0.322,45,1.422,55,1.223,68,0.69,69,0.092,73,2.401,74,1.449,75,0.536,81,0.092,82,0.301,84,0.092,91,0.092,114,0.884,117,0.69,118,2.566,144,2.566,160,1.432,162,0.996,163,1.337,164,1.26,165,0.996,166,0.996,167,0.911,168,1.667,169,0.967,170,1.337,171,0.858,172,0.996,173,0.996,174,0.832,175,0.996,176,0.832,177,0.939,178,0.996,179,0.832,180,1.337,181,0.832,182,0.996,183,0.832,184,1.337,185,0.996,186,0.858,187,0.996,188,0.911,189,0.967,190,0.996,191,1.52,192,0.996,193,0.783,194,0.807,195,0.996,196,0.832,197,0.996,198,0.807,199,0.996,200,0.832,201,0.996,202,0.832,203,0.884,204,0.996,205,0.858,206,0.996,207,0.858,208,0.996,209,0.807,210,0.911,211,0.996,212,0.807,213,0.832,214,0.996,215,0.832,216,1.337,217,0.939,218,0.996,219,0.807,220,1.51,221,0.939,222,0.996,223,0.996,224,0.807,225,0.996,226,0.858,227,0.832,228,0.996,229,0.807,230,1.152,231,0.832,232,0.996,233,0.807,234,0.911,235,0.939,236,0.967,237,0.807,238,0.911,239,0.858,240,0.911,241,0.996,242,0.807,243,0.996,244,0.832,245,0.996,246,0.807,247,0.996,248,0.832,249,0.996,250,0.911,251,0.911,252,0.996,253,0.996,254,0.008,255,0.008,279,1.15,362,2.855,363,2.446,675,2.701,676,6.293,677,6.293,678,3.885,679,6.721,680,3.139,681,6.721,682,5.954,683,6.721,684,6.721,685,5.954,686,4.435,687,5.954,688,5.954,689,3.522,690,3.445,691,4.435,692,4.365,693,3.445,694,3.885,695,4.928,696,5.954,697,4.075,698,3.251,699,4.6,700,3.251,701,3.885,702,3.885,703,4.435,704,3.885,705,4.435,706,4.435,707,4.435,708,4.435,709,3.251,710,3.251,711,3.885,712,4.435,713,3.885,714,4.435]],["title/components/DropdownComponent.html",[0,0.229,196,0.779]],["body/components/DropdownComponent.html",[0,0.458,1,0.619,2,1.054,3,0.102,4,0.068,5,0.698,6,0.741,7,0.741,8,0.059,9,0.338,12,0.417,13,0.516,14,0.741,15,0.362,16,0.492,17,0.55,18,0.441,20,0.201,22,0.128,23,0.28,27,1.118,31,0.497,33,1.086,35,0.431,36,0.727,39,0.25,40,0.012,41,0.34,42,1.482,43,1.029,45,1.704,54,1.297,55,1.295,56,0.364,58,1.219,59,0.859,66,2.376,68,0.89,69,0.068,74,1.219,75,0.297,78,0.859,81,0.139,82,0.333,84,0.068,85,2.442,87,1.285,88,1.599,91,0.1,104,0.119,106,0.98,107,0.98,114,0.657,117,0.513,120,1.199,123,0.919,162,0.741,163,1.086,164,1.023,165,0.741,166,0.741,167,0.677,168,1.489,169,0.719,170,1.086,171,0.638,172,0.741,173,0.741,174,0.619,175,0.741,176,0.619,177,0.698,178,0.741,179,0.619,180,1.086,181,0.619,182,0.741,183,0.619,184,1.086,185,0.741,186,0.638,187,0.741,188,0.677,189,0.719,190,0.741,191,0.698,192,0.741,193,0.582,194,0.6,195,0.741,196,1.183,197,0.741,198,0.6,199,0.741,200,0.619,201,0.741,202,0.619,203,1.558,204,0.741,205,0.638,206,0.741,207,0.638,208,0.741,209,0.6,210,0.677,211,0.741,212,0.6,213,0.619,214,0.741,215,0.619,216,1.086,217,0.698,218,0.741,219,0.6,220,1.286,221,0.698,222,0.741,223,0.741,224,0.6,225,0.741,226,0.638,227,0.619,228,0.741,229,0.6,230,0.935,231,0.619,232,0.741,233,0.6,234,0.677,235,0.698,236,0.719,237,0.6,238,0.677,239,0.638,240,0.677,241,0.741,242,0.6,243,0.741,244,0.619,245,0.741,246,0.6,247,0.741,248,0.619,249,0.741,250,0.677,251,0.677,252,0.741,253,0.741,254,0.006,255,0.006,294,3.324,320,1.826,325,1.377,336,1.405,337,0.698,338,0.698,367,1.128,401,1.447,433,2.254,448,2.299,466,3.917,476,1.187,477,1.286,478,2.945,479,3.486,480,1.884,485,2.254,486,1.48,536,1.849,538,2.17,607,2.17,619,1.898,638,3.113,715,6.442,716,2.619,717,2.667,718,4.235,719,4.235,720,5.014,721,2.231,722,5.014,723,5.522,724,4.235,725,4.835,726,4.314,727,3.298,728,4.197,729,3.298,730,3.298,731,3.298,732,3.298,733,3.298,734,3.298,735,3.298,736,5.522,737,2.667,738,3.298,739,4.235,740,3.298,741,5.571,742,4.235,743,5.879,744,3.298,745,2.945,746,5.014,747,4.235,748,4.235,749,4.235,750,5.014,751,4.235,752,4.235,753,3.113,754,4.235,755,4.314,756,2.889,757,4.058,758,4.235,759,2.542,760,2.667,761,3.298,762,3.298,763,3.298,764,2.619,765,2.619,766,3.113,767,4.235,768,5.014,769,2.889,770,2.889,771,4.235,772,2.889,773,2.889,774,2.889,775,2.123,776,2.418,777,2.889,778,2.889,779,5.014,780,4.235,781,3.544,782,4.235,783,2.889,784,2.619,785,2.889,786,2.889,787,2.889,788,2.889,789,2.889,790,2.889,791,4.835]],["title/components/ErrorComponent.html",[0,0.229,198,0.756]],["body/components/ErrorComponent.html",[0,0.459,1,0.758,2,1.219,3,0.1,4,0.084,5,0.856,6,0.908,7,0.908,8,0.072,9,0.336,12,0.482,13,0.577,14,0.908,15,0.366,16,0.501,17,0.56,18,0.447,20,0.233,22,0.107,27,1.293,31,0.545,33,1.255,35,0.482,36,0.71,39,0.235,40,0.012,41,0.351,45,1.684,54,1.084,55,1.316,56,0.304,58,1.239,59,0.942,68,1.197,69,0.132,73,2.254,74,1.337,75,0.364,81,0.115,82,0.336,84,0.084,91,0.132,104,0.201,106,0.869,107,0.869,114,0.806,117,0.629,123,1.007,155,3.378,160,1.114,162,0.908,163,1.255,164,1.183,165,0.908,166,0.908,167,0.83,168,1.58,169,0.881,170,1.255,171,0.782,172,0.908,173,0.908,174,0.758,175,0.908,176,0.758,177,0.856,178,0.908,179,0.758,180,1.255,181,0.758,182,0.908,183,0.758,184,1.255,185,0.908,186,0.782,187,0.908,188,0.83,189,0.881,190,0.908,191,0.856,192,0.908,193,0.713,194,0.736,195,0.908,196,0.758,197,0.908,198,1.258,199,0.908,200,0.758,201,0.908,202,0.758,203,0.806,204,0.908,205,0.782,206,0.908,207,0.782,208,0.908,209,0.736,210,0.83,211,0.908,212,0.736,213,0.758,214,0.908,215,0.758,216,1.255,217,0.856,218,0.908,219,0.736,220,1.439,221,0.856,222,0.908,223,0.908,224,0.736,225,0.908,226,0.782,227,0.758,228,0.908,229,0.736,230,1.081,231,0.758,232,0.908,233,0.736,234,0.83,235,0.856,236,0.881,237,0.736,238,0.83,239,0.782,240,0.83,241,0.908,242,0.736,243,0.908,244,0.758,245,0.908,246,0.736,247,0.908,248,0.758,249,0.908,250,0.83,251,0.83,252,0.908,253,0.908,254,0.007,255,0.007,257,3.237,265,1.77,275,2.178,279,1.096,308,2.824,309,3.492,311,1.749,336,1.573,337,0.856,338,0.856,367,1.383,433,1.885,476,1.372,477,0.908,480,2.178,489,3.234,490,2.132,494,2.671,535,1.69,792,2.964,793,4.439,794,5.49,795,5.763,796,5.59,797,4.385,798,4.043,799,4.043,800,4.21,801,4.043,802,4.043,803,4.043,804,4.043,805,4.043,806,2.603,807,3.211,808,1.688,809,2.462,810,4.439,811,4.439,812,3.211,813,5.59]],["title/components/FlyoutComponent.html",[0,0.229,200,0.779]],["body/components/FlyoutComponent.html",[0,0.463,1,0.569,2,0.991,3,0.081,4,0.063,5,0.642,6,0.682,7,0.682,8,0.054,9,0.345,12,0.392,13,0.491,14,0.682,15,0.359,16,0.488,17,0.546,18,0.438,20,0.189,22,0.196,23,0.263,27,1.052,31,0.477,33,1.021,35,0.488,36,0.666,37,2.205,39,0.265,40,0.012,41,0.291,42,1.207,43,0.896,45,1.744,50,1.419,54,1.825,55,1.449,56,0.488,58,1.365,59,0.962,68,0.472,69,0.063,74,1.171,75,0.273,78,1.576,81,0.094,82,0.316,83,1.116,84,0.063,91,0.113,92,0.814,104,0.109,106,0.707,107,0.707,114,0.605,117,0.472,120,0.848,124,0.821,144,1.756,160,0.906,162,0.682,163,1.021,164,0.962,165,0.682,166,0.682,167,0.623,168,1.449,169,0.662,170,1.021,171,0.587,172,0.682,173,0.682,174,0.569,175,0.682,176,0.569,177,0.642,178,0.682,179,0.569,180,1.021,181,0.569,182,0.682,183,0.569,184,1.021,185,0.682,186,0.587,187,0.682,188,0.623,189,0.662,190,0.682,191,0.642,192,0.682,193,0.536,194,0.552,195,0.682,196,0.569,197,0.682,198,0.552,199,0.682,200,1.136,201,0.682,202,0.569,203,1.292,204,0.682,205,0.587,206,0.682,207,0.587,208,0.682,209,0.552,210,0.623,211,0.682,212,0.552,213,0.569,214,0.682,215,0.569,216,1.021,217,0.642,218,0.682,219,0.552,220,1.224,221,0.642,222,0.682,223,0.682,224,0.552,225,0.682,226,0.587,227,0.569,228,0.682,229,0.552,230,0.879,231,0.569,232,0.682,233,0.552,234,0.623,235,0.642,236,0.662,237,0.552,238,0.623,239,0.587,240,0.623,241,0.682,242,0.552,243,0.682,244,0.569,245,0.682,246,0.552,247,0.682,248,0.569,249,0.682,250,0.623,251,0.623,252,0.682,253,0.682,254,0.006,255,0.006,277,3.731,293,3.996,294,4.143,306,2.332,311,1.313,314,3.687,317,1.674,320,1.837,325,1.898,334,1.674,346,2.225,352,2.225,389,2.447,399,2.444,401,0.767,448,2.208,476,0.745,477,0.682,485,1.415,486,1.362,502,2.282,538,1.362,554,3.333,596,1.472,597,1.415,643,2.41,721,2.359,737,3.007,745,1.848,757,3.509,759,2.441,775,1.954,776,2.225,814,2.225,815,3.982,816,5.961,817,4.775,818,5.302,819,5.302,820,4.546,821,4.546,822,4.546,823,4.546,824,4.546,825,5.302,826,4.775,827,4.546,828,4.546,829,4.546,830,3.035,831,3.035,832,3.035,833,3.897,834,3.035,835,3.035,836,3.035,837,3.035,838,3.035,839,6.172,840,4.546,841,3.035,842,4.546,843,3.035,844,4.546,845,3.035,846,3.982,847,3.035,848,3.982,849,3.035,850,3.982,851,3.982,852,3.982,853,3.982,854,3.982,855,3.982,856,3.982,857,3.035,858,3.035,859,5.679,860,3.982,861,3.035,862,3.035,863,2.658,864,1.848,865,2.41,866,4.329,867,4.329,868,2.225,869,2.225,870,2.658,871,4.143,872,2.41,873,2.658,874,2.658,875,3.982,876,2.658,877,2.658,878,1.756,879,4.775,880,5.961,881,2.658,882,2.658,883,3.982,884,5.679,885,3.982,886,2.658,887,2.658,888,2.658,889,2.658,890,2.658,891,2.658,892,2.658,893,2.658,894,3.982,895,2.658,896,3.982,897,2.658,898,2.41,899,2.658,900,2.658,901,2.658,902,3.982,903,2.41,904,2.631,905,2.658,906,1.954,907,2.658,908,2.658,909,2.658,910,3.982,911,2.658,912,2.658,913,2.658,914,2.41,915,3.982,916,2.658,917,2.658,918,2.658,919,3.982,920,2.658,921,1.756,922,2.658,923,2.658,924,2.658,925,2.658,926,3.982,927,2.658,928,1.954,929,2.658,930,3.982,931,2.658,932,2.658,933,2.658,934,1.674,935,2.658,936,2.658,937,2.658,938,2.658,939,2.658]],["title/components/FlyoutOptionComponent.html",[0,0.229,202,0.779]],["body/components/FlyoutOptionComponent.html",[0,0.443,1,0.787,2,1.25,3,0.102,4,0.087,5,0.888,6,0.942,7,0.942,8,0.075,9,0.306,12,0.495,13,0.588,14,0.942,15,0.367,16,0.502,17,0.561,18,0.448,20,0.239,22,0.111,27,1.326,31,0.554,33,1.288,35,0.491,36,0.743,39,0.212,40,0.012,41,0.315,42,0.836,43,0.925,45,1.486,55,1.178,58,0.811,59,0.572,68,0.652,69,0.087,74,1.358,75,0.662,78,1.092,81,0.087,82,0.293,84,0.087,91,0.135,92,1.125,104,0.151,106,0.652,107,0.652,114,0.836,117,0.652,120,1.092,139,2.896,160,1.4,162,0.942,163,1.288,164,1.213,165,0.942,166,0.942,167,0.862,168,1.596,169,0.914,170,1.288,171,0.811,172,0.942,173,0.942,174,0.787,175,0.942,176,0.787,177,0.888,178,0.942,179,0.787,180,1.288,181,0.787,182,0.942,183,0.787,184,1.288,185,0.942,186,0.811,187,0.942,188,0.862,189,0.914,190,0.942,191,0.888,192,0.942,193,0.74,194,0.763,195,0.942,196,0.787,197,0.942,198,0.763,199,0.942,200,0.787,201,0.942,202,1.317,203,1.465,204,0.942,205,0.811,206,0.942,207,0.811,208,0.942,209,0.763,210,0.862,211,0.942,212,0.763,213,0.787,214,0.942,215,0.787,216,1.288,217,0.888,218,0.942,219,0.763,220,1.467,221,0.888,222,0.942,223,0.942,224,0.763,225,0.942,226,0.811,227,0.787,228,0.942,229,0.763,230,1.109,231,0.787,232,0.942,233,0.763,234,0.862,235,0.888,236,0.914,237,0.763,238,0.862,239,0.811,240,0.862,241,0.942,242,0.763,243,0.942,244,0.787,245,0.942,246,0.763,247,0.942,248,0.787,249,0.942,250,0.862,251,0.862,252,0.942,253,0.942,254,0.008,255,0.008,279,1.117,320,1.092,389,1.883,401,1.06,448,1.53,476,1.029,477,0.942,503,4.47,536,1.682,717,3.603,721,1.634,737,2.314,833,4.205,864,4.477,868,3.075,869,3.075,904,3.317,940,5.39,941,3.075,942,5.022,943,5.733,944,5.022,945,4.195,946,4.195,947,4.553,948,4.553,949,3.674,950,3.674,951,5.022,952,7.021]],["title/components/FooterComponent.html",[0,0.229,205,0.803]],["body/components/FooterComponent.html",[0,0.454,1,0.77,2,1.231,3,0.101,4,0.085,5,0.868,6,0.921,7,0.921,8,0.073,9,0.328,14,0.921,15,0.366,16,0.502,17,0.561,18,0.448,20,0.235,22,0.109,23,0.327,27,1.306,31,0.548,33,1.268,36,0.632,39,0.245,40,0.012,41,0.346,42,1.386,43,0.916,45,1.635,54,1.514,55,1.429,56,0.425,58,1.092,59,0.77,68,0.638,69,0.085,74,1.345,75,0.369,81,0.117,82,0.253,84,0.085,91,0.156,114,0.818,117,0.638,160,1.125,162,0.921,163,1.268,164,1.195,165,0.921,166,0.921,167,0.843,168,1.586,169,0.894,170,1.268,171,0.793,172,0.921,173,0.921,174,0.77,175,0.921,176,0.77,177,0.868,178,0.921,179,0.77,180,1.268,181,0.77,182,0.921,183,0.77,184,1.268,185,0.921,186,0.793,187,0.921,188,0.843,189,0.894,190,0.921,191,0.868,192,0.921,193,0.724,194,0.746,195,0.921,196,0.77,197,0.921,198,0.746,199,0.921,200,0.77,201,0.921,202,0.77,203,0.818,204,0.921,205,1.345,206,0.921,207,0.793,208,0.921,209,0.746,210,0.843,211,0.921,212,0.746,213,0.77,214,0.921,215,0.77,216,1.268,217,0.868,218,0.921,219,0.746,220,1.45,221,0.868,222,0.921,223,0.921,224,0.746,225,0.921,226,0.793,227,0.77,228,0.921,229,0.746,230,1.092,231,0.77,232,0.921,233,0.746,234,0.843,235,0.868,236,0.894,237,0.746,238,0.843,239,0.793,240,0.843,241,0.921,242,0.746,243,0.921,244,0.77,245,0.921,246,0.746,247,0.921,248,0.77,249,0.921,250,0.843,251,0.843,252,0.921,253,0.921,254,0.007,255,0.007,279,0.702,280,2.374,281,1.707,340,0.868,341,0.868,409,1.287,522,3.115,534,2.433,555,2.2,557,2.433,613,1.598,614,1.598,615,1.598,633,1.608,953,4.149,954,3.258,955,5.647,956,5.647,957,6.457,958,5.656,959,5.647,960,4.102,961,4.102,962,4.102,963,4.102,964,4.102,965,5.128,966,3.258,967,3.593,968,3.593,969,4.484,970,3.258,971,3.258,972,5.524,973,4.484,974,3.258,975,4.484,976,3.258,977,4.484,978,4.946,979,4.484,980,3.258,981,1.775,982,4.946,983,4.946,984,5.647]],["title/components/HeaderComponent.html",[0,0.229,207,0.803]],["body/components/HeaderComponent.html",[0,0.455,1,0.743,2,1.201,3,0.098,4,0.082,5,0.838,6,0.889,7,0.889,8,0.07,9,0.33,14,0.889,15,0.366,16,0.5,17,0.559,18,0.447,20,0.23,22,0.105,23,0.319,27,1.275,31,0.54,33,1.238,36,0.62,39,0.248,40,0.012,41,0.35,42,1.436,43,0.949,45,1.651,54,1.478,55,1.407,56,0.415,58,1.066,59,0.751,68,0.616,69,0.082,74,1.325,75,0.357,81,0.114,82,0.247,84,0.082,91,0.164,114,0.789,117,0.616,160,1.098,162,0.889,163,1.238,164,1.166,165,0.889,166,0.889,167,0.813,168,1.571,169,0.863,170,1.238,171,0.766,172,0.889,173,0.889,174,0.743,175,0.889,176,0.743,177,0.838,178,0.889,179,0.743,180,1.238,181,0.743,182,0.889,183,0.743,184,1.238,185,0.889,186,0.766,187,0.889,188,0.813,189,0.863,190,0.889,191,0.838,192,0.889,193,0.699,194,0.721,195,0.889,196,0.743,197,0.889,198,0.721,199,0.889,200,0.743,201,0.889,202,0.743,203,0.789,204,0.889,205,0.766,206,0.889,207,1.325,208,0.889,209,0.721,210,0.813,211,0.889,212,0.721,213,0.743,214,0.889,215,0.743,216,1.238,217,0.838,218,0.889,219,0.721,220,1.423,221,0.838,222,0.889,223,0.889,224,0.721,225,0.889,226,0.766,227,0.743,228,0.889,229,0.721,230,1.066,231,0.743,232,0.889,233,0.721,234,0.813,235,0.838,236,0.863,237,0.721,238,0.813,239,0.766,240,0.813,241,0.889,242,0.721,243,0.889,244,0.743,245,0.889,246,0.721,247,0.889,248,0.743,249,0.889,250,0.813,251,0.813,252,0.889,253,0.889,254,0.007,255,0.007,279,0.677,280,2.291,281,1.682,340,0.838,341,0.838,409,1.376,522,3.039,534,2.388,555,2.147,557,2.388,613,1.543,614,1.543,615,1.543,633,1.569,953,4.178,958,5.551,966,4.376,970,3.145,971,4.376,972,5.441,974,3.145,975,5.033,976,4.376,981,1.713,982,4.827,983,4.827,985,3.145,986,4.04,987,5.51,988,6.337,989,6.337,990,5.51,991,3.96,992,3.96,993,3.96,994,3.96,995,3.96,996,3.96,997,4.376,998,4.827,999,4.827,1000,3.469,1001,4.376,1002,3.469,1003,4.376,1004,3.469,1005,4.376,1006,3.469,1007,4.376,1008,4.827,1009,4.376,1010,4.376,1011,4.376,1012,5.51,1013,5.51]],["title/components/HiddenNavComponent.html",[0,0.229,209,0.756]],["body/components/HiddenNavComponent.html",[0,0.446,1,0.773,2,1.235,3,0.101,4,0.085,5,0.872,6,0.925,7,0.925,8,0.073,9,0.314,13,0.371,14,0.925,15,0.366,16,0.502,17,0.561,18,0.448,20,0.236,22,0.109,27,1.31,33,1.272,35,0.487,36,0.715,39,0.21,40,0.012,41,0.376,42,0.821,43,0.542,45,1.546,54,1.519,55,1.431,56,0.426,58,1.251,59,0.882,68,0.641,69,0.085,74,1.348,75,0.371,81,0.085,82,0.254,84,0.085,91,0.134,102,3.542,104,0.204,114,0.821,116,1.455,117,0.881,137,2.652,162,0.925,163,1.272,164,1.198,165,0.925,166,0.925,167,0.846,168,1.588,169,0.898,170,1.272,171,0.797,172,0.925,173,0.925,174,0.773,175,0.925,176,0.773,177,0.872,178,0.925,179,0.773,180,1.272,181,0.773,182,0.925,183,0.773,184,1.272,185,0.925,186,0.797,187,0.925,188,0.846,189,0.898,190,0.925,191,0.872,192,0.925,193,0.727,194,0.749,195,0.925,196,0.773,197,0.925,198,0.749,199,0.925,200,0.773,201,0.925,202,0.773,203,0.821,204,0.925,205,0.797,206,0.925,207,0.797,208,0.925,209,1.268,210,1.5,211,0.925,212,0.749,213,0.773,214,0.925,215,0.773,216,1.272,217,0.872,218,0.925,219,0.749,220,1.453,221,0.872,222,0.925,223,0.925,224,0.749,225,0.925,226,0.797,227,0.773,228,0.925,229,0.749,230,1.095,231,0.773,232,0.925,233,0.749,234,0.846,235,0.872,236,0.898,237,0.749,238,0.846,239,0.797,240,0.846,241,0.925,242,0.749,243,0.925,244,0.773,245,0.925,246,0.749,247,0.925,248,0.773,249,0.925,250,0.846,251,0.846,252,0.925,253,0.925,254,0.007,255,0.007,277,3.875,291,2.383,293,3.02,314,2.508,334,2.272,347,3.744,399,1.552,409,1.142,756,3.608,808,2.364,953,3.98,1014,5.534,1015,5.166,1016,3.02,1017,4.244,1018,4.497,1019,5.662,1020,5.662,1021,5.534,1022,5.662,1023,4.428,1024,4.119,1025,5.139,1026,4.119,1027,5.662,1028,4.497,1029,4.497,1030,4.497,1031,4.119,1032,4.119,1033,3.875,1034,3.271,1035,3.271,1036,3.271,1037,3.271,1038,3.271,1039,2.081,1040,3.271,1041,3.271,1042,3.271,1043,3.276,1044,3.271,1045,4.497,1046,3.271,1047,3.271,1048,5.662]],["title/interfaces/IAccordionContainerConfig.html",[104,0.15,1049,2.529]],["body/interfaces/IAccordionContainerConfig.html",[0,0.426,3,0.095,4,0.11,8,0.095,12,0.46,13,0.605,15,0.222,16,0.309,20,0.222,22,0.141,23,0.388,31,0.421,35,0.401,36,0.806,39,0.25,40,0.012,41,0.384,50,1.748,56,0.61,59,0.727,66,2.01,69,0.11,81,0.152,82,0.364,83,1.648,84,0.11,89,3.391,91,0.139,100,2.586,103,2.078,104,0.192,116,1.884,120,1.199,123,0.777,124,0.803,160,1.063,167,1.095,168,1.095,169,1.163,254,0.009,255,0.009,281,1.648,340,1.129,341,1.129,401,1.949,449,3.91,467,3.248,474,3.248,476,1.648,477,1.198,680,2.812,981,2.307,1043,3.086,1049,4.474,1050,1.001,1051,4.236,1052,3.433,1053,3.91,1054,6.311,1055,6.311,1056,5.438,1057,2.394,1058,2.394,1059,3.248,1060,5.277,1061,4.236,1062,4.236,1063,4.671,1064,4.671,1065,3.91,1066,4.671,1067,4.671,1068,6.754,1069,4.671,1070,6.754,1071,4.671,1072,5.88,1073,5.88,1074,5.88,1075,6.435,1076,3.91,1077,4.671]],["title/interfaces/IBannerConfig.html",[47,2.842,104,0.15]],["body/interfaces/IBannerConfig.html",[0,0.401,1,0.856,3,0.121,4,0.094,8,0.081,9,0.19,10,2.938,11,3.123,12,0.394,13,0.547,15,0.19,16,0.264,17,0.295,18,0.234,19,4.974,20,0.19,21,3.624,22,0.121,23,0.351,24,3.346,25,3.624,26,3.624,29,3.624,30,2.641,31,0.479,32,3.624,34,6.009,35,0.343,36,0.777,38,3.624,39,0.273,40,0.012,41,0.384,44,3.346,47,4.666,50,1.58,52,3.624,56,0.642,64,2.626,65,1.665,66,1.72,67,2.305,68,0.71,69,0.125,70,3.066,71,2.305,72,2.779,73,1.84,74,0.883,75,0.547,76,1.612,78,1.188,81,0.141,82,0.326,83,1.489,84,0.094,85,2.305,86,2.779,87,1.778,88,2.213,89,3.066,90,3.624,91,0.161,92,1.829,93,4.449,94,4.449,95,2.626,96,3.066,97,3.907,98,4.449,99,2.943,100,2.943,101,4.449,102,3.306,103,2.365,104,0.246,105,4.974,106,1.061,107,1.061,108,3.624,109,3.624,110,2.938,111,3.624,112,3.624,113,3.624,114,0.91,115,3.624,116,1.612,117,1.13,118,4.205,119,4.974,120,1.21,121,5.772,122,4.679,123,1.059,124,0.687,125,3.624,126,5.415,127,3.624,128,3.624,129,3.624,130,3.624,131,3.624,132,3.346,133,3.624,134,3.624,135,6.009,136,3.624,137,4.679,138,4.82,139,2.305,140,5.415,141,3.624,142,3.624,143,4.82,144,2.641,145,2.641,146,3.624,147,3.624,148,3.624,149,3.624,150,3.624,151,3.624,152,4.82,153,3.624,154,3.624,155,2.406,156,4.82,157,3.624,158,4.82,254,0.008,255,0.008,1050,0.856]],["title/interfaces/IBreadcrumbConfig.html",[104,0.15,289,3.044]],["body/interfaces/IBreadcrumbConfig.html",[0,0.354,3,0.072,4,0.084,8,0.072,9,0.169,12,0.349,13,0.504,15,0.169,16,0.234,17,0.262,18,0.207,20,0.169,22,0.107,23,0.324,30,2.341,31,0.319,35,0.304,36,0.734,39,0.258,40,0.012,41,0.351,56,0.52,64,2.42,66,1.525,67,2.044,68,0.997,69,0.116,70,2.825,71,2.044,73,1.631,74,0.782,75,0.577,76,1.429,81,0.155,82,0.251,84,0.084,87,1.577,88,1.962,91,0.132,92,1.085,102,2.712,104,0.146,106,0.87,107,0.87,114,0.806,117,0.629,120,0.87,123,1.121,139,2.044,160,0.806,164,0.856,174,0.759,177,1.184,254,0.007,255,0.007,256,2.966,257,2.825,258,4.1,259,3.544,260,3.544,261,3.544,262,3.544,263,3.544,264,3.544,265,2.006,266,5.615,267,3.544,268,3.544,269,3.544,270,3.544,271,3.544,273,3.544,274,3.544,279,0.692,281,1.373,282,3.544,283,1.975,284,3.213,285,4.442,286,3.544,287,4.899,289,4.699,290,6.358,291,4.001,294,2.949,298,2.966,299,3.544,301,3.544,306,1.798,308,2.044,309,2.825,313,3.544,315,3.213,317,3.536,318,3.544,319,4.1,320,1.89,323,3.544,325,2.887,327,4.833,330,3.544,331,2.966,332,3.544,334,2.232,335,2.341,336,1.373,337,0.856,338,0.856,339,3.544,340,0.856,341,0.856,342,1.429,343,1.429,344,4.442,345,4.387,346,2.966,347,2.341,348,3.544,349,3.544,350,3.544,351,3.544,352,2.966,353,3.544,354,6.74,355,3.544,356,3.544,357,3.544,358,3.544,359,5.615,360,4.1,361,3.601,362,3.601,363,3.085,364,3.213,365,5.615,366,4.899,367,1.914,368,4.899,369,4.899,370,3.544,371,3.544,372,3.544,373,3.544,374,4.899,375,4.899,376,4.899,377,3.544,378,3.544,379,4.899,380,2.605,381,4.1,382,3.544,383,3.544,384,3.544,385,3.544,386,3.544,387,3.544,388,3.544,389,1.816,390,5.615,391,4.899,392,3.544,393,3.544,394,4.899,395,3.544,396,3.544,397,3.544,398,4.899,399,2.108,400,6.057,401,1.023,402,6.057,403,3.544,404,3.544,405,6.358,406,4.899,407,5.615,408,5.615,409,1.325,410,3.544,411,4.899,412,3.544,413,5.615,414,3.544,415,3.544,416,3.544,417,3.544,418,3.544,419,3.544,420,3.544,421,3.544,422,2.605,423,3.544,424,3.544,425,2.966,426,3.544,427,2.255,428,3.544,429,3.544,430,3.544,431,3.544,432,4.899,433,1.886,434,3.544,435,3.544,436,3.544,437,3.544,1050,0.759]],["title/interfaces/IButtonConfig.html",[89,2.098,104,0.15]],["body/interfaces/IButtonConfig.html",[0,0.381,3,0.083,4,0.097,8,0.083,9,0.195,15,0.195,16,0.271,17,0.303,18,0.24,20,0.195,22,0.124,23,0.357,31,0.369,35,0.352,36,0.767,39,0.247,40,0.012,41,0.377,50,1.797,56,0.644,66,2.875,68,1.186,69,0.097,73,3.076,76,2.179,81,0.097,82,0.374,83,1.514,84,0.097,89,3.487,91,0.165,92,2.046,95,2.669,99,2.992,100,2.992,103,2.69,104,0.169,106,1.261,107,1.261,116,2.694,120,1.141,122,3.972,123,1.112,124,0.704,179,0.878,240,1.267,254,0.008,255,0.008,306,2.359,367,1.601,401,2.155,445,3.43,446,3.202,448,2.782,449,5.592,450,6.682,451,4.098,463,4.098,466,4.724,467,3.757,468,5.482,469,5.482,470,4.098,471,5.404,472,3.57,473,5.482,474,4.204,475,4.222,476,1.514,477,1.051,478,3.757,479,2.849,480,2.404,481,5.404,482,4.098,483,4.222,484,3.202,485,2.876,486,2.1,487,5.404,488,4.098,489,3.994,490,3.87,491,6.862,492,5.404,493,4.098,1050,0.878]],["title/interfaces/ICTAConfig.html",[104,0.15,105,2.842]],["body/interfaces/ICTAConfig.html",[0,0.406,1,0.885,3,0.123,4,0.097,8,0.084,9,0.197,10,3.037,11,3.229,12,0.407,13,0.559,15,0.197,16,0.273,17,0.305,18,0.242,19,5.039,20,0.197,21,3.747,22,0.125,23,0.359,24,3.459,25,3.747,26,3.747,29,3.747,30,2.73,31,0.489,32,3.747,34,4.927,35,0.355,36,0.72,38,3.747,39,0.269,40,0.012,41,0.379,44,3.459,47,4.246,50,1.615,52,3.747,56,0.591,64,2.684,65,1.721,66,1.778,67,2.383,68,0.734,69,0.128,70,3.134,71,2.383,72,2.873,73,1.902,74,0.912,75,0.689,76,1.666,78,1.228,81,0.143,82,0.33,83,1.523,84,0.097,85,2.383,86,2.873,87,1.838,88,2.288,89,3.72,90,3.747,91,0.162,92,1.859,93,4.548,94,4.548,95,2.684,96,3.134,97,3.994,98,4.548,99,3.008,100,3.008,101,4.548,102,3.361,103,2.417,104,0.25,105,4.744,106,1.078,107,1.078,108,5.848,109,3.747,110,3.037,111,3.747,112,3.747,113,3.747,114,0.94,115,5.848,116,2.6,117,0.734,118,2.73,119,3.229,120,0.965,121,3.747,122,3.037,123,0.687,124,0.71,125,3.747,126,5.505,127,3.747,128,3.747,129,3.747,130,3.747,131,3.747,132,3.459,133,3.747,134,3.747,135,6.075,136,3.747,137,4.74,138,4.927,139,2.383,140,5.505,141,3.747,142,3.747,143,4.927,144,2.73,145,2.73,146,3.747,147,3.747,148,3.747,149,3.747,150,3.747,151,3.747,152,4.927,153,3.747,154,3.747,155,2.488,156,4.927,157,3.747,158,4.927,254,0.008,255,0.008,1050,0.885]],["title/interfaces/ICheckBoxComponentConfig.html",[104,0.15,527,3.044]],["body/interfaces/ICheckBoxComponentConfig.html",[0,0.376,3,0.07,4,0.081,5,0.827,8,0.07,9,0.163,12,0.337,13,0.492,15,0.163,16,0.226,17,0.253,18,0.2,20,0.163,22,0.103,23,0.316,31,0.308,35,0.294,36,0.727,39,0.267,40,0.012,41,0.38,42,0.779,43,0.515,56,0.646,59,0.858,65,1.991,69,0.081,75,0.492,78,1.866,81,0.157,82,0.305,83,1.34,84,0.081,91,0.113,104,0.141,106,0.608,107,0.608,120,1.269,123,1.044,124,0.588,155,2.06,160,0.779,181,1.024,254,0.007,255,0.007,265,1.08,275,1.523,279,0.668,281,1.34,283,2.222,311,1.691,320,1.638,331,2.865,336,1.759,337,0.827,338,0.827,340,0.827,341,0.827,342,1.38,343,1.38,367,1.337,401,0.988,409,0.689,427,2.201,448,1.425,476,1.34,477,1.61,485,1.822,486,1.754,494,1.296,495,3.103,496,2.647,497,1.523,498,1.631,499,2.279,500,1.631,501,2.279,502,1.473,503,2.674,504,3.423,505,2.06,506,1.631,507,1.754,508,3.176,509,2.155,510,3.953,511,1.631,512,1.895,513,2.516,514,1.425,515,2.537,516,2.879,517,2.865,518,2.06,523,2.516,524,3.119,527,4.613,528,3.471,529,4.782,534,1.473,535,1.903,536,2.178,538,2.451,539,2.865,543,1.754,544,2.06,545,2.155,547,3.011,548,2.155,552,2.722,553,3.423,554,2.865,555,1.523,557,2.058,560,2.279,562,2.879,566,1.928,567,3.1,568,1.473,574,1.218,575,2.567,576,1.473,577,1.473,578,2.058,579,2.058,580,2.406,581,1.631,582,2.567,583,5.967,584,5.967,585,5.967,586,5.967,587,3.423,588,3.423,589,3.423,590,3.423,591,4.662,592,5.967,593,2.567,594,2.567,595,2.844,596,1.895,597,1.822,598,3.423,599,3.103,600,3.423,601,3.423,602,2.865,603,3.423,604,3.423,605,2.06,606,2.865,607,1.754,608,2.516,609,3.423,610,3.318,611,1.754,612,2.06,613,1.523,614,1.523,615,1.523,616,2.279,617,2.279,618,3.1,619,1.81,620,2.279,621,4.782,622,2.279,623,2.279,624,2.545,625,1.631,626,1.631,627,2.865,628,3.318,629,2.06,630,2.06,631,2.06,632,1.754,633,1.554,634,2.201,635,2.865,636,2.865,1050,0.733]],["title/interfaces/ICodeViewerConfig.html",[104,0.15,1078,3.044]],["body/interfaces/ICodeViewerConfig.html",[0,0.418,3,0.09,4,0.105,8,0.09,12,0.437,13,0.585,15,0.211,16,0.293,20,0.211,22,0.134,23,0.376,31,0.4,35,0.381,36,0.807,39,0.246,40,0.012,41,0.359,50,1.693,56,0.602,66,1.911,69,0.105,81,0.148,82,0.291,83,1.595,84,0.105,89,3.284,91,0.134,100,2.458,103,1.976,104,0.183,116,1.79,117,0.789,120,1.177,123,0.739,124,0.763,155,2.673,164,1.073,168,1.041,188,1.041,189,1.65,254,0.009,255,0.009,306,2.089,308,2.561,309,3.284,320,1.693,363,3.586,401,1.282,467,3.088,680,2.673,721,3.12,1039,3.953,1049,3.959,1050,0.951,1052,3.264,1056,3.47,1057,2.276,1058,2.276,1059,3.088,1060,4.449,1065,3.717,1076,5.737,1078,5.26,1079,4.026,1080,4.026,1081,4.026,1082,3.991,1083,3.428,1084,4.026,1085,4.441,1086,4.441,1087,4.441,1088,4.441,1089,3.47,1090,4.441,1091,3.47,1092,4.441,1093,4.026,1094,4.441,1095,6.285,1096,4.441,1097,5.162,1098,4.441,1099,4.441,1100,5.694,1101,3.717,1102,3.717,1103,4.441,1104,4.441,1105,4.528,1106,4.441,1107,5.355,1108,5.694,1109,6.629,1110,5.694,1111,4.441,1112,4.441,1113,4.441,1114,4.441,1115,4.441,1116,4.441,1117,4.441]],["title/interfaces/IDatePickerConfig.html",[104,0.15,1118,2.674]],["body/interfaces/IDatePickerConfig.html",[0,0.258,3,0.042,4,0.049,8,0.042,9,0.099,12,0.205,13,0.34,15,0.099,16,0.138,17,0.154,18,0.122,20,0.099,22,0.1,23,0.218,31,0.188,35,0.284,36,0.676,39,0.234,40,0.012,41,0.365,43,0.95,56,0.597,58,1.029,59,0.841,64,1.03,65,1.942,69,0.049,75,0.68,78,1.607,81,0.143,82,0.334,84,0.049,86,1.449,87,0.927,88,1.154,91,0.164,99,2.269,104,0.192,106,0.586,107,0.586,120,1.142,123,0.977,124,0.568,160,0.474,193,0.665,194,0.969,227,0.707,254,0.005,255,0.005,265,1.705,279,0.407,281,0.925,283,1.653,306,2.553,311,1.03,320,1.683,325,2.422,336,1.149,337,0.504,338,0.504,340,0.504,341,0.504,342,0.841,343,0.841,367,1.821,380,1.532,399,1.764,401,0.602,409,1.392,422,2.427,427,2.959,433,1.11,476,0.925,477,1.452,480,1.469,494,0.789,497,0.927,498,0.994,499,1.574,500,0.994,501,1.574,502,0.897,506,0.994,507,1.068,510,1.313,511,0.994,514,0.868,515,0.96,524,2.904,534,2.602,535,1.14,536,2.28,543,1.692,545,1.313,547,1.313,548,1.313,552,1.03,560,1.574,566,1.331,567,3.012,568,0.897,574,0.742,575,2.186,576,0.897,577,0.897,578,1.421,579,1.421,580,1.88,581,0.994,582,2.186,593,2.186,594,2.186,595,2.222,596,1.154,597,1.11,607,2.77,608,1.532,611,1.068,616,0.994,617,0.994,618,0.994,619,2.046,620,1.954,622,1.574,623,0.994,624,1.757,625,0.994,626,0.994,632,1.068,633,1.909,634,1.52,693,1.377,717,2.079,721,2.074,759,2.146,760,1.313,766,2.427,809,1.449,928,1.532,934,1.313,1050,0.447,1118,3.013,1119,1.532,1120,1.449,1121,1.532,1122,2.405,1123,4.253,1124,4.253,1125,4.253,1126,3.735,1127,3.735,1128,2.936,1129,1.629,1130,2.427,1131,1.629,1132,1.629,1133,1.629,1134,1.629,1135,1.629,1136,1.629,1137,1.629,1138,1.629,1139,1.629,1140,1.629,1141,1.629,1142,2.427,1143,1.629,1144,1.629,1145,1.629,1146,1.629,1147,1.629,1148,1.629,1149,1.629,1150,1.629,1151,1.629,1152,1.629,1153,1.629,1154,1.629,1155,2.427,1156,1.629,1157,3.013,1158,1.629,1159,3.427,1160,1.629,1161,1.532,1162,3.643,1163,5.32,1164,5.572,1165,1.532,1166,1.629,1167,2.58,1168,1.629,1169,2.427,1170,1.629,1171,2.427,1172,1.629,1173,2.427,1174,2.427,1175,2.427,1176,1.629,1177,2.427,1178,1.629,1179,3.735,1180,3.203,1181,3.735,1182,1.629,1183,1.745,1184,1.745,1185,1.745,1186,1.745,1187,2.427,1188,2.85,1189,1.745,1190,4.253,1191,2.763,1192,1.745,1193,2.85,1194,1.745,1195,1.745,1196,1.745,1197,1.255,1198,1.745,1199,1.745,1200,2.763,1201,2.101,1202,1.449,1203,1.745,1204,2.763,1205,2.763,1206,2.763,1207,2.763,1208,2.763,1209,3.431,1210,2.763,1211,3.902,1212,2.763,1213,1.745,1214,1.745,1215,1.745,1216,1.745,1217,1.745,1218,1.745,1219,1.745,1220,1.745,1221,1.745,1222,1.745,1223,1.745,1224,1.745,1225,1.745,1226,1.745,1227,1.745,1228,1.745,1229,1.745,1230,1.745,1231,1.745,1232,2.763,1233,2.763,1234,1.377,1235,1.745,1236,1.745,1237,3.88,1238,3.902,1239,2.763,1240,1.745,1241,1.449,1242,3.431,1243,2.763,1244,1.745,1245,1.745,1246,1.745,1247,1.745,1248,4.524,1249,3.431,1250,2.763,1251,1.745,1252,1.745,1253,1.745,1254,1.904,1255,1.745,1256,1.745,1257,1.745,1258,1.745,1259,2.763,1260,2.763,1261,2.763,1262,2.427,1263,2.427,1264,1.745,1265,3.902,1266,1.745,1267,3.902,1268,1.745,1269,3.902,1270,1.745,1271,2.763,1272,2.763,1273,2.763,1274,1.745,1275,1.745,1276,1.745,1277,1.745,1278,1.532,1279,1.449,1280,1.745,1281,1.745,1282,1.745,1283,1.745,1284,1.745,1285,1.745,1286,1.745,1287,2.763,1288,1.377,1289,1.745,1290,1.745,1291,3.431,1292,1.745,1293,1.745,1294,2.58,1295,1.745,1296,1.745,1297,1.745,1298,1.532,1299,1.745,1300,2.763,1301,1.449,1302,1.745,1303,1.629,1304,1.745,1305,3.902,1306,2.763,1307,2.763,1308,2.763,1309,2.763,1310,2.763,1311,2.763,1312,1.745,1313,1.745,1314,1.745,1315,1.449,1316,3.902,1317,1.745,1318,1.745,1319,2.763,1320,4.524,1321,3.431,1322,1.745,1323,2.763,1324,1.745,1325,2.763,1326,2.763,1327,2.296,1328,1.449,1329,3.431,1330,1.745,1331,4.253,1332,1.745,1333,1.745,1334,1.745,1335,3.427,1336,1.745,1337,1.745,1338,1.745,1339,1.745,1340,1.745,1341,1.745,1342,1.745,1343,1.745,1344,1.255,1345,1.745,1346,1.745,1347,1.255]],["title/interfaces/IDatePickerDropDownConfigs.html",[104,0.15,1187,2.674]],["body/interfaces/IDatePickerDropDownConfigs.html",[0,0.265,3,0.044,4,0.051,8,0.044,9,0.103,12,0.213,13,0.35,15,0.103,16,0.143,17,0.16,18,0.127,20,0.103,22,0.103,23,0.225,31,0.195,35,0.292,36,0.614,39,0.156,40,0.012,41,0.351,43,0.96,58,1.051,59,0.855,64,1.07,65,1.983,69,0.051,75,0.685,78,1.633,81,0.144,82,0.337,84,0.051,86,1.506,87,0.963,88,1.199,91,0.165,99,2.326,104,0.196,106,0.604,107,0.604,120,1.112,123,0.861,124,0.585,160,0.493,193,0.685,194,0.989,227,0.729,254,0.005,255,0.005,265,1.733,279,0.423,281,0.953,283,1.694,306,2.496,311,1.07,320,1.708,325,2.467,336,1.177,337,0.523,338,0.523,340,0.523,341,0.523,342,0.873,343,0.873,367,1.86,380,1.592,399,1.808,401,0.625,409,1.401,422,2.501,427,2.988,433,1.153,476,0.953,477,1.473,480,1.514,494,0.82,497,0.963,498,1.032,499,1.622,500,1.032,501,1.622,502,0.932,506,1.032,507,1.11,510,1.364,511,1.032,514,0.902,515,0.997,524,2.748,534,2.634,535,1.175,536,2.232,543,1.744,545,1.364,547,1.364,548,1.364,552,1.07,560,1.622,566,1.372,567,3.044,568,0.932,574,0.771,575,2.227,576,0.932,577,0.932,578,1.464,579,1.464,580,1.372,581,1.032,582,1.464,593,1.464,594,1.464,595,1.032,596,1.199,597,1.153,607,2.815,608,1.592,611,1.11,616,1.032,617,1.032,618,1.032,619,2.08,620,2.003,622,1.622,623,1.032,624,1.811,625,1.032,626,1.032,632,1.11,633,1.934,634,1.566,693,1.431,717,2.143,721,2.119,759,2.192,760,1.364,766,2.501,809,1.506,928,1.592,934,1.364,1050,0.464,1118,2.501,1119,1.592,1120,1.506,1121,1.592,1122,1.87,1123,2.848,1124,2.848,1125,2.848,1126,3.089,1127,3.089,1128,3.945,1129,1.692,1130,2.501,1131,1.692,1132,1.692,1133,1.692,1134,1.692,1135,1.692,1136,1.692,1137,1.692,1138,1.692,1139,1.692,1140,1.692,1141,1.692,1142,2.501,1143,1.692,1144,1.692,1145,1.692,1146,1.692,1147,1.692,1148,1.692,1149,1.692,1150,1.692,1151,1.692,1152,1.692,1153,1.692,1154,1.692,1155,2.501,1156,1.692,1157,3.089,1158,1.692,1159,3.5,1160,1.692,1161,1.592,1162,4.49,1163,5.469,1164,5.659,1165,1.592,1166,1.692,1167,2.658,1168,1.692,1169,2.501,1170,1.692,1171,2.501,1172,1.692,1173,2.501,1174,2.501,1175,2.501,1176,1.692,1177,2.501,1178,1.692,1179,3.804,1180,3.283,1181,3.804,1182,1.692,1183,1.813,1184,1.813,1185,1.813,1186,1.813,1187,3.089,1188,2.922,1189,1.813,1190,4.332,1191,2.848,1192,1.813,1193,2.922,1194,1.813,1195,1.813,1196,1.813,1197,1.304,1198,1.813,1199,1.813,1200,2.848,1201,2.153,1202,1.506,1203,1.813,1204,2.848,1205,2.848,1206,2.848,1207,2.848,1208,2.848,1209,3.517,1210,2.848,1211,3.986,1212,2.848,1213,1.813,1214,1.813,1215,1.813,1216,1.813,1217,1.813,1218,1.813,1219,1.813,1220,1.813,1221,1.813,1222,1.813,1223,1.813,1224,1.813,1225,1.813,1226,1.813,1227,1.813,1228,1.813,1229,1.813,1230,1.813,1231,1.813,1232,2.848,1233,2.848,1234,1.431,1235,1.813,1236,1.813,1237,3.931,1238,3.986,1239,2.848,1240,1.813,1241,1.506,1242,3.517,1243,2.848,1244,1.813,1245,1.813,1246,1.813,1247,1.813,1248,4.598,1249,3.517,1250,2.848,1251,1.813,1252,1.813,1253,1.813,1254,1.962,1255,1.813,1256,1.813,1257,1.813,1258,1.813,1259,2.848,1260,2.848,1261,2.848,1262,2.501,1263,2.501,1264,1.813,1265,3.986,1266,1.813,1267,3.986,1268,1.813,1269,3.986,1270,1.813,1271,2.848,1272,2.848,1273,2.848,1274,1.813,1275,1.813,1276,1.813,1277,1.813,1278,1.592,1279,1.506,1280,1.813,1281,1.813,1282,1.813,1283,1.813,1284,1.813,1285,1.813,1286,1.813,1287,2.848,1288,1.431,1289,1.813,1290,1.813,1291,3.517,1292,1.813,1293,1.813,1294,2.658,1295,1.813,1296,1.813,1297,1.813,1298,1.592,1299,1.813,1300,2.848,1301,1.506,1302,1.813,1303,1.692,1304,1.813,1305,3.986,1306,2.848,1307,2.848,1308,2.848,1309,2.848,1310,2.848,1311,2.848,1312,1.813,1313,1.813,1314,1.813,1315,1.506,1316,3.986,1317,1.813,1318,1.813,1319,2.848,1320,4.598,1321,3.517,1322,1.813,1323,2.848,1324,1.813,1325,2.848,1326,2.848,1327,2.366,1328,1.506,1329,3.517,1330,1.813,1331,4.332,1332,1.813,1333,1.813,1334,1.813,1335,3.5,1336,1.813,1337,1.813,1338,1.813,1339,1.813,1340,1.813,1341,1.813,1342,1.813,1343,1.813,1344,1.304,1345,1.813,1346,1.813,1347,1.304]],["title/interfaces/IDatePickerErrorMessages.html",[104,0.15,1126,2.674]],["body/interfaces/IDatePickerErrorMessages.html",[0,0.264,3,0.044,4,0.051,8,0.044,9,0.102,12,0.212,13,0.348,15,0.102,16,0.142,17,0.159,18,0.126,20,0.102,22,0.102,23,0.223,31,0.194,35,0.291,36,0.612,39,0.176,40,0.012,41,0.35,43,0.958,56,0.51,58,1.047,59,0.852,64,1.062,65,1.975,69,0.051,75,0.684,78,1.628,81,0.144,82,0.336,84,0.051,86,1.495,87,0.956,88,1.19,91,0.165,99,2.315,104,0.195,106,0.601,107,0.601,120,1.11,123,0.858,124,0.582,160,0.489,193,0.681,194,0.985,227,0.725,254,0.005,255,0.005,265,1.728,279,0.42,281,0.948,283,1.686,306,2.492,311,1.062,320,1.703,325,2.458,336,1.172,337,0.519,338,0.519,340,0.519,341,0.519,342,0.867,343,0.867,367,1.853,380,1.58,399,1.8,401,0.62,409,1.4,422,2.486,427,2.983,433,1.144,476,0.948,477,1.469,480,1.505,494,0.814,497,0.956,498,1.025,499,1.612,500,1.025,501,1.612,502,0.925,506,1.025,507,1.102,510,1.354,511,1.025,514,0.895,515,0.99,524,2.742,534,2.628,535,1.168,536,2.229,543,1.734,545,1.354,547,1.354,548,1.354,552,1.062,560,1.612,566,1.364,567,3.038,568,0.925,574,0.765,575,2.828,576,0.925,577,0.925,578,1.456,579,1.456,580,1.364,581,1.025,582,1.456,593,1.456,594,1.456,595,1.025,596,1.19,597,1.144,607,2.807,608,1.58,611,1.102,616,1.025,617,1.025,618,1.025,619,2.073,620,1.993,622,1.612,623,1.025,624,1.801,625,1.025,626,1.025,632,1.102,633,1.929,634,1.557,693,1.42,717,2.13,721,2.11,759,2.183,760,1.354,766,2.486,809,1.495,928,1.58,934,1.354,1050,0.46,1118,2.486,1119,1.58,1120,1.495,1121,1.58,1122,1.861,1123,2.831,1124,2.831,1125,2.831,1126,3.486,1127,3.074,1128,2.987,1129,1.68,1130,2.486,1131,1.68,1132,1.68,1133,1.68,1134,1.68,1135,1.68,1136,1.68,1137,1.68,1138,1.68,1139,1.68,1140,1.68,1141,1.68,1142,2.486,1143,1.68,1144,1.68,1145,1.68,1146,1.68,1147,1.68,1148,1.68,1149,1.68,1150,1.68,1151,1.68,1152,1.68,1153,1.68,1154,1.68,1155,2.486,1156,1.68,1157,3.074,1158,1.68,1159,3.486,1160,1.68,1161,1.58,1162,4.477,1163,5.463,1164,5.654,1165,1.58,1166,1.68,1167,2.643,1168,1.68,1169,2.486,1170,1.68,1171,2.486,1172,1.68,1173,2.486,1174,2.486,1175,2.486,1176,1.68,1177,2.486,1178,1.68,1179,3.791,1180,3.268,1181,3.791,1182,1.68,1183,1.799,1184,1.799,1185,1.799,1186,3.97,1187,2.486,1188,2.908,1189,1.799,1190,4.317,1191,2.831,1192,1.799,1193,2.908,1194,1.799,1195,1.799,1196,1.799,1197,1.294,1198,1.799,1199,1.799,1200,2.831,1201,2.143,1202,1.495,1203,1.799,1204,2.831,1205,2.831,1206,2.831,1207,2.831,1208,2.831,1209,3.501,1210,2.831,1211,3.97,1212,2.831,1213,1.799,1214,1.799,1215,1.799,1216,1.799,1217,1.799,1218,1.799,1219,1.799,1220,1.799,1221,1.799,1222,1.799,1223,1.799,1224,1.799,1225,1.799,1226,1.799,1227,1.799,1228,1.799,1229,1.799,1230,1.799,1231,1.799,1232,2.831,1233,2.831,1234,1.42,1235,1.799,1236,1.799,1237,3.921,1238,3.97,1239,2.831,1240,1.799,1241,1.495,1242,3.501,1243,2.831,1244,1.799,1245,1.799,1246,1.799,1247,1.799,1248,4.584,1249,3.501,1250,2.831,1251,1.799,1252,1.799,1253,1.799,1254,1.951,1255,1.799,1256,1.799,1257,1.799,1258,1.799,1259,2.831,1260,2.831,1261,2.831,1262,2.486,1263,2.486,1264,1.799,1265,3.97,1266,1.799,1267,3.97,1268,1.799,1269,3.97,1270,1.799,1271,2.831,1272,2.831,1273,2.831,1274,1.799,1275,1.799,1276,1.799,1277,1.799,1278,1.58,1279,1.495,1280,1.799,1281,1.799,1282,1.799,1283,1.799,1284,1.799,1285,1.799,1286,1.799,1287,2.831,1288,1.42,1289,1.799,1290,1.799,1291,3.501,1292,1.799,1293,1.799,1294,2.643,1295,1.799,1296,1.799,1297,1.799,1298,1.58,1299,1.799,1300,2.831,1301,1.495,1302,1.799,1303,1.68,1304,1.799,1305,3.97,1306,2.831,1307,2.831,1308,2.831,1309,2.831,1310,2.831,1311,2.831,1312,1.799,1313,1.799,1314,1.799,1315,1.495,1316,3.97,1317,1.799,1318,1.799,1319,2.831,1320,4.584,1321,3.501,1322,1.799,1323,2.831,1324,1.799,1325,2.831,1326,2.831,1327,2.352,1328,1.495,1329,3.501,1330,1.799,1331,4.317,1332,1.799,1333,1.799,1334,1.799,1335,3.486,1336,1.799,1337,1.799,1338,1.799,1339,1.799,1340,1.799,1341,1.799,1342,1.799,1343,1.799,1344,1.294,1345,1.799,1346,1.799,1347,1.294]],["title/interfaces/IDatePickerUnknownDateToggleConfig.html",[104,0.15,1127,2.674]],["body/interfaces/IDatePickerUnknownDateToggleConfig.html",[0,0.264,3,0.044,4,0.051,8,0.044,9,0.103,12,0.213,13,0.349,15,0.103,16,0.143,17,0.159,18,0.126,20,0.103,22,0.103,23,0.224,31,0.194,35,0.292,36,0.613,39,0.155,40,0.012,41,0.351,43,0.959,56,0.471,58,1.05,59,0.854,64,1.067,65,1.98,69,0.051,75,0.685,78,1.631,81,0.144,82,0.337,84,0.051,86,1.501,87,0.961,88,1.195,91,0.165,99,2.322,104,0.196,106,0.603,107,0.603,120,1.207,123,0.86,124,0.584,160,0.491,193,0.684,194,0.988,227,0.727,254,0.005,255,0.005,265,1.731,279,0.422,281,0.951,283,1.691,306,2.494,311,1.067,320,1.706,325,2.463,336,1.175,337,0.522,338,0.522,340,0.522,341,0.522,342,0.871,343,0.871,367,1.857,380,1.587,399,1.805,401,0.623,409,1.401,422,2.495,427,2.986,433,1.149,476,0.951,477,1.472,480,1.51,494,0.817,497,0.961,498,1.029,499,1.618,500,1.029,501,1.618,502,0.929,506,1.029,507,1.107,510,1.36,511,1.029,514,0.899,515,0.994,524,2.746,534,2.631,535,1.172,536,2.231,543,1.74,545,1.36,547,1.36,548,1.36,552,1.067,560,1.618,566,1.369,567,3.041,568,0.929,574,0.768,575,2.224,576,0.929,577,0.929,578,1.461,579,1.461,580,1.369,581,1.029,582,1.461,593,1.461,594,1.461,595,1.029,596,1.195,597,1.149,607,2.812,608,1.587,611,1.107,616,1.029,617,1.029,618,1.029,619,2.077,620,1.999,622,1.618,623,1.029,624,1.807,625,1.029,626,1.029,632,1.107,633,1.932,634,1.562,693,1.426,717,2.138,721,2.115,759,2.188,760,1.36,766,2.495,809,1.501,928,1.587,934,1.36,1050,0.463,1118,2.495,1119,1.587,1120,1.501,1121,1.587,1122,1.866,1123,2.841,1124,2.841,1125,2.841,1126,3.083,1127,3.494,1128,2.994,1129,1.687,1130,2.495,1131,1.687,1132,1.687,1133,1.687,1134,1.687,1135,1.687,1136,1.687,1137,1.687,1138,1.687,1139,1.687,1140,1.687,1141,1.687,1142,2.495,1143,1.687,1144,1.687,1145,1.687,1146,1.687,1147,1.687,1148,1.687,1149,1.687,1150,1.687,1151,1.687,1152,1.687,1153,1.687,1154,1.687,1155,2.495,1156,1.687,1157,3.083,1158,1.687,1159,3.494,1160,1.687,1161,1.587,1162,3.715,1163,5.355,1164,5.599,1165,1.587,1166,1.687,1167,2.652,1168,1.687,1169,2.495,1170,1.687,1171,2.495,1172,1.687,1173,2.495,1174,2.495,1175,2.495,1176,1.687,1177,2.495,1178,1.687,1179,3.799,1180,3.277,1181,3.799,1182,1.687,1183,3.979,1184,3.979,1185,3.979,1186,1.807,1187,2.495,1188,2.916,1189,1.807,1190,4.326,1191,2.841,1192,1.807,1193,2.916,1194,1.807,1195,1.807,1196,1.807,1197,1.3,1198,1.807,1199,1.807,1200,2.841,1201,2.149,1202,1.501,1203,1.807,1204,2.841,1205,2.841,1206,2.841,1207,2.841,1208,2.841,1209,3.511,1210,2.841,1211,3.979,1212,2.841,1213,1.807,1214,1.807,1215,1.807,1216,1.807,1217,1.807,1218,1.807,1219,1.807,1220,1.807,1221,1.807,1222,1.807,1223,1.807,1224,1.807,1225,1.807,1226,1.807,1227,1.807,1228,1.807,1229,1.807,1230,1.807,1231,1.807,1232,2.841,1233,2.841,1234,1.426,1235,1.807,1236,1.807,1237,3.927,1238,3.979,1239,2.841,1240,1.807,1241,1.501,1242,3.511,1243,2.841,1244,1.807,1245,1.807,1246,1.807,1247,1.807,1248,4.593,1249,3.511,1250,2.841,1251,1.807,1252,1.807,1253,1.807,1254,1.958,1255,1.807,1256,1.807,1257,1.807,1258,1.807,1259,2.841,1260,2.841,1261,2.841,1262,2.495,1263,2.495,1264,1.807,1265,3.979,1266,1.807,1267,3.979,1268,1.807,1269,3.979,1270,1.807,1271,2.841,1272,2.841,1273,2.841,1274,1.807,1275,1.807,1276,1.807,1277,1.807,1278,1.587,1279,1.501,1280,1.807,1281,1.807,1282,1.807,1283,1.807,1284,1.807,1285,1.807,1286,1.807,1287,2.841,1288,1.426,1289,1.807,1290,1.807,1291,3.511,1292,1.807,1293,1.807,1294,2.652,1295,1.807,1296,1.807,1297,1.807,1298,1.587,1299,1.807,1300,2.841,1301,1.501,1302,1.807,1303,1.687,1304,1.807,1305,3.979,1306,2.841,1307,2.841,1308,2.841,1309,2.841,1310,2.841,1311,2.841,1312,1.807,1313,1.807,1314,1.807,1315,1.501,1316,3.979,1317,1.807,1318,1.807,1319,2.841,1320,4.593,1321,3.511,1322,1.807,1323,2.841,1324,1.807,1325,2.841,1326,2.841,1327,2.36,1328,1.501,1329,3.511,1330,1.807,1331,4.326,1332,1.807,1333,1.807,1334,1.807,1335,3.494,1336,1.807,1337,1.807,1338,1.807,1339,1.807,1340,1.807,1341,1.807,1342,1.807,1343,1.807,1344,1.3,1345,1.807,1346,1.807,1347,1.3]],["title/interfaces/IDropdownConfig.html",[104,0.15,728,3.044]],["body/interfaces/IDropdownConfig.html",[0,0.377,3,0.108,4,0.095,8,0.082,9,0.191,12,0.396,13,0.548,15,0.191,16,0.265,17,0.296,18,0.235,20,0.191,22,0.161,23,0.352,31,0.362,35,0.345,36,0.778,39,0.253,40,0.012,41,0.375,42,0.914,43,0.802,56,0.637,66,2.856,68,1.179,69,0.095,78,1.194,81,0.157,82,0.362,84,0.095,85,3.678,87,1.786,88,2.223,91,0.126,104,0.165,106,1.132,107,1.132,120,1.236,123,1.104,196,0.86,203,1.658,254,0.008,255,0.008,294,3.21,320,1.896,325,1.914,336,1.677,337,0.97,338,0.97,367,1.568,401,1.728,433,2.137,448,2.764,466,4.677,476,1.494,477,1.367,478,3.707,479,4.162,480,2.372,485,2.838,486,2.058,536,2.223,538,2.058,607,2.732,619,2.266,715,3.641,716,3.641,717,2.529,718,4.016,719,4.016,720,4.016,721,1.786,722,4.016,723,4.016,726,5.186,728,5.01,736,5.986,737,2.529,739,4.016,741,5.427,742,4.016,743,5.332,745,2.792,746,5.332,747,4.016,748,4.016,749,4.016,750,5.332,751,4.016,752,4.016,753,2.951,754,4.016,755,4.677,757,4.878,758,4.016,759,2.454,760,2.529,764,3.641,765,3.641,766,3.919,767,5.332,768,5.986,769,4.016,770,4.016,771,5.332,772,4.016,773,4.016,774,4.016,775,2.951,776,3.361,777,4.016,778,4.016,779,5.986,780,5.332,781,4.463,782,5.332,783,4.016,784,3.641,785,4.016,786,4.016,787,4.016,788,4.016,789,4.016,790,4.016,1050,0.86]],["title/interfaces/IErrorComponentConfig.html",[104,0.15,797,2.842]],["body/interfaces/IErrorComponentConfig.html",[0,0.415,3,0.1,4,0.116,8,0.1,9,0.234,12,0.484,13,0.624,15,0.234,16,0.325,17,0.363,18,0.288,20,0.234,22,0.149,23,0.401,31,0.443,35,0.422,36,0.804,39,0.244,40,0.012,41,0.382,56,0.591,59,0.765,68,1.295,69,0.155,73,2.794,81,0.143,82,0.368,84,0.116,91,0.155,104,0.25,106,1.078,107,1.078,123,1.175,155,3.964,198,1.021,254,0.009,255,0.009,257,3.501,265,1.551,279,0.96,308,2.836,309,3.501,336,1.845,337,1.188,338,1.188,367,1.92,433,2.617,476,1.701,477,1.261,480,2.701,489,4.01,490,2.96,494,1.861,535,1.697,792,4.115,793,4.458,794,4.458,795,6.525,797,5.146,800,4.913,806,3.614,807,4.458,808,2.343,809,3.418,810,5.504,811,5.504,812,4.458,1050,1.053]],["title/interfaces/IErrorIconConfig.html",[104,0.15,800,2.529]],["body/interfaces/IErrorIconConfig.html",[0,0.417,3,0.101,4,0.118,8,0.101,9,0.237,12,0.491,13,0.629,15,0.237,16,0.329,17,0.368,18,0.292,20,0.237,22,0.151,23,0.404,31,0.449,35,0.428,36,0.74,39,0.227,40,0.012,41,0.383,56,0.526,59,0.775,68,1.227,69,0.17,73,3.265,81,0.144,82,0.369,84,0.118,91,0.156,104,0.252,106,1.087,107,1.087,123,1.018,155,3.988,198,1.035,254,0.009,255,0.009,257,3.53,265,1.572,279,0.973,308,2.874,309,3.53,336,1.856,337,1.204,338,1.204,367,1.946,433,2.652,476,1.715,477,1.278,480,2.723,489,4.043,490,3,494,1.886,535,1.72,792,4.171,793,4.518,794,4.518,795,6.007,797,4.783,800,4.804,806,3.663,807,4.518,808,2.375,809,3.465,810,5.55,811,5.55,812,4.518,1050,1.067]],["title/interfaces/IFlyoutConfig.html",[104,0.15,757,2.674]],["body/interfaces/IFlyoutConfig.html",[0,0.368,3,0.078,4,0.09,8,0.078,9,0.182,12,0.377,13,0.531,15,0.182,16,0.253,17,0.282,18,0.224,20,0.182,22,0.214,23,0.341,31,0.344,35,0.502,36,0.751,39,0.262,40,0.012,41,0.334,43,0.776,50,1.534,54,1.171,56,0.601,69,0.09,78,1.859,81,0.122,82,0.352,83,1.446,84,0.09,91,0.138,92,1.171,104,0.157,106,0.916,107,0.916,120,1.11,124,0.887,144,2.526,200,0.819,203,1.329,254,0.008,255,0.008,277,2.988,294,3.764,306,2.469,311,1.889,317,2.408,320,2.044,325,2.459,334,2.408,346,3.2,352,3.2,389,2.993,399,2.69,401,1.104,448,2.719,476,1.071,477,0.98,485,2.035,486,1.96,502,2.69,538,1.96,554,4.319,596,2.117,597,2.035,643,3.467,721,2.782,737,3.678,745,2.659,757,4.293,759,3.005,775,2.81,776,3.2,814,3.2,815,3.824,816,5.16,817,3.824,818,5.16,819,3.824,825,6.529,826,3.824,833,4.799,839,5.295,846,3.824,848,3.824,850,3.824,851,3.824,852,3.824,853,3.824,854,3.824,855,3.824,856,3.824,859,5.841,860,3.824,863,3.824,864,2.659,865,3.467,866,5.295,867,5.295,868,3.2,869,3.2,870,3.824,871,4.885,872,3.467,873,3.824,874,3.824,875,5.16,876,3.824,877,3.824,878,2.526,879,5.841,880,6.727,881,3.824,882,3.824,883,5.16,884,6.529,885,5.16,886,3.824,887,3.824,888,3.824,889,3.824,890,3.824,891,3.824,892,3.824,893,3.824,894,5.16,895,3.824,896,5.16,897,3.824,898,3.467,899,3.824,900,3.824,901,3.824,902,5.16,903,3.467,904,3.409,905,3.824,906,2.81,907,3.824,908,3.824,909,3.824,910,5.16,911,3.824,912,3.824,913,3.824,914,3.467,915,5.16,916,3.824,917,3.824,918,3.824,919,5.16,920,3.824,921,2.526,922,3.824,923,3.824,924,3.824,925,3.824,926,5.16,927,3.824,928,2.81,929,3.824,930,5.16,931,3.824,932,3.824,933,3.824,934,2.408,935,3.824,936,3.824,937,3.824,938,3.824,939,3.824,1050,0.819]],["title/interfaces/IFlyoutOptionConfig.html",[104,0.15,833,2.674]],["body/interfaces/IFlyoutOptionConfig.html",[0,0.412,3,0.098,4,0.114,8,0.098,9,0.23,12,0.477,13,0.618,15,0.23,16,0.32,17,0.357,18,0.283,20,0.23,22,0.146,23,0.397,31,0.436,35,0.416,36,0.801,39,0.276,40,0.012,41,0.372,43,1.058,56,0.647,69,0.114,75,0.703,78,1.439,81,0.114,82,0.335,84,0.114,91,0.154,92,1.482,104,0.199,106,0.86,107,0.86,120,1.337,139,3.468,202,1.037,203,1.368,254,0.009,255,0.009,279,0.945,320,1.439,389,2.481,401,1.397,448,2.848,476,1.356,477,1.241,503,5.11,536,1.621,717,4.118,721,3.043,737,4.307,833,4.807,864,3.366,868,4.052,869,4.052,904,3.198,940,4.052,941,4.052,942,4.841,944,4.841,947,5.451,948,5.451,949,6.84,950,4.841,951,6.012,1050,1.037]],["title/interfaces/IHiddenNavConfig.html",[104,0.15,1023,2.842]],["body/interfaces/IHiddenNavConfig.html",[0,0.421,3,0.103,4,0.12,8,0.103,9,0.242,13,0.523,15,0.242,16,0.336,17,0.376,18,0.298,20,0.242,22,0.154,23,0.41,35,0.437,36,0.81,39,0.23,40,0.012,41,0.382,56,0.532,69,0.12,81,0.12,82,0.317,84,0.12,91,0.158,102,3.432,104,0.255,116,2.051,117,0.903,137,3.739,209,1.057,210,1.454,254,0.009,255,0.009,291,3.36,334,3.203,347,4.095,399,2.189,409,1.347,808,2.954,953,3.062,1014,4.258,1015,3.974,1016,4.258,1017,4.648,1018,4.612,1021,4.612,1023,5.224,1025,4.612,1028,4.612,1029,4.612,1030,4.612,1033,5.437,1034,6.31,1035,4.612,1036,4.612,1037,4.612,1038,4.612,1039,2.934,1040,4.612,1041,4.612,1042,4.612,1043,4.095,1044,4.612,1045,5.62,1046,4.612,1047,4.612,1050,1.09]],["title/interfaces/IIconButtonComponentConfig.html",[64,1.797,104,0.15]],["body/interfaces/IIconButtonComponentConfig.html",[0,0.392,3,0.088,4,0.103,8,0.088,9,0.207,12,0.428,13,0.578,15,0.207,16,0.287,17,0.321,18,0.254,20,0.207,22,0.131,23,0.371,31,0.391,35,0.373,36,0.779,39,0.244,40,0.012,41,0.375,50,1.67,56,0.618,59,0.677,64,3.074,66,3.054,67,3.24,68,1.29,69,0.161,70,3.793,71,2.508,72,3.024,73,3.027,74,1.24,75,0.578,76,2.652,81,0.132,82,0.368,83,1.574,84,0.103,85,4.022,87,1.935,91,0.164,92,1.332,95,3.249,103,1.935,104,0.231,106,1.168,107,1.168,116,2.812,120,1.168,123,1.133,124,0.748,212,0.903,254,0.008,255,0.008,337,1.051,338,1.051,347,2.873,367,1.699,409,1.132,446,3.398,447,3.64,448,2.836,476,1.574,477,1.44,478,3.906,479,4.327,480,2.499,483,4.389,484,3.398,485,2.99,486,2.228,489,4.111,490,4.099,806,3.196,1050,0.931,1348,3.196,1349,3.196,1350,5.139,1351,5.505,1352,4.389,1353,3.64,1354,4.389,1355,3.64,1356,3.943,1357,3.943,1358,3.943,1359,3.943,1360,5.093,1361,5.642,1362,3.943,1363,3.943]],["title/interfaces/IIconButtonIconConfig.html",[85,2.098,104,0.15]],["body/interfaces/IIconButtonIconConfig.html",[0,0.397,3,0.091,4,0.105,8,0.091,9,0.212,12,0.44,13,0.587,15,0.212,16,0.295,17,0.329,18,0.261,20,0.212,22,0.135,23,0.377,31,0.402,35,0.383,36,0.704,39,0.212,40,0.012,41,0.377,50,1.698,56,0.491,59,0.694,64,2.822,66,2.858,67,3.294,68,1.247,69,0.171,70,3.83,71,2.574,72,3.103,73,3.286,74,1.261,75,0.587,76,2.678,81,0.135,82,0.37,83,1.601,84,0.105,85,3.959,87,1.986,91,0.166,92,1.367,95,3.281,103,1.986,104,0.235,106,1.179,107,1.179,116,2.54,120,1.014,123,0.95,124,0.767,212,0.927,254,0.009,255,0.009,337,1.078,338,1.078,347,2.948,367,1.743,409,1.151,446,3.487,447,3.736,448,2.379,476,1.601,477,1.465,478,3.972,479,4.38,480,2.541,483,4.463,484,3.487,485,3.04,486,2.287,489,4.162,490,4.133,806,3.28,1050,0.956,1348,3.28,1349,3.28,1350,5.189,1351,5.559,1352,4.463,1353,3.736,1354,4.463,1355,3.736,1356,4.047,1357,4.047,1358,4.047,1359,4.047,1360,5.179,1361,5.712,1362,4.047,1363,4.047]],["title/interfaces/IIconConfig.html",[104,0.15,1364,2.842]],["body/interfaces/IIconConfig.html",[0,0.429,3,0.108,4,0.125,8,0.108,9,0.253,12,0.523,15,0.253,16,0.351,17,0.392,18,0.311,20,0.253,22,0.161,23,0.42,35,0.456,39,0.236,40,0.012,41,0.382,56,0.607,68,0.944,69,0.125,81,0.125,82,0.361,84,0.125,91,0.15,104,0.219,116,2.911,213,1.138,254,0.01,255,0.01,257,3.671,308,3.065,309,3.671,317,4.008,335,3.51,381,4.448,409,1.282,1050,1.138,1101,4.448,1102,4.448,1279,3.695,1364,5.323,1365,4.818,1366,6.547,1367,5.314,1368,5.314,1369,5.314,1370,5.314,1371,5.314,1372,6.364,1373,5.314]],["title/interfaces/IIndicatorConfig.html",[104,0.15,1374,3.044]],["body/interfaces/IIndicatorConfig.html",[0,0.384,3,0.085,4,0.098,8,0.085,9,0.198,12,0.41,13,0.562,15,0.198,18,0.244,20,0.198,22,0.126,23,0.361,30,2.753,31,0.375,35,0.358,39,0.264,40,0.012,41,0.372,43,0.627,56,0.634,66,2.891,68,1.149,69,0.098,75,0.627,76,2.203,81,0.129,82,0.28,84,0.098,91,0.166,92,2.057,95,2.699,96,3.151,97,4.016,104,0.171,106,1.224,107,1.248,116,2.609,119,4.269,120,0.97,123,1.076,139,2.404,215,0.893,254,0.008,255,0.008,257,3.151,258,4.573,265,1.923,306,2.53,308,2.404,309,3.151,317,3.441,335,2.753,336,1.531,337,1.007,338,1.007,362,3.063,389,2.136,399,2.351,425,3.488,433,2.908,490,2.509,534,1.793,536,2.353,619,2.068,690,2.753,755,5.387,1050,0.893,1374,5.103,1375,3.488,1376,6.251,1377,6.718,1378,4.954,1379,3.779,1380,4.954,1381,4.954,1382,4.954,1383,4.954,1384,5.528,1385,3.799,1386,4.573,1387,4.954,1388,3.779,1389,3.779,1390,3.779,1391,3.488,1392,3.779,1393,3.779,1394,3.779,1395,3.779,1396,4.168,1397,4.168,1398,2.753,1399,3.256,1400,3.256,1401,4.168,1402,4.168,1403,4.168,1404,4.168,1405,5.464,1406,4.168,1407,5.464,1408,5.464,1409,5.464,1410,5.464,1411,6.096,1412,4.168,1413,5.464,1414,4.168,1415,4.168,1416,4.168,1417,4.168,1418,4.168,1419,5.464,1420,4.168,1421,3.256,1422,3.779,1423,4.168,1424,4.168,1425,5.464,1426,4.168]],["title/interfaces/IInputComponentConfig.html",[104,0.15,1427,3.044]],["body/interfaces/IInputComponentConfig.html",[0,0.354,3,0.061,4,0.071,8,0.061,9,0.142,12,0.295,13,0.447,15,0.142,16,0.198,17,0.221,18,0.175,20,0.142,22,0.09,23,0.371,31,0.269,33,0.767,35,0.439,36,0.734,39,0.266,40,0.012,41,0.37,42,0.681,43,0.844,55,0.701,56,0.627,59,0.968,65,1.809,69,0.071,75,0.689,78,1.849,81,0.151,82,0.363,84,0.071,91,0.121,92,0.916,104,0.179,106,0.997,107,0.997,120,1.167,123,0.934,124,0.747,160,0.681,219,0.902,227,0.93,254,0.007,255,0.007,265,1.614,275,1.33,279,0.584,281,1.217,283,2.062,311,2.945,320,1.908,336,1.217,337,0.723,338,0.723,340,0.723,341,0.723,342,1.206,343,1.206,360,2.503,389,2.621,401,0.863,409,0.602,427,1.999,448,1.809,476,1.217,477,1.529,485,2.722,494,1.132,496,2.405,497,1.33,498,1.425,499,2.07,500,1.425,501,2.07,502,1.287,505,1.8,506,1.425,507,1.532,508,2.312,509,1.883,510,1.883,511,1.425,512,2.405,513,2.198,514,2.13,515,2.354,516,2.615,517,2.503,518,1.8,522,2.735,524,3.074,528,2.735,534,1.869,535,1.938,536,2.083,538,2.621,539,2.503,543,1.532,544,1.8,545,1.883,547,2.735,548,1.883,550,2.503,552,1.477,555,1.33,557,1.869,560,2.07,562,2.615,566,1.751,567,2.964,568,1.287,574,1.064,575,2.415,576,1.287,577,1.287,578,1.869,579,1.869,580,2.263,581,1.425,582,2.415,593,2.415,594,2.415,595,2.675,597,1.592,602,2.503,605,1.8,606,2.503,610,3.079,611,1.532,612,1.8,613,1.33,614,1.33,615,1.33,616,2.07,617,2.07,618,2.964,619,1.644,620,2.07,622,2.07,623,2.07,624,2.312,625,1.425,626,1.425,627,2.503,628,3.079,629,1.8,630,1.8,631,1.8,632,1.532,633,1.412,634,1.999,635,2.503,636,2.503,759,1.999,775,2.198,781,2.503,808,1.425,878,1.975,906,2.198,1050,0.641,1122,2.497,1201,2.226,1254,2.95,1262,3.192,1263,2.198,1278,3.192,1288,1.975,1335,3.192,1427,4.698,1428,2.503,1429,3.903,1430,2.503,1431,2.503,1432,5.089,1433,5.014,1434,1.975,1435,2.991,1436,2.503,1437,2.198,1438,2.503,1439,2.503,1440,2.503,1441,2.503,1442,2.503,1443,2.079,1444,2.503,1445,2.991,1446,2.991,1447,2.991,1448,2.991,1449,2.991,1450,2.991,1451,4.382,1452,4.343,1453,2.991,1454,2.991,1455,2.991,1456,2.991,1457,2.991,1458,2.991,1459,2.991,1460,2.991,1461,2.991,1462,2.991,1463,2.991,1464,2.991,1465,5.613,1466,2.503,1467,2.991,1468,2.991,1469,5.613,1470,2.337,1471,2.503,1472,2.337,1473,2.503,1474,2.991,1475,2.991,1476,2.991,1477,2.991,1478,4.343,1479,5.115,1480,4.343,1481,6.219,1482,5.115,1483,5.115,1484,1.975,1485,2.503,1486,2.991,1487,2.991,1488,2.503,1489,2.503,1490,2.503,1491,2.991,1492,2.711,1493,2.711]],["title/interfaces/ILabelConfig.html",[104,0.15,566,1.467]],["body/interfaces/ILabelConfig.html",[0,0.411,3,0.086,4,0.1,8,0.086,9,0.202,12,0.419,13,0.57,15,0.202,16,0.281,17,0.314,18,0.249,20,0.202,22,0.129,23,0.366,31,0.383,35,0.366,36,0.619,39,0.27,40,0.012,41,0.388,42,0.969,50,1.265,56,0.646,69,0.1,75,0.438,76,1.716,81,0.164,82,0.283,83,1.552,84,0.1,91,0.167,103,2.465,104,0.228,120,1.231,124,0.732,160,0.969,224,0.884,254,0.008,255,0.008,265,1.748,279,0.831,281,1.552,283,2.483,340,1.028,341,1.028,342,1.716,343,1.716,409,1.314,427,1.959,514,1.772,515,3.003,524,3.142,535,1.469,536,2.322,555,1.893,557,2.384,566,2.483,568,2.91,574,1.515,575,2.807,576,1.831,577,1.831,578,2.384,579,2.384,580,2.63,582,2.807,593,2.807,594,2.807,607,2.181,613,1.893,614,1.893,615,1.893,619,1.611,633,1.801,634,2.55,753,3.128,1050,0.912,1122,2.902,1385,2.959,1398,2.812,1470,3.325,1494,3.325,1495,5.915,1496,4.795,1497,4.072,1498,3.562,1499,3.859,1500,3.562,1501,2.812,1502,4.328,1503,3.562,1504,4.328,1505,3.562,1506,3.562,1507,3.859,1508,3.859,1509,3.859,1510,5.023,1511,3.859,1512,3.859,1513,3.859,1514,3.859,1515,3.859,1516,3.859,1517,4.072]],["title/interfaces/ILabelIconConfig.html",[104,0.15,580,1.467]],["body/interfaces/ILabelIconConfig.html",[0,0.421,3,0.092,4,0.107,8,0.092,9,0.216,12,0.446,13,0.593,15,0.216,16,0.299,17,0.335,18,0.265,20,0.216,22,0.137,23,0.381,31,0.408,35,0.389,36,0.644,39,0.235,40,0.012,41,0.387,42,1.031,50,1.347,56,0.495,69,0.107,75,0.466,76,1.827,81,0.166,82,0.295,83,1.616,84,0.107,91,0.169,103,2.566,104,0.237,120,1.024,124,0.779,160,1.031,224,0.942,254,0.009,255,0.009,265,1.82,279,0.885,281,1.616,283,2.558,340,1.095,341,1.095,342,1.827,343,1.827,409,1.346,427,2.086,514,1.887,515,2.086,524,2.968,535,1.565,536,2.125,555,2.016,557,2.482,566,2.326,568,2.482,574,1.613,575,2.482,576,1.95,577,1.95,578,2.482,579,2.482,580,2.558,582,1.95,593,1.95,594,1.95,607,2.322,613,2.016,614,2.016,615,2.016,619,1.716,633,1.875,634,2.655,753,3.331,1050,0.971,1122,2.016,1385,3.151,1398,4.412,1470,5.219,1494,3.541,1495,4.109,1496,3.331,1497,4.24,1498,3.793,1499,6.056,1500,3.793,1501,2.994,1502,4.507,1503,3.793,1504,4.507,1505,3.793,1506,3.793,1507,4.109,1508,4.109,1509,4.109,1510,5.23,1511,4.109,1512,4.109,1513,4.109,1514,4.109,1515,4.109,1516,4.109,1517,4.24]],["title/interfaces/ILinkComponentConfig.html",[104,0.15,327,2.674]],["body/interfaces/ILinkComponentConfig.html",[0,0.429,3,0.108,4,0.125,8,0.108,9,0.252,15,0.252,16,0.351,17,0.392,18,0.311,20,0.252,22,0.16,23,0.42,35,0.456,39,0.267,40,0.012,41,0.39,56,0.642,69,0.125,75,0.742,81,0.125,82,0.325,84,0.125,91,0.15,102,2.938,104,0.218,120,1.209,176,1.137,177,1.282,254,0.01,255,0.01,279,1.036,291,4.663,320,1.578,327,5.005,345,5.516,361,5.305,439,4.812,440,5.308,443,7.059,1050,1.137]],["title/interfaces/IOption.html",[104,0.15,1518,3.298]],["body/interfaces/IOption.html",[0,0.389,3,0.075,4,0.087,5,0.894,8,0.075,9,0.176,12,0.364,13,0.519,15,0.176,18,0.216,20,0.176,22,0.112,23,0.333,31,0.333,35,0.318,39,0.187,40,0.012,41,0.36,43,1.002,50,1.5,55,1.183,59,0.575,69,0.087,75,0.685,78,2.116,81,0.135,82,0.355,83,1.414,84,0.087,91,0.087,104,0.152,117,0.896,120,0.657,124,0.636,171,0.817,183,0.792,219,1.193,254,0.008,255,0.008,294,3.037,306,2.107,319,3.096,320,2.217,325,3.076,334,2.329,335,2.443,399,1.591,409,1.242,427,3.138,514,2.774,535,1.277,596,2.793,597,2.685,599,3.353,639,2.226,641,3.096,724,3.699,759,2.322,784,5.206,839,4.574,872,5.206,898,3.353,904,2.443,981,1.827,1050,1.081,1122,1.645,1279,3.992,1451,2.718,1518,6.04,1519,3.699,1520,5.76,1521,5.76,1522,5.76,1523,4.223,1524,5.76,1525,4.223,1526,4.223,1527,4.223,1528,3.699,1529,3.699,1530,4.223,1531,3.353,1532,4.223,1533,4.223,1534,4.223,1535,4.223,1536,4.223,1537,4.223,1538,4.223,1539,4.223,1540,4.223,1541,4.223,1542,4.223,1543,4.223,1544,4.223,1545,4.223,1546,4.223,1547,4.223,1548,4.223,1549,4.223,1550,4.223,1551,4.223,1552,4.223,1553,4.223,1554,7.369,1555,6.555,1556,6.555,1557,7.783,1558,7.369,1559,7.369,1560,4.223,1561,4.223,1562,4.223,1563,4.223,1564,4.223,1565,7.041,1566,5.76,1567,4.223,1568,4.223,1569,4.223,1570,4.223,1571,4.223,1572,3.096,1573,4.223,1574,4.223,1575,4.223,1576,4.223,1577,4.223,1578,4.223,1579,4.223,1580,4.223,1581,4.223,1582,4.223,1583,6.555,1584,4.223,1585,7.041,1586,4.223,1587,4.223,1588,4.223,1589,4.223,1590,4.223,1591,4.223,1592,4.223,1593,3.699,1594,4.223,1595,4.223,1596,4.223,1597,4.223,1598,4.223,1599,4.223,1600,5.76,1601,4.223,1602,4.223,1603,4.223,1604,4.223,1605,4.223,1606,4.223,1607,4.223,1608,4.223,1609,4.223,1610,5.76]],["title/interfaces/IProgressIndicatorConfig.html",[104,0.15,1611,2.842]],["body/interfaces/IProgressIndicatorConfig.html",[0,0.399,3,0.092,4,0.106,8,0.092,9,0.214,12,0.444,13,0.591,15,0.214,16,0.298,17,0.333,18,0.264,20,0.214,22,0.136,23,0.38,31,0.405,35,0.387,36,0.817,39,0.234,40,0.012,41,0.352,50,1.881,56,0.622,69,0.106,81,0.162,82,0.294,83,1.61,84,0.106,91,0.166,92,1.379,104,0.236,106,1.02,107,1.02,117,1.123,123,1.109,124,0.774,160,1.025,229,0.936,230,1.397,254,0.009,255,0.009,281,1.61,306,2.446,325,2.147,336,1.61,337,1.088,338,1.088,340,1.088,341,1.088,401,1.3,409,1.157,555,2.004,557,2.472,613,2.004,614,2.004,615,2.004,633,1.868,721,2.965,981,2.225,1039,2.598,1050,0.965,1082,3.459,1083,3.459,1089,3.519,1105,3.796,1399,3.519,1400,3.519,1611,4.943,1612,2.975,1613,3.132,1614,3.311,1615,5.379,1616,6.242,1617,5.207,1618,3.995,1619,2.836,1620,3.77,1621,3.77,1622,4.489,1623,3.77,1624,4.489,1625,3.77,1626,5.21,1627,4.809,1628,4.402,1629,3.796,1630,4.084,1631,4.084,1632,4.084,1633,4.489,1634,4.084,1635,4.084,1636,5.21]],["title/interfaces/IProgressTagsConfig.html",[104,0.15,1618,2.529]],["body/interfaces/IProgressTagsConfig.html",[0,0.407,3,0.096,4,0.111,8,0.096,9,0.224,12,0.463,13,0.607,15,0.224,16,0.311,17,0.347,18,0.275,20,0.224,22,0.142,23,0.39,31,0.423,35,0.404,36,0.795,39,0.264,40,0.012,41,0.346,56,0.581,59,0.731,69,0.111,75,0.483,76,2.38,81,0.152,82,0.357,84,0.111,91,0.164,92,1.44,95,2.916,96,3.405,104,0.193,106,1.202,107,1.202,123,1.16,160,1.07,230,1.425,231,1.007,254,0.009,255,0.009,257,2.711,275,2.092,281,1.654,336,1.897,337,1.136,338,1.136,340,1.136,341,1.136,367,1.836,389,2.409,409,1.189,476,1.654,477,1.205,480,2.626,535,1.623,633,2.098,878,3.9,981,2.322,1050,1.007,1234,3.106,1237,3.9,1501,3.106,1612,3.106,1618,4.487,1619,2.961,1637,3.673,1638,4.941,1639,4.263,1640,5.402,1641,4.263,1642,4.941,1643,4.263,1644,4.263,1645,4.263,1646,4.263,1647,4.263,1648,6.137,1649,5.353,1650,4.701,1651,4.701,1652,5.402,1653,3.935,1654,4.613]],["title/interfaces/IRadioInputComponentConfig.html",[104,0.15,1655,2.842]],["body/interfaces/IRadioInputComponentConfig.html",[0,0.351,3,0.071,4,0.082,8,0.071,9,0.166,12,0.344,13,0.498,15,0.166,16,0.23,17,0.257,18,0.204,20,0.166,22,0.146,23,0.32,31,0.314,35,0.416,36,0.731,39,0.266,40,0.012,41,0.382,43,0.728,56,0.647,58,0.77,65,1.452,69,0.082,75,0.498,78,1.995,81,0.158,82,0.323,84,0.082,91,0.131,104,0.199,106,0.86,107,0.86,120,1.192,123,1.001,124,0.6,160,0.794,233,1.007,234,1.136,254,0.007,255,0.007,265,1.1,275,1.552,279,0.681,281,1.358,283,2.245,306,1.28,320,1.037,336,1.56,337,0.843,338,0.843,340,0.843,341,0.843,342,1.406,343,1.406,401,1.398,409,0.703,427,2.23,448,2.724,476,1.358,477,1.621,486,1.787,494,1.32,496,2.682,497,1.552,498,1.662,499,2.309,500,1.662,501,2.309,502,1.501,505,2.1,506,1.662,507,1.787,508,1.856,509,2.196,511,1.662,512,2.682,514,1.452,515,2.23,516,2.917,518,2.1,524,3.085,528,3.506,534,1.501,535,2.317,536,2.117,538,2.483,543,1.787,544,2.1,552,1.723,555,1.552,557,2.085,560,2.309,562,2.917,566,1.954,567,3.118,568,1.501,574,1.241,575,2.588,576,1.501,577,1.501,578,2.085,579,2.085,580,2.426,581,1.662,582,2.588,591,4.7,593,2.588,594,2.588,595,2.867,605,2.1,607,1.787,610,3.351,611,1.787,612,2.1,613,1.552,614,1.552,615,1.552,616,2.309,617,2.309,618,3.118,619,1.834,620,2.309,622,2.309,623,2.309,624,2.579,625,1.662,626,1.662,628,2.917,629,2.1,630,2.1,631,2.1,632,2.853,633,1.575,634,2.23,759,2.91,760,2.196,808,2.309,871,2.725,904,2.304,921,2.304,1050,0.747,1122,2.676,1201,2.483,1202,2.425,1254,2.012,1301,2.425,1315,2.425,1344,2.917,1347,2.917,1434,2.304,1484,2.304,1655,4.35,1656,2.919,1657,2.725,1658,2.425,1659,5.454,1660,4.7,1661,5.454,1662,3.162,1663,2.563,1664,2.563,1665,2.563,1666,2.563,1667,2.563,1668,2.563,1669,2.563,1670,2.563,1671,3.162,1672,3.162,1673,3.162,1674,3.162,1675,3.162]],["title/interfaces/IRadioInputOption.html",[104,0.15,1660,2.842]],["body/interfaces/IRadioInputOption.html",[0,0.364,3,0.076,4,0.088,8,0.076,9,0.178,12,0.368,13,0.522,15,0.178,16,0.247,17,0.276,18,0.218,20,0.178,22,0.153,23,0.335,31,0.336,35,0.436,36,0.644,39,0.188,40,0.012,41,0.376,43,0.974,56,0.597,58,0.824,65,1.555,69,0.088,75,0.666,78,2.032,81,0.161,82,0.331,84,0.088,91,0.136,104,0.209,106,0.901,107,0.901,120,1.024,123,0.621,124,0.642,160,0.85,233,1.055,234,1.191,254,0.008,255,0.008,265,1.178,275,1.661,279,0.729,281,1.423,283,2.326,306,1.37,320,1.11,336,1.616,337,0.902,338,0.902,340,0.902,341,0.902,342,1.505,343,1.505,401,1.465,409,0.752,427,2.337,448,2.782,476,1.423,477,1.66,486,1.913,494,1.413,496,2.811,497,1.661,498,1.779,499,2.42,500,1.779,501,2.42,502,1.606,505,2.247,506,1.779,507,1.913,508,1.987,509,2.351,511,1.779,512,2.811,514,1.555,515,2.337,516,3.056,518,2.247,524,2.941,528,3.633,534,1.606,535,2.359,536,1.7,538,2.602,543,1.913,544,2.247,552,1.844,555,1.661,557,2.184,560,2.42,562,3.056,566,2.047,567,3.184,568,1.606,574,1.329,575,2.184,576,1.606,577,1.606,578,2.184,579,2.184,580,2.047,581,1.779,582,1.606,591,2.917,593,1.606,594,1.606,595,1.779,605,2.247,607,1.913,610,3.473,611,1.913,612,2.247,613,1.661,614,1.661,615,1.661,616,2.42,617,2.42,618,3.184,619,1.922,620,2.42,622,2.42,623,2.42,624,2.702,625,1.779,626,1.779,628,3.056,629,2.247,630,2.247,631,2.247,632,2.956,633,1.65,634,2.337,759,2.337,760,2.351,808,2.42,871,2.917,904,2.466,921,2.466,1050,0.8,1122,1.661,1201,2.602,1202,2.596,1254,2.153,1301,2.596,1315,2.596,1344,3.056,1347,3.056,1434,2.466,1484,2.466,1655,3.967,1656,3.125,1657,2.917,1658,2.596,1659,3.385,1660,4.508,1661,4.603,1662,5.613,1663,2.744,1664,2.744,1665,2.744,1666,2.744,1667,2.744,1668,2.744,1669,2.744,1670,2.744,1671,3.385,1672,3.385,1673,3.385,1674,3.385,1675,3.385]],["title/interfaces/ISearchInputButtonConfig.html",[104,0.15,1676,2.842]],["body/interfaces/ISearchInputButtonConfig.html",[0,0.429,3,0.108,4,0.125,8,0.108,9,0.252,12,0.523,13,0.654,15,0.252,18,0.311,20,0.252,22,0.16,23,0.42,31,0.478,35,0.456,39,0.236,40,0.012,41,0.382,50,2.024,56,0.606,59,0.826,69,0.125,75,0.726,81,0.15,82,0.348,83,1.782,84,0.125,91,0.161,104,0.262,124,1.093,237,1.103,238,1.491,254,0.01,255,0.01,279,1.036,508,3.385,574,1.889,639,3.195,726,4.147,1050,1.137,1398,4.663,1434,3.506,1658,3.69,1676,5.321,1677,4.442,1678,4.147,1679,4.969,1680,4.812,1681,4.812,1682,4.812,1683,4.812,1684,4.812]],["title/interfaces/ISearchInputConfig.html",[104,0.15,1679,2.842]],["body/interfaces/ISearchInputConfig.html",[0,0.427,3,0.107,4,0.124,8,0.107,9,0.25,12,0.517,13,0.65,15,0.25,18,0.307,20,0.25,22,0.159,23,0.417,31,0.473,35,0.451,39,0.251,40,0.012,41,0.382,50,2.015,56,0.628,59,0.817,69,0.124,75,0.54,81,0.149,82,0.347,83,1.77,84,0.124,91,0.16,104,0.26,124,1.086,237,1.091,238,1.482,254,0.01,255,0.01,279,1.025,508,3.363,574,1.869,639,3.161,726,5.496,1050,1.125,1398,3.468,1434,3.468,1658,3.651,1676,5.496,1677,4.395,1678,4.102,1679,5.296,1680,6.378,1681,6.378,1682,4.761,1683,4.761,1684,4.761]],["title/interfaces/ISelectConfig.html",[104,0.15,1128,2.291]],["body/interfaces/ISelectConfig.html",[0,0.355,3,0.073,4,0.084,8,0.073,9,0.17,12,0.352,13,0.507,15,0.17,16,0.236,17,0.264,18,0.209,20,0.17,22,0.108,23,0.326,31,0.322,35,0.423,36,0.712,39,0.267,40,0.012,41,0.385,43,0.538,56,0.646,65,1.489,69,0.084,75,0.507,78,1.96,81,0.159,82,0.252,84,0.084,91,0.133,104,0.203,106,0.635,107,0.635,110,2.628,120,1.241,123,1.011,124,0.615,160,0.814,194,1.024,242,1.024,254,0.007,255,0.007,265,1.128,279,0.698,281,1.381,283,2.274,320,1.807,336,1.381,337,0.864,338,0.864,340,0.864,341,0.864,342,1.442,343,1.442,409,0.72,477,1.559,494,1.353,496,2.729,497,1.591,498,1.704,499,2.349,500,1.704,501,2.349,502,1.538,505,2.152,506,1.704,507,1.832,508,1.903,511,1.704,512,2.729,514,1.489,515,2.269,516,2.967,518,2.152,524,3.073,534,2.121,535,1.947,536,2.136,538,2.526,543,1.832,544,2.152,552,2.435,555,1.591,557,2.121,560,2.349,562,2.967,566,1.987,567,3.04,568,1.538,574,1.272,575,2.616,576,1.538,577,1.538,578,2.121,579,2.121,580,2.451,581,1.704,582,2.616,593,2.616,594,2.616,595,2.898,596,1.979,605,2.152,610,3.396,611,1.832,612,2.152,613,1.591,614,1.591,615,1.591,616,2.349,617,2.349,618,3.142,619,1.866,620,2.349,622,2.349,623,2.349,625,1.704,626,1.704,628,2.967,629,2.152,630,2.152,631,2.152,632,3.116,633,1.602,634,2.269,759,2.799,921,2.362,934,2.252,1050,0.766,1122,2.705,1128,3.552,1188,3.427,1193,4.227,1197,2.152,1201,2.526,1241,2.486,1344,2.967,1347,2.967,1429,4.227,1443,2.486,1484,2.362,1496,4.469,1517,3.623,1572,2.993,1663,3.623,1664,2.628,1665,2.628,1666,2.628,1667,2.628,1668,2.628,1669,2.628,1670,2.628,1685,2.993,1686,4.75,1687,3.242,1688,3.242,1689,3.242,1690,3.242,1691,3.242,1692,3.242,1693,3.242,1694,3.242,1695,3.242,1696,5.115,1697,3.242,1698,3.242,1699,3.242,1700,3.242,1701,3.242,1702,3.242]],["title/interfaces/ISelectOptionsConfig.html",[104,0.15,1686,2.842]],["body/interfaces/ISelectOptionsConfig.html",[0,0.37,3,0.079,4,0.091,8,0.079,9,0.184,12,0.381,13,0.535,15,0.184,16,0.256,17,0.286,18,0.226,20,0.184,22,0.117,23,0.344,31,0.348,35,0.447,36,0.581,39,0.193,40,0.012,41,0.378,43,0.944,56,0.447,65,1.61,69,0.091,75,0.674,78,2.007,81,0.163,82,0.266,84,0.091,91,0.139,104,0.214,106,0.687,107,0.687,110,2.843,120,1.164,123,0.643,124,0.665,160,0.88,194,1.08,242,1.08,254,0.008,255,0.008,265,1.22,279,0.755,281,1.457,283,2.368,320,1.867,336,1.457,337,0.934,338,0.934,340,0.934,341,0.934,342,1.559,343,1.559,409,0.779,477,1.611,494,1.464,496,2.879,497,1.721,498,1.843,499,2.478,500,1.843,501,2.478,502,1.664,505,2.328,506,1.843,507,1.982,508,2.059,511,1.843,512,2.879,514,1.61,515,2.393,516,3.13,518,2.328,524,2.904,534,2.237,535,2.028,536,1.742,538,2.665,543,1.982,544,2.328,552,2.568,555,1.721,557,2.237,560,2.478,562,3.13,566,2.097,567,3.124,568,1.664,574,1.376,575,2.237,576,1.664,577,1.664,578,2.237,579,2.237,580,2.097,581,1.843,582,1.664,593,1.664,594,1.664,595,1.843,596,2.141,605,2.328,610,3.536,611,1.982,612,2.328,613,1.721,614,1.721,615,1.721,616,2.478,617,2.478,618,3.217,619,1.968,620,2.478,622,2.478,623,2.478,625,1.843,626,1.843,628,3.13,629,2.328,630,2.328,631,2.328,632,3.219,633,1.69,634,2.393,759,1.78,921,2.555,934,2.436,1050,0.828,1122,1.721,1128,3.274,1188,3.615,1193,2.689,1197,2.328,1201,2.665,1241,2.689,1344,3.13,1347,3.13,1429,2.689,1443,2.689,1484,2.555,1496,2.843,1517,3.822,1572,3.237,1663,3.822,1664,2.843,1665,2.843,1666,2.843,1667,2.843,1668,2.843,1669,2.843,1670,2.843,1685,3.237,1686,4.59,1687,3.507,1688,3.507,1689,3.507,1690,3.507,1691,3.507,1692,3.507,1693,3.507,1694,3.507,1695,3.507,1696,5.326,1697,3.507,1698,3.507,1699,3.507,1700,3.507,1701,3.507,1702,3.507]],["title/interfaces/ISkipLinkConfig.html",[104,0.15,1033,2.842]],["body/interfaces/ISkipLinkConfig.html",[0,0.42,3,0.103,4,0.119,8,0.103,9,0.24,13,0.519,15,0.24,16,0.333,17,0.373,18,0.295,20,0.24,22,0.153,23,0.408,35,0.433,36,0.744,39,0.247,40,0.012,41,0.389,56,0.53,69,0.119,81,0.119,82,0.316,84,0.119,91,0.157,102,3.415,104,0.254,116,2.798,117,1.232,137,3.709,209,1.048,210,1.446,254,0.009,255,0.009,291,4.584,334,3.178,347,4.075,399,2.171,409,1.342,808,2.94,953,3.038,1014,4.223,1015,3.943,1016,4.223,1017,4.632,1018,4.575,1021,4.575,1023,4.819,1025,4.575,1028,4.575,1029,4.575,1030,4.575,1033,5.205,1034,4.575,1035,4.575,1036,4.575,1037,4.575,1038,4.575,1039,2.91,1040,4.575,1041,4.575,1042,4.575,1043,4.075,1044,4.575,1045,5.593,1046,4.575,1047,4.575,1050,1.081]],["title/interfaces/ISpinnerConfig.html",[104,0.15,1703,3.044]],["body/interfaces/ISpinnerConfig.html",[0,0.396,3,0.09,4,0.105,8,0.09,9,0.212,12,0.438,13,0.586,15,0.212,16,0.294,17,0.328,18,0.26,20,0.212,22,0.135,23,0.377,31,0.401,35,0.382,36,0.784,39,0.268,40,0.012,41,0.376,56,0.632,69,0.105,75,0.458,81,0.148,82,0.37,84,0.105,91,0.162,92,1.363,95,2.816,96,3.628,99,3.156,104,0.183,106,1.246,107,1.246,123,1.141,160,1.013,244,0.953,254,0.009,255,0.009,275,1.98,281,1.597,337,1.075,338,1.075,340,1.075,341,1.075,367,2.591,389,2.28,409,1.148,476,1.597,477,1.141,480,2.536,535,1.536,536,2.297,633,1.853,737,3.59,878,3.766,981,2.198,1050,0.953,1234,2.939,1237,3.766,1328,4.769,1350,5.183,1501,2.939,1615,5.359,1628,3.766,1629,2.939,1633,5.359,1652,5.265,1653,3.724,1654,4.454,1703,5.265,1704,3.477,1705,6.634,1706,4.772,1707,4.034,1708,4.772,1709,4.034,1710,4.034,1711,6.015,1712,4.45,1713,4.45,1714,5.701,1715,4.45,1716,4.45]],["title/interfaces/IStepConfig.html",[104,0.15,1617,2.842]],["body/interfaces/IStepConfig.html",[0,0.402,3,0.093,4,0.108,8,0.093,9,0.219,12,0.452,13,0.598,15,0.219,16,0.303,17,0.339,18,0.269,20,0.219,22,0.139,23,0.384,31,0.414,35,0.395,36,0.79,39,0.215,40,0.012,41,0.354,50,1.898,56,0.5,69,0.108,81,0.163,82,0.298,83,1.63,84,0.108,91,0.167,92,1.407,104,0.239,106,1.033,107,1.033,117,1.256,123,0.764,124,0.79,160,1.045,229,0.954,230,1.41,254,0.009,255,0.009,281,1.63,306,2.135,325,2.189,336,1.63,337,1.11,338,1.11,340,1.11,341,1.11,401,1.326,409,1.172,555,2.044,557,2.503,613,2.044,614,2.044,615,2.044,633,1.891,721,2.044,981,2.269,1039,2.649,1050,0.984,1082,3.502,1083,3.502,1089,3.589,1105,3.843,1399,3.589,1400,3.589,1611,4.546,1612,3.034,1613,3.194,1614,3.376,1615,4.546,1616,5.275,1617,4.989,1618,4.667,1619,2.893,1620,3.845,1621,3.845,1622,4.546,1623,3.845,1624,4.546,1625,3.845,1626,6.279,1627,4.869,1628,4.434,1629,3.843,1630,4.165,1631,4.165,1632,4.165,1633,4.546,1634,4.165,1635,4.165,1636,5.275]],["title/interfaces/ITabConfig.html",[104,0.15,1082,2.19]],["body/interfaces/ITabConfig.html",[0,0.416,3,0.1,4,0.116,8,0.1,9,0.235,12,0.486,13,0.626,15,0.235,16,0.326,17,0.364,18,0.289,20,0.235,22,0.149,23,0.402,31,0.444,35,0.424,36,0.805,39,0.244,40,0.012,41,0.385,43,1.035,50,1.808,56,0.591,65,2.054,69,0.116,78,1.466,81,0.156,82,0.311,83,1.704,84,0.143,91,0.156,104,0.25,106,0.876,107,0.876,117,1.223,120,0.876,123,0.821,124,0.848,246,1.025,254,0.009,255,0.009,336,1.704,337,1.192,338,1.192,401,1.424,721,2.706,808,2.351,1017,4.788,1039,3.804,1050,1.057,1082,3.97,1083,3.662,1091,4.753,1105,4.357,1107,3.854,1717,4.129,1718,4.129,1719,4.473,1720,4.129,1721,4.473,1722,4.473,1723,4.473,1724,5.515,1725,4.473,1726,4.473,1727,5.98,1728,4.473,1729,5.515,1730,4.473,1731,4.473]],["title/interfaces/ITabNavConfig.html",[104,0.15,1083,2.19]],["body/interfaces/ITabNavConfig.html",[0,0.413,3,0.099,4,0.115,8,0.099,9,0.231,12,0.478,13,0.62,15,0.231,16,0.321,17,0.359,18,0.284,20,0.231,22,0.147,23,0.398,31,0.437,35,0.417,36,0.801,39,0.254,40,0.012,41,0.379,43,0.73,50,1.791,56,0.631,65,2.022,69,0.115,78,1.444,81,0.154,82,0.308,83,1.688,84,0.142,91,0.154,104,0.248,106,0.862,107,0.862,117,0.862,120,1.163,123,1.139,124,0.835,246,1.009,254,0.009,255,0.009,336,1.688,337,1.173,338,1.173,401,1.402,721,3.132,808,2.315,1017,4.761,1039,4.138,1050,1.04,1082,4.122,1083,3.943,1091,5.501,1105,4.327,1107,3.795,1717,4.065,1718,4.065,1719,4.404,1720,4.065,1721,4.404,1722,4.404,1723,4.404,1724,5.463,1725,4.404,1726,4.404,1727,5.939,1728,4.404,1729,5.463,1730,4.404,1731,4.404]],["title/interfaces/ITextareaComponentConfig.html",[104,0.15,1732,3.044]],["body/interfaces/ITextareaComponentConfig.html",[0,0.364,3,0.076,4,0.088,8,0.076,9,0.178,12,0.368,13,0.522,15,0.178,16,0.247,17,0.276,18,0.219,20,0.178,22,0.113,23,0.336,31,0.336,35,0.321,36,0.746,39,0.267,40,0.012,41,0.382,42,0.85,43,0.562,56,0.65,59,0.964,69,0.088,78,1.111,81,0.161,82,0.342,84,0.088,91,0.136,92,1.144,104,0.154,106,0.902,107,0.902,120,1.1,123,1.03,124,0.873,145,3.356,236,1.542,248,1.088,254,0.008,255,0.008,265,1.602,275,1.662,283,2.327,320,1.51,336,1.423,337,0.903,338,0.903,342,1.506,343,1.506,448,1.556,476,1.423,477,1.588,494,1.414,496,2.812,497,1.662,498,1.781,499,2.421,500,1.781,501,2.421,502,1.608,506,1.781,509,2.353,511,1.781,512,2.812,513,2.746,514,1.556,524,3.16,528,3.199,536,2.169,560,2.421,566,2.048,567,3.087,568,1.608,574,1.33,575,2.665,576,1.608,577,1.608,580,2.497,581,1.781,582,2.665,593,2.665,594,2.665,595,2.952,597,1.989,616,2.421,617,2.421,618,2.952,619,1.923,620,2.421,622,2.421,623,2.421,624,2.704,625,1.781,626,1.781,800,4.306,808,1.781,906,2.746,1050,0.8,1122,2.755,1201,2.603,1254,2.93,1429,4.306,1430,3.127,1431,3.127,1433,2.919,1436,3.127,1437,2.746,1438,3.127,1439,3.127,1440,3.127,1441,3.127,1442,3.127,1443,2.598,1444,3.127,1466,3.127,1471,3.127,1472,2.919,1473,3.127,1485,3.127,1488,3.127,1489,3.127,1490,3.127,1628,2.468,1629,3.356,1732,4.831,1733,3.127,1734,6.477,1735,6.193,1736,3.388,1737,4.606,1738,4.606,1739,3.736,1740,3.736,1741,3.736,1742,3.736,1743,3.736,1744,5.08,1745,3.736,1746,3.736,1747,3.736,1748,3.736,1749,3.736,1750,3.736,1751,5.08,1752,5.772,1753,5.08,1754,3.736,1755,5.08,1756,3.736,1757,5.08,1758,3.388,1759,3.736,1760,3.736]],["title/components/IconButtonComponent.html",[0,0.229,212,0.756]],["body/components/IconButtonComponent.html",[0,0.456,1,0.668,2,1.114,3,0.091,4,0.074,5,0.753,6,0.799,7,0.799,8,0.063,9,0.334,12,0.441,13,0.538,14,0.799,15,0.363,16,0.496,17,0.554,18,0.443,20,0.213,22,0.094,23,0.296,27,1.182,31,0.515,33,1.148,35,0.45,36,0.726,37,2.478,39,0.254,40,0.012,41,0.34,42,1.302,43,0.86,45,1.681,50,1.557,54,0.955,55,1.228,56,0.268,58,0.988,59,0.815,64,2.587,66,2.796,67,2.581,68,1.235,69,0.153,70,3.3,71,1.798,72,2.168,73,2.904,74,1.468,75,0.623,76,2.544,81,0.106,82,0.34,83,1.254,84,0.074,85,3.495,87,3.126,91,0.149,92,0.955,95,3.116,103,1.991,104,0.184,106,1.016,107,1.016,114,0.709,116,2.544,117,0.554,120,0.93,123,0.952,124,0.536,162,0.799,163,1.148,164,1.081,165,0.799,166,0.799,167,0.731,168,1.524,169,0.776,170,1.148,171,0.688,172,0.799,173,0.799,174,0.668,175,0.799,176,0.668,177,0.753,178,0.799,179,0.668,180,1.148,181,0.668,182,0.799,183,0.668,184,1.148,185,0.799,186,0.688,187,0.799,188,0.731,189,0.776,190,0.799,191,0.753,192,0.799,193,0.628,194,0.648,195,0.799,196,0.668,197,0.799,198,0.648,199,0.799,200,0.668,201,0.799,202,0.668,203,0.709,204,0.799,205,0.688,206,0.799,207,0.688,208,0.799,209,0.648,210,0.731,211,0.799,212,1.189,213,0.668,214,0.799,215,0.668,216,1.148,217,0.753,218,0.799,219,0.648,220,1.343,221,0.753,222,0.799,223,0.799,224,0.648,225,0.799,226,0.688,227,0.668,228,0.799,229,0.648,230,0.988,231,0.668,232,0.799,233,0.648,234,0.731,235,0.753,236,0.776,237,0.648,238,0.731,239,0.688,240,0.731,241,0.799,242,0.648,243,0.799,244,0.668,245,0.799,246,0.648,247,0.799,248,0.668,249,0.799,250,0.731,251,0.731,252,0.799,253,0.799,254,0.007,255,0.007,337,0.753,338,0.753,347,2.059,367,1.218,409,0.902,446,3.497,447,4.383,448,2.383,476,1.254,477,1.343,478,3.112,479,3.641,480,1.991,483,3.497,484,2.436,485,2.382,486,1.598,489,3.459,490,3.648,806,2.291,1348,5.165,1349,2.291,1350,4.735,1351,5.072,1352,4.091,1353,2.609,1354,4.091,1355,2.609,1356,4.058,1357,2.827,1358,2.827,1359,4.748,1360,4.058,1361,4.748,1362,4.058,1363,2.827,1761,5.11,1762,3.559,1763,3.559,1764,3.559,1765,3.559,1766,3.559,1767,3.559,1768,3.559,1769,3.559,1770,3.559,1771,3.559,1772,3.559,1773,3.559]],["title/components/IconComponent.html",[0,0.229,213,0.779]],["body/components/IconComponent.html",[0,0.452,1,0.829,2,1.295,3,0.106,4,0.091,5,0.935,6,0.993,7,0.993,8,0.079,9,0.321,12,0.512,14,0.993,15,0.368,16,0.504,17,0.564,18,0.45,20,0.247,22,0.117,23,0.344,27,1.374,33,1.334,35,0.505,39,0.243,40,0.012,41,0.345,42,0.881,43,0.582,45,1.584,54,1.185,55,1.378,56,0.332,58,0.855,59,0.602,68,1.044,69,0.091,74,1.387,75,0.398,81,0.091,82,0.322,84,0.091,91,0.123,104,0.159,114,0.881,116,2.534,117,0.687,162,0.993,163,1.334,164,1.257,165,0.993,166,0.993,167,0.908,168,1.618,169,0.964,170,1.334,171,0.855,172,0.993,173,0.993,174,0.829,175,0.993,176,0.829,177,0.935,178,0.993,179,0.829,180,1.334,181,0.829,182,0.993,183,0.829,184,1.334,185,0.993,186,0.855,187,0.993,188,0.908,189,0.964,190,0.993,191,0.935,192,0.993,193,0.78,194,0.804,195,0.993,196,0.829,197,0.993,198,0.804,199,0.993,200,0.829,201,0.993,202,0.829,203,0.881,204,0.993,205,0.855,206,0.993,207,0.855,208,0.993,209,0.804,210,0.908,211,0.993,212,0.804,213,1.346,214,0.993,215,0.829,216,1.334,217,0.935,218,0.993,219,0.804,220,1.507,221,0.935,222,0.993,223,0.993,224,0.804,225,0.993,226,0.855,227,0.829,228,0.993,229,0.804,230,1.149,231,0.829,232,0.993,233,0.804,234,0.908,235,0.935,236,0.964,237,0.804,238,0.908,239,0.855,240,0.908,241,0.993,242,0.804,243,0.993,244,0.829,245,0.993,246,0.804,247,0.993,248,0.829,249,0.993,250,0.908,251,0.908,252,0.993,253,0.993,254,0.008,255,0.008,257,3.389,275,2.315,308,3.001,309,3.624,311,1.912,314,2.691,317,3.701,335,2.557,381,3.24,409,1.048,1101,3.24,1102,3.24,1279,2.691,1364,4.592,1365,3.51,1366,5.697,1367,5.203,1368,5.203,1369,5.877,1370,3.871,1371,3.871,1372,5.203,1373,3.871,1774,4.419,1775,4.419,1776,4.419,1777,4.419,1778,4.419]],["title/components/IndicatorComponent.html",[0,0.229,215,0.779]],["body/components/IndicatorComponent.html",[0,0.455,1,0.664,2,1.11,3,0.091,4,0.073,5,0.75,6,0.795,7,0.795,8,0.063,9,0.334,12,0.439,13,0.537,14,0.795,15,0.363,16,0.493,17,0.551,18,0.443,20,0.212,22,0.094,23,0.295,27,1.178,30,3.772,31,0.514,33,1.144,35,0.448,39,0.246,40,0.012,41,0.292,42,1.015,43,0.785,45,1.679,54,0.95,55,1.225,56,0.557,58,1.391,59,0.98,66,2.247,68,0.792,69,0.073,74,1.261,75,0.622,76,1.798,81,0.105,82,0.228,84,0.073,91,0.153,92,1.852,95,2.203,96,2.572,97,3.278,104,0.128,106,1.118,107,1.152,114,0.706,116,1.251,117,0.551,119,4.461,120,1.014,123,0.516,139,1.789,162,0.795,163,1.144,164,1.078,165,0.795,166,0.795,167,0.727,168,1.522,169,0.772,170,1.144,171,0.685,172,0.795,173,0.795,174,0.664,175,0.795,176,0.664,177,0.75,178,0.795,179,0.664,180,1.144,181,0.664,182,0.795,183,0.664,184,1.144,185,0.795,186,0.685,187,0.795,188,0.727,189,0.772,190,0.795,191,0.75,192,0.795,193,0.625,194,0.644,195,0.795,196,0.664,197,0.795,198,0.644,199,0.795,200,0.664,201,0.795,202,0.664,203,0.706,204,0.795,205,0.685,206,0.795,207,0.685,208,0.795,209,0.644,210,0.727,211,0.795,212,0.644,213,0.664,214,0.795,215,1.223,216,1.144,217,0.75,218,0.795,219,0.644,220,1.339,221,0.75,222,0.795,223,0.795,224,0.644,225,0.795,226,0.685,227,0.664,228,0.795,229,0.644,230,0.985,231,0.664,232,0.795,233,0.644,234,0.727,235,0.75,236,0.772,237,0.644,238,0.727,239,0.685,240,0.727,241,0.795,242,0.644,243,0.795,244,0.664,245,0.795,246,0.644,247,0.795,248,0.664,249,0.795,250,0.727,251,0.727,252,0.795,253,0.795,254,0.007,255,0.007,257,3.012,258,4.371,265,2.133,275,1.984,306,2.095,308,2.572,309,3.293,311,1.532,314,2.157,317,3.288,335,2.049,336,1.25,337,0.75,338,0.75,362,2.28,389,1.59,399,1.919,425,2.596,433,2.374,490,1.867,534,1.335,536,2.109,619,1.688,690,2.049,755,4.08,1374,4.371,1375,2.596,1376,4.735,1377,5.222,1378,4.044,1379,2.813,1380,4.044,1381,4.044,1382,4.044,1383,4.044,1384,5.177,1385,3.101,1386,3.733,1387,4.044,1388,2.813,1389,2.813,1390,2.813,1391,2.596,1392,2.813,1393,2.813,1394,2.813,1395,2.813,1396,3.102,1397,3.102,1398,2.049,1399,3.485,1400,3.485,1401,4.46,1402,4.46,1403,4.46,1404,5.222,1405,5.71,1406,3.102,1407,4.46,1408,4.46,1409,4.46,1410,4.46,1411,5.222,1412,5.71,1413,4.46,1414,3.102,1415,5.71,1416,3.102,1417,3.102,1418,3.102,1419,4.46,1420,5.71,1421,2.424,1422,2.813,1423,3.102,1424,3.102,1425,4.46,1426,3.102,1779,3.542,1780,3.542,1781,3.542,1782,3.542,1783,3.542,1784,3.542,1785,3.542,1786,3.542,1787,3.542,1788,3.542,1789,3.542,1790,6.519]],["title/components/InfoTextSmallComponent.html",[0,0.229,217,0.879]],["body/components/InfoTextSmallComponent.html",[0,0.445,1,0.859,2,1.326,3,0.145,4,0.095,5,0.969,6,1.029,7,1.029,8,0.082,14,1.029,15,0.368,16,0.505,17,0.564,18,0.45,20,0.253,22,0.121,23,0.352,39,0.149,40,0.012,42,0.913,43,0.603,45,1.287,55,1.25,68,0.712,69,0.095,74,1.408,75,0.762,81,0.126,84,0.095,91,0.095,100,3.312,114,0.913,116,2.149,117,0.712,162,1.029,163,1.366,164,1.287,165,1.029,166,1.029,167,0.941,168,1.678,169,0.999,170,1.366,171,0.886,172,1.029,173,1.029,174,0.859,175,1.029,176,0.859,177,0.969,178,1.029,179,0.859,180,1.366,181,0.859,182,1.029,183,0.859,184,1.366,185,1.029,186,0.886,187,1.029,188,0.941,189,0.999,190,1.029,191,0.969,192,1.029,193,0.808,194,0.833,195,1.029,196,0.859,197,1.029,198,0.833,199,1.029,200,0.859,201,1.029,202,0.859,203,0.913,204,1.029,205,0.886,206,1.029,207,0.886,208,1.029,209,0.833,210,0.941,211,1.029,212,0.833,213,0.859,214,1.029,215,0.859,216,1.366,217,1.54,218,1.029,219,0.833,220,1.534,221,0.969,222,1.029,223,1.029,224,0.833,225,1.029,226,0.886,227,0.859,228,1.029,229,0.833,230,1.177,231,0.859,232,1.029,233,0.833,234,0.941,235,0.969,236,0.999,237,0.833,238,0.941,239,0.886,240,0.941,241,1.029,242,0.833,243,1.029,244,0.859,245,1.029,246,0.833,247,1.029,248,0.859,249,1.029,250,0.941,251,0.941,252,1.029,253,1.029,254,0.008,255,0.008,279,1.168,474,2.789,675,2.789,680,3.208,689,3.638,709,3.358,1057,2.056,1058,2.056,1059,2.789,1364,4.675,1366,4.831,1791,5.983,1792,5.983,1793,4.012,1794,6.831,1795,6.084,1796,6.831,1797,4.58,1798,6.084,1799,4.58,1800,4.58]],["title/components/InputComponent.html",[0,0.229,219,0.756]],["body/components/InputComponent.html",[0,0.464,1,0.413,2,0.773,3,0.063,4,0.046,5,0.466,6,0.495,7,0.495,8,0.039,9,0.346,12,0.306,13,0.4,14,0.495,15,0.35,16,0.47,17,0.525,18,0.424,20,0.148,22,0.058,23,0.345,27,0.82,31,0.402,33,1.144,35,0.472,36,0.676,39,0.265,40,0.012,41,0.336,42,1.511,43,1.039,45,1.751,54,1.682,55,1.45,56,0.576,58,1.413,59,1.052,65,1.621,68,0.343,69,0.046,74,0.985,75,0.676,78,1.698,81,0.13,82,0.349,84,0.046,91,0.092,92,0.591,104,0.16,106,0.792,107,0.792,114,0.439,117,0.343,120,1.137,123,0.321,124,0.767,160,1.113,162,0.495,163,0.796,164,0.75,165,0.495,166,0.495,167,0.452,168,1.288,169,0.48,170,0.796,171,0.426,172,0.495,173,0.495,174,0.413,175,0.495,176,0.413,177,0.466,178,0.495,179,0.413,180,0.796,181,0.413,182,0.495,183,0.413,184,0.796,185,0.495,186,0.426,187,0.495,188,0.452,189,0.48,190,0.495,191,0.466,192,0.495,193,0.389,194,0.401,195,0.495,196,0.413,197,0.495,198,0.401,199,0.495,200,0.413,201,0.495,202,0.413,203,0.439,204,0.495,205,0.426,206,0.495,207,0.426,208,0.495,209,0.401,210,0.452,211,0.495,212,0.401,213,0.413,214,0.495,215,0.413,216,0.796,217,0.466,218,0.495,219,1.085,220,0.998,221,0.466,222,0.495,223,0.495,224,0.401,225,0.495,226,0.426,227,1.047,228,0.495,229,0.401,230,0.685,231,0.413,232,0.495,233,0.401,234,0.452,235,0.466,236,0.48,237,0.401,238,0.452,239,0.426,240,0.452,241,0.495,242,0.401,243,0.495,244,0.413,245,0.495,246,0.401,247,0.495,248,0.413,249,0.495,250,0.452,251,0.452,252,0.495,253,0.495,254,0.005,255,0.005,265,1.732,275,1.985,279,0.606,281,1.25,283,2.377,311,2.912,320,1.798,336,0.87,337,0.466,338,0.466,340,0.466,341,0.466,342,0.778,343,0.778,360,2.598,389,1.995,401,0.557,409,0.389,427,1.792,448,1.858,476,0.87,477,1.254,485,2.073,494,2.751,496,2.156,497,1.381,498,1.479,499,1.856,500,1.479,501,1.856,502,1.336,505,2.344,506,1.856,507,2.506,508,2.375,509,2.452,510,1.955,511,1.856,512,2.47,513,2.862,514,2.455,515,2.528,516,3.144,517,3.259,518,2.686,519,2.425,520,2.425,521,2.814,522,3.289,523,2.281,524,2.933,525,1.508,528,2.452,534,1.92,535,1.896,536,1.494,538,2.677,539,2.598,543,1.591,544,1.868,545,1.955,547,2.81,548,1.955,550,2.598,552,1.533,555,1.381,557,1.675,560,1.856,562,2.344,566,1.57,567,2.617,568,1.336,574,0.687,575,1.336,576,0.83,577,0.83,578,1.336,579,1.336,580,1.251,581,0.92,582,0.83,593,0.83,594,0.83,595,0.92,597,1.027,602,2.598,605,1.161,606,1.615,610,2.344,611,0.989,612,1.161,613,0.858,614,0.858,615,0.858,616,1.479,617,1.479,618,2.49,619,1.175,620,1.479,622,1.479,623,1.479,624,1.652,625,0.92,626,0.92,627,1.615,628,2.344,629,1.161,630,1.161,631,1.161,632,0.989,633,1.009,634,1.429,635,1.615,636,1.615,638,2.281,745,2.158,759,2.054,775,2.281,781,2.598,808,0.92,878,1.275,906,1.418,1122,0.858,1201,1.591,1254,2.573,1262,3.279,1263,2.281,1278,3.279,1288,2.05,1335,3.279,1427,4.093,1428,1.615,1429,1.342,1430,1.615,1431,1.615,1432,4.045,1433,4.727,1434,2.05,1435,3.104,1436,2.598,1437,2.281,1438,2.598,1439,2.598,1440,2.598,1441,2.598,1442,2.598,1443,2.158,1444,2.598,1445,3.104,1446,3.104,1447,3.104,1448,3.104,1449,3.104,1450,3.104,1451,4.332,1452,4.462,1453,3.104,1454,3.104,1455,3.104,1456,3.104,1457,3.104,1458,3.104,1459,3.104,1460,3.104,1461,3.104,1462,3.104,1463,3.104,1464,3.104,1465,4.89,1466,3.259,1467,3.894,1468,3.894,1469,4.89,1470,3.042,1471,1.615,1472,1.508,1473,1.615,1474,3.104,1475,3.104,1476,3.104,1477,3.104,1478,4.462,1479,5.224,1480,4.462,1481,5.224,1482,3.894,1483,3.894,1484,1.275,1485,1.615,1486,1.929,1487,3.104,1488,2.598,1489,1.615,1490,2.598,1491,4.462,1492,4.045,1493,2.814,1801,3.104,1802,3.544,1803,3.544,1804,2.203,1805,2.203,1806,2.203,1807,2.203,1808,2.203,1809,2.203,1810,2.203,1811,2.203,1812,2.203,1813,2.203,1814,2.203,1815,2.203,1816,2.203,1817,2.203,1818,2.203,1819,2.203,1820,2.203,1821,2.203,1822,2.203,1823,2.203,1824,2.203,1825,2.203,1826,2.203,1827,2.203,1828,2.203,1829,2.203,1830,2.203,1831,2.203,1832,2.203,1833,2.203,1834,2.203,1835,2.203]],["title/components/InteractiveDemoComponent.html",[0,0.229,221,0.879]],["body/components/InteractiveDemoComponent.html",[0,0.453,1,0.722,2,1.178,3,0.096,4,0.079,5,1.143,6,0.864,7,0.864,8,0.096,12,0.466,13,0.562,14,0.864,15,0.365,16,0.498,17,0.556,18,0.445,19,4.877,20,0.225,22,0.102,23,0.313,24,4.575,27,1.249,31,0.534,33,1.213,36,0.528,39,0.175,40,0.012,42,1.077,43,0.711,45,1.508,50,1.002,55,1.109,58,0.744,59,0.524,67,1.944,68,0.84,69,0.14,70,3.418,71,2.728,73,2.728,74,1.498,75,0.347,78,1.406,81,0.129,82,0.242,83,0.944,84,0.079,85,3.152,91,0.112,92,1.032,103,1.499,106,0.598,107,0.598,114,0.767,117,0.598,118,2.226,123,0.787,162,0.864,163,1.213,164,1.143,165,0.864,166,0.864,167,0.79,168,1.617,169,0.839,170,1.213,171,0.744,172,0.864,173,0.864,174,0.722,175,0.864,176,0.722,177,0.814,178,0.864,179,0.722,180,1.213,181,0.722,182,0.864,183,0.722,184,1.213,185,0.864,186,0.744,187,0.864,188,0.79,189,0.839,190,0.864,191,0.814,192,0.864,193,0.679,194,0.7,195,0.864,196,0.722,197,0.864,198,0.7,199,0.864,200,0.722,201,0.864,202,0.722,203,0.767,204,0.864,205,0.744,206,0.864,207,0.744,208,0.864,209,0.7,210,0.79,211,0.864,212,0.7,213,0.722,214,0.864,215,0.722,216,1.213,217,0.814,218,0.864,219,0.7,220,1.402,221,1.432,222,1.768,223,0.864,224,0.7,225,0.864,226,0.744,227,0.722,228,0.864,229,0.7,230,1.045,231,0.722,232,0.864,233,0.7,234,0.79,235,0.814,236,0.839,237,0.7,238,0.79,239,0.744,240,0.79,241,0.864,242,0.7,243,0.864,244,0.722,245,0.864,246,0.7,247,0.864,248,0.722,249,0.864,250,0.79,251,0.79,252,0.864,253,0.864,254,0.007,255,0.007,279,1.067,325,1.606,362,2.477,363,2.122,399,2.036,475,2.633,552,1.665,675,2.343,680,2.848,690,3.611,692,4.575,693,3.125,695,3.959,697,2.633,698,2.821,699,3.696,700,2.821,701,6.242,702,3.37,709,2.821,710,2.821,753,2.477,1043,3.611,1049,3.801,1052,2.477,1054,4.289,1055,4.289,1056,3.696,1057,1.727,1058,1.727,1059,2.343,1060,2.633,1084,3.056,1093,4.956,1197,3.29,1327,3.801,1386,2.821,1391,2.821,1421,4.271,1472,2.633,1500,2.821,1718,2.821,1836,5.868,1837,5.868,1838,3.056,1839,5.401,1840,6.24,1841,5.401,1842,6.242,1843,3.848,1844,3.848,1845,3.848,1846,5.401,1847,5.401,1848,5.401,1849,3.848,1850,5.401,1851,6.766,1852,5.401,1853,3.848,1854,3.37,1855,3.848,1856,3.848,1857,3.848,1858,3.37,1859,3.848,1860,4.731,1861,3.37,1862,6.472,1863,3.37,1864,3.37,1865,3.056,1866,3.37,1867,5.401,1868,3.848,1869,3.848,1870,3.37,1871,3.848,1872,3.848,1873,3.848,1874,3.848,1875,3.848,1876,3.848,1877,3.848,1878,3.848,1879,3.848,1880,3.37,1881,3.37,1882,4.731,1883,4.731,1884,3.37,1885,5.401,1886,3.37,1887,3.848,1888,5.401]],["title/modules/IrccDsAngularBannerModule.html",[1889,2.842,1890,3.044]],["body/modules/IrccDsAngularBannerModule.html",[0,0.406,1,1.636,3,0.11,4,0.128,8,0.11,9,0.258,10,3.992,40,0.012,69,0.128,81,0.171,84,0.128,91,0.128,254,0.01,255,0.01,340,1.312,341,1.312,472,3.588,1057,3.304,1058,3.304,1890,6.229,1891,3.588,1892,4.26,1893,5.432,1894,5.432,1895,5.432,1896,4.739,1897,3.992,1898,6.202,1899,6.202,1900,5.038,1901,5.038,1902,5.038,1903,6.202,1904,4.26,1905,4.546,1906,4.546,1907,5.038,1908,3.992,1909,5.038,1910,4.244]],["title/modules/IrccDsAngularComponentsSharedModule.html",[1889,2.842,1904,2.403]],["body/modules/IrccDsAngularComponentsSharedModule.html",[0,0.336,3,0.082,4,0.095,8,0.082,9,0.191,40,0.012,68,0.714,69,0.095,81,0.178,84,0.095,87,1.79,88,2.227,91,0.095,174,1.561,176,1.561,179,1.561,196,1.561,200,1.561,202,1.561,203,0.915,212,1.514,213,1.561,215,1.561,224,1.514,229,1.514,230,1.179,231,1.572,244,1.561,246,1.514,254,0.008,255,0.008,340,0.972,341,0.972,409,0.81,472,2.657,764,3.648,765,3.648,864,2.797,865,3.648,1057,2.062,1058,2.062,1613,2.797,1619,2.533,1620,3.367,1621,3.367,1891,2.657,1892,3.526,1896,3.924,1897,2.957,1900,4.171,1901,4.171,1902,4.171,1904,5.131,1907,4.681,1908,2.957,1909,4.681,1910,3.143,1911,4.023,1912,4.023,1913,4.023,1914,3.648,1915,3.648,1916,6.84,1917,4.593,1918,4.593,1919,4.593,1920,4.593,1921,4.593,1922,4.593,1923,4.593,1924,4.593,1925,4.593,1926,4.593,1927,6.095,1928,4.593,1929,4.593,1930,5.432]],["title/modules/IrccDsAngularFormComponentsModule.html",[1889,2.842,1931,3.044]],["body/modules/IrccDsAngularFormComponentsModule.html",[0,0.368,3,0.094,4,0.109,8,0.094,9,0.22,40,0.012,69,0.109,81,0.177,84,0.109,91,0.109,181,1.595,193,1.5,194,0.961,198,1.547,219,1.547,233,1.547,234,1.085,242,1.547,248,1.595,254,0.009,255,0.009,340,1.118,341,1.118,409,0.932,472,3.057,494,1.752,574,1.647,1057,2.995,1058,2.995,1120,3.217,1129,3.615,1451,3.401,1657,3.615,1736,4.195,1891,3.057,1892,3.861,1896,4.296,1897,3.401,1900,4.567,1901,4.567,1902,4.567,1904,3.861,1905,3.873,1906,3.873,1907,4.567,1908,3.401,1909,4.567,1910,3.615,1931,6.455,1932,4.627,1933,4.627,1934,4.627,1935,4.195,1936,4.195,1937,5.283,1938,4.627,1939,5.283,1940,5.299,1941,5.299,1942,5.283,1943,5.283,1944,5.809]],["title/modules/IrccDsAngularHeaderFooterModule.html",[1889,2.842,1945,3.044]],["body/modules/IrccDsAngularHeaderFooterModule.html",[0,0.384,3,0.1,4,0.116,8,0.1,9,0.235,40,0.012,69,0.116,81,0.175,84,0.116,91,0.116,205,1.66,207,1.66,209,1.562,210,1.158,226,1.66,227,1.058,254,0.009,255,0.009,340,1.193,341,1.193,409,0.995,472,3.262,574,1.758,953,2.973,986,4.133,1015,3.859,1057,3.119,1058,3.119,1891,3.262,1892,4.021,1896,4.474,1897,3.63,1900,4.756,1901,4.756,1902,4.756,1904,4.021,1905,4.133,1906,4.133,1907,4.756,1908,3.63,1909,4.756,1910,3.859,1940,5.519,1941,5.519,1945,6.397,1946,4.939,1947,4.939,1948,4.939,1949,4.478,1950,4.478,1951,5.638,1952,5.638,1953,3.859,1954,5.638,1955,5.638,1956,5.983]],["title/modules/IrccDsAngularLegacyOldModule.html",[1889,2.842,1957,3.044]],["body/modules/IrccDsAngularLegacyOldModule.html",[0,0.377,3,0.098,4,0.113,8,0.098,9,0.229,40,0.012,69,0.113,81,0.176,84,0.113,91,0.113,171,1.654,183,1.604,186,1.654,237,1.556,238,1.128,239,1.654,254,0.009,255,0.009,340,1.162,341,1.162,409,0.969,472,3.177,574,1.711,639,2.895,641,4.025,654,4.36,1057,3.069,1058,3.069,1528,5.988,1529,4.809,1678,3.758,1891,3.177,1892,3.956,1896,4.401,1897,3.535,1900,4.678,1901,4.678,1902,4.678,1904,3.956,1905,4.025,1906,4.025,1907,4.678,1908,3.535,1909,4.678,1910,3.758,1938,4.809,1940,5.429,1941,5.429,1957,6.42,1958,4.809,1959,4.809,1960,4.809,1961,4.36,1962,4.36,1963,4.36,1964,5.491,1965,5.491,1966,5.429,1967,5.491,1968,5.912]],["title/injectables/LabelButtonService.html",[1497,2.674,1969,2.842]],["body/injectables/LabelButtonService.html",[0,0.447,3,0.109,4,0.127,8,0.109,9,0.337,22,0.163,23,0.424,27,1.694,36,0.602,39,0.199,40,0.012,41,0.351,42,1.46,43,0.965,45,1.656,54,1.649,55,1.263,56,0.463,58,1.189,59,0.838,69,0.127,81,0.151,84,0.127,91,0.127,124,1.103,254,0.01,255,0.01,265,2.162,1497,4.715,1969,5.012,1970,4.883,1971,7.094,1972,4.883,1973,7.823,1974,7.823,1975,7.324,1976,7.324,1977,5.385,1978,7.324,1979,5.385,1980,6.852,1981,5.385,1982,5.385,1983,5.385,1984,5.385,1985,6.148]],["title/components/LabelComponent.html",[0,0.229,224,0.756]],["body/components/LabelComponent.html",[0,0.452,1,0.682,2,1.131,3,0.092,4,0.075,5,0.77,6,0.817,7,0.817,8,0.065,9,0.324,12,0.448,13,0.545,14,0.817,15,0.364,16,0.497,17,0.555,18,0.444,20,0.216,22,0.096,23,0.3,27,1.2,31,0.52,33,1.165,35,0.455,36,0.508,39,0.226,40,0.012,41,0.364,42,1.206,43,0.683,45,1.616,50,0.947,54,1.392,55,1.355,56,0.39,58,1.276,59,0.825,68,0.566,69,0.075,74,1.276,75,0.467,76,1.284,81,0.15,82,0.233,83,1.485,84,0.075,91,0.154,103,2.358,104,0.187,114,0.725,117,0.566,120,0.807,124,0.781,160,1.571,162,0.817,163,1.165,164,1.098,165,0.817,166,0.817,167,0.747,168,1.534,169,0.793,170,1.165,171,0.703,172,0.817,173,0.817,174,0.682,175,0.817,176,0.682,177,0.77,178,0.817,179,0.682,180,1.165,181,0.682,182,0.817,183,0.682,184,1.165,185,0.817,186,0.703,187,0.817,188,0.747,189,0.793,190,0.817,191,0.77,192,0.817,193,0.642,194,0.662,195,0.817,196,0.682,197,0.817,198,0.662,199,0.817,200,0.682,201,0.817,202,0.682,203,0.725,204,0.817,205,0.703,206,0.817,207,0.703,208,0.817,209,0.662,210,0.747,211,0.817,212,0.662,213,0.682,214,0.817,215,0.682,216,1.165,217,0.77,218,0.817,219,0.662,220,1.359,221,0.77,222,0.817,223,0.817,224,1.201,225,0.817,226,0.703,227,0.682,228,0.817,229,0.662,230,1.004,231,0.682,232,0.817,233,0.662,234,0.747,235,0.77,236,0.793,237,0.662,238,0.747,239,0.703,240,0.747,241,0.817,242,0.662,243,0.817,244,0.682,245,0.817,246,0.662,247,0.817,248,0.682,249,0.817,250,0.747,251,0.747,252,0.817,253,0.817,254,0.007,255,0.007,265,1.434,279,0.888,280,2.104,281,1.619,283,2.783,340,0.77,341,0.77,342,1.284,343,1.284,409,1.164,427,1.466,514,2.207,515,1.466,522,2.862,524,2.814,535,1.1,536,1.936,555,2.022,557,2.28,566,2.137,568,2.28,574,1.134,575,1.956,576,1.37,577,1.37,578,1.956,579,1.956,580,1.833,582,1.37,593,1.37,594,1.37,607,1.632,613,1.417,614,1.417,615,1.417,619,1.206,633,1.477,634,2.092,638,4.247,753,2.341,1122,1.417,1385,2.215,1398,2.104,1470,2.489,1494,2.489,1495,2.888,1496,2.341,1497,4.247,1498,2.666,1499,2.888,1500,2.666,1501,2.104,1502,3.551,1503,2.666,1504,3.551,1505,2.666,1506,2.666,1507,4.121,1508,4.805,1509,4.805,1510,4.121,1511,4.121,1512,2.888,1513,2.888,1514,5.24,1515,2.888,1516,5.24,1517,3.341,1986,5.189,1987,3.636,1988,3.636,1989,3.636,1990,3.636,1991,3.636,1992,3.636,1993,5.189,1994,5.189]],["title/injectables/LanguageSwitchButtonService.html",[1969,2.842,1995,3.044]],["body/injectables/LanguageSwitchButtonService.html",[0,0.446,3,0.109,4,0.127,8,0.109,9,0.337,22,0.162,23,0.423,27,1.691,40,0.012,42,1.457,43,0.962,45,1.653,58,1.185,59,0.835,69,0.127,81,0.151,84,0.127,91,0.127,124,1.1,254,0.01,255,0.01,265,2.158,953,4.265,1953,5.536,1969,5.001,1970,4.865,1972,4.865,1977,5.366,1979,5.366,1980,5.366,1981,5.366,1982,5.366,1983,5.366,1984,5.366,1995,5.358,1996,5.93,1997,6.424,1998,7.811,1999,7.811,2000,8.089,2001,7.308,2002,7.308,2003,6.126]],["title/components/LanguageSwitchComponent.html",[0,0.229,226,0.803]],["body/components/LanguageSwitchComponent.html",[0,0.457,1,0.705,2,1.158,3,0.095,4,0.078,5,0.795,6,0.844,7,0.844,8,0.067,9,0.334,12,0.458,13,0.555,14,0.844,15,0.364,16,0.498,17,0.557,18,0.445,20,0.221,22,0.1,23,0.307,27,1.229,31,0.486,33,1.193,36,0.603,39,0.238,40,0.012,41,0.329,42,1.335,43,0.882,45,1.68,54,1.653,55,1.451,56,0.464,58,1.295,59,0.913,68,0.585,69,0.078,74,1.295,75,0.661,81,0.138,82,0.238,84,0.078,91,0.146,114,0.749,117,0.585,120,0.826,160,1.228,162,0.844,163,1.193,164,1.124,165,0.844,166,0.844,167,0.772,168,1.548,169,0.819,170,1.193,171,0.727,172,0.844,173,0.844,174,0.705,175,0.844,176,0.705,177,0.795,178,0.844,179,0.705,180,1.193,181,0.705,182,0.844,183,0.705,184,1.193,185,0.844,186,0.727,187,0.844,188,0.772,189,0.819,190,0.844,191,0.795,192,0.844,193,0.663,194,0.684,195,0.844,196,0.705,197,0.844,198,0.684,199,0.844,200,0.705,201,0.844,202,0.705,203,0.749,204,0.844,205,0.727,206,0.844,207,0.727,208,0.844,209,0.684,210,0.772,211,0.844,212,0.684,213,0.705,214,0.844,215,0.705,216,1.193,217,0.795,218,0.844,219,0.684,220,1.384,221,0.795,222,0.844,223,0.844,224,0.684,225,0.844,226,1.295,227,1.376,228,0.844,229,0.684,230,1.027,231,0.705,232,0.844,233,0.684,234,0.772,235,0.795,236,0.819,237,0.684,238,0.772,239,0.727,240,0.772,241,0.844,242,0.684,243,0.844,244,0.705,245,0.844,246,0.684,247,0.844,248,0.705,249,0.844,250,0.772,251,0.772,252,0.844,253,0.844,254,0.007,255,0.007,265,1.702,277,3.636,278,4.653,279,0.909,281,1.643,293,2.756,294,2.801,314,2.289,315,2.985,320,1.383,334,2.073,340,0.795,341,0.795,409,1.182,534,2.322,557,2.322,633,1.754,741,2.985,903,4.219,953,4.233,980,2.985,1498,2.756,1654,4.583,1908,2.42,1953,5.494,1995,4.909,1996,5.885,1997,6.115,2004,2.985,2005,5.312,2006,6.161,2007,5.312,2008,5.312,2009,3.759,2010,6.161,2011,6.161,2012,5.312,2013,5.312,2014,3.759,2015,3.759,2016,5.312,2017,5.312,2018,5.312,2019,5.312,2020,5.312,2021,5.312,2022,3.759,2023,3.759,2024,5.312,2025,3.759,2026,3.759,2027,3.759,2028,3.759,2029,3.759,2030,3.759,2031,3.759,2032,4.219,2033,3.292,2034,4.219,2035,4.219,2036,3.292,2037,4.219,2038,3.759,2039,6.161,2040,3.759,2041,3.759,2042,3.759,2043,3.759]],["title/components/ProgressIndicatorComponent.html",[0,0.229,229,0.756]],["body/components/ProgressIndicatorComponent.html",[0,0.45,1,0.666,2,1.112,3,0.091,4,0.073,5,0.752,6,0.798,7,0.798,8,0.063,9,0.327,12,0.44,13,0.538,14,0.798,15,0.363,16,0.496,17,0.554,18,0.443,20,0.213,22,0.094,23,0.295,27,1.18,31,0.515,33,1.146,35,0.449,36,0.777,37,2.474,39,0.246,40,0.012,41,0.323,42,1.301,43,0.86,45,1.635,50,1.7,54,1.602,55,1.42,56,0.449,58,1.155,59,0.814,68,0.552,69,0.073,74,1.262,75,0.32,81,0.143,82,0.229,83,1.252,84,0.073,91,0.149,92,0.953,104,0.184,106,0.794,107,0.794,114,0.708,117,1.119,123,0.518,124,0.535,160,1.017,162,0.798,163,1.146,164,1.08,165,0.798,166,0.798,167,0.73,168,1.523,169,0.774,170,1.146,171,0.687,172,0.798,173,0.798,174,0.666,175,0.798,176,0.666,177,0.752,178,0.798,179,0.666,180,1.146,181,0.666,182,0.798,183,0.666,184,1.146,185,0.798,186,0.687,187,0.798,188,0.73,189,0.774,190,0.798,191,0.752,192,0.798,193,0.627,194,0.646,195,0.798,196,0.666,197,0.798,198,0.646,199,0.798,200,0.666,201,0.798,202,0.666,203,0.708,204,0.798,205,0.687,206,0.798,207,0.687,208,0.798,209,0.646,210,0.73,211,0.798,212,0.646,213,0.666,214,0.798,215,0.666,216,1.146,217,0.752,218,0.798,219,0.646,220,1.341,221,0.752,222,0.798,223,0.798,224,0.646,225,0.798,226,0.687,227,0.666,228,0.798,229,1.188,230,1.434,231,0.666,232,0.798,233,0.646,234,0.73,235,0.752,236,0.774,237,0.646,238,0.73,239,0.687,240,0.73,241,0.798,242,0.646,243,0.798,244,0.666,245,0.798,246,0.646,247,0.798,248,0.666,249,0.798,250,0.73,251,0.73,252,0.798,253,0.798,254,0.007,255,0.007,279,0.607,280,2.055,281,1.602,306,2.098,325,1.483,336,1.252,337,0.752,338,0.752,340,0.752,341,0.752,399,2.46,401,0.898,409,0.9,522,2.814,555,1.988,557,2.25,613,1.384,614,1.384,615,1.384,633,1.453,721,1.988,981,1.537,1039,2.577,1082,3.148,1083,3.148,1089,4.086,1105,2.952,1399,3.492,1400,3.492,1611,4.086,1612,4.537,1613,4.775,1614,2.286,1615,4.086,1616,4.742,1617,3.492,1618,3.107,1619,1.959,1620,2.604,1621,2.604,1622,3.492,1623,2.604,1624,3.492,1625,2.604,1626,4.742,1627,3.74,1628,4,1629,2.952,1630,4.742,1631,4.742,1632,5.888,1633,3.492,1634,4.052,1635,2.821,1636,4.052,2044,5.102,2045,5.102,2046,3.552,2047,3.552,2048,3.552,2049,3.552,2050,3.552,2051,3.552,2052,3.552]],["title/components/ProgressTagsComponent.html",[0,0.229,231,0.779]],["body/components/ProgressTagsComponent.html",[0,0.454,1,0.703,2,1.156,3,0.094,4,0.077,5,0.793,6,0.842,7,0.842,8,0.067,9,0.331,12,0.457,13,0.554,14,0.842,15,0.364,16,0.498,17,0.556,18,0.445,20,0.221,22,0.099,23,0.307,27,1.226,31,0.527,33,1.191,35,0.463,36,0.717,39,0.257,40,0.012,41,0.3,42,1.226,43,0.81,45,1.656,54,1.005,55,1.263,56,0.282,58,1.19,59,0.911,68,0.583,69,0.077,74,1.293,75,0.602,76,1.872,81,0.127,82,0.316,84,0.077,91,0.146,92,1.005,95,2.294,96,2.678,104,0.135,106,1.04,107,1.04,114,0.747,117,0.583,123,0.974,160,1.057,162,0.842,163,1.191,164,1.122,165,0.842,166,0.842,167,0.77,168,1.547,169,0.817,170,1.191,171,0.725,172,0.842,173,0.842,174,0.703,175,0.842,176,0.703,177,0.793,178,0.842,179,0.703,180,1.191,181,0.703,182,0.842,183,0.703,184,1.191,185,0.842,186,0.725,187,0.842,188,0.77,189,0.817,190,0.842,191,0.793,192,0.842,193,0.661,194,0.682,195,0.842,196,0.703,197,0.842,198,0.682,199,0.842,200,0.703,201,0.842,202,0.703,203,0.747,204,0.842,205,0.725,206,0.842,207,0.725,208,0.842,209,0.682,210,0.77,211,0.842,212,0.682,213,0.703,214,0.842,215,0.703,216,1.191,217,0.793,218,0.842,219,0.682,220,1.382,221,0.793,222,0.842,223,0.842,224,0.682,225,0.842,226,0.725,227,0.703,228,0.842,229,0.682,230,1.457,231,1.255,232,0.842,233,0.682,234,0.77,235,0.793,236,0.817,237,0.682,238,0.77,239,0.725,240,0.77,241,0.842,242,0.682,243,0.842,244,0.703,245,0.842,246,0.682,247,0.842,248,0.703,249,0.842,250,0.77,251,0.77,252,0.842,253,0.842,254,0.007,255,0.007,257,1.893,275,2.606,279,0.641,280,2.168,281,1.641,336,1.732,337,0.793,338,0.793,340,0.793,341,0.793,367,1.282,389,1.682,409,0.935,476,1.301,477,0.842,480,2.066,535,1.133,633,1.751,878,3.067,981,1.621,1234,2.168,1237,3.067,1501,2.168,1612,4.59,1618,3.746,1619,4.375,1637,2.565,1638,3.886,1639,2.976,1640,4.51,1641,2.976,1642,3.886,1643,2.976,1644,2.976,1645,2.976,1646,2.976,1647,2.976,1648,5.604,1649,4.21,1650,4.643,1651,4.643,1652,4.51,1653,4.903,1654,3.628,2053,5.301,2054,3.748,2055,3.748,2056,3.748,2057,3.748,2058,3.748,2059,3.748,2060,3.748,2061,5.301,2062,5.301,2063,5.301,2064,5.301,2065,5.301]],["title/components/RadioInputComponent.html",[0,0.229,233,0.756]],["body/components/RadioInputComponent.html",[0,0.461,1,0.498,2,0.895,3,0.073,4,0.055,5,0.562,6,0.596,7,0.596,8,0.047,9,0.344,12,0.354,13,0.452,14,0.596,15,0.356,16,0.481,17,0.538,18,0.433,20,0.171,22,0.133,23,0.238,27,0.95,31,0.445,33,0.922,35,0.46,36,0.632,39,0.253,40,0.012,41,0.355,42,1.48,43,1.017,45,1.741,54,1.732,55,1.429,56,0.523,58,1.436,59,0.973,65,1.497,68,0.413,69,0.055,74,1.093,75,0.509,78,1.86,81,0.139,82,0.289,84,0.055,91,0.104,104,0.148,106,0.638,107,0.638,114,0.529,117,0.413,120,0.879,123,0.387,124,0.618,160,1.342,162,0.596,163,0.922,164,0.869,165,0.596,166,0.596,167,0.545,168,1.383,169,0.579,170,0.922,171,0.513,172,0.596,173,0.596,174,0.498,175,0.596,176,0.498,177,0.562,178,0.596,179,0.498,180,0.922,181,0.498,182,0.596,183,0.498,184,0.922,185,0.596,186,0.513,187,0.596,188,0.545,189,0.579,190,0.596,191,0.562,192,0.596,193,0.468,194,0.483,195,0.596,196,0.498,197,0.596,198,0.483,199,0.596,200,0.498,201,0.596,202,0.498,203,0.529,204,0.596,205,0.513,206,0.596,207,0.513,208,0.596,209,0.483,210,0.545,211,0.596,212,0.483,213,0.498,214,0.596,215,0.498,216,0.922,217,0.562,218,0.596,219,0.483,220,1.127,221,0.562,222,0.596,223,0.596,224,0.483,225,0.596,226,0.513,227,0.498,228,0.596,229,0.483,230,0.794,231,0.498,232,0.596,233,1.175,234,1.255,235,0.562,236,0.579,237,0.483,238,0.545,239,0.513,240,0.545,241,0.596,242,0.483,243,0.596,244,0.498,245,0.596,246,0.483,247,0.596,248,0.498,249,0.596,250,0.545,251,0.545,252,0.596,253,0.596,254,0.005,255,0.005,265,0.733,275,2.201,279,0.702,281,1.386,283,2.522,306,1.613,320,1.069,336,1.232,337,0.562,338,0.562,340,0.562,341,0.562,342,0.937,343,0.937,401,1.269,409,0.468,427,1.655,448,2.06,476,1.007,477,1.372,486,1.191,494,2.738,496,2.434,497,1.6,498,1.714,499,2.095,500,1.714,501,2.095,502,1.547,505,2.647,506,2.095,507,2.742,508,2.34,509,2.769,511,2.095,512,2.962,514,1.831,515,2.463,516,3.406,518,2.979,519,2.809,520,2.809,522,2.264,523,2.643,524,2.842,525,1.816,528,3.369,534,1.547,535,1.847,536,1.473,538,2.253,543,1.842,544,2.164,552,1.776,555,1.6,557,1.892,560,2.095,562,2.647,566,1.773,567,2.812,568,1.547,574,0.827,575,1.547,576,1,577,1,578,1.547,579,1.547,580,1.45,581,1.108,582,1,591,1.816,593,1,594,1,595,1.108,605,1.399,607,1.191,610,2.647,611,1.191,612,1.399,613,1.034,614,1.034,615,1.034,616,1.714,617,1.714,618,2.696,619,1.361,620,1.714,622,1.714,623,1.714,624,1.914,625,1.108,626,1.108,628,2.164,629,1.399,630,1.399,631,1.399,632,2.253,633,1.169,634,1.655,638,2.643,759,2.024,760,2.264,808,2.095,871,1.816,904,2.375,921,1.536,1122,1.034,1201,1.842,1202,2.5,1254,2.074,1301,2.5,1315,2.5,1328,1.616,1344,2.164,1347,3.221,1434,2.375,1484,2.375,1655,3.435,1656,6.055,1657,5.652,1658,1.616,1659,2.108,1660,2.809,1661,3.26,1662,2.108,1663,1.708,1664,1.708,1665,2.643,1666,2.643,1667,1.708,1668,2.643,1669,2.643,1670,3.637,1671,3.26,1672,3.26,1673,3.26,1674,3.26,1675,2.108,2066,4.105,2067,4.105,2068,2.654,2069,2.654,2070,2.654,2071,2.654,2072,2.654,2073,2.654,2074,2.654,2075,2.654,2076,2.654,2077,2.654,2078,2.654,2079,2.654,2080,2.654,2081,2.654,2082,2.654,2083,2.654,2084,2.654,2085,2.654,2086,2.654,2087,2.654,2088,2.654,2089,2.654,2090,3.595]],["title/components/SearchInputComponent.html",[0,0.229,237,0.756]],["body/components/SearchInputComponent.html",[0,0.452,1,0.824,2,1.29,3,0.105,4,0.091,5,0.93,6,0.986,7,0.986,8,0.078,9,0.321,12,0.51,13,0.602,14,0.986,15,0.368,16,0.503,17,0.562,18,0.45,20,0.246,22,0.116,23,0.342,27,1.368,31,0.564,33,1.329,35,0.503,37,2.869,39,0.192,40,0.012,41,0.321,42,0.876,43,0.578,45,1.581,50,1.863,55,1.215,58,0.849,59,0.806,68,0.683,69,0.091,74,1.384,75,0.533,81,0.122,82,0.321,83,1.452,84,0.091,91,0.138,104,0.213,114,0.876,117,0.683,124,1.007,162,0.986,163,1.329,164,1.252,165,0.986,166,0.986,167,0.902,168,1.615,169,0.958,170,1.329,171,0.849,172,0.986,173,0.986,174,0.824,175,0.986,176,0.824,177,0.93,178,0.986,179,0.824,180,1.329,181,0.824,182,0.986,183,0.824,184,1.329,185,0.986,186,0.849,187,0.986,188,0.902,189,0.958,190,0.986,191,0.93,192,0.986,193,0.775,194,0.799,195,0.986,196,0.824,197,0.986,198,0.799,199,0.986,200,0.824,201,0.986,202,0.824,203,0.876,204,0.986,205,0.849,206,0.986,207,0.849,208,0.986,209,0.799,210,0.902,211,0.986,212,0.799,213,0.824,214,0.986,215,0.824,216,1.329,217,0.93,218,0.986,219,0.799,220,1.502,221,0.93,222,0.986,223,0.986,224,0.799,225,0.986,226,0.849,227,0.824,228,0.986,229,0.799,230,1.144,231,0.824,232,0.986,233,0.799,234,0.902,235,0.93,236,0.958,237,1.302,238,1.534,239,0.849,240,0.902,241,0.986,242,0.799,243,0.986,244,0.824,245,0.986,246,0.799,247,0.986,248,0.824,249,0.986,250,0.902,251,0.902,252,0.986,253,0.986,254,0.008,255,0.008,279,1.144,508,3.118,574,1.369,639,4.057,726,3.006,1398,2.541,1434,3.423,1658,2.675,1676,4.048,1677,5.641,1678,5.266,1679,4.577,1680,3.488,1681,3.488,1682,5.312,1683,5.312,1684,3.488,2091,5.916,2092,4.392,2093,4.392,2094,4.392,2095,5.916]],["title/components/SecondaryChipsComponent.html",[0,0.229,239,0.803]],["body/components/SecondaryChipsComponent.html",[0,0.447,1,0.87,2,1.338,3,0.109,4,0.096,5,0.982,6,1.042,7,1.042,8,0.083,9,0.305,12,0.529,13,0.619,14,1.042,15,0.369,16,0.505,17,0.564,18,0.451,20,0.256,22,0.123,27,1.419,31,0.577,33,1.378,39,0.151,40,0.012,41,0.275,45,1.455,55,1.26,58,0.897,59,0.836,68,0.722,69,0.096,74,1.415,75,0.418,81,0.096,82,0.275,84,0.096,91,0.096,114,0.925,117,0.722,160,1.223,162,1.042,163,1.378,164,1.298,165,1.042,166,1.042,167,0.953,168,1.637,169,1.012,170,1.378,171,0.897,172,1.042,173,1.042,174,0.87,175,1.042,176,0.87,177,0.982,178,1.042,179,0.87,180,1.378,181,0.87,182,1.042,183,0.87,184,1.378,185,1.042,186,0.897,187,1.042,188,0.953,189,1.012,190,1.042,191,0.982,192,1.042,193,0.819,194,0.844,195,1.042,196,0.87,197,1.042,198,0.844,199,1.042,200,0.87,201,1.042,202,0.87,203,0.925,204,1.042,205,0.897,206,1.042,207,0.897,208,1.042,209,0.844,210,0.953,211,1.042,212,0.844,213,0.87,214,1.042,215,0.87,216,1.378,217,0.982,218,1.042,219,0.844,220,1.544,221,0.982,222,1.042,223,1.042,224,0.844,225,1.042,226,0.897,227,0.87,228,1.042,229,0.844,230,1.187,231,0.87,232,1.042,233,0.844,234,0.953,235,0.982,236,1.012,237,0.844,238,0.953,239,1.415,240,1.563,241,1.042,242,0.844,243,1.042,244,0.87,245,1.042,246,0.844,247,1.042,248,0.87,249,1.042,250,0.953,251,0.953,252,1.042,253,1.042,254,0.008,255,0.008,279,1.176,639,3.857,647,6.663,1966,5.809,2096,6.407,2097,4.064,2098,6.136,2099,6.136,2100,6.136,2101,4.64]],["title/components/SelectComponent.html",[0,0.229,242,0.756]],["body/components/SelectComponent.html",[0,0.465,1,0.518,2,0.923,3,0.075,4,0.057,5,0.585,6,0.621,7,0.621,8,0.049,9,0.347,12,0.365,13,0.464,14,0.621,15,0.357,16,0.483,17,0.54,18,0.434,20,0.176,22,0.073,23,0.245,27,0.98,31,0.455,33,0.951,35,0.434,36,0.504,39,0.255,40,0.012,41,0.349,42,1.47,43,0.988,45,1.756,54,1.761,55,1.448,56,0.53,58,1.472,59,1.037,65,1.544,68,0.43,69,0.057,74,1.116,75,0.52,78,1.835,81,0.141,82,0.19,84,0.057,91,0.106,104,0.153,106,0.43,107,0.43,110,1.779,114,0.551,117,0.43,120,1.096,123,0.403,124,0.638,160,1.441,162,0.621,163,0.951,164,0.896,165,0.621,166,0.621,167,0.568,168,1.403,169,0.602,170,0.951,171,0.534,172,0.621,173,0.621,174,0.518,175,0.621,176,0.518,177,0.585,178,0.621,179,0.518,180,0.951,181,0.518,182,0.621,183,0.518,184,0.951,185,0.621,186,0.534,187,0.621,188,0.568,189,0.602,190,0.621,191,0.585,192,0.621,193,0.488,194,0.937,195,0.621,196,0.518,197,0.621,198,0.503,199,0.621,200,0.518,201,0.621,202,0.518,203,0.551,204,0.621,205,0.534,206,0.621,207,0.534,208,0.621,209,0.503,210,0.568,211,0.621,212,0.503,213,0.518,214,0.621,215,0.518,216,0.951,217,0.585,218,0.621,219,0.503,220,1.156,221,0.585,222,0.621,223,0.621,224,0.503,225,0.621,226,0.534,227,0.518,228,0.621,229,0.503,230,0.819,231,0.518,232,0.621,233,0.503,234,0.568,235,0.585,236,0.602,237,0.503,238,0.568,239,0.534,240,0.568,241,0.621,242,1.194,243,0.621,244,0.518,245,0.621,246,0.503,247,0.621,248,0.518,249,0.621,250,0.568,251,0.568,252,0.621,253,0.621,254,0.006,255,0.006,265,0.764,279,0.724,281,1.416,283,2.552,294,1.457,320,1.779,336,1.039,337,0.585,338,0.585,340,0.585,341,0.585,342,0.976,343,0.976,409,0.488,477,1.296,494,2.761,496,2.496,497,1.65,498,1.768,499,2.149,500,1.768,501,2.149,502,1.596,505,2.714,506,2.149,507,2.793,508,2.4,511,2.149,512,3.017,514,1.878,515,2.509,516,3.461,518,3.043,519,2.898,520,2.898,522,2.336,523,2.726,524,2.724,525,1.891,534,1.94,535,1.745,536,1.51,538,2.311,543,1.901,544,2.233,552,1.832,555,1.65,557,1.94,560,2.149,562,2.714,566,1.818,567,2.74,568,1.596,574,0.861,575,1.596,576,1.041,577,1.041,578,1.596,579,1.596,580,1.495,581,1.154,582,1.041,593,1.041,594,1.041,595,1.154,596,1.34,605,1.457,610,2.714,611,1.24,612,1.457,613,1.077,614,1.077,615,1.077,616,1.768,617,1.768,618,2.74,619,1.404,620,1.768,622,1.768,623,1.768,625,1.154,626,1.154,628,2.233,629,1.457,630,1.457,631,1.457,632,2.59,633,1.205,634,1.707,638,2.726,759,1.114,921,1.599,934,2.336,1122,1.077,1128,2.84,1188,2.579,1193,1.683,1197,1.457,1201,1.901,1241,1.683,1344,2.233,1347,3.281,1429,1.683,1443,1.683,1484,1.599,1496,1.779,1517,2.726,1572,4.23,1663,2.726,1664,1.779,1665,2.726,1666,2.726,1667,1.779,1668,2.726,1669,2.726,1670,3.715,1685,2.026,1686,2.898,1687,2.194,1688,2.194,1689,2.194,1690,3.363,1691,4.088,1692,4.088,1693,3.363,1694,2.194,1695,4.583,1696,4.088,1697,4.583,1698,2.194,1699,2.194,1700,2.194,1701,2.194,1702,2.194,1720,3.104,2090,3.709,2102,4.234,2103,2.763,2104,2.763,2105,2.763,2106,2.763,2107,2.763,2108,2.763,2109,2.763,2110,2.763,2111,2.763,2112,2.763,2113,2.763,2114,2.763,2115,2.763,2116,2.763,2117,2.763,2118,2.763,2119,2.763,2120,2.763,2121,2.763,2122,2.763,2123,2.763,2124,2.763,2125,2.763,2126,4.234]],["title/components/SpinnerComponent.html",[0,0.229,244,0.779]],["body/components/SpinnerComponent.html",[0,0.463,1,0.697,2,1.149,3,0.094,4,0.077,5,0.786,6,0.834,7,0.834,8,0.066,9,0.342,12,0.454,13,0.551,14,0.834,15,0.364,16,0.498,17,0.556,18,0.445,20,0.219,22,0.098,23,0.305,27,1.219,31,0.525,33,1.183,35,0.461,36,0.715,39,0.26,40,0.012,41,0.327,42,1.22,43,0.806,45,1.726,54,0.996,55,1.257,56,0.279,58,1.288,59,0.908,68,0.578,69,0.077,74,1.288,75,0.6,81,0.126,82,0.344,84,0.077,91,0.145,92,0.996,95,2.279,96,3.092,99,2.554,104,0.134,106,1.136,107,1.136,114,0.74,117,0.578,123,0.971,160,1.05,162,0.834,163,1.183,164,1.115,165,0.834,166,0.834,167,0.763,168,1.543,169,0.81,170,1.183,171,0.718,172,0.834,173,0.834,174,0.697,175,0.834,176,0.697,177,0.786,178,0.834,179,0.697,180,1.183,181,0.697,182,0.834,183,0.697,184,1.183,185,0.834,186,0.718,187,0.834,188,0.763,189,0.81,190,0.834,191,0.786,192,0.834,193,0.655,194,0.676,195,0.834,196,0.697,197,0.834,198,0.676,199,0.834,200,0.697,201,0.834,202,0.697,203,0.74,204,0.834,205,0.718,206,0.834,207,0.718,208,0.834,209,0.676,210,0.763,211,0.834,212,0.676,213,0.697,214,0.834,215,0.697,216,1.183,217,0.786,218,0.834,219,0.676,220,1.375,221,0.786,222,0.834,223,0.834,224,0.676,225,0.834,226,0.718,227,0.697,228,0.834,229,0.676,230,1.019,231,0.697,232,0.834,233,0.676,234,0.763,235,0.786,236,0.81,237,0.676,238,0.763,239,0.718,240,0.763,241,0.834,242,0.676,243,0.834,244,1.25,245,0.834,246,0.676,247,0.834,248,0.697,249,0.834,250,0.763,251,0.763,252,0.834,253,0.834,254,0.007,255,0.007,275,2.596,279,0.635,280,2.149,281,1.635,337,0.786,338,0.786,340,0.786,341,0.786,367,2.279,389,1.667,409,0.929,476,1.293,477,0.834,480,2.053,535,1.123,536,1.954,633,1.5,737,2.906,878,3.048,981,1.607,1234,2.149,1237,3.048,1328,4.057,1350,4.813,1501,2.149,1615,4.559,1628,3.048,1629,2.149,1633,4.813,1652,4.488,1653,4.883,1654,3.605,1703,4.488,1704,2.542,1705,6.16,1706,3.862,1707,2.95,1708,3.862,1709,2.95,1710,2.95,1711,5.585,1712,4.614,1713,4.614,1714,4.614,1715,3.253,1716,5.834,2127,5.268,2128,3.714,2129,3.714,2130,3.714,2131,3.714,2132,3.714,2133,3.714,2134,3.714,2135,3.714,2136,3.714,2137,3.714,2138,3.714]],["title/components/TabsComponent.html",[0,0.229,246,0.756]],["body/components/TabsComponent.html",[0,0.442,1,0.783,2,1.246,3,0.102,4,0.086,5,0.883,6,0.937,7,0.937,8,0.074,9,0.306,12,0.493,13,0.587,14,0.937,15,0.367,16,0.502,17,0.561,18,0.448,20,0.238,22,0.111,27,1.322,31,0.553,33,1.283,35,0.49,36,0.686,37,2.771,39,0.211,40,0.012,41,0.329,42,0.832,43,0.752,45,1.483,50,1.696,54,1.119,55,1.338,56,0.314,58,1.105,59,0.779,65,1.522,68,0.649,69,0.086,74,1.355,75,0.376,78,1.488,81,0.135,82,0.256,83,1.402,84,0.118,91,0.135,104,0.206,106,0.649,107,0.649,114,0.832,117,0.889,120,0.649,123,0.608,124,0.628,162,0.937,163,1.283,164,1.209,165,0.937,166,0.937,167,0.857,168,1.594,169,0.91,170,1.283,171,0.807,172,0.937,173,0.937,174,0.783,175,0.937,176,0.783,177,0.883,178,0.937,179,0.783,180,1.283,181,0.783,182,0.937,183,0.783,184,1.283,185,0.937,186,0.807,187,0.937,188,0.857,189,0.91,190,0.937,191,0.883,192,0.937,193,0.736,194,0.759,195,0.937,196,0.783,197,0.937,198,0.759,199,0.937,200,0.783,201,0.937,202,0.783,203,0.832,204,0.937,205,0.807,206,0.937,207,0.807,208,0.937,209,0.759,210,0.857,211,0.937,212,0.759,213,0.783,214,0.937,215,0.783,216,1.283,217,0.883,218,0.937,219,0.759,220,1.463,221,0.883,222,0.937,223,0.937,224,0.759,225,0.937,226,0.807,227,0.783,228,0.937,229,0.759,230,1.105,231,0.783,232,0.937,233,0.759,234,0.857,235,0.883,236,0.91,237,0.759,238,0.857,239,0.807,240,0.857,241,0.937,242,0.759,243,0.937,244,0.783,245,0.937,246,1.275,247,0.937,248,0.783,249,0.937,250,0.857,251,0.857,252,0.937,253,0.937,254,0.008,255,0.008,336,1.402,337,0.883,338,0.883,401,1.055,721,2.227,808,1.742,1017,4.267,1039,3.291,1082,3.013,1083,3.435,1091,4.459,1105,3.77,1107,2.856,1717,3.06,1718,4.189,1719,4.538,1720,4.776,1721,3.315,1722,3.315,1723,4.538,1724,5.174,1725,3.315,1726,3.315,1727,5.174,1728,3.315,1729,4.538,1730,3.315,1731,3.315,2139,5.714,2140,4.174,2141,4.174,2142,4.174,2143,4.174,2144,7.007,2145,5.714]],["title/components/TextareaComponent.html",[0,0.229,248,0.779]],["body/components/TextareaComponent.html",[0,0.466,1,0.547,2,0.962,3,0.079,4,0.06,5,0.617,6,0.655,7,0.655,8,0.052,9,0.348,12,0.381,13,0.479,14,0.655,15,0.358,16,0.486,17,0.543,18,0.436,20,0.184,22,0.077,23,0.255,27,1.021,31,0.468,33,0.991,35,0.4,36,0.656,39,0.264,40,0.012,41,0.345,42,1.536,43,1.026,45,1.762,54,1.868,55,1.508,56,0.58,58,1.419,59,1.062,68,0.454,69,0.06,74,1.148,75,0.263,78,1.149,81,0.144,82,0.3,84,0.06,91,0.11,92,0.782,104,0.105,106,0.686,107,0.686,114,0.581,117,0.454,120,1.043,123,0.425,124,0.894,145,2.553,162,0.655,163,0.991,164,0.934,165,0.655,166,0.655,167,0.599,168,1.43,169,0.636,170,0.991,171,0.564,172,0.655,173,0.655,174,0.547,175,0.655,176,0.547,177,0.617,178,0.655,179,0.547,180,0.991,181,0.547,182,0.655,183,0.547,184,0.991,185,0.655,186,0.564,187,0.655,188,0.599,189,0.636,190,0.655,191,0.617,192,0.655,193,0.515,194,0.531,195,0.655,196,0.547,197,0.655,198,0.531,199,0.655,200,0.547,201,0.655,202,0.547,203,0.581,204,0.655,205,0.564,206,0.655,207,0.564,208,0.655,209,0.531,210,0.599,211,0.655,212,0.531,213,0.547,214,0.655,215,0.547,216,0.991,217,0.617,218,0.655,219,0.531,220,1.195,221,0.617,222,0.655,223,0.655,224,0.531,225,0.655,226,0.564,227,0.547,228,0.655,229,0.531,230,0.853,231,0.547,232,0.655,233,0.531,234,0.599,235,0.617,236,0.962,237,0.531,238,0.599,239,0.564,240,0.599,241,0.655,242,0.531,243,0.655,244,0.547,245,0.655,246,0.531,247,0.655,248,1.258,249,0.655,250,0.599,251,0.599,252,0.655,253,0.655,254,0.006,255,0.006,265,1.853,275,2.312,279,0.499,283,2.592,320,1.545,336,1.083,337,0.617,338,0.617,342,1.03,343,1.03,448,1.941,476,1.083,477,1.333,494,2.769,496,2.581,497,1.72,498,1.842,499,2.222,500,1.842,501,2.222,502,1.663,506,2.222,509,2.936,510,1.609,511,2.222,512,2.877,513,3.426,514,2.54,519,3.02,520,3.02,521,3.504,523,2.841,524,3.037,525,1.996,528,2.936,536,1.295,545,1.609,547,2.434,548,1.609,550,2.139,560,2.222,566,1.88,567,2.799,568,1.663,574,0.909,575,1.663,576,1.099,577,1.099,580,1.558,581,1.218,582,1.099,593,1.099,594,1.099,595,1.218,597,1.36,616,1.842,617,1.842,618,2.477,619,1.463,620,1.842,622,1.842,623,1.842,624,2.057,625,1.218,626,1.218,745,2.687,800,2.687,808,1.218,906,1.878,1122,1.137,1201,1.981,1254,2.229,1429,1.777,1430,2.139,1431,2.139,1433,1.996,1436,2.139,1437,1.878,1438,2.139,1439,2.139,1440,2.139,1441,2.139,1442,2.139,1443,1.777,1444,2.139,1466,3.902,1471,2.139,1472,1.996,1473,2.139,1485,2.139,1488,3.235,1489,2.139,1490,3.235,1492,4.227,1493,2.317,1628,1.688,1629,2.553,1732,3.902,1733,2.139,1734,5.198,1735,2.555,1736,2.317,1737,3.504,1738,3.504,1739,3.865,1740,3.865,1741,4.662,1742,4.662,1743,2.555,1744,3.865,1745,2.555,1746,2.555,1747,2.555,1748,2.555,1749,2.555,1750,3.865,1751,3.865,1752,5.198,1753,3.865,1754,2.555,1755,3.865,1756,2.555,1757,3.865,1758,2.317,1759,2.555,1760,2.555,1801,3.865,2146,4.413,2147,2.917,2148,2.917,2149,2.917,2150,2.917,2151,2.917,2152,2.917,2153,2.917,2154,2.917,2155,2.917,2156,2.917,2157,2.917,2158,2.917,2159,2.917,2160,2.917,2161,2.917,2162,2.917,2163,2.917,2164,2.917,2165,2.917,2166,2.917,2167,2.917,2168,2.917,2169,2.917,2170,2.917,2171,4.413,2172,4.413,2173,4.413]],["title/components/TitleSlugUrlComponent.html",[0,0.229,250,0.853]],["body/components/TitleSlugUrlComponent.html",[0,0.446,1,0.696,2,1.147,3,0.094,4,0.077,5,0.785,6,0.833,7,0.833,8,0.066,12,0.454,14,0.833,15,0.364,16,0.495,17,0.554,18,0.444,20,0.219,22,0.098,23,0.305,27,1.217,31,0.525,33,1.182,35,0.46,39,0.249,40,0.012,41,0.298,42,1.327,43,0.877,45,1.589,54,0.995,55,1.256,56,0.279,58,1.018,59,0.834,68,0.577,69,0.077,73,1.495,74,1.359,75,0.6,76,2.579,81,0.126,82,0.236,84,0.077,91,0.138,92,1.411,102,1.798,104,0.134,114,1.219,117,1.245,123,0.891,132,2.719,139,1.874,144,3.045,145,2.146,160,1.327,162,0.833,163,1.182,164,1.114,165,0.833,166,0.833,167,0.762,168,1.603,169,0.809,170,1.182,171,0.717,172,0.833,173,0.833,174,0.696,175,0.833,176,0.696,177,0.785,178,0.833,179,0.696,180,1.182,181,0.696,182,0.833,183,0.696,184,1.182,185,0.833,186,0.717,187,0.833,188,0.762,189,0.809,190,0.833,191,0.785,192,0.833,193,0.654,194,0.675,195,0.833,196,0.696,197,0.833,198,0.675,199,0.833,200,0.696,201,0.833,202,0.696,203,0.739,204,0.833,205,0.717,206,0.833,207,0.717,208,0.833,209,0.675,210,0.762,211,0.833,212,0.675,213,0.696,214,0.833,215,0.696,216,1.182,217,0.785,218,0.833,219,0.675,220,1.374,221,0.785,222,0.833,223,0.833,224,0.675,225,0.833,226,0.717,227,0.696,228,0.833,229,0.675,230,1.018,231,0.696,232,0.833,233,0.675,234,0.762,235,0.785,236,0.809,237,0.675,238,0.762,239,0.717,240,1.5,241,0.833,242,0.675,243,0.833,244,0.696,245,0.833,246,0.675,247,0.833,248,0.696,249,0.833,250,1.367,251,1.755,252,0.833,253,0.833,254,0.007,255,0.007,279,0.634,281,1.634,340,0.785,341,0.785,363,2.046,474,2.259,497,2.051,675,2.259,680,2.775,689,2.945,690,3.045,694,3.249,697,2.538,699,2.538,709,5.153,710,3.858,981,1.605,1303,2.538,1864,3.249,1865,4.857,1880,4.609,1881,3.249,1882,5.357,2174,5.625,2175,5.625,2176,2.719,2177,5.357,2178,5.357,2179,5.357,2180,4.609,2181,5.357,2182,5.357,2183,5.357,2184,5.831,2185,3.709,2186,5.262,2187,4.609,2188,4.484,2189,4.609,2190,5.357,2191,4.609,2192,3.709,2193,3.709,2194,3.709,2195,3.709,2196,3.709,2197,4.609,2198,3.249,2199,3.249,2200,4.179,2201,4.179,2202,4.609,2203,3.249,2204,3.249,2205,3.249,2206,3.249,2207,3.249,2208,3.249,2209,3.249,2210,5.262,2211,5.262,2212,3.709,2213,7.301,2214,5.262,2215,3.709,2216,3.249,2217,3.709,2218,3.709,2219,3.709,2220,3.709,2221,3.709,2222,3.709,2223,3.709,2224,3.709,2225,3.709,2226,3.709]],["title/components/accordionContainerComponent.html",[0,0.229,167,0.853]],["body/components/accordionContainerComponent.html",[0,0.451,1,0.62,2,1.056,3,0.086,4,0.068,5,1.335,6,0.742,7,0.742,8,0.059,12,0.418,13,0.516,14,0.742,15,0.362,16,0.491,17,0.547,18,0.439,20,0.202,22,0.087,23,0.28,27,1.12,31,0.498,33,1.087,35,0.431,36,0.728,37,2.348,39,0.241,40,0.012,41,0.34,42,1.339,43,0.885,44,2.422,45,1.632,50,1.492,54,0.886,55,1.177,56,0.249,58,0.936,59,0.781,66,1.825,68,0.514,69,0.068,74,1.22,75,0.298,81,0.118,82,0.315,83,1.188,84,0.068,89,2.895,91,0.1,100,2.348,103,2.233,104,0.119,114,0.659,116,1.71,117,0.514,118,3.887,120,0.891,123,0.706,124,0.498,145,1.912,160,1.399,162,0.742,163,1.087,164,1.025,165,0.742,166,0.742,167,1.296,168,1.584,169,1.376,170,1.087,171,0.639,172,0.742,173,0.742,174,0.62,175,0.742,176,0.62,177,0.699,178,0.742,179,0.62,180,1.087,181,0.62,182,0.742,183,0.62,184,1.087,185,0.742,186,0.639,187,0.742,188,0.679,189,0.72,190,0.742,191,0.699,192,0.742,193,0.583,194,0.601,195,0.742,196,0.62,197,0.742,198,0.601,199,0.742,200,0.62,201,0.742,202,0.62,203,0.659,204,0.742,205,0.639,206,0.742,207,0.639,208,0.742,209,0.601,210,0.679,211,0.742,212,0.601,213,0.62,214,0.742,215,0.62,216,1.087,217,0.699,218,0.742,219,0.601,220,1.287,221,0.699,222,0.742,223,0.742,224,0.601,225,0.742,226,0.639,227,0.62,228,0.742,229,0.601,230,0.936,231,0.62,232,0.742,233,0.601,234,0.679,235,0.699,236,0.72,237,0.601,238,0.679,239,0.639,240,0.679,241,0.742,242,0.601,243,0.742,244,0.62,245,0.742,246,0.601,247,0.742,248,0.62,249,0.742,250,0.679,251,0.679,252,0.742,253,0.742,254,0.006,255,0.006,279,0.565,280,1.912,281,1.549,298,2.422,340,0.699,341,0.699,363,2.671,399,1.825,401,1.698,409,0.854,449,3.55,467,2.949,474,3.49,475,2.261,476,1.188,477,0.742,675,2.012,680,2.553,690,3.887,695,4.925,697,3.922,698,4.201,699,4.318,700,4.201,914,2.624,981,1.43,1017,2.012,1043,2.802,1049,3.49,1051,6.209,1052,5.033,1053,2.422,1054,5.011,1055,5.011,1056,4.597,1057,1.483,1058,1.483,1059,2.012,1060,5.512,1061,3.845,1062,4.551,1063,5.02,1064,5.02,1065,3.55,1066,5.02,1067,2.894,1068,5.527,1069,2.894,1070,5.527,1071,2.894,1072,4.241,1073,4.241,1074,4.241,1075,5.02,1076,4.626,1077,2.894,1197,3.327,1288,2.802,1298,4.062,1327,3.843,1421,2.261,1437,4.519,1531,2.624,1860,2.894,1865,2.624,1883,6.848,1884,4.241,2216,4.241,2227,3.304,2228,3.304,2229,2.894,2230,2.894,2231,3.304,2232,2.894,2233,2.894,2234,3.304,2235,3.304,2236,2.894,2237,4.842,2238,4.842,2239,2.894,2240,3.304,2241,3.304,2242,6.352,2243,3.304,2244,3.304,2245,5.02,2246,3.304,2247,2.894,2248,4.551,2249,6.31,2250,6.31,2251,4.842,2252,6.148,2253,4.842]],["title/components/codeViewerComponent.html",[0,0.229,188,0.853]],["body/components/codeViewerComponent.html",[0,0.459,1,0.609,2,1.042,3,0.085,4,0.067,5,0.687,6,0.729,7,0.729,8,0.058,12,0.412,13,0.511,14,0.729,15,0.361,16,0.49,17,0.546,18,0.439,20,0.199,22,0.086,23,0.277,27,1.106,31,0.493,33,1.073,35,0.427,36,0.739,37,2.318,39,0.256,40,0.012,41,0.214,42,1.475,43,0.975,45,1.699,50,1.477,54,1.521,55,1.37,56,0.427,58,1.29,59,0.909,66,1.801,68,0.505,69,0.067,71,2.415,74,1.349,75,0.292,81,0.117,82,0.214,83,1.173,84,0.067,89,2.866,91,0.099,100,2.318,103,1.863,104,0.117,114,0.647,116,1.688,117,0.882,118,1.879,120,0.882,123,0.827,124,0.489,144,1.879,155,1.712,160,0.953,162,0.729,163,1.073,164,1.2,165,0.729,166,0.729,167,0.667,168,1.6,169,1.042,170,1.073,171,0.628,172,0.729,173,0.729,174,0.609,175,0.729,176,0.609,177,0.687,178,0.729,179,0.609,180,1.073,181,0.609,182,0.729,183,0.609,184,1.073,185,0.729,186,0.628,187,0.729,188,1.285,189,1.736,190,0.729,191,0.687,192,0.729,193,0.573,194,0.591,195,0.729,196,0.609,197,0.729,198,0.591,199,0.729,200,0.609,201,0.729,202,0.609,203,0.647,204,0.729,205,0.628,206,0.729,207,0.628,208,0.729,209,0.591,210,0.667,211,0.729,212,0.591,213,0.609,214,0.729,215,0.609,216,1.073,217,0.687,218,0.729,219,0.591,220,1.274,221,0.687,222,0.729,223,0.729,224,0.591,225,0.729,226,0.628,227,0.609,228,0.729,229,0.591,230,0.924,231,0.609,232,0.729,233,0.591,234,0.667,235,0.687,236,0.708,237,0.591,238,0.667,239,0.628,240,0.667,241,0.729,242,0.591,243,0.729,244,0.609,245,0.729,246,0.591,247,0.729,248,0.609,249,0.729,250,0.667,251,0.667,252,0.729,253,0.729,254,0.006,255,0.006,275,1.863,298,2.38,306,2.242,308,2.415,309,3.161,311,1.405,320,1.629,361,2.09,363,3.848,401,0.821,409,0.573,467,2.911,675,1.977,680,2.52,690,1.879,692,3.504,693,3.282,710,2.38,721,2.438,1039,2.415,1043,1.879,1049,3.455,1052,2.09,1056,3.271,1057,1.457,1058,1.457,1059,1.977,1060,3.882,1065,3.504,1076,4.587,1078,4.159,1079,6.425,1080,6.425,1081,2.578,1082,2.52,1083,2.991,1084,2.578,1085,5.481,1086,4.187,1087,4.969,1088,4.969,1089,3.882,1090,4.187,1091,3.271,1092,4.969,1093,4.505,1094,4.187,1095,5.481,1096,4.969,1097,4.969,1098,4.969,1099,4.187,1100,4.187,1101,2.38,1102,2.38,1103,5.481,1104,2.844,1105,3.859,1106,2.844,1107,4.564,1108,4.187,1109,5.481,1110,4.187,1111,2.844,1112,2.844,1113,4.187,1114,2.844,1115,2.844,1116,4.187,1117,2.844,1197,3.299,1327,3.455,1422,2.578,1437,3.077,1858,2.844,1861,2.844,1862,5.481,1863,2.844,1870,2.844,2239,2.844,2242,4.187,2245,4.969,2247,2.844,2248,2.578,2254,4.187,2255,4.78,2256,3.247,2257,3.247,2258,3.247,2259,3.247,2260,3.247,2261,3.247,2262,3.247,2263,3.247,2264,3.247,2265,3.247,2266,3.247,2267,3.247,2268,3.247,2269,3.247,2270,4.78,2271,3.247,2272,3.247,2273,3.247,2274,5.673,2275,3.247,2276,4.78,2277,4.78,2278,3.247]],["title/coverage.html",[2279,4.988]],["body/coverage.html",[0,0.492,1,0.475,8,0.045,9,0.369,10,3.137,11,3.334,39,0.082,40,0.012,47,1.733,64,1.096,75,0.356,85,1.279,87,2.329,89,1.279,104,0.307,105,1.733,124,0.381,167,0.52,171,0.49,174,0.475,176,0.475,179,0.475,181,0.475,183,0.475,186,0.49,188,0.52,191,0.536,193,0.447,196,0.475,198,0.461,200,0.475,202,0.475,205,0.49,207,0.49,209,0.461,212,0.461,213,0.475,215,0.475,217,0.536,219,0.461,221,0.536,224,0.461,226,0.49,229,0.461,231,0.475,233,0.461,235,0.536,237,0.461,239,0.49,242,0.461,244,0.475,246,0.461,248,0.475,250,0.52,251,1.131,254,0.005,255,0.005,256,2.901,289,1.856,325,3.701,327,1.63,439,3.143,445,2.901,494,2.802,495,3.143,527,1.856,566,0.894,578,0.954,579,0.954,580,0.894,639,3.712,640,3.143,641,1.856,642,2.218,654,2.011,655,2.218,676,2.218,677,2.218,678,2.218,715,3.143,716,3.143,728,1.856,757,1.63,792,3.572,797,1.733,800,1.542,814,2.901,833,1.63,864,2.41,940,2.901,941,2.901,953,4.329,954,5.031,965,2.011,969,2.011,973,2.011,977,2.011,979,2.011,985,5.591,986,1.856,997,2.011,1001,2.011,1003,2.011,1005,2.011,1007,2.011,1009,2.011,1010,2.011,1011,2.011,1014,3.572,1015,3.334,1016,3.572,1023,1.733,1033,1.733,1049,1.542,1051,3.143,1052,2.548,1053,3.572,1057,2.472,1058,2.472,1078,1.856,1079,3.143,1080,3.143,1081,3.143,1082,1.335,1083,1.335,1118,1.63,1119,5.165,1120,4.886,1121,5.165,1126,1.63,1127,1.63,1128,1.397,1130,1.63,1142,1.63,1155,1.63,1157,1.63,1159,1.63,1161,1.63,1165,1.63,1169,1.63,1171,1.63,1173,1.63,1174,1.63,1175,1.63,1177,1.63,1179,1.63,1181,1.63,1187,1.63,1294,1.733,1298,1.63,1348,3.848,1349,3.848,1352,1.733,1354,1.733,1364,1.733,1365,3.143,1374,1.856,1375,2.901,1427,1.856,1428,2.901,1451,1.63,1494,4.53,1497,1.63,1502,1.733,1504,1.733,1518,2.011,1519,3.467,1593,2.218,1611,1.733,1612,4.074,1613,3.64,1614,3.848,1617,1.733,1618,1.542,1619,3.038,1622,1.733,1624,1.733,1637,3.77,1638,1.856,1642,1.856,1655,1.733,1656,3.572,1657,3.334,1658,3.858,1660,1.733,1676,1.733,1677,3.572,1678,3.334,1679,1.733,1685,3.572,1686,1.733,1703,1.856,1704,3.77,1706,1.856,1708,1.856,1717,3.572,1732,1.856,1733,2.901,1758,2.011,1791,2.218,1792,2.218,1793,2.218,1836,2.011,1837,2.011,1838,2.011,1854,7.528,1914,2.011,1915,2.011,1930,2.011,1935,2.011,1936,2.011,1944,2.011,1949,2.011,1950,2.011,1953,4.336,1956,2.011,1961,2.011,1962,2.011,1963,2.011,1966,2.011,1968,2.011,1969,2.709,1971,2.218,1972,3.143,1995,1.856,1996,4.645,1997,2.011,2004,4.746,2032,2.011,2034,2.011,2035,2.011,2037,2.011,2096,2.218,2097,2.218,2174,2.901,2175,2.901,2176,2.901,2188,1.856,2279,2.218,2280,2.532,2281,2.532,2282,2.532,2283,3.958,2284,6.336,2285,7.455,2286,2.532,2287,4.872,2288,2.532,2289,2.532,2290,7.455,2291,6.336,2292,8.595,2293,7.201,2294,2.532,2295,4.872,2296,2.532,2297,2.532,2298,2.532,2299,2.532,2300,5.508,2301,2.532,2302,5.508,2303,3.958,2304,2.532,2305,2.532,2306,2.532,2307,2.532,2308,2.532,2309,2.532,2310,3.958,2311,2.532,2312,2.532,2313,4.872,2314,2.218,2315,2.218,2316,2.532,2317,2.532]],["title/dependencies.html",[1892,2.894,2318,3.026]],["body/dependencies.html",[40,0.011,254,0.01,255,0.01,1892,3.88,2319,6.706,2320,6.706,2321,7.706,2322,6.706,2323,6.706,2324,7.706,2325,6.706,2326,6.706,2327,6.706,2328,6.706,2329,6.706,2330,6.706,2331,6.706,2332,6.706]],["title/miscellaneous/enumerations.html",[2333,2.533,2334,4.381]],["body/miscellaneous/enumerations.html",[0,0.486,3,0.105,9,0.347,10,2.82,11,2.998,19,4.041,22,0.116,40,0.012,43,1.172,67,2.983,75,0.672,76,2.937,87,1.707,93,4.329,94,4.329,95,3.598,96,4.036,97,4.602,98,4.329,99,3.467,100,3.467,101,4.329,102,2.863,103,2.301,122,3.802,139,2.983,145,3.417,240,1.579,251,1.468,254,0.008,255,0.008,256,3.212,291,3.417,306,1.408,344,4.69,345,4.041,445,3.212,466,4.041,467,3.596,468,4.69,469,4.69,473,4.69,474,3.596,475,4.041,494,1.958,502,2.226,503,4.041,717,3.257,737,3.257,755,4.041,814,3.212,864,2.668,866,4.69,867,4.69,940,3.212,941,4.329,947,4.69,948,4.69,1348,2.82,1349,3.802,1351,4.329,1375,3.212,1376,4.69,1378,4.69,1379,3.479,1380,4.69,1381,4.69,1382,4.69,1383,4.69,1384,4.69,1385,3.596,1386,4.329,1387,4.69,1388,3.479,1389,3.479,1390,3.479,1391,3.212,1392,3.479,1393,3.479,1394,3.479,1395,3.479,1428,3.212,1432,4.69,1433,4.571,1612,3.417,1613,2.668,1614,3.802,1619,2.416,1627,4.329,1628,3.865,1629,4.136,1637,4.041,1640,4.329,1648,4.69,1649,4.69,1704,2.998,1711,4.69,1733,3.212,1737,4.69,1738,4.69,1836,3.479,1837,3.479,1838,4.69,1842,5.172,2174,3.212,2175,3.212,2176,4.897,2200,4.69,2201,4.69,2333,3.212,2334,3.837,2335,6.68,2336,7.149,2337,4.381,2338,3.837,2339,4.381,2340,4.381,2341,7.463,2342,4.381,2343,4.381,2344,5.172,2345,4.381,2346,5.905,2347,3.837]],["title/index.html",[22,0.11,2348,3.637]],["body/index.html",[1,1.477,2,0.962,40,0.012,171,1.522,174,1.477,176,1.477,179,1.477,181,1.477,183,1.477,186,1.522,193,1.389,196,1.477,198,1.432,200,1.477,202,1.477,205,1.522,207,1.522,209,1.432,212,1.432,213,1.477,215,1.477,219,1.432,224,1.432,226,1.522,229,1.432,231,1.477,233,1.432,237,1.432,239,1.522,242,1.432,244,1.477,246,1.432,248,1.477,254,0.008,255,0.008,472,2.553,1050,0.828,1288,2.553,1890,5.484,1891,2.553,1892,3.433,1893,3.864,1894,3.864,1895,3.864,1896,3.819,1897,2.84,1904,5.117,1911,3.864,1912,3.864,1913,3.864,1931,6.348,1932,3.864,1933,3.864,1934,3.864,1945,6.175,1946,3.864,1947,3.864,1948,3.864,1957,6.252,1958,3.864,1959,3.864,1960,3.864,1970,3.504,2348,3.864,2349,4.412,2350,4.412,2351,4.412]],["title/modules.html",[1891,3.295]],["body/modules.html",[40,0.01,254,0.01,255,0.01,1890,4.89,1891,3.86,1904,3.86,1931,4.89,1945,4.89,1957,4.89,2352,8.451,2353,8.451,2354,8.451,2355,8.451]],["title/properties.html",[23,0.289,2318,3.026]],["body/properties.html",[23,0.398,40,0.011,254,0.01,255,0.01,2356,6.871,2357,6.871]],["title/components/resizableContainerComponent.html",[0,0.229,235,0.879]],["body/components/resizableContainerComponent.html",[0,0.455,1,0.663,2,1.108,3,0.09,4,0.073,5,0.747,6,0.793,7,0.793,8,0.063,14,0.793,15,0.363,16,0.495,17,0.552,18,0.443,20,0.212,22,0.094,23,0.294,27,1.176,30,3.767,33,1.141,36,0.497,37,2.464,39,0.246,40,0.012,42,1.298,43,0.857,45,1.657,50,1.55,54,0.947,55,1.223,56,0.266,58,0.683,59,0.481,64,2.575,66,1.915,67,2.567,68,1.013,69,0.123,70,3.289,73,2.049,74,1.389,75,0.536,76,1.795,78,0.92,81,0.105,82,0.267,83,1.247,84,0.073,91,0.073,100,2.464,103,1.98,114,0.704,116,1.795,117,0.549,118,3.767,123,0.74,124,0.532,162,0.793,163,1.141,164,1.075,165,0.793,166,0.793,167,0.725,168,1.585,169,0.77,170,1.141,171,0.683,172,0.793,173,0.793,174,0.663,175,0.793,176,0.663,177,0.747,178,0.793,179,0.663,180,1.141,181,0.663,182,0.793,183,0.663,184,1.141,185,0.793,186,0.683,187,0.793,188,0.725,189,0.77,190,0.793,191,0.747,192,0.793,193,0.623,194,0.643,195,0.793,196,0.663,197,0.793,198,0.643,199,0.793,200,0.663,201,0.793,202,0.663,203,0.704,204,0.793,205,0.683,206,0.793,207,0.683,208,0.793,209,0.643,210,0.725,211,0.793,212,0.643,213,0.663,214,0.793,215,0.663,216,1.141,217,0.747,218,0.793,219,0.643,220,1.337,221,0.747,222,0.793,223,0.793,224,0.643,225,0.793,226,0.683,227,0.663,228,0.793,229,0.643,230,0.983,231,0.663,232,0.793,233,0.643,234,0.725,235,1.378,236,1.651,237,0.643,238,0.725,239,0.683,240,0.725,241,0.793,242,0.643,243,0.793,244,0.663,245,0.793,246,0.643,247,0.793,248,0.663,249,0.793,250,0.725,251,0.725,252,0.793,253,0.793,254,0.007,255,0.007,279,0.604,284,4.036,285,5.17,294,1.862,306,2.093,314,3.095,317,3.805,319,4.773,320,1.927,335,2.043,361,2.274,363,3.283,364,4.727,399,1.331,401,1.816,675,2.151,680,2.679,690,3.444,692,3.725,693,2.94,695,5.426,697,4.074,698,3.725,699,4.721,700,4.364,704,3.093,711,5.214,713,3.093,745,3.095,981,1.528,1043,3.444,1053,2.589,1057,1.585,1058,1.585,1059,2.151,1061,4.036,1062,4.727,1097,5.17,1421,2.417,1531,2.805,1866,3.093,1886,3.093,2229,3.093,2230,3.093,2232,3.093,2233,3.093,2236,3.093,2248,2.805,2252,4.451,2254,5.214,2314,6.945,2315,6.945,2358,5.952,2359,5.952,2360,5.952,2361,5.952,2362,5.952,2363,5.952,2364,5.952,2365,3.532,2366,3.532,2367,3.532,2368,3.532,2369,5.082,2370,5.082,2371,5.082,2372,5.082,2373,5.082,2374,5.082,2375,3.532,2376,5.082,2377,3.532,2378,5.082,2379,5.952,2380,5.952,2381,3.532,2382,3.532,2383,3.532,2384,5.952,2385,5.082,2386,3.532,2387,3.532,2388,5.952,2389,3.532,2390,3.532,2391,3.532,2392,5.082,2393,5.082,2394,3.532,2395,3.532,2396,3.532,2397,6.51,2398,5.082,2399,3.532,2400,3.532]],["title/interfaces/slugTitleURLConfig.html",[104,0.15,2188,3.044]],["body/interfaces/slugTitleURLConfig.html",[0,0.416,3,0.101,4,0.117,8,0.101,12,0.488,15,0.235,20,0.235,22,0.15,23,0.403,31,0.446,35,0.425,39,0.273,40,0.012,41,0.338,59,0.77,69,0.117,76,2.78,81,0.156,82,0.312,84,0.117,91,0.163,92,1.867,104,0.204,114,1.126,117,1.31,168,1.161,240,1.617,250,1.161,251,1.66,254,0.009,255,0.009,281,1.708,340,1.196,341,1.196,497,2.202,680,2.98,981,2.445,1050,1.06,2174,4.143,2175,4.143,2176,4.143,2177,6.096,2178,6.096,2179,4.95,2180,4.95,2181,4.95,2182,4.95,2183,4.95,2184,4.95,2187,4.95,2188,5.529,2189,4.95,2190,7.079,2191,4.95,2197,6.096,2198,4.95,2199,4.95,2200,6.25,2201,6.25,2202,6.096,2203,4.95,2204,4.95,2205,4.95,2206,4.95,2207,4.95,2208,4.95,2209,4.95]],["title/miscellaneous/variables.html",[2333,2.533,2401,4.381]],["body/miscellaneous/variables.html",[0,0.487,9,0.334,22,0.089,39,0.284,40,0.012,41,0.388,42,1.744,43,1.152,70,3.218,71,1.703,72,2.053,87,1.313,96,1.703,171,0.652,174,0.632,176,0.632,179,0.632,181,0.632,183,0.632,186,0.652,193,0.595,196,0.632,198,0.613,200,0.632,202,0.632,205,0.652,207,0.652,209,0.613,212,0.613,213,0.632,215,0.632,219,0.613,224,0.613,226,0.652,229,0.613,230,0.652,231,0.922,233,0.613,237,0.613,239,0.652,242,0.613,244,0.632,246,0.613,248,0.632,254,0.007,255,0.007,494,1.629,535,1.753,578,1.852,579,1.852,633,1.399,639,1.777,953,3.359,954,2.677,965,3.902,966,4.604,967,2.952,968,2.952,969,3.902,970,3.902,971,4.604,972,5.94,973,3.902,974,3.902,975,5.378,976,4.604,977,3.902,978,4.303,979,3.902,980,3.902,985,2.677,986,3.602,997,3.902,998,4.303,999,4.303,1000,2.952,1001,3.902,1002,2.952,1003,3.902,1004,2.952,1005,3.902,1006,2.952,1007,3.902,1008,4.303,1009,3.902,1010,3.902,1011,3.902,1057,3.357,1058,3.357,1119,2.17,1120,2.053,1121,5.274,1130,3.163,1131,2.307,1132,2.307,1133,2.307,1134,2.307,1135,2.307,1136,2.307,1137,2.307,1138,2.307,1139,2.307,1140,2.307,1141,2.307,1142,3.163,1143,2.307,1144,2.307,1145,2.307,1146,2.307,1147,2.307,1148,2.307,1149,2.307,1150,2.307,1151,2.307,1152,2.307,1153,2.307,1154,2.307,1155,3.163,1156,2.307,1157,3.163,1158,2.307,1159,3.163,1160,2.307,1161,3.163,1162,2.307,1163,3.362,1164,2.307,1165,3.163,1166,2.307,1167,3.362,1168,2.307,1169,3.163,1170,2.307,1171,3.163,1172,2.307,1173,3.163,1174,3.163,1175,3.163,1176,2.307,1177,3.163,1178,2.307,1179,3.163,1180,2.307,1181,3.163,1182,2.307,1348,2.17,1349,3.732,1352,3.362,1353,2.471,1354,3.362,1355,2.471,1385,2.053,1451,3.163,1494,2.307,1501,3.354,1502,3.362,1503,2.471,1504,3.362,1505,2.471,1506,2.471,1612,2.843,1613,2.053,1614,3.732,1619,1.859,1622,3.362,1623,2.471,1624,3.362,1625,2.471,1637,3.967,1638,3.602,1639,2.677,1640,2.471,1641,2.677,1642,3.602,1643,2.677,1644,2.677,1645,2.677,1646,2.677,1647,2.677,1704,2.307,1706,3.602,1707,2.677,1708,3.602,1709,2.677,1710,2.677,1914,2.677,1915,3.902,1930,3.902,1935,2.677,1936,3.902,1944,3.902,1949,2.677,1950,3.902,1953,2.307,1956,3.902,1961,2.677,1962,3.902,1963,3.902,1968,3.902,1996,2.471,2004,5.378,2032,3.902,2033,2.952,2034,3.902,2035,3.902,2036,2.952,2037,3.902,2333,2.471,2338,4.303,2344,5.579,2347,4.303,2401,2.952,2402,7.479,2403,8.141,2404,6.37,2405,6.772,2406,6.37,2407,6.37]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":325,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2357,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":2292,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2284,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2313,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2295,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2283,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2300,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2287,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2309,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2301,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2293,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2290,"title":{},"body":{"coverage.html":{}}}],["0/40",{"_index":2306,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2291,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2285,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2310,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2302,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2303,"title":{},"body":{"coverage.html":{}}}],["0em",{"_index":2226,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["0px",{"_index":2216,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{}}}],["1",{"_index":399,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IOption.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["1).foreach((option",{"_index":882,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["1).tostring().padstart(2",{"_index":1252,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["1.0.0",{"_index":2328,"title":{},"body":{"dependencies.html":{}}}],["1.375",{"_index":428,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["1/22",{"_index":2307,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2312,"title":{},"body":{"coverage.html":{}}}],["10/33",{"_index":2294,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":693,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["10px",{"_index":711,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/resizableContainerComponent.html":{}}}],["11",{"_index":2311,"title":{},"body":{"coverage.html":{}}}],["11].includes(monthnum",{"_index":1297,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["12",{"_index":2296,"title":{},"body":{"coverage.html":{}}}],["123",{"_index":2171,"title":{},"body":{"components/TextareaComponent.html":{}}}],["12px",{"_index":1888,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["13",{"_index":1593,"title":{},"body":{"interfaces/IOption.html":{},"coverage.html":{}}}],["14.2.11",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1758,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["150",{"_index":1097,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["16px",{"_index":1880,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["170px",{"_index":705,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["18",{"_index":2304,"title":{},"body":{"coverage.html":{}}}],["184",{"_index":1426,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["1fr",{"_index":1885,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["1px",{"_index":2276,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["2",{"_index":1288,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/accordionContainerComponent.html":{},"index.html":{}}}],["2.1.35",{"_index":2332,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":2305,"title":{},"body":{"coverage.html":{}}}],["2/15",{"_index":2308,"title":{},"body":{"coverage.html":{}}}],["2/26",{"_index":2299,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2288,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1419,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["23",{"_index":142,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["24px",{"_index":1882,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["28",{"_index":1293,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["28px",{"_index":1881,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["29",{"_index":1291,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["2a4980",{"_index":712,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["2nd",{"_index":435,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["3",{"_index":2253,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["3.321.1",{"_index":2324,"title":{},"body":{"dependencies.html":{}}}],["3/25",{"_index":2297,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1298,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/accordionContainerComponent.html":{},"coverage.html":{}}}],["31",{"_index":1299,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["35",{"_index":141,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["362px",{"_index":703,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["36px",{"_index":2215,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["38",{"_index":2350,"title":{},"body":{"index.html":{}}}],["4",{"_index":1294,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["4/26",{"_index":2286,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1303,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/TitleSlugUrlComponent.html":{}}}],["41",{"_index":2351,"title":{},"body":{"index.html":{}}}],["48px",{"_index":1874,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["4px",{"_index":1866,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/resizableContainerComponent.html":{}}}],["5",{"_index":2349,"title":{},"body":{"index.html":{}}}],["500",{"_index":378,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["5px",{"_index":1864,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["6",{"_index":1295,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["6px",{"_index":1800,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["7",{"_index":2298,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":132,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/TitleSlugUrlComponent.html":{}}}],["80px",{"_index":2217,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["8px",{"_index":1422,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/codeViewerComponent.html":{}}}],["9",{"_index":1296,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["9/44",{"_index":2289,"title":{},"body":{"coverage.html":{}}}],["99",{"_index":1411,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["9px",{"_index":1875,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["_closebtn",{"_index":147,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["_daycontrol",{"_index":1156,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["_flyout",{"_index":758,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["_monthcontrol",{"_index":1158,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["_text",{"_index":149,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["_yearcontrol",{"_index":1160,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["_yearcontrol')?.value",{"_index":1244,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["a11ytext",{"_index":816,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["aaaa",{"_index":1172,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["abbr",{"_index":1405,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["abstractcontrol",{"_index":562,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["acc_demo.breadcrumb_component.additional_links",{"_index":372,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["accessors",{"_index":1802,"title":{},"body":{"components/InputComponent.html":{}}}],["accordian",{"_index":169,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["accordion",{"_index":1060,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["accordion.copycode",{"_index":2270,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["accordion.hidecode",{"_index":1069,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["accordion.showcode",{"_index":1071,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["accordionconfig",{"_index":1093,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["accordioncontainercomponent",{"_index":167,"title":{"components/accordionContainerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["active",{"_index":737,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activiatedselect",{"_index":1691,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["actual_component",{"_index":253,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["add",{"_index":597,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["added",{"_index":1472,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TextareaComponent.html":{}}}],["addhover",{"_index":1545,"title":{},"body":{"interfaces/IOption.html":{}}}],["additional",{"_index":1463,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["adds",{"_index":1430,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["aftercontentinit",{"_index":2177,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["afterviewinit",{"_index":258,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["again",{"_index":921,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["align",{"_index":697,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["allows",{"_index":1663,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["alone.functions",{"_index":343,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["altimage",{"_index":957,"title":{},"body":{"components/FooterComponent.html":{}}}],["always",{"_index":1530,"title":{},"body":{"interfaces/IOption.html":{}}}],["ancestor",{"_index":353,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["anchortype",{"_index":2190,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["angular",{"_index":1058,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["angular/cli",{"_index":2319,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1908,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LanguageSwitchComponent.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["angular/forms",{"_index":574,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["angular/router",{"_index":1917,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["année",{"_index":1168,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["anything",{"_index":600,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["août",{"_index":1150,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":168,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["apply",{"_index":1487,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["approaches",{"_index":603,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["april",{"_index":1134,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":293,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["aria",{"_index":534,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["ariadissmissible",{"_index":34,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["arialabel",{"_index":116,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["ariatext",{"_index":1470,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{}}}],["array",{"_index":1277,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["arrays",{"_index":1231,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["arrow",{"_index":895,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["attr.disabled",{"_index":1673,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["august",{"_index":1137,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":2248,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["autocomplete",{"_index":1532,"title":{},"body":{"interfaces/IOption.html":{}}}],["autocomplete'},{'name",{"_index":172,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["autocomplete.component.html",{"_index":1533,"title":{},"body":{"interfaces/IOption.html":{}}}],["autocomplete/autocomplete.component",{"_index":1964,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{}}}],["autocompletecomponent",{"_index":171,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":553,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["avril",{"_index":1146,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":2321,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":701,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{}}}],["banner",{"_index":19,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["banner'},{'name",{"_index":173,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["banner.component.html",{"_index":21,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner.module.ts",{"_index":1899,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{}}}],["banner/banner.component",{"_index":1903,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{}}}],["banner?.classlist.add('bannerdismissed",{"_index":128,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner?.classlist.add('nodisplay",{"_index":130,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner?.classlist.remove('bannerdismissed",{"_index":131,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner?.classlist.remove('nodisplay",{"_index":134,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["bannercomponent",{"_index":1,"title":{"components/BannerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{}}}],["bannersize",{"_index":98,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["bannertype",{"_index":93,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["bar",{"_index":2399,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["base",{"_index":348,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["based",{"_index":422,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["baseurl",{"_index":260,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["baseurlkey",{"_index":290,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["basic",{"_index":1462,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["basis",{"_index":708,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["behavior",{"_index":912,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["behaviorsubject",{"_index":1980,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["behaviorsubject(false",{"_index":2002,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["being",{"_index":753,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{}}}],["below",{"_index":891,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["blank",{"_index":944,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["blk",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["blk.svg",{"_index":968,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":144,"title":{},"body":{"components/BannerComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutConfig.html":{},"components/TitleSlugUrlComponent.html":{},"components/codeViewerComponent.html":{}}}],["blue",{"_index":1392,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["blunt",{"_index":1702,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["boew/assets/sig",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["boew/assets/wmms",{"_index":967,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":120,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["border",{"_index":1862,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["both",{"_index":1738,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bottom",{"_index":1865,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{}}}],["breadcrumb",{"_index":177,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["breadcrumb'},{'name",{"_index":175,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["breadcrumb.component.html",{"_index":259,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["breadcrumb/breadcrumb.component",{"_index":1923,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["breadcrumb/link/link.component",{"_index":1924,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["breadcrumb_separator",{"_index":330,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["breadcrumbcomponent",{"_index":174,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["breadcrumblinkcomponent",{"_index":176,"title":{"components/BreadcrumbLinkComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ILinkComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":2355,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2352,"title":{},"body":{"modules.html":{}}}],["btnaction",{"_index":451,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["btnconfig",{"_index":115,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["btnevent",{"_index":38,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["btns",{"_index":1045,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["build",{"_index":109,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["button",{"_index":103,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["button'},{'name",{"_index":180,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["button.component",{"_index":88,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["button.component.html",{"_index":446,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["button.component.ts",{"_index":1349,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["button.component.ts:30",{"_index":1764,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":1767,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1763,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:37",{"_index":1768,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:38",{"_index":1762,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:39",{"_index":1765,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:40",{"_index":1766,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:41",{"_index":1769,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:43",{"_index":1773,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:54",{"_index":1771,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:73",{"_index":1770,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.copy",{"_index":707,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["button.service",{"_index":1498,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["button.service.ts",{"_index":1972,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{},"coverage.html":{}}}],["button.service.ts:11",{"_index":1977,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["button.service.ts:8",{"_index":1981,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["button.service.ts:9",{"_index":1979,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["button/button.component",{"_index":764,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["button/icon",{"_index":87,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["buttoncategories",{"_index":466,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDropdownConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttoncategories.primary",{"_index":769,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["buttonclick",{"_index":1761,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["buttonclick(id",{"_index":1362,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["buttoncolor",{"_index":469,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttoncomponent",{"_index":179,"title":{"components/ButtonComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IButtonConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["buttonconfigacccordion",{"_index":1064,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["buttonconfigcopy",{"_index":1098,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["buttonicondirection",{"_index":473,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttonid",{"_index":303,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["buttonpress",{"_index":1975,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["buttonpress(id",{"_index":1976,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["buttons.copycode",{"_index":687,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["buttons.copystyle",{"_index":688,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["buttons.copyurl",{"_index":2211,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["buttonsize",{"_index":468,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttontext",{"_index":1054,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["buttontextclosed",{"_index":1055,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["buttontype",{"_index":470,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["calculate",{"_index":421,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["canada",{"_index":972,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["canada_logo_aria_label_english",{"_index":1010,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["canada_logo_aria_label_french",{"_index":1011,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":1473,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["category",{"_index":66,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["center",{"_index":699,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["change",{"_index":1279,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IOption.html":{},"components/IconComponent.html":{}}}],["change.directive",{"_index":1929,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["change.foreachchangeditem((item",{"_index":1574,"title":{},"body":{"interfaces/IOption.html":{}}}],["change[this.config.id",{"_index":1486,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["changed",{"_index":1524,"title":{},"body":{"interfaces/IOption.html":{}}}],["changedetectorref",{"_index":287,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["changeref",{"_index":286,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["changes",{"_index":311,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/codeViewerComponent.html":{}}}],["changes['config",{"_index":1101,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"components/codeViewerComponent.html":{}}}],["changes['config'].currentvalue",{"_index":1102,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"components/codeViewerComponent.html":{}}}],["changes['config'].currentvalue.size",{"_index":382,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["changes['config'].currentvalue.type",{"_index":385,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["changes['config'].firstchange",{"_index":381,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["changes['config'].previousvalue.size",{"_index":383,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["changes['config'].previousvalue.type",{"_index":386,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["changing",{"_index":379,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["character",{"_index":1414,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["charactercountstatus",{"_index":2146,"title":{},"body":{"components/TextareaComponent.html":{}}}],["charactercountstatus(currcharcount",{"_index":1750,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["chargement",{"_index":1709,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["charlimit",{"_index":1734,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["charlimitstatus",{"_index":1741,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["check",{"_index":433,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checkactive(value",{"_index":1584,"title":{},"body":{"interfaces/IOption.html":{}}}],["checkbox",{"_index":503,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox'},{'name",{"_index":182,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["checkbox.component.html",{"_index":504,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["checkbox/checkbox.component",{"_index":1939,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["checkboxcomponent",{"_index":181,"title":{"components/CheckboxComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["checkduplicated(index",{"_index":1604,"title":{},"body":{"interfaces/IOption.html":{}}}],["checklabellength",{"_index":1420,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checklabelrounded",{"_index":1415,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checknumber",{"_index":1412,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["cheerio",{"_index":2327,"title":{},"body":{"dependencies.html":{}}}],["chevron",{"_index":1851,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["child",{"_index":359,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["childref",{"_index":261,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["chip",{"_index":184,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["chipcontent",{"_index":647,"title":{},"body":{"components/ChipItemComponent.html":{},"components/SecondaryChipsComponent.html":{}}}],["chipcontenttext",{"_index":658,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chipidx",{"_index":670,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chipitemcomponent",{"_index":183,"title":{"components/ChipItemComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["chiplist",{"_index":661,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chiplistchange",{"_index":662,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chiplistcomponent",{"_index":186,"title":{"components/ChipListComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["chips",{"_index":2098,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips'},{'name",{"_index":241,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["chips.component",{"_index":1967,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{}}}],["chips.component.html",{"_index":2099,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips.component.ts",{"_index":2097,"title":{},"body":{"components/SecondaryChipsComponent.html":{},"coverage.html":{}}}],["chips.component.ts:12",{"_index":2101,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips.component.ts:8",{"_index":2100,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips/chip",{"_index":1528,"title":{},"body":{"interfaces/IOption.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["chips/secondary",{"_index":1966,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"components/SecondaryChipsComponent.html":{},"coverage.html":{}}}],["circleinfoicon",{"_index":1796,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["cl",{"_index":17,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["class",{"_index":69,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["class_trashcan",{"_index":1354,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class_x_mark",{"_index":1352,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":736,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["clearflyoutfocus",{"_index":723,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["clearoptions",{"_index":819,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["clears",{"_index":923,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["clearvalue",{"_index":1492,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["click",{"_index":1065,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["clickable",{"_index":949,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["clickevent",{"_index":447,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["clickevent(id",{"_index":463,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["clickinside(event",{"_index":1561,"title":{},"body":{"interfaces/IOption.html":{}}}],["clickout",{"_index":1570,"title":{},"body":{"interfaces/IOption.html":{}}}],["close",{"_index":44,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/accordionContainerComponent.html":{}}}],["closed",{"_index":782,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["closes",{"_index":750,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["cluster_irccdsangularbannermodule",{"_index":1893,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{}}}],["cluster_irccdsangularbannermodule_declarations",{"_index":1895,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{}}}],["cluster_irccdsangularbannermodule_exports",{"_index":1894,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{}}}],["cluster_irccdsangularcomponentssharedmodule",{"_index":1911,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"index.html":{}}}],["cluster_irccdsangularcomponentssharedmodule_declarations",{"_index":1913,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"index.html":{}}}],["cluster_irccdsangularcomponentssharedmodule_exports",{"_index":1912,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"index.html":{}}}],["cluster_irccdsangularformcomponentsmodule",{"_index":1932,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{}}}],["cluster_irccdsangularformcomponentsmodule_declarations",{"_index":1934,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{}}}],["cluster_irccdsangularformcomponentsmodule_exports",{"_index":1933,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{}}}],["cluster_irccdsangularheaderfootermodule",{"_index":1946,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{}}}],["cluster_irccdsangularheaderfootermodule_declarations",{"_index":1947,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{}}}],["cluster_irccdsangularheaderfootermodule_exports",{"_index":1948,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{}}}],["cluster_irccdsangularlegacyoldmodule",{"_index":1958,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["cluster_irccdsangularlegacyoldmodule_declarations",{"_index":1959,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["cluster_irccdsangularlegacyoldmodule_exports",{"_index":1960,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["code",{"_index":189,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["codeviewercomponent",{"_index":188,"title":{"components/codeViewerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["codeviewertabs",{"_index":1090,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["codeviewertabscccordion",{"_index":1094,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["color",{"_index":73,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/resizableContainerComponent.html":{}}}],["colour",{"_index":1398,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/IndicatorComponent.html":{},"components/LabelComponent.html":{},"components/SearchInputComponent.html":{}}}],["column",{"_index":2252,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["columns",{"_index":1884,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["commenc",{"_index":1647,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":1907,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["completed",{"_index":1639,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["complét",{"_index":1644,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["component/banner/banner.component.ts",{"_index":11,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["component/banner/banner.component.ts:114",{"_index":61,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:118",{"_index":60,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:52",{"_index":79,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:53",{"_index":80,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:55",{"_index":48,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:56",{"_index":49,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:57",{"_index":46,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:59",{"_index":51,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:61",{"_index":77,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:70",{"_index":53,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:84",{"_index":63,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:98",{"_index":62,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/ircc",{"_index":1898,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{}}}],["component_template",{"_index":166,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["componentpreviewcomponent",{"_index":191,"title":{"components/ComponentPreviewComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"index.html":{},"components/resizableContainerComponent.html":{}}}],["components.constants",{"_index":338,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["components.module.ts",{"_index":1936,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/checkbox/checkbox.component.ts",{"_index":495,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"coverage.html":{}}}],["components/checkbox/checkbox.component.ts:144",{"_index":540,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:160",{"_index":533,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:174",{"_index":542,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:179",{"_index":556,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:191",{"_index":537,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:51",{"_index":564,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:54",{"_index":530,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:60",{"_index":531,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:61",{"_index":532,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:63",{"_index":565,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:64",{"_index":561,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:65",{"_index":563,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:66",{"_index":569,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:70",{"_index":573,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:71",{"_index":559,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:72",{"_index":526,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:75",{"_index":572,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:79",{"_index":571,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:80",{"_index":570,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:82",{"_index":558,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:83",{"_index":546,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:86",{"_index":549,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:94",{"_index":551,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:99",{"_index":541,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/date",{"_index":1119,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/error/error.component.ts",{"_index":792,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"coverage.html":{}}}],["components/error/error.component.ts:27",{"_index":798,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:28",{"_index":802,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:29",{"_index":799,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:30",{"_index":801,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:31",{"_index":796,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:34",{"_index":804,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:44",{"_index":803,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:48",{"_index":805,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/input/input.component",{"_index":1523,"title":{},"body":{"interfaces/IOption.html":{}}}],["components/input/input.component.ts",{"_index":1428,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/input/input.component.ts:101",{"_index":1829,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:102",{"_index":1828,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:107",{"_index":1813,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:174",{"_index":1810,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:188",{"_index":1814,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:195",{"_index":1818,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:207",{"_index":1812,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:223",{"_index":1809,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:230",{"_index":1811,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:245",{"_index":1808,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:246",{"_index":1819,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:247",{"_index":1815,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:250",{"_index":1816,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:253",{"_index":1817,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:260",{"_index":1835,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:55",{"_index":1826,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:60",{"_index":1804,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:67",{"_index":1806,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:73",{"_index":1805,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:78",{"_index":1807,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:80",{"_index":1821,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:81",{"_index":1824,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:82",{"_index":1830,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:83",{"_index":1833,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:84",{"_index":1820,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:85",{"_index":1823,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:86",{"_index":1822,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:87",{"_index":1825,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:88",{"_index":1827,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:92",{"_index":1832,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:93",{"_index":1803,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:96",{"_index":1831,"title":{},"body":{"components/InputComponent.html":{}}}],["components/ircc",{"_index":1935,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/radio",{"_index":1656,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts",{"_index":1685,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts:100",{"_index":2109,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:104",{"_index":2108,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:109",{"_index":2107,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:142",{"_index":2106,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:159",{"_index":2104,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:173",{"_index":2110,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:178",{"_index":2113,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:54",{"_index":2125,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:55",{"_index":2118,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:56",{"_index":2116,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:57",{"_index":2123,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:59",{"_index":2103,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:63",{"_index":2119,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:64",{"_index":2117,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:66",{"_index":2120,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:70",{"_index":2102,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:73",{"_index":2124,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:77",{"_index":2121,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:78",{"_index":2122,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:79",{"_index":2115,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:82",{"_index":2111,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:85",{"_index":2112,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:89",{"_index":2105,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:96",{"_index":2114,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/textarea/textarea.component.ts",{"_index":1733,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/textarea/textarea.component.ts:124",{"_index":2155,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:137",{"_index":2154,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:141",{"_index":2152,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:159",{"_index":2153,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:160",{"_index":2160,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:161",{"_index":2157,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:164",{"_index":2158,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:167",{"_index":2159,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:54",{"_index":2166,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:56",{"_index":2149,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:61",{"_index":2151,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:62",{"_index":2150,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:63",{"_index":2148,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:65",{"_index":2163,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:66",{"_index":2165,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:67",{"_index":2164,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:68",{"_index":2161,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:69",{"_index":2162,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:70",{"_index":2167,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:73",{"_index":2147,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:75",{"_index":2170,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:78",{"_index":2169,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:79",{"_index":2168,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:81",{"_index":2156,"title":{},"body":{"components/TextareaComponent.html":{}}}],["componenttype",{"_index":1842,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["config",{"_index":35,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["config.buttontext",{"_index":2237,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["config.buttontextclosed",{"_index":2238,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["config.charlimit",{"_index":2173,"title":{},"body":{"components/TextareaComponent.html":{}}}],["config.desc",{"_index":1993,"title":{},"body":{"components/LabelComponent.html":{}}}],["config.hint",{"_index":1994,"title":{},"body":{"components/LabelComponent.html":{}}}],["config.inlinelabel",{"_index":637,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["config.label",{"_index":638,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["config.placeholder",{"_index":2126,"title":{},"body":{"components/SelectComponent.html":{}}}],["config.placeholdertext",{"_index":791,"title":{},"body":{"components/DropdownComponent.html":{}}}],["config.text",{"_index":444,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{}}}],["config.title",{"_index":2210,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["config.value",{"_index":952,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["config?.errorlov",{"_index":813,"title":{},"body":{"components/ErrorComponent.html":{}}}],["config?.label",{"_index":1790,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["config?.searchbutton?.text",{"_index":2095,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["config?.title",{"_index":159,"title":{},"body":{"components/BannerComponent.html":{}}}],["configs",{"_index":577,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["configurable",{"_index":1458,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["configuration",{"_index":1464,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["consider",{"_index":598,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["console.log('testing",{"_index":1684,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["console.log(emitvalue",{"_index":125,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["console.log(newlang.lang",{"_index":2041,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["console.log(this.config",{"_index":1067,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["const",{"_index":409,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["const.$escape",{"_index":2247,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["constructor",{"_index":279,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["constructor(platformid",{"_index":2009,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["constructor(private",{"_index":981,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["constructor(public",{"_index":1743,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["constructor(renderer",{"_index":2365,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["constructor(standalonefunctions",{"_index":525,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["constructor(translate",{"_index":280,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"components/accordionContainerComponent.html":{}}}],["constructor(translator",{"_index":2185,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["cont.value",{"_index":2145,"title":{},"body":{"components/TabsComponent.html":{}}}],["container",{"_index":1043,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container#{template",{"_index":2246,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container'},{'name",{"_index":170,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component",{"_index":1084,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["container.component.html",{"_index":1061,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.scss",{"_index":1062,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts",{"_index":1053,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:18",{"_index":2230,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:19",{"_index":2377,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:21",{"_index":2231,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container.component.ts:22",{"_index":2228,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container.component.ts:23",{"_index":2229,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:24",{"_index":2232,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:26",{"_index":2233,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:28",{"_index":2236,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:29",{"_index":2368,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:31",{"_index":2375,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:34",{"_index":2227,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container.component.ts:38",{"_index":2234,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container.component.ts:40",{"_index":2366,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:44",{"_index":2367,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:56",{"_index":2235,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container/resizable",{"_index":2315,"title":{},"body":{"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["container?.classlist.add('active",{"_index":1047,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["containerelement",{"_index":410,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["containerheight",{"_index":135,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["content",{"_index":118,"title":{},"body":{"components/BannerComponent.html":{},"components/ComponentPreviewComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["controls",{"_index":1476,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["controlvalueaccessor",{"_index":496,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["copy",{"_index":1099,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["copystyle",{"_index":683,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["copytext",{"_index":684,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["core",{"_index":1327,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["correct",{"_index":1278,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["cours",{"_index":1643,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":2279,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":298,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["createlinks",{"_index":270,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["createoverflows",{"_index":271,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["critical",{"_index":95,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cta",{"_index":122,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["cta.text",{"_index":161,"title":{},"body":{"components/BannerComponent.html":{}}}],["ctas",{"_index":140,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["ctatype",{"_index":101,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["currcharcount",{"_index":1752,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["current",{"_index":928,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["currentcharacterstatusaria",{"_index":1742,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["currentlang",{"_index":2181,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["currently",{"_index":919,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["currentyear",{"_index":1198,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["cursor",{"_index":713,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/resizableContainerComponent.html":{}}}],["custom",{"_index":67,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["customerrortext",{"_index":592,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["customicon",{"_index":1680,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["d'information",{"_index":1506,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":194,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["date().getfullyear",{"_index":1199,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_day_control_id_extension",{"_index":1155,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_labels_en",{"_index":1161,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_labels_en[0",{"_index":1266,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_en[1",{"_index":1268,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_en[2",{"_index":1270,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_fr",{"_index":1165,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_labels_fr[0",{"_index":1274,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_fr[1",{"_index":1275,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_fr[2",{"_index":1276,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_month_control_id_extension",{"_index":1157,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_months_en",{"_index":1130,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_months_fr",{"_index":1142,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_day_en",{"_index":1175,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_day_fr",{"_index":1177,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_month_en",{"_index":1173,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_month_fr",{"_index":1174,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_year_en",{"_index":1169,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_year_fr",{"_index":1171,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_unkown_en",{"_index":1179,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_unkown_fr",{"_index":1181,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_year_control_id_extension",{"_index":1159,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datepickercomponent",{"_index":193,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["datepickerstate",{"_index":1305,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["datepickertouchedorinvalid",{"_index":1304,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["day",{"_index":1162,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["day.tostring",{"_index":1285,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["days",{"_index":1190,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dayselect",{"_index":1196,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dayunknown",{"_index":1183,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dd",{"_index":1176,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["december",{"_index":1141,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":1900,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["declare",{"_index":1445,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["decoration",{"_index":2220,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["decorators",{"_index":314,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/resizableContainerComponent.html":{}}}],["default",{"_index":42,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["delete",{"_index":391,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["demo",{"_index":1839,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo'},{'name",{"_index":223,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["demo.component.html",{"_index":1841,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.scss",{"_index":1840,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts",{"_index":1838,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["demo.component.ts:15",{"_index":1853,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts:25",{"_index":1844,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts:27",{"_index":1849,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts:32",{"_index":1843,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts:36",{"_index":1845,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo/interactive",{"_index":1837,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["demo_component.accordion_closed",{"_index":1848,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo_component.accordion_open",{"_index":1847,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["dependencies",{"_index":1892,"title":{"dependencies.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":593,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["description",{"_index":1328,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/RadioInputComponent.html":{},"components/SpinnerComponent.html":{}}}],["descriptions",{"_index":1449,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["desired",{"_index":1446,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["detect",{"_index":1477,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["detects",{"_index":1478,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["determines",{"_index":748,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["device",{"_index":2244,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["device.in",{"_index":2249,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["differ",{"_index":1547,"title":{},"body":{"interfaces/IOption.html":{}}}],["different",{"_index":602,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["differs",{"_index":1548,"title":{},"body":{"interfaces/IOption.html":{}}}],["direction",{"_index":2398,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["directive",{"_index":165,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["directives",{"_index":252,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["disable",{"_index":1484,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["disabled",{"_index":448,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["disableerror",{"_index":1193,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["disablefocus",{"_index":584,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["dismissible",{"_index":121,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["display",{"_index":690,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["displayoverflow",{"_index":262,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["div",{"_index":1418,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["divider",{"_index":1870,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["divref",{"_index":263,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["docheck",{"_index":1520,"title":{},"body":{"interfaces/IOption.html":{}}}],["document",{"_index":2389,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["document.getelementbyid('hidden",{"_index":1044,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["document.getelementbyid(id",{"_index":1035,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["document.getelementbyid(this.config?.id",{"_index":127,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["document.getelementbyid(this.config?.selected",{"_index":1726,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["document.getelementbyid(this.textid)?.offsetheight",{"_index":136,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["document.getelementsbyclassname('hidden",{"_index":1046,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["document.queryselector('.page",{"_index":1729,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["document.queryselector(`#${this.config?.id",{"_index":138,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["document:keydown.arrowdown",{"_index":827,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.arrowdown(event",{"_index":838,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.arrowup",{"_index":828,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.arrowup(event",{"_index":841,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.enter",{"_index":829,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.enter(event",{"_index":843,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["documentation",{"_index":2280,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1526,"title":{},"body":{"interfaces/IOption.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["domchangedirective",{"_index":1927,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["don't",{"_index":1436,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["dot",{"_index":1379,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["down",{"_index":1852,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["down.component",{"_index":1920,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["down.component.html",{"_index":719,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["down.component.ts",{"_index":716,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"coverage.html":{}}}],["down.component.ts:22",{"_index":729,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:26",{"_index":731,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:27",{"_index":734,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:28",{"_index":732,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:29",{"_index":733,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:30",{"_index":730,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:31",{"_index":727,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:33",{"_index":763,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:34",{"_index":762,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:36",{"_index":761,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:43",{"_index":738,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:66",{"_index":740,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:84",{"_index":744,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:95",{"_index":735,"title":{},"body":{"components/DropdownComponent.html":{}}}],["draglistener",{"_index":2358,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["drop",{"_index":718,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["dropdown",{"_index":717,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["dropdown'},{'name",{"_index":197,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["dropdown/drop",{"_index":1919,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["dropdowncomponent",{"_index":196,"title":{"components/DropdownComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDropdownConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["dropdownconfigs",{"_index":1192,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dropdowns",{"_index":1215,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["ds",{"_index":1057,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["dsfullsizes",{"_index":1350,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/SpinnerComponent.html":{}}}],["dsorientations",{"_index":1705,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["dssizes",{"_index":336,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["dssizes.large",{"_index":529,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["du",{"_index":975,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["décembre",{"_index":1154,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":741,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["e.tostring",{"_index":778,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["e?.relatedtarget",{"_index":785,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["each",{"_index":1263,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["eindicatorstatus",{"_index":1404,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["el",{"_index":137,"title":{},"body":{"components/BannerComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el.style.display",{"_index":143,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["el?.focus",{"_index":1038,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el?.scrollintoview",{"_index":1036,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el?.setattribute('tabindex",{"_index":1037,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el_id",{"_index":848,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["element",{"_index":164,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["element.id",{"_index":1114,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["element.value",{"_index":1606,"title":{},"body":{"interfaces/IOption.html":{}}}],["elementref",{"_index":317,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/resizableContainerComponent.html":{}}}],["elipsis",{"_index":423,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["ellipsis",{"_index":332,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["emitevent",{"_index":1342,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["emits",{"_index":896,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["emitvalue",{"_index":57,"title":{},"body":{"components/BannerComponent.html":{}}}],["empty",{"_index":760,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["emptyresults",{"_index":1546,"title":{},"body":{"interfaces/IOption.html":{}}}],["en",{"_index":633,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["en.svg",{"_index":1000,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":914,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/accordionContainerComponent.html":{}}}],["english",{"_index":2036,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["english_banner_url",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":889,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["enter",{"_index":1041,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["enum",{"_index":92,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["enumerations",{"_index":2334,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["erreur",{"_index":1501,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/LabelComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":535,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":199,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["error.component.html",{"_index":793,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["error/error.component",{"_index":1736,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/TextareaComponent.html":{}}}],["error_text_stub_en",{"_index":578,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_text_stub_fr",{"_index":579,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["erroraria",{"_index":505,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["errorcomponent",{"_index":198,"title":{"components/ErrorComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["erroricon",{"_index":1735,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["errorids",{"_index":506,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["errorlov",{"_index":795,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["errormessages",{"_index":594,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["errors",{"_index":1335,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["errorstubtext",{"_index":507,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["etc",{"_index":1450,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["event",{"_index":294,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"components/LanguageSwitchComponent.html":{},"components/SelectComponent.html":{},"components/resizableContainerComponent.html":{}}}],["event.key",{"_index":1025,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["event.keycode",{"_index":1592,"title":{},"body":{"interfaces/IOption.html":{}}}],["event.lang",{"_index":2205,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["event.movementy",{"_index":2393,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["event.preventdefault",{"_index":879,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["event.stoppropagation",{"_index":1553,"title":{},"body":{"interfaces/IOption.html":{}}}],["event.target",{"_index":1563,"title":{},"body":{"interfaces/IOption.html":{}}}],["eventemitter",{"_index":50,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/SearchInputComponent.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["eventhandler",{"_index":28,"title":{},"body":{"components/BannerComponent.html":{}}}],["eventhandler(emitvalue",{"_index":52,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["everywhere",{"_index":588,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["exceeds",{"_index":1410,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["expand",{"_index":1066,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["export",{"_index":91,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["exports",{"_index":1901,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["extra",{"_index":2251,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["f05a",{"_index":1798,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["fa",{"_index":70,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["fa_keywords",{"_index":1366,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"components/InfoTextSmallComponent.html":{}}}],["fall",{"_index":890,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["false",{"_index":320,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["family",{"_index":2222,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["feature",{"_index":935,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["feb",{"_index":1290,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["february",{"_index":1132,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1254,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["fields",{"_index":1315,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["filteredoptions.slice(0",{"_index":1582,"title":{},"body":{"interfaces/IOption.html":{}}}],["filterlist(filtervalue",{"_index":1579,"title":{},"body":{"interfaces/IOption.html":{}}}],["filtervalue.length",{"_index":1580,"title":{},"body":{"interfaces/IOption.html":{}}}],["flex",{"_index":695,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["flip",{"_index":1876,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["flipoverflow",{"_index":272,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["flipoverflow(buttonid",{"_index":301,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["flyout",{"_index":203,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["flyout'},{'name",{"_index":201,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["flyout.component.html",{"_index":815,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["flyout/flyout.component",{"_index":765,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["flyoutcomponent",{"_index":200,"title":{"components/FlyoutComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["flyoutconfig",{"_index":720,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["flyoutoptioncomponent",{"_index":202,"title":{"components/FlyoutOptionComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["fn",{"_index":547,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focus",{"_index":781,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["focusevent",{"_index":743,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["focusinput",{"_index":1801,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focusinput(focusvalue",{"_index":1488,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focusstate",{"_index":1466,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focusvalue",{"_index":1490,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["font",{"_index":2213,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["fontawesome",{"_index":806,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["footer",{"_index":955,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":206,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["footer.component.html",{"_index":956,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.module.ts",{"_index":1950,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/footer.component",{"_index":1952,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["footer/footer/footer.component.ts",{"_index":954,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/footer/footer.component.ts:18",{"_index":960,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:20",{"_index":964,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:21",{"_index":963,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:22",{"_index":959,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:26",{"_index":961,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:33",{"_index":962,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/header/header.component.ts",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/header/header.component.ts:25",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:27",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:28",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:29",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:30",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:34",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:41",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/hidden",{"_index":1014,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["footer/ircc",{"_index":1949,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/language",{"_index":1996,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footercomponent",{"_index":205,"title":{"components/FooterComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["foreach((option",{"_index":888,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["form",{"_index":1451,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":508,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{}}}],["formgroup",{"_index":524,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["formgroupempty",{"_index":509,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["formsmodule",{"_index":1940,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["formvalue",{"_index":1665,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["forwardref",{"_index":501,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["foundclickable",{"_index":880,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["fr",{"_index":980,"title":{},"body":{"components/FooterComponent.html":{},"components/LanguageSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["fr.svg",{"_index":1002,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["français",{"_index":2033,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["french_banner_url",{"_index":1001,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":745,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"components/resizableContainerComponent.html":{}}}],["future",{"_index":933,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["février",{"_index":1144,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":1887,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["general",{"_index":1186,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["generates",{"_index":1326,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["generic",{"_index":94,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["get(this.config.id",{"_index":1245,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getariaerrortext",{"_index":516,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["getariaoverride(haserror",{"_index":1317,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getchildoverflow",{"_index":273,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["getdisabled",{"_index":2066,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["getdisabled(index",{"_index":1674,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["geterroraria",{"_index":1336,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["geterrorstate",{"_index":517,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["getgeterrorstate",{"_index":1834,"title":{},"body":{"components/InputComponent.html":{}}}],["getheight",{"_index":2254,"title":{},"body":{"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["getheight(height",{"_index":1116,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["getlabelcore",{"_index":1330,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getmaxheight",{"_index":274,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["getnumdaysinmonth(month",{"_index":1286,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getopen",{"_index":1063,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["getselected",{"_index":1088,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["getselectedtab",{"_index":2255,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["getselectedtab(selected",{"_index":1113,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["gouvernement",{"_index":976,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_alt_text_en",{"_index":977,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_alt_text_fr",{"_index":979,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_aria_label_english",{"_index":969,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_aria_label_french",{"_index":973,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_footer",{"_index":965,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["govcanadaalt",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{}}}],["govcanadalink",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{}}}],["government",{"_index":971,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["green",{"_index":1393,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["grey",{"_index":1391,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["grid",{"_index":1883,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["grip",{"_index":2373,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["group",{"_index":1452,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["h2",{"_index":2212,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["handlekeydown",{"_index":1019,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["handlekeydown(event",{"_index":1552,"title":{},"body":{"interfaces/IOption.html":{}}}],["handlekeydown(key",{"_index":1028,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["handleresize",{"_index":2007,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["handleresize(e",{"_index":2022,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["haserror",{"_index":1316,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["hasn't",{"_index":893,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["header",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":208,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["header.component.html",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1951,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["header_img_link_en",{"_index":1003,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_img_link_fr",{"_index":1005,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_link_alt_fr",{"_index":1009,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_link_atl_en",{"_index":1007,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headercomponent",{"_index":207,"title":{"components/HeaderComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["heading",{"_index":948,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["height",{"_index":363,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ComponentPreviewComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["help_icon_alt_en",{"_index":1502,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["help_icon_alt_fr",{"_index":1504,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["helptext",{"_index":591,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["here",{"_index":1241,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["hidden",{"_index":210,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["hiddennavcomponent",{"_index":209,"title":{"components/HiddenNavComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["hide",{"_index":1872,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["hidedropdown",{"_index":1542,"title":{},"body":{"interfaces/IOption.html":{}}}],["hideshow",{"_index":1491,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["highlightindex",{"_index":820,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["highlightindex(el_id",{"_index":846,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hint",{"_index":1122,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["hints",{"_index":1448,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["hinttext",{"_index":1535,"title":{},"body":{"interfaces/IOption.html":{}}}],["horizontal",{"_index":1628,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["host",{"_index":689,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["hostlistener",{"_index":334,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IOption.html":{},"interfaces/ISkipLinkConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["hostlistener('click",{"_index":1560,"title":{},"body":{"interfaces/IOption.html":{}}}],["hostlistener('document:click",{"_index":1569,"title":{},"body":{"interfaces/IOption.html":{}}}],["hostlistener('document:keydown.arrowdown",{"_index":851,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hostlistener('document:keydown.arrowup",{"_index":853,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hostlistener('document:keydown.enter",{"_index":855,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hostlistener('keydown",{"_index":1029,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["hostlistener('window:keydown.escape",{"_index":1551,"title":{},"body":{"interfaces/IOption.html":{}}}],["hostlistener('window:resize",{"_index":315,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["hostlisteners",{"_index":277,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["href",{"_index":291,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"miscellaneous/enumerations.html":{}}}],["html",{"_index":163,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["htmlelement",{"_index":786,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["htmlinputelement",{"_index":1562,"title":{},"body":{"interfaces/IOption.html":{}}}],["https://www.canada.ca/en.html",{"_index":1004,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["https://www.canada.ca/etc/designs/canada/wet",{"_index":966,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["https://www.canada.ca/fr.html",{"_index":1006,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["i.active",{"_index":790,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["iaccordioncontainerconfig",{"_index":1049,"title":{"interfaces/IAccordionContainerConfig.html":{}},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["ibannerconfig",{"_index":47,"title":{"interfaces/IBannerConfig.html":{}},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{}}}],["ibreadcrumbconfig",{"_index":289,"title":{"interfaces/IBreadcrumbConfig.html":{}},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"coverage.html":{}}}],["ibuttonconfig",{"_index":89,"title":{"interfaces/IButtonConfig.html":{}},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["icheckboxcomponentconfig",{"_index":527,"title":{"interfaces/ICheckBoxComponentConfig.html":{}},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"coverage.html":{}}}],["icodeviewerconfig",{"_index":1078,"title":{"interfaces/ICodeViewerConfig.html":{}},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["icon",{"_index":68,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["icon'},{'name",{"_index":214,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["icon.component.html",{"_index":1367,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["icon/icon.component",{"_index":1918,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["iconbutton",{"_index":1495,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["iconbuttoncategories",{"_index":1351,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["iconbuttoncategories.custom",{"_index":1360,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["iconbuttoncategories.primary",{"_index":1356,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["iconbuttonclick",{"_index":1514,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["iconbuttoncomponent",{"_index":212,"title":{"components/IconButtonComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["iconclass",{"_index":1499,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["iconclickevent",{"_index":648,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["iconcomponent",{"_index":213,"title":{"components/IconComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["iconconfig",{"_index":24,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/InteractiveDemoComponent.html":{}}}],["iconconfigs",{"_index":1359,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["icondirection",{"_index":449,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"components/accordionContainerComponent.html":{}}}],["icons",{"_index":1358,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["iconspan",{"_index":1369,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["ictaconfig",{"_index":105,"title":{"interfaces/ICTAConfig.html":{}},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{}}}],["id",{"_index":36,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["idatepickerconfig",{"_index":1118,"title":{"interfaces/IDatePickerConfig.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["idatepickerdropdownconfigs",{"_index":1187,"title":{"interfaces/IDatePickerDropDownConfigs.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["idatepickererrormessages",{"_index":1126,"title":{"interfaces/IDatePickerErrorMessages.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["idatepickerunknowndatetoggleconfig",{"_index":1127,"title":{"interfaces/IDatePickerUnknownDateToggleConfig.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["ideally",{"_index":1525,"title":{},"body":{"interfaces/IOption.html":{}}}],["identifier",{"_index":2281,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":1455,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["identifying",{"_index":587,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["idropdownconfig",{"_index":728,"title":{"interfaces/IDropdownConfig.html":{}},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"coverage.html":{}}}],["ids",{"_index":1214,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["ierrorcomponentconfig",{"_index":797,"title":{"interfaces/IErrorComponentConfig.html":{}},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"coverage.html":{}}}],["ierroriconconfig",{"_index":800,"title":{"interfaces/IErrorIconConfig.html":{}},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ierrorids",{"_index":560,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ierrorpairs",{"_index":575,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["if(!target?.id.includes(this.config.id",{"_index":787,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["if((this.config.type",{"_index":950,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["if(e",{"_index":777,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["if(el_id",{"_index":907,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(option.id",{"_index":909,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(option.selected",{"_index":922,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.config.flyout",{"_index":772,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["if(this.config.options",{"_index":929,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.config.type",{"_index":868,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["if(this.disabled",{"_index":873,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.id",{"_index":869,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["if(this.options",{"_index":870,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.selection",{"_index":874,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.type",{"_index":877,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["iflyoutconfig",{"_index":757,"title":{"interfaces/IFlyoutConfig.html":{}},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"coverage.html":{}}}],["iflyoutoptionconfig",{"_index":833,"title":{"interfaces/IFlyoutOptionConfig.html":{}},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"coverage.html":{}}}],["iflyoutoptiontype",{"_index":947,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["iflyoutselecttypes",{"_index":866,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"miscellaneous/enumerations.html":{}}}],["ihiddennavconfig",{"_index":1023,"title":{"interfaces/IHiddenNavConfig.html":{}},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["iiconbuttoncomponentconfig",{"_index":64,"title":{"interfaces/IIconButtonComponentConfig.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["iiconbuttoniconconfig",{"_index":85,"title":{"interfaces/IIconButtonIconConfig.html":{}},"body":{"components/BannerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"coverage.html":{}}}],["iiconconfig",{"_index":1364,"title":{"interfaces/IIconConfig.html":{}},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"components/InfoTextSmallComponent.html":{},"coverage.html":{}}}],["iindicatorconfig",{"_index":1374,"title":{"interfaces/IIndicatorConfig.html":{}},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"coverage.html":{}}}],["iinputcomponentconfig",{"_index":1427,"title":{"interfaces/IInputComponentConfig.html":{}},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"coverage.html":{}}}],["ilabelconfig",{"_index":566,"title":{"interfaces/ILabelConfig.html":{}},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ilabeliconconfig",{"_index":580,"title":{"interfaces/ILabelIconConfig.html":{}},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ilinkcomponentconfig",{"_index":327,"title":{"interfaces/ILinkComponentConfig.html":{}},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"coverage.html":{}}}],["ilinkconfig",{"_index":111,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["imageurl",{"_index":958,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["import",{"_index":81,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["important",{"_index":2221,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["imports",{"_index":1910,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["include",{"_index":1437,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["inconnu",{"_index":1182,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":918,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["indicator",{"_index":1399,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{}}}],["indicator'},{'name",{"_index":216,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["indicator.component",{"_index":1922,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["indicator.component.html",{"_index":1400,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":1614,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicator.component.ts:30",{"_index":2046,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:36",{"_index":2047,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:38",{"_index":2051,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:42",{"_index":2052,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:47",{"_index":2045,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:51",{"_index":2048,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:63",{"_index":2050,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:67",{"_index":2049,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator/indicator.component",{"_index":1925,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["indicator/progress",{"_index":1613,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicatorcomponent",{"_index":215,"title":{"components/IndicatorComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["indicatorpalette",{"_index":1387,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatorpurpose",{"_index":1383,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatorpurpose.status",{"_index":1402,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["indicatorstatus",{"_index":1384,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatortreatment",{"_index":1380,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatortreatment.weak",{"_index":1401,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["indicatortype",{"_index":1378,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["individual",{"_index":1202,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["information",{"_index":1385,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/IndicatorComponent.html":{},"components/LabelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["infotextsmallcomponent",{"_index":217,"title":{"components/InfoTextSmallComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["initial",{"_index":807,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["initialize",{"_index":1475,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["inject",{"_index":2030,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["inject(platform_id",{"_index":2038,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["injectable",{"_index":1969,"title":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{},"coverage.html":{}}}],["injectables",{"_index":1970,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{},"index.html":{}}}],["inline",{"_index":694,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["inlinelabel",{"_index":585,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["inlinelabelbold",{"_index":586,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["input'},{'name",{"_index":220,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["input.component",{"_index":1938,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["input.component.html",{"_index":1434,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{}}}],["input.component.ts",{"_index":1658,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:103",{"_index":2075,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:137",{"_index":2074,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:153",{"_index":2071,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:167",{"_index":2076,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:172",{"_index":2079,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:186",{"_index":2072,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:20",{"_index":2092,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:21",{"_index":2093,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:23",{"_index":2091,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:26",{"_index":2094,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:60",{"_index":2084,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:61",{"_index":2089,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:62",{"_index":2081,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:63",{"_index":2083,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:65",{"_index":2068,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:69",{"_index":2070,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:70",{"_index":2069,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:72",{"_index":2085,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:76",{"_index":2082,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:77",{"_index":2067,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:80",{"_index":2088,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:84",{"_index":2086,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:85",{"_index":2087,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:86",{"_index":2080,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:89",{"_index":2077,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:92",{"_index":2078,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:96",{"_index":2073,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input/input.component",{"_index":1937,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["input/radio",{"_index":1657,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["input/search",{"_index":1678,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["inputcomponent",{"_index":219,"title":{"components/InputComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":33,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IInputComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["inputtypes",{"_index":1432,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inputtypes.password",{"_index":1465,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["inputtypes.text",{"_index":1469,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["inputvalue",{"_index":1541,"title":{},"body":{"interfaces/IOption.html":{}}}],["instead",{"_index":1443,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["interacted",{"_index":754,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["interactive",{"_index":222,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["interactivedemocomponent",{"_index":221,"title":{"components/InteractiveDemoComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["interactivedemocomponentacccordion",{"_index":1846,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["interface",{"_index":104,"title":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"interfaces/slugTitleURLConfig.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["interfaces",{"_index":1050,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"index.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["invalid",{"_index":539,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["ioption",{"_index":1518,"title":{"interfaces/IOption.html":{}},"body":{"interfaces/IOption.html":{},"coverage.html":{}}}],["iprogressindicatorconfig",{"_index":1611,"title":{"interfaces/IProgressIndicatorConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{}}}],["iprogresstagsconfig",{"_index":1618,"title":{"interfaces/IProgressTagsConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{}}}],["iradioinputcomponentconfig",{"_index":1655,"title":{"interfaces/IRadioInputComponentConfig.html":{}},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["iradioinputoption",{"_index":1660,"title":{"interfaces/IRadioInputOption.html":{}},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["ircc",{"_index":16,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["irccdsangularbannermodule",{"_index":1890,"title":{"modules/IrccDsAngularBannerModule.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularcomponentssharedmodule",{"_index":1904,"title":{"modules/IrccDsAngularComponentsSharedModule.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularformcomponents",{"_index":1944,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["irccdsangularformcomponentsmodule",{"_index":1931,"title":{"modules/IrccDsAngularFormComponentsModule.html":{}},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularheaderfootermodule",{"_index":1945,"title":{"modules/IrccDsAngularHeaderFooterModule.html":{}},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularlegacyoldmodule",{"_index":1957,"title":{"modules/IrccDsAngularLegacyOldModule.html":{}},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsheaderfootercomponents",{"_index":1956,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["irccdslegacyoldcomponents",{"_index":1968,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["irccdssharedcomponents",{"_index":1930,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ischildoverflow",{"_index":264,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["iscomponentclicked",{"_index":1544,"title":{},"body":{"interfaces/IOption.html":{}}}],["isdisabled",{"_index":510,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["isdragging",{"_index":2359,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["isearchinputbuttonconfig",{"_index":1676,"title":{"interfaces/ISearchInputButtonConfig.html":{}},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["isearchinputconfig",{"_index":1679,"title":{"interfaces/ISearchInputConfig.html":{}},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["iselectconfig",{"_index":1128,"title":{"interfaces/ISelectConfig.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["iselectoptionsconfig",{"_index":1686,"title":{"interfaces/ISelectOptionsConfig.html":{}},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["isfocusinsidecomponent",{"_index":1543,"title":{},"body":{"interfaces/IOption.html":{}}}],["iskiplinkconfig",{"_index":1033,"title":{"interfaces/ISkipLinkConfig.html":{}},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["isleapyear(year",{"_index":1302,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["ismobile",{"_index":2006,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["ispinnerconfig",{"_index":1703,"title":{"interfaces/ISpinnerConfig.html":{}},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["isplatformbrowser",{"_index":2029,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["isselected",{"_index":826,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["istepconfig",{"_index":1617,"title":{"interfaces/IStepConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{}}}],["it's",{"_index":775,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["itabconfig",{"_index":1082,"title":{"interfaces/ITabConfig.html":{}},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["itabnavconfig",{"_index":1083,"title":{"interfaces/ITabNavConfig.html":{}},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["item",{"_index":643,"title":{},"body":{"components/ChipItemComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["item'},{'name",{"_index":185,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["item.arialabel",{"_index":152,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["item.btnconfig",{"_index":153,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["item.btnconfig.arialabel",{"_index":154,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["item.component",{"_index":1529,"title":{},"body":{"interfaces/IOption.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["item.component.html",{"_index":644,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts",{"_index":642,"title":{},"body":{"components/ChipItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:13",{"_index":652,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts:17",{"_index":651,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts:8",{"_index":650,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts:9",{"_index":649,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.key",{"_index":1575,"title":{},"body":{"interfaces/IOption.html":{}}}],["item/chip",{"_index":641,"title":{},"body":{"components/ChipItemComponent.html":{},"interfaces/IOption.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{}}}],["items",{"_index":698,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["itextareacomponentconfig",{"_index":1732,"title":{"interfaces/ITextareaComponentConfig.html":{}},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["january",{"_index":1131,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["janvier",{"_index":1143,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["jds",{"_index":706,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["jj",{"_index":1178,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["jour",{"_index":1166,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["juillet",{"_index":1149,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["juin",{"_index":1148,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["july",{"_index":1136,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["june",{"_index":1135,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":700,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["key",{"_index":347,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{}}}],["keyboardevent",{"_index":839,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{}}}],["keydown",{"_index":1022,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["keydown(key",{"_index":1026,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["keyof",{"_index":106,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["keys",{"_index":1370,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["keyvaluediffer",{"_index":1522,"title":{},"body":{"interfaces/IOption.html":{}}}],["keyvaluediffers",{"_index":1521,"title":{},"body":{"interfaces/IOption.html":{}}}],["know",{"_index":898,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{}}}],["label",{"_index":536,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{}}}],["label'},{'name",{"_index":225,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["label.component.html",{"_index":1507,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["label/label.component",{"_index":1921,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["labelbutton",{"_index":1509,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["labelbuttonclickobs",{"_index":1973,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["labelbuttonclicksubj",{"_index":1974,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["labelbuttonservice",{"_index":1497,"title":{"injectables/LabelButtonService.html":{}},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"coverage.html":{}}}],["labelcomponent",{"_index":224,"title":{"components/LabelComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["labelconfig",{"_index":511,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["labelcore",{"_index":1331,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["labeliconconfig",{"_index":595,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["labelicontext",{"_index":1508,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["labels",{"_index":1262,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["lang",{"_index":557,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["langauge",{"_index":1255,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["langchangeevent",{"_index":2197,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["langtoggle",{"_index":2011,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["language",{"_index":227,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["language_switch_text_english",{"_index":2032,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language_switch_text_english_mobile",{"_index":2034,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language_switch_text_french",{"_index":2035,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language_switch_text_french_mobile",{"_index":2037,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["languageclickobs",{"_index":1998,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["languageclicksub",{"_index":1999,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["languageswitchbuttonservice",{"_index":1995,"title":{"injectables/LanguageSwitchButtonService.html":{}},"body":{"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["languageswitchcomponent",{"_index":226,"title":{"components/LanguageSwitchComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["languagetoggleclick",{"_index":2000,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["large",{"_index":99,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lato",{"_index":2223,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["layer",{"_index":351,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["layout",{"_index":2242,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["lead",{"_index":357,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["leap",{"_index":1300,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["left",{"_index":474,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["legacy",{"_index":1962,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":162,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["less",{"_index":1701,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["lets",{"_index":897,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["letter",{"_index":2224,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["lib",{"_index":18,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["lib/src/lib/banner",{"_index":10,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"modules/IrccDsAngularBannerModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/form",{"_index":494,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/header",{"_index":953,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/legacy",{"_index":639,"title":{},"body":{"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"interfaces/IOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts",{"_index":256,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:122",{"_index":297,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:143",{"_index":305,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:156",{"_index":300,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:177",{"_index":296,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:185",{"_index":302,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:190",{"_index":304,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:40",{"_index":292,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:45",{"_index":316,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:46",{"_index":333,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:55",{"_index":329,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:56",{"_index":328,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:57",{"_index":322,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:58",{"_index":326,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:60",{"_index":324,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:62",{"_index":321,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:63",{"_index":288,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:71",{"_index":312,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:80",{"_index":307,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:88",{"_index":310,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/link/link.component.ts",{"_index":439,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{},"interfaces/ILinkComponentConfig.html":{},"coverage.html":{}}}],["lib/src/lib/shared/breadcrumb/link/link.component.ts:16",{"_index":442,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/link/link.component.ts:19",{"_index":441,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts",{"_index":445,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/button/button.component.ts:47",{"_index":455,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:50",{"_index":459,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:51",{"_index":453,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:52",{"_index":460,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:53",{"_index":454,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:54",{"_index":452,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:55",{"_index":456,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:56",{"_index":457,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:57",{"_index":458,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:58",{"_index":461,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:60",{"_index":462,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:62",{"_index":465,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:81",{"_index":464,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/dropdown/drop",{"_index":715,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"coverage.html":{}}}],["lib/src/lib/shared/flyout",{"_index":940,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts",{"_index":814,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:111",{"_index":845,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:118",{"_index":857,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:22",{"_index":861,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:24",{"_index":830,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:27",{"_index":832,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:28",{"_index":834,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:29",{"_index":831,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:30",{"_index":835,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:31",{"_index":836,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:34",{"_index":837,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:36",{"_index":862,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:37",{"_index":858,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:39",{"_index":849,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:49",{"_index":840,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:64",{"_index":842,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:84",{"_index":844,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:91",{"_index":847,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/icon",{"_index":1348,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts",{"_index":1365,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"coverage.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:20",{"_index":1778,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:21",{"_index":1775,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:22",{"_index":1774,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:23",{"_index":1776,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:25",{"_index":1777,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts",{"_index":1375,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:103",{"_index":1781,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:110",{"_index":1780,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:66",{"_index":1779,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:71",{"_index":1788,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:72",{"_index":1787,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:73",{"_index":1789,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:74",{"_index":1786,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:76",{"_index":1785,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:81",{"_index":1783,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:85",{"_index":1784,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:92",{"_index":1782,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/ircc",{"_index":1914,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/label/label",{"_index":1971,"title":{},"body":{"injectables/LabelButtonService.html":{},"coverage.html":{}}}],["lib/src/lib/shared/label/label.component.ts",{"_index":1494,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/label/label.component.ts:38",{"_index":1987,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:42",{"_index":1986,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:46",{"_index":1992,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:50",{"_index":1989,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:57",{"_index":1991,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:71",{"_index":1988,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:75",{"_index":1990,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/progress",{"_index":1612,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts",{"_index":1704,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:29",{"_index":2138,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:31",{"_index":2128,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:34",{"_index":2129,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:35",{"_index":2133,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:36",{"_index":2132,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:37",{"_index":2131,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:38",{"_index":2130,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:39",{"_index":2127,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:43",{"_index":2135,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:59",{"_index":2134,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:63",{"_index":2137,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:74",{"_index":2136,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts",{"_index":1717,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{},"coverage.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:21",{"_index":2140,"title":{},"body":{"components/TabsComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:25",{"_index":2141,"title":{},"body":{"components/TabsComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:27",{"_index":2142,"title":{},"body":{"components/TabsComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:34",{"_index":2143,"title":{},"body":{"components/TabsComponent.html":{}}}],["library",{"_index":1059,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["library/.../banner.component.ts",{"_index":2335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../breadcrumb.component.ts",{"_index":2343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../button.component.ts",{"_index":2336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../date",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../flyout",{"_index":2339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../flyout.component.ts",{"_index":2340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../footer.component.ts",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../header.component.ts",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../icon",{"_index":2338,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/.../indicator.component.ts",{"_index":2341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../input.component.ts",{"_index":2342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../interactive",{"_index":2337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../ircc",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../label.component.ts",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../language",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../progress",{"_index":2344,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/.../spinner.component.ts",{"_index":2347,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/.../textarea.component.ts",{"_index":2345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../title",{"_index":2346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/component",{"_index":9,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/layout/layout",{"_index":2241,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["library/src/app/components/accordion",{"_index":1051,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{},"coverage.html":{}}}],["library/src/app/components/code",{"_index":1079,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["library/src/app/components/component",{"_index":676,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"coverage.html":{}}}],["library/src/app/components/info",{"_index":1791,"title":{},"body":{"components/InfoTextSmallComponent.html":{},"coverage.html":{}}}],["library/src/app/components/interactive",{"_index":1836,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["library/src/app/components/resizable",{"_index":2314,"title":{},"body":{"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["library/src/app/components/title",{"_index":2174,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["library/tokens/sizes",{"_index":1860,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["library/tokens/template",{"_index":2239,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["library/util/device",{"_index":2243,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["library/util/size",{"_index":1861,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["library/util/theme",{"_index":2271,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["light",{"_index":1850,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["limit",{"_index":1536,"title":{},"body":{"interfaces/IOption.html":{}}}],["line",{"_index":139,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lines",{"_index":2374,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["linevisible",{"_index":25,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["link",{"_index":102,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{}}}],["link'},{'name",{"_index":178,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["link.component.html",{"_index":440,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{},"interfaces/ILinkComponentConfig.html":{}}}],["link.href",{"_index":392,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.linkkey",{"_index":403,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.overflow",{"_index":405,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.routerlink",{"_index":393,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.text",{"_index":438,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["link.title",{"_index":1048,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["link/link.component",{"_index":339,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link[this.config.type",{"_index":402,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["linkconfig",{"_index":108,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["linkkey",{"_index":443,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{},"interfaces/ILinkComponentConfig.html":{}}}],["links",{"_index":354,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["linkslength",{"_index":430,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["linktype",{"_index":344,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"miscellaneous/enumerations.html":{}}}],["list",{"_index":656,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list'},{'name",{"_index":187,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["list.component",{"_index":1965,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{}}}],["list.component.html",{"_index":657,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts",{"_index":655,"title":{},"body":{"components/ChipListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":663,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:13",{"_index":666,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:15",{"_index":669,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:20",{"_index":667,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:8",{"_index":664,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:9",{"_index":665,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list/chip",{"_index":654,"title":{},"body":{"components/ChipListComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{}}}],["listens",{"_index":2017,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["literal",{"_index":1772,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["live",{"_index":1687,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["loading",{"_index":1707,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":1474,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["locked",{"_index":1640,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":1008,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["looks",{"_index":752,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["lov",{"_index":1280,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["mai",{"_index":1147,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":1444,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["makes",{"_index":1441,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["mandatory",{"_index":1453,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["many",{"_index":601,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["mapping",{"_index":1357,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["march",{"_index":1133,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":709,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["markastouched",{"_index":1670,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["mars",{"_index":1145,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":255,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["math.max(this.selectedindex",{"_index":892,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["max",{"_index":362,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ComponentPreviewComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{}}}],["maxheight",{"_index":266,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["maxlimit",{"_index":1754,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["maxyear",{"_index":1123,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["mid",{"_index":350,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["mime",{"_index":2330,"title":{},"body":{"dependencies.html":{}}}],["min",{"_index":704,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/resizableContainerComponent.html":{}}}],["minheight",{"_index":2363,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["minheightresizecontainer",{"_index":1096,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["minyear",{"_index":1124,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["miscellaneous",{"_index":2333,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":590,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["mixed",{"_index":583,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["mixin",{"_index":2245,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["mobile",{"_index":2020,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["module",{"_index":1889,"title":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}},"body":{}}],["modules",{"_index":1891,"title":{"modules.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{},"modules.html":{}}}],["mois",{"_index":1167,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["month",{"_index":1163,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["monthnum",{"_index":1287,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["months",{"_index":1191,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["monthselect",{"_index":1195,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["monthunknown",{"_index":1184,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["more",{"_index":1503,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"miscellaneous/variables.html":{}}}],["mostly",{"_index":1688,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["mousedown",{"_index":2387,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["mouseevent",{"_index":2391,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["mousemove",{"_index":2390,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["mouseup",{"_index":2396,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["multi",{"_index":502,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["nav",{"_index":1017,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{}}}],["nav'},{'name",{"_index":211,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["nav.component",{"_index":1955,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["nav.component.html",{"_index":1018,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["nav.component.ts",{"_index":1016,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["nav.component.ts:19",{"_index":1024,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.component.ts:23",{"_index":1031,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.component.ts:33",{"_index":1027,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.component.ts:38",{"_index":1032,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.scrollleft",{"_index":1730,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["nav/hidden",{"_index":1015,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{}}}],["navigation",{"_index":352,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["navy",{"_index":1395,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["need",{"_index":1527,"title":{},"body":{"interfaces/IOption.html":{}}}],["nested",{"_index":1689,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["neutral",{"_index":1386,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["never",{"_index":589,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["new",{"_index":124,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["ng_value_accessor",{"_index":499,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ngaftercontentinit",{"_index":2184,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["ngafterviewchecked",{"_index":29,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["ngafterviewinit",{"_index":30,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/resizableContainerComponent.html":{}}}],["ngdocheck",{"_index":1572,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["ngmodule",{"_index":1902,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["ngonchange",{"_index":1698,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["ngonchanges",{"_index":275,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/codeViewerComponent.html":{}}}],["ngonchanges(changes",{"_index":308,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/codeViewerComponent.html":{}}}],["ngoninit",{"_index":31,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["ngx",{"_index":340,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["none",{"_index":145,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["normallinks",{"_index":267,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["note",{"_index":1435,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["nothing",{"_index":899,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["notstarted",{"_index":1649,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["november",{"_index":1140,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["novembre",{"_index":1153,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["now",{"_index":112,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["null",{"_index":808,"title":{},"body":{"components/ErrorComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["number",{"_index":306,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/IStepConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["number(this.config?.charlimit",{"_index":1757,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["numdays",{"_index":1242,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["obj",{"_index":1340,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["object",{"_index":2010,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["object.keys(change",{"_index":1371,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["october",{"_index":1139,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["octobre",{"_index":1152,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["old.module.ts",{"_index":1963,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["old/autocomplete/autocomplete.component.ts",{"_index":1519,"title":{},"body":{"interfaces/IOption.html":{},"coverage.html":{}}}],["old/chips/chip",{"_index":640,"title":{},"body":{"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"coverage.html":{}}}],["old/chips/secondary",{"_index":2096,"title":{},"body":{"components/SecondaryChipsComponent.html":{},"coverage.html":{}}}],["old/ircc",{"_index":1961,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["old/search",{"_index":1677,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["onarrowdown",{"_index":821,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["onarrowdown(event",{"_index":850,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["onarrowup",{"_index":822,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["onarrowup(event",{"_index":852,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["onblur",{"_index":1697,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["onchange",{"_index":512,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["onchanges",{"_index":257,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/ProgressTagsComponent.html":{}}}],["onclicked",{"_index":1695,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["onenter",{"_index":823,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["onenter(event",{"_index":854,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["onenterkeypress",{"_index":645,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["oniconclick",{"_index":646,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["onmouseenter",{"_index":1571,"title":{},"body":{"interfaces/IOption.html":{}}}],["onresize",{"_index":276,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["onresize(event",{"_index":313,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["onsubmit",{"_index":659,"title":{},"body":{"components/ChipListComponent.html":{}}}],["ontouch",{"_index":513,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["ontouched",{"_index":1347,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["ontouchedlabel",{"_index":518,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["open",{"_index":1056,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["openaccordion",{"_index":1076,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["opens",{"_index":751,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["option",{"_index":904,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["option'},{'name",{"_index":204,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["option.active",{"_index":910,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option.clickable",{"_index":883,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option.component",{"_index":865,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["option.component.html",{"_index":942,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["option.component.ts",{"_index":941,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["option.component.ts:27",{"_index":945,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["option.component.ts:32",{"_index":943,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["option.component.ts:36",{"_index":946,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["option.selected",{"_index":926,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option.text",{"_index":2090,"title":{},"body":{"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["option.value",{"_index":916,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option/flyout",{"_index":864,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["optional",{"_index":56,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["optioncontainers",{"_index":817,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["options",{"_index":759,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["optionselected",{"_index":824,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["optionselected(i",{"_index":856,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["orange",{"_index":1389,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["orientation",{"_index":1615,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["orientations",{"_index":1627,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["originaloptions",{"_index":1540,"title":{},"body":{"interfaces/IOption.html":{}}}],["otherwise",{"_index":1301,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["out",{"_index":1897,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["output",{"_index":83,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/SearchInputComponent.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["outputs",{"_index":37,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"components/IconButtonComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/SearchInputComponent.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["overflow",{"_index":361,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["overflowlinks",{"_index":268,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["overflows",{"_index":434,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["override",{"_index":809,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["overrride",{"_index":1855,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["overview",{"_index":2348,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":424,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["package",{"_index":2318,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1421,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["page",{"_index":360,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["pages",{"_index":356,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["palette",{"_index":1376,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panel/accordion",{"_index":1052,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["param",{"_index":607,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["parent",{"_index":554,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["parentid",{"_index":568,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["pas",{"_index":1646,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":1433,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["phone",{"_index":2250,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["picker",{"_index":1188,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["picker'},{'name",{"_index":195,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["picker.component",{"_index":1942,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["picker.component.html",{"_index":1189,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["picker.component.ts",{"_index":1121,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picker/date",{"_index":1120,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["placeholder",{"_index":1429,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["placeholdertext",{"_index":726,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["plain",{"_index":467,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["platform_id",{"_index":2031,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["platformid",{"_index":2013,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["plus",{"_index":1505,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"miscellaneous/variables.html":{}}}],["pointer",{"_index":714,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["populate",{"_index":1229,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["portinputvalues",{"_index":794,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["position",{"_index":2218,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["possible",{"_index":604,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["pre",{"_index":2277,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["present",{"_index":1203,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["press",{"_index":1511,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["pressed",{"_index":1512,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["prev",{"_index":400,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["preview",{"_index":679,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview'},{'name",{"_index":192,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["preview.component.html",{"_index":682,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview.component.scss",{"_index":681,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview.component.ts",{"_index":678,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:10",{"_index":685,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview.component.ts:9",{"_index":686,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview/component",{"_index":677,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"coverage.html":{}}}],["previous",{"_index":355,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["primary",{"_index":76,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/LabelComponent.html":{},"components/ProgressTagsComponent.html":{},"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["private",{"_index":265,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["progress",{"_index":230,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["progress_indicator_step_en",{"_index":1622,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["progress_indicator_step_fr",{"_index":1624,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["progressindicatorcomponent",{"_index":229,"title":{"components/ProgressIndicatorComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["progresstagscomponent",{"_index":231,"title":{"components/ProgressTagsComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IProgressTagsConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"properties.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["provide",{"_index":498,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["providedin",{"_index":1983,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["providers",{"_index":497,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["public",{"_index":514,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["purple",{"_index":1394,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["purpose",{"_index":1377,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["push(this.config.options[i]);*/console.log('multi",{"_index":937,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["px",{"_index":364,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"components/resizableContainerComponent.html":{}}}],["querylist",{"_index":859,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["radio",{"_index":234,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["radioinputcomponent",{"_index":233,"title":{"components/RadioInputComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["radius",{"_index":1863,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["ratio",{"_index":426,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["rc.12",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":1941,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["really",{"_index":1440,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["receives",{"_index":746,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["recreate",{"_index":384,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["red",{"_index":1390,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["refer",{"_index":1454,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["refers",{"_index":1461,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["registeronchange",{"_index":519,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(fn",{"_index":545,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(onchange",{"_index":1668,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["registerontouched",{"_index":520,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(fn",{"_index":548,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(ontouched",{"_index":1669,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["regular",{"_index":2372,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["relative",{"_index":2219,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["removeallchipitems",{"_index":1596,"title":{},"body":{"interfaces/IOption.html":{}}}],["removechipitem",{"_index":660,"title":{},"body":{"components/ChipListComponent.html":{}}}],["removechipitem(chipidx",{"_index":668,"title":{},"body":{"components/ChipListComponent.html":{}}}],["removechipitem(index",{"_index":1594,"title":{},"body":{"interfaces/IOption.html":{}}}],["removed",{"_index":1471,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["removevertical",{"_index":1716,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["renderer",{"_index":284,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"components/resizableContainerComponent.html":{}}}],["renderer2",{"_index":285,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"components/resizableContainerComponent.html":{}}}],["replace",{"_index":110,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["representing",{"_index":543,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["required",{"_index":582,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["reset",{"_index":472,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["resizable",{"_index":236,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["resizablecontainercomponent",{"_index":235,"title":{"components/resizableContainerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["resizabletypes",{"_index":1737,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["resize",{"_index":2397,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resize_aria",{"_index":2371,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resize_button",{"_index":2370,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resizebar",{"_index":2360,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resizebuttonconfig",{"_index":2361,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resizecontainer",{"_index":2362,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resizes",{"_index":2019,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["rest",{"_index":1859,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["results",{"_index":254,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["retcontrol",{"_index":610,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["return",{"_index":427,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{}}}],["returnlabel",{"_index":1516,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["returnoptionstodefault",{"_index":1587,"title":{},"body":{"interfaces/IOption.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["reverse",{"_index":887,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["right",{"_index":475,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":1984,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["rotatechevron",{"_index":1692,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["rotatez(180deg",{"_index":1878,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["rounded",{"_index":119,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["routerlink",{"_index":345,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"miscellaneous/enumerations.html":{}}}],["routerlinks",{"_index":299,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["routermodule",{"_index":1916,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["row",{"_index":1886,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/resizableContainerComponent.html":{}}}],["rxjs",{"_index":1982,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["s3",{"_index":2323,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":1513,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["sass:map",{"_index":2273,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["savedselectedoptions",{"_index":1538,"title":{},"body":{"interfaces/IOption.html":{}}}],["screen",{"_index":2018,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["scrolling",{"_index":920,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["scrolltoanchor",{"_index":1020,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["scrolltoanchor(id",{"_index":1030,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["scss",{"_index":1857,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["sdk/client",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["sdk/lib",{"_index":2325,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":238,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["searchbutton",{"_index":1681,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["searchevent",{"_index":1682,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["searchinputcomponent",{"_index":237,"title":{"components/SearchInputComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["searchinputcontrol",{"_index":1683,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["secondary",{"_index":240,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IButtonConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["secondarychipscomponent",{"_index":239,"title":{"components/SecondaryChipsComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["segment",{"_index":349,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["select",{"_index":934,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["select'},{'name",{"_index":243,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["select.component.html",{"_index":1690,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["select/select.component",{"_index":1129,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"modules/IrccDsAngularFormComponentsModule.html":{}}}],["selectall",{"_index":1597,"title":{},"body":{"interfaces/IOption.html":{}}}],["selectcomponent",{"_index":242,"title":{"components/SelectComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":721,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["selectedid",{"_index":1724,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["selectedindex",{"_index":818,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selectedoption",{"_index":724,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IOption.html":{}}}],["selectedoption(e",{"_index":739,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["selectedoption.value",{"_index":1586,"title":{},"body":{"interfaces/IOption.html":{}}}],["selectedoptions",{"_index":1539,"title":{},"body":{"interfaces/IOption.html":{}}}],["selectedtab",{"_index":1092,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["selectindex(index",{"_index":1599,"title":{},"body":{"interfaces/IOption.html":{}}}],["selection",{"_index":825,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selections",{"_index":924,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["selectors",{"_index":2274,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["selectors}#{template",{"_index":2275,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["selects",{"_index":776,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selectvaluechange",{"_index":1537,"title":{},"body":{"interfaces/IOption.html":{}}}],["self",{"_index":2400,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["sense",{"_index":1442,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["sentiment",{"_index":1397,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["separatoricon",{"_index":269,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["september",{"_index":1138,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["septembre",{"_index":1151,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":1480,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["set",{"_index":65,"title":{},"body":{"components/BannerComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{}}}],["setdisabledstate",{"_index":521,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":550,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":608,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["setheight",{"_index":2364,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["setlabellanguage",{"_index":1264,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["setlang",{"_index":522,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["setlang(lang",{"_index":555,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["sets",{"_index":903,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["setselected",{"_index":2139,"title":{},"body":{"components/TabsComponent.html":{}}}],["setselected(selectedid",{"_index":1723,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["settext",{"_index":2008,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["settext(lang",{"_index":2024,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["settimeout",{"_index":373,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["settimeout(function",{"_index":129,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["setting",{"_index":925,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["settypetitle",{"_index":1653,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["setup",{"_index":932,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["setupcomponent",{"_index":1103,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["setyeardaylanguage",{"_index":1256,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["share",{"_index":1459,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["share/pipe",{"_index":2198,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["shared.module",{"_index":1906,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["shared.module.ts",{"_index":1915,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/button/button.component",{"_index":90,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["shared/constants/jl",{"_index":337,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["shared/directives/dom",{"_index":1928,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["shared/functions/stand",{"_index":342,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["shared/icon",{"_index":86,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["shared/interfaces/component",{"_index":576,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["shared/ircc",{"_index":1905,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["shared/label/label.component",{"_index":581,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["show",{"_index":1873,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["showcontent",{"_index":1091,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["shownav",{"_index":1021,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["showpassword",{"_index":1467,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["showplaceholder",{"_index":722,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["simplechanges",{"_index":309,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/codeViewerComponent.html":{}}}],["single",{"_index":867,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"miscellaneous/enumerations.html":{}}}],["size",{"_index":123,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["sizeoverride",{"_index":1662,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["sizes",{"_index":2240,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["sizes.$fixed",{"_index":1867,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["skiplinks",{"_index":1034,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["slice(0",{"_index":886,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["slug",{"_index":251,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["sluganchortype",{"_index":2201,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["sluganchortype.primary",{"_index":2191,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugify.pipe",{"_index":2199,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugifypipe",{"_index":2178,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugtitleurlconfig",{"_index":2188,"title":{"interfaces/slugTitleURLConfig.html":{}},"body":{"components/TitleSlugUrlComponent.html":{},"coverage.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugtitleurltype",{"_index":2200,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugtitleurltype.primary",{"_index":2189,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["small",{"_index":100,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["small'},{'name",{"_index":218,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["small.component.html",{"_index":1795,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["small.component.scss",{"_index":1794,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["small.component.ts",{"_index":1793,"title":{},"body":{"components/InfoTextSmallComponent.html":{},"coverage.html":{}}}],["small.component.ts:10",{"_index":1799,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["small.component.ts:13",{"_index":1797,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["small/info",{"_index":1792,"title":{},"body":{"components/InfoTextSmallComponent.html":{},"coverage.html":{}}}],["smooth",{"_index":913,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["solid",{"_index":71,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["something",{"_index":1700,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["space",{"_index":2278,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["spacing",{"_index":2225,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["spancontent",{"_index":1372,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["specifically",{"_index":1856,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["spinner",{"_index":1712,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":245,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["spinner.component.html",{"_index":1713,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["spinner/spinner.component",{"_index":1926,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["spinner_labels_en",{"_index":1706,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spinner_labels_fr",{"_index":1708,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spinnercomponent",{"_index":244,"title":{"components/SpinnerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["spinnertype",{"_index":1711,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["standalone",{"_index":282,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["standalonefunctions",{"_index":283,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["start",{"_index":1531,"title":{},"body":{"interfaces/IOption.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["started",{"_index":1641,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":538,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["statement",{"_index":1240,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["statements",{"_index":2282,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":319,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IOption.html":{},"components/resizableContainerComponent.html":{}}}],["status",{"_index":755,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["step",{"_index":1623,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["steps",{"_index":1616,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["steptext",{"_index":1632,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["storage",{"_index":2326,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":41,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["string(year",{"_index":1289,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["strong",{"_index":1381,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["style",{"_index":1868,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["styles",{"_index":675,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["styleurls",{"_index":680,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["styling",{"_index":906,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["submit",{"_index":471,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["subscribed",{"_index":1460,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["subscribing",{"_index":1457,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["success",{"_index":96,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["succès",{"_index":1710,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":1447,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["support",{"_index":2353,"title":{},"body":{"modules.html":{}}}],["surface1",{"_index":1871,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["surface2",{"_index":702,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{}}}],["svg",{"_index":2354,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1997,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["switch'},{'name",{"_index":228,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["switch.component",{"_index":1954,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["switch.component.html",{"_index":2005,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts",{"_index":2004,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["switch.component.ts:24",{"_index":2014,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:26",{"_index":2027,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:28",{"_index":2028,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:29",{"_index":2012,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:41",{"_index":2016,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:48",{"_index":2023,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:57",{"_index":2026,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:61",{"_index":2025,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch/language",{"_index":1953,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["symbol",{"_index":970,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["symbole",{"_index":974,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":1039,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["tab.id",{"_index":1111,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["tab?.getboundingclientrect().left",{"_index":1728,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["tabclick",{"_index":1630,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabclickfn",{"_index":2044,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["tabclickfn(selected",{"_index":1634,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabconfig",{"_index":1089,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/codeViewerComponent.html":{}}}],["tabindex",{"_index":450,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["table",{"_index":2317,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2316,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":2021,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["tabnavconfig",{"_index":1631,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabs",{"_index":1718,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/TabsComponent.html":{}}}],["tabs'},{'name",{"_index":247,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["tabs.component.html",{"_index":1719,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":1621,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabscomponent",{"_index":246,"title":{"components/TabsComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["tag",{"_index":425,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["tag_labels_en",{"_index":1638,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag_labels_fr",{"_index":1642,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tagconfig",{"_index":1626,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tags",{"_index":1650,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{}}}],["tags'},{'name",{"_index":232,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["tags.component",{"_index":1620,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tags.component.html",{"_index":1651,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{}}}],["tags.component.ts",{"_index":1637,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tags.component.ts:37",{"_index":2060,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:39",{"_index":2054,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:42",{"_index":2055,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:43",{"_index":2056,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:44",{"_index":2053,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:48",{"_index":2058,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:58",{"_index":2057,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:62",{"_index":2059,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags/progress",{"_index":1619,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tagtype",{"_index":1648,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["take",{"_index":113,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["takes",{"_index":902,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["tap",{"_index":1625,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":784,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IOption.html":{}}}],["target.classlist.contains('select",{"_index":1567,"title":{},"body":{"interfaces/IOption.html":{}}}],["target.classlist.contains(`selected",{"_index":1568,"title":{},"body":{"interfaces/IOption.html":{}}}],["target.type",{"_index":1564,"title":{},"body":{"interfaces/IOption.html":{}}}],["teal",{"_index":1388,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tempelement",{"_index":413,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["tempelement.offsetheight",{"_index":419,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["test_component",{"_index":1869,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["text",{"_index":75,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["text[0",{"_index":2065,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[1",{"_index":2061,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[2",{"_index":2062,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[3",{"_index":2063,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[4",{"_index":2064,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["textarea",{"_index":1739,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textarea'},{'name",{"_index":249,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["textarea.component.html",{"_index":1740,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textarea/textarea.component",{"_index":1943,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["textarea_component.maxlimit",{"_index":1756,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textarea_component.warninglimit",{"_index":1760,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textareacomponent",{"_index":248,"title":{"components/TextareaComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["textareainput.value.length",{"_index":2172,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textid",{"_index":26,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["theme",{"_index":2272,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["thin",{"_index":1353,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["this.a11ytext",{"_index":915,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.abbr",{"_index":1424,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.activiatedselect",{"_index":1694,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["this.addhover",{"_index":1566,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.altimage",{"_index":984,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.aria",{"_index":983,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["this.ariadissmissible",{"_index":157,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.arialabel",{"_index":483,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.ariatext",{"_index":1483,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.baseurl",{"_index":394,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.btnaction.emit(id",{"_index":493,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.btnevent?.emit(this.config.id",{"_index":133,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.buttontext",{"_index":1072,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.buttontextclosed",{"_index":1073,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.category",{"_index":478,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.changeref.detectchanges",{"_index":377,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.charactercountstatus",{"_index":1747,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.charactercountstatus(change[this.config.id]?.length",{"_index":1749,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.charlimit",{"_index":1744,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.charlimitstatus",{"_index":1753,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.checkduplicated(index",{"_index":1602,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.checklabellength",{"_index":1409,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.checklabelrounded",{"_index":1407,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.checknumber",{"_index":1408,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.childref",{"_index":436,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.childref.nativeelement.offsetwidth",{"_index":437,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.chipcontenttext",{"_index":673,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.chiplist?.push(this.chipcontenttext",{"_index":674,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.chiplist?.splice(chipidx",{"_index":671,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.chiplistchange.emit(this.chiplist",{"_index":672,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.clearflyoutfocus",{"_index":780,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.clearoptions",{"_index":936,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.clickevent.emit(id",{"_index":1363,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.color",{"_index":481,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config",{"_index":155,"title":{},"body":{"components/BannerComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.config.ariadissmissible",{"_index":156,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config.arialabel",{"_index":484,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.config.baseurlkey",{"_index":396,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config.buttontext",{"_index":1068,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.config.buttontextclosed",{"_index":1070,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.config.category",{"_index":479,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.config.charlimit",{"_index":1745,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config.clickable",{"_index":951,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["this.config.color",{"_index":482,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config.desc",{"_index":620,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.disabled",{"_index":486,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/RadioInputComponent.html":{}}}],["this.config.errorlov",{"_index":812,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.config.errormessages",{"_index":618,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.errormessages.general",{"_index":1228,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.errormessages?.general",{"_index":1200,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.flyout",{"_index":774,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.flyout.options.foreach(i",{"_index":789,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.formgroup",{"_index":567,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.controls[this.config.id].value",{"_index":1746,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.controls[this.config.id].value.length",{"_index":1748,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.disable",{"_index":1345,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.enable",{"_index":1346,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get",{"_index":1247,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.config.id",{"_index":611,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.config.formgroup.get(this.config.id)?.invalid",{"_index":636,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.config.formgroup.get(this.config.id)?.statuschanges.subscribe",{"_index":627,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.config.formgroup.get(this.config.id)?.touched",{"_index":635,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.day.id)?.invalid",{"_index":1311,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.day.id)?.touched",{"_index":1310,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.month.id)?.invalid",{"_index":1309,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.month.id)?.touched",{"_index":1308,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.year.id)?.invalid",{"_index":1307,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.year.id)?.touched",{"_index":1306,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.setvalue(obj",{"_index":1341,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.valuechanges.subscribe((change",{"_index":1485,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.valuechanges.subscribe(fn",{"_index":1343,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup?.invalid",{"_index":1314,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup?.touched",{"_index":1313,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.helptext",{"_index":621,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["this.config.hint",{"_index":1201,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.icon",{"_index":490,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{}}}],["this.config.icondirection",{"_index":491,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config.id",{"_index":477,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{}}}],["this.config.label",{"_index":619,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.label.length",{"_index":1417,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.config.label.trim().length",{"_index":770,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.labeliconconfig",{"_index":623,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.links",{"_index":397,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config.links.length",{"_index":398,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config.maxyear",{"_index":1209,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.minyear",{"_index":1211,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.open",{"_index":1075,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.config.openaccordion",{"_index":1095,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.config.options",{"_index":871,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["this.config.options.slice(this.selectedindex",{"_index":881,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options?.foreach(option",{"_index":908,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options[i].clickable",{"_index":931,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options[i].selected",{"_index":930,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options[index].disabled",{"_index":1675,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["this.config.orientation",{"_index":1633,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.config.placeholdertext",{"_index":768,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.required",{"_index":622,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.selected",{"_index":1105,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["this.config.selection",{"_index":875,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.size",{"_index":367,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.config.tab",{"_index":1107,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["this.config.tab.find",{"_index":1110,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.config.tab[0",{"_index":1112,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.config.tab[0].id",{"_index":1721,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.config.tabindex",{"_index":488,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config.toplabel",{"_index":1517,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/LabelComponent.html":{},"components/SelectComponent.html":{}}}],["this.config.type",{"_index":389,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.config.unknowndatetoggle",{"_index":1213,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.unknowndatetoggle?.dayunknown",{"_index":1248,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.unknowndatetoggle?.yearunknown",{"_index":1238,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config?.charlimit",{"_index":1751,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config?.cta",{"_index":150,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config?.cta.foreach((item",{"_index":151,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config?.flyout?.options",{"_index":788,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config?.id",{"_index":126,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config?.label",{"_index":1413,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.config?.links",{"_index":387,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.links.filter((link",{"_index":407,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.links.find",{"_index":431,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.links.foreach((link",{"_index":390,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.links.length",{"_index":388,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.options?.foreach(option",{"_index":927,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config?.selected",{"_index":1725,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.config?.size",{"_index":331,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["this.createlinks",{"_index":365,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.createoverflows",{"_index":374,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.currentcharacterstatusaria",{"_index":1755,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.currentlang",{"_index":2202,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["this.days",{"_index":1282,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dayselect",{"_index":1324,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dayselect?.setattribute",{"_index":1325,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.desc",{"_index":1206,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.differ",{"_index":1549,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.differ.diff(this",{"_index":1573,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.differs.find({}).create",{"_index":1550,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.disabled",{"_index":485,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{}}}],["this.displayoverflow",{"_index":432,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.divref",{"_index":411,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.divref.nativeelement",{"_index":412,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.divref?.nativeelement.offsetheight",{"_index":429,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.draglistener",{"_index":2384,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.dropdownconfigs.day.formgroup",{"_index":1219,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.id",{"_index":1216,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.label",{"_index":1265,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options",{"_index":1283,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.length",{"_index":1250,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.push",{"_index":1249,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.shift",{"_index":1257,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.unshift",{"_index":1260,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.placeholder",{"_index":1271,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.size",{"_index":1222,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.toplabel",{"_index":1225,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.formgroup",{"_index":1220,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.id",{"_index":1217,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.label",{"_index":1267,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.options?.push",{"_index":1251,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.placeholder",{"_index":1272,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.size",{"_index":1223,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.toplabel",{"_index":1226,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.formgroup",{"_index":1221,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.id",{"_index":1218,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.label",{"_index":1269,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.options?.push",{"_index":1239,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.options?.shift",{"_index":1258,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.options?.unshift",{"_index":1261,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.placeholder",{"_index":1273,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.size",{"_index":1224,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.toplabel",{"_index":1227,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.emptyresults",{"_index":1583,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.erroraria",{"_index":630,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.errorids",{"_index":625,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.errorids.foreach((error",{"_index":1337,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.errorlov",{"_index":811,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.errormessages",{"_index":1207,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.errorstubtext",{"_index":634,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.filterlist(event",{"_index":1578,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.flyoutconfig",{"_index":773,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.focusstate",{"_index":1489,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.form.get('formcontrol')?.setvalue(formvalue",{"_index":1667,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.formcontrol",{"_index":612,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.formcontrol?.markasdirty",{"_index":629,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.formgroup",{"_index":624,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.formgroupempty",{"_index":528,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.getariaerrortext",{"_index":628,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.getariaoverride",{"_index":1236,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getariaoverride(datepickerstate",{"_index":1312,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getchildoverflow",{"_index":376,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.geterroraria",{"_index":1321,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getheight.emit",{"_index":2394,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.getlabelcore",{"_index":1320,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getmaxheight",{"_index":369,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.getnumdaysinmonth(month",{"_index":1284,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getopen.emit(this.config.open",{"_index":1077,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.getselected.emit(selected",{"_index":1115,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.govcanadaalt",{"_index":1013,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.govcanadalink",{"_index":1012,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.height",{"_index":1117,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.hidedropdown",{"_index":1554,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.highlightindex(option.id",{"_index":885,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.hint",{"_index":1205,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.icon",{"_index":489,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.iconclickevent.emit",{"_index":653,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["this.iconconfig.id",{"_index":146,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.iconconfigs[this.config.category",{"_index":1361,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.icondirection",{"_index":492,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.iconspan.nativeelement.innerhtml",{"_index":1373,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["this.id",{"_index":476,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{}}}],["this.imageurl",{"_index":982,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["this.inputcomponent?.clearvalue",{"_index":1556,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.inputcomponent?.focusinput(this.hidedropdown",{"_index":1590,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.ischildoverflow",{"_index":375,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.iscomponentclicked",{"_index":1558,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.isdisabled",{"_index":609,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["this.isdragging",{"_index":2388,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.isfocusinsidecomponent",{"_index":1559,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.isleapyear(year",{"_index":1292,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.ismobile",{"_index":2039,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["this.isselected.emit(null",{"_index":901,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.isselected.emit(this.config.options[i].value",{"_index":939,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.label",{"_index":766,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.label?.nativeelement?.offsetwidth",{"_index":1425,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.labelbutton.buttonpress(this.config.parentid",{"_index":1515,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["this.labelbuttonclicksubj.asobservable",{"_index":1978,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["this.labelbuttonclicksubj.next(id",{"_index":1985,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["this.labelconfig",{"_index":616,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.labelicontext",{"_index":1510,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["this.langtoggle.languagetoggleclick",{"_index":2043,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["this.languageclicksub.asobservable",{"_index":2001,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["this.languageclicksub.next(true",{"_index":2003,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["this.limit",{"_index":1600,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.maxheight",{"_index":368,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.maxyear",{"_index":1208,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.minheight",{"_index":2381,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.minyear",{"_index":1210,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.months",{"_index":1259,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.monthselect",{"_index":1322,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.monthselect?.setattribute",{"_index":1323,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.normallinks",{"_index":408,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.onchange",{"_index":605,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.ontouch",{"_index":606,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.ontouched",{"_index":1344,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.open",{"_index":1074,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.openaccordion",{"_index":1104,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.optioncontainers.toarray()[this.selectedindex]?.nativeelement?.scrollintoview",{"_index":911,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.options",{"_index":872,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{}}}],["this.options.length",{"_index":1555,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.options.slice(0",{"_index":1609,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.options[index].value",{"_index":1607,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.optionselected(this.selectedindex",{"_index":900,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.orientation",{"_index":1714,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["this.originaloptions",{"_index":1608,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.originaloptions.slice(0",{"_index":1588,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.overflowlinks",{"_index":406,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.placeholdertext",{"_index":767,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.portinputvalues",{"_index":810,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.removevertical",{"_index":1715,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["this.renderer.addclass(tempelement",{"_index":417,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.renderer.appendchild(containerelement",{"_index":418,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.renderer.appendchild(tempelement",{"_index":416,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.renderer.createelement('p",{"_index":414,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.renderer.createtext('test",{"_index":415,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.renderer.listen",{"_index":2385,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.renderer.listen('document",{"_index":2395,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.renderer.removechild(containerelement",{"_index":420,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.renderer.setstyle",{"_index":2379,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.required",{"_index":1204,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.resizebar",{"_index":2383,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.resizebar?.nativeelement",{"_index":2386,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.resizecontainer",{"_index":2378,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.resizecontainer.nativeelement",{"_index":2380,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.resizecontainer.nativeelement.getboundingclientrect().height",{"_index":2392,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.returnoptionstodefault",{"_index":1557,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.rotatechevron",{"_index":1696,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["this.rounded",{"_index":1416,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.savedselectedoptions",{"_index":1610,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.scrolltoanchor(link",{"_index":1042,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["this.selected",{"_index":779,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.selectedindex",{"_index":884,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.selectedoptions",{"_index":1585,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.length",{"_index":1601,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.push(option",{"_index":1598,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.push(this.options[index",{"_index":1603,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.some((element",{"_index":1605,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.splice(index",{"_index":1595,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedtab",{"_index":1109,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.selection",{"_index":876,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.selectvaluechange.emit(this.selectedoptions",{"_index":1576,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.separatoricon.arialabel",{"_index":370,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.separatoricon.size",{"_index":366,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.setheight",{"_index":2382,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.setlabellanguage",{"_index":1233,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.setlang(change.lang",{"_index":615,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.setlang(this.translate.currentlang",{"_index":613,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.setmonthslanguage",{"_index":1232,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.settext(newlang.lang",{"_index":2042,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["this.settypetitle",{"_index":1652,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.setupcomponent",{"_index":1100,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.setyeardaylanguage",{"_index":1235,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.shownav",{"_index":1040,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["this.showpassword",{"_index":1481,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.showplaceholder",{"_index":771,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.size",{"_index":480,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.standalone.getbaseurl",{"_index":395,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.standalonefunctions.geterroraria",{"_index":631,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.standalonefunctions.geterrorids",{"_index":626,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.standalonefunctions.makelabelconfig",{"_index":617,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.steptext",{"_index":1636,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["this.tabclick.emit(selected",{"_index":1635,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["this.tabconfig.selected",{"_index":1106,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.tabconfig.tab",{"_index":1108,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.tabindex",{"_index":487,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.text",{"_index":1654,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.textid",{"_index":148,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.toggledropdown",{"_index":1565,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.toggleflyout(false",{"_index":783,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.toggleline",{"_index":158,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.touched",{"_index":632,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.translate.currentlang",{"_index":1237,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.translate.instant",{"_index":371,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.translate.instant(error.errorlov",{"_index":1338,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.instant(link.linkkey",{"_index":404,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.translate.instant(this.config.desc",{"_index":1333,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.instant(this.config.hint",{"_index":1334,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.instant(this.config.label",{"_index":1332,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.onlangchange.subscribe",{"_index":1234,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.translate.onlangchange.subscribe((change",{"_index":614,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.translator.onlangchange.subscribe((event",{"_index":2204,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["this.type",{"_index":878,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.typecontrol",{"_index":1482,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.unknowndatetoggle",{"_index":1212,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.updatedaysarray",{"_index":1243,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.valuechange.emit(selectedid",{"_index":1731,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.valuechange.emit(this.config.selected",{"_index":1722,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.windoworigin",{"_index":2206,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["this.windowpathname",{"_index":2208,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["this.yearselect",{"_index":1318,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.yearselect?.setattribute",{"_index":1319,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["through",{"_index":894,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["title",{"_index":117,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["titleslugurlcomponent",{"_index":250,"title":{"components/TitleSlugUrlComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["todo",{"_index":596,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["toggle",{"_index":1479,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["toggledropdown",{"_index":1589,"title":{},"body":{"interfaces/IOption.html":{}}}],["toggledropdownkey(event",{"_index":1591,"title":{},"body":{"interfaces/IOption.html":{}}}],["toggleflyout",{"_index":725,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggleflyout(status",{"_index":742,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["toggleline",{"_index":32,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["toggles",{"_index":1879,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["token",{"_index":1500,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{}}}],["top",{"_index":710,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/codeViewerComponent.html":{}}}],["toplabel",{"_index":1496,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/LabelComponent.html":{},"components/SelectComponent.html":{}}}],["touched",{"_index":515,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["transform",{"_index":1877,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["translate",{"_index":160,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/CheckboxComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["translate/core",{"_index":341,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["translated",{"_index":1329,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["translatemodule",{"_index":1909,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["translateservice",{"_index":281,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["translation",{"_index":346,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["translator",{"_index":2187,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["translator.currentlang",{"_index":2203,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["trash",{"_index":1355,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["treatment",{"_index":1396,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["trigger",{"_index":544,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["triggers",{"_index":905,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["true",{"_index":78,"title":{},"body":{"components/BannerComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/resizableContainerComponent.html":{}}}],["truncated",{"_index":1406,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["truthy",{"_index":747,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["turned",{"_index":1664,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["type",{"_index":39,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["typecontrol",{"_index":1468,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["typeof",{"_index":107,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["types",{"_index":2331,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":401,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["under",{"_index":1671,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["uniquely",{"_index":1456,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["unknown",{"_index":1180,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["unknowndatetoggle",{"_index":1125,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["unless",{"_index":1439,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["update",{"_index":380,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["updated",{"_index":1699,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["updatedaysarray(month",{"_index":1281,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["updates",{"_index":917,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["url",{"_index":114,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["url.component.html",{"_index":2180,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["url.component.scss",{"_index":2179,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["url.component.ts",{"_index":2176,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["url.component.ts:28",{"_index":2192,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:33",{"_index":2195,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:34",{"_index":2196,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:35",{"_index":2186,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:41",{"_index":2194,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:47",{"_index":2193,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url/title",{"_index":2175,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["use",{"_index":1197,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/SelectComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["used",{"_index":552,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["useexisting",{"_index":500,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["users",{"_index":358,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["using",{"_index":599,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IOption.html":{}}}],["val.title",{"_index":2144,"title":{},"body":{"components/TabsComponent.html":{}}}],["validation",{"_index":1431,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["validatorfn",{"_index":1661,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["validators",{"_index":1659,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["value",{"_index":43,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["value.text.tolowercase().includes(filtervalue.tolowercase",{"_index":1581,"title":{},"body":{"interfaces/IOption.html":{}}}],["valuechange",{"_index":1720,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{}}}],["valuechange($event",{"_index":1693,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["valuechange(event",{"_index":1577,"title":{},"body":{"interfaces/IOption.html":{}}}],["valuechanges.subscribe((year",{"_index":1246,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["values",{"_index":1438,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["var",{"_index":74,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["variable",{"_index":1854,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2401,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verrouill",{"_index":1645,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2356,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":1629,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["viewchild",{"_index":335,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IOption.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/resizableContainerComponent.html":{}}}],["viewchild('breadcrumb_child",{"_index":318,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["viewchild('breadcrumb_div",{"_index":323,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["viewchild('iconspan",{"_index":1368,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["viewchild('label",{"_index":1403,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["viewchild('resizebar",{"_index":2369,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["viewchild('resizecontainer",{"_index":2376,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["viewchild(inputcomponent",{"_index":1534,"title":{},"body":{"interfaces/IOption.html":{}}}],["viewchildren",{"_index":863,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["viewchildren('option",{"_index":860,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["viewer",{"_index":1085,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["viewer'},{'name",{"_index":190,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["viewer.component.html",{"_index":1086,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["viewer.component.scss",{"_index":1087,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["viewer.component.ts",{"_index":1081,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:106",{"_index":2258,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:30",{"_index":2256,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:33",{"_index":2257,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:35",{"_index":2269,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:39",{"_index":2268,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:43",{"_index":2263,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:48",{"_index":2267,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:49",{"_index":2266,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:50",{"_index":2265,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:52",{"_index":2264,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:59",{"_index":2261,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:63",{"_index":2260,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:70",{"_index":2262,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:96",{"_index":2259,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer/code",{"_index":1080,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["visible",{"_index":938,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["warning",{"_index":97,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warninglimit",{"_index":1759,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["weak",{"_index":1382,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["weight",{"_index":2214,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["wether",{"_index":749,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["white",{"_index":1858,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["width",{"_index":692,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["window.innerwidth",{"_index":2040,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["window.location.origin",{"_index":2207,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["window.location.pathname",{"_index":2209,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["window:resize",{"_index":278,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["window:resize(e",{"_index":2015,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["window:resize(event",{"_index":295,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["windoworigin",{"_index":2182,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["windowpathname",{"_index":2183,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["wordmark",{"_index":978,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":1672,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["wrap",{"_index":696,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["wrapper",{"_index":691,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["writevalue",{"_index":523,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue(formvalue",{"_index":1666,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["writevalue(obj",{"_index":1339,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["writevalue(value",{"_index":1493,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["x",{"_index":1727,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["x2",{"_index":1423,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["xmark",{"_index":72,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":1164,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["year/day",{"_index":1253,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["years",{"_index":1230,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["yearselect",{"_index":1194,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["yearunknown",{"_index":1185,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["yes",{"_index":756,"title":{},"body":{"components/DropdownComponent.html":{},"components/HiddenNavComponent.html":{}}}],["yyyy",{"_index":1170,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":1896,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-banner\n            \n\n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconConfig\n                            \n                            \n                                lineVisible\n                            \n                            \n                                textId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                eventHandler\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleLine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaDissmissible\n                            \n                            \n                                config\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaDissmissible\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'close'\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IBannerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:56\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:59\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        eventHandler\n                        \n                    \n                \n            \n            \n                \neventHandler(emitValue: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emitValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLine\n                        \n                    \n                \n            \n            \n                \ntoggleLine()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      \n    \n    \n      \n        \n          \n            {{ config?.title || '' | translate }}\n          \n          \n        \n      \n      \n        \n          {{ cta.text | translate }}\n          {{ cta.text | translate }}\n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            {{ config?.title || \\'\\' | translate }}                                                          {{ cta.text | translate }}          {{ cta.text | translate }}                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-breadcrumb\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                    Optional\n                                childRef\n                            \n                            \n                                displayOverflow\n                            \n                            \n                                    Optional\n                                divRef\n                            \n                            \n                                isChildOverflow\n                            \n                            \n                                    Private\n                                maxHeight\n                            \n                            \n                                    Optional\n                                normalLinks\n                            \n                            \n                                    Optional\n                                overflowLinks\n                            \n                            \n                                separatorIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLinks\n                            \n                            \n                                createOverflows\n                            \n                            \n                                flipOverflow\n                            \n                            \n                                getChildOverflow\n                            \n                            \n                                getMaxHeight\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, standalone: StandAloneFunctions, renderer: Renderer2, changeRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        standalone\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IBreadcrumbConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:177\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createLinks\n                        \n                    \n                \n            \n            \n                \ncreateLinks()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:122\n                \n            \n\n\n            \n                \n                    Create href or routerLinks\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOverflows\n                        \n                    \n                \n            \n            \n                \ncreateOverflows()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flipOverflow\n                        \n                    \n                \n            \n            \n                \nflipOverflow(buttonId: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buttonId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChildOverflow\n                        \n                    \n                \n            \n            \n                \ngetChildOverflow()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxHeight\n                        \n                    \n                \n            \n            \n                \ngetMaxHeight()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onResize\n                        \n                    \n                \n            \n            \n                \nonResize(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        childRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('breadcrumb_child', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayOverflow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        divRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('breadcrumb_div', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChildOverflow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maxHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        normalLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILinkComponentConfig[]\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        overflowLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILinkComponentConfig[]\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        separatorIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'breadcrumb_separator',\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: 'fa-solid fa-ellipsis',\n      color: 'var(--text-primary)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  HostListener,\n  ElementRef,\n  AfterViewInit,\n  Renderer2,\n  ChangeDetectorRef,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ILinkComponentConfig } from './link/link.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IIconButtonComponentConfig } from '../icon-button/icon-button.component';\n\nexport enum LinkType {\n  href = 'href',\n  routerLink = 'routerLink'\n}\n\nexport interface IBreadcrumbConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof LinkType;\n  // Translation key of base url segment\n  baseUrlKey: string;\n  // The mid-layer navigation to the ancestor links, the previous pages that lead to users to the child page\n  links?: ILinkComponentConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() config: IBreadcrumbConfig = {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  };\n  baseUrl = '';\n  separatorIcon: IIconButtonComponentConfig = {\n    id: 'breadcrumb_separator',\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: 'fa-solid fa-ellipsis',\n      color: 'var(--text-primary)'\n    }\n  };\n  overflowLinks?: ILinkComponentConfig[];\n  normalLinks?: ILinkComponentConfig[]; // Links that are not overflow\n  displayOverflow = false;\n  private maxHeight: number = 0; // Max height of element in px\n  @ViewChild('breadcrumb_div', { static: false })\n  divRef?: ElementRef;\n  @ViewChild('breadcrumb_child', { static: false })\n  childRef?: ElementRef;\n  isChildOverflow: boolean = false;\n  constructor(\n    private translate: TranslateService,\n    private standalone: StandAloneFunctions,\n    private renderer: Renderer2,\n    private changeRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.createLinks();\n    this.separatorIcon.size = this.config.size;\n    this.maxHeight = this.getMaxHeight();\n    this.separatorIcon.ariaLabel = this.translate.instant(\n      'ACC_DEMO.BREADCRUMB_COMPONENT.ADDITIONAL_LINKS'\n    );\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.createOverflows();\n      this.isChildOverflow = this.getChildOverflow();\n      this.changeRef.detectChanges();\n    }, 500);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If changing size, update max height\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.size !==\n        changes['config'].previousValue.size\n    ) {\n      this.maxHeight = this.getMaxHeight();\n    }\n    // If changing link type, recreate all links\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.type !==\n        changes['config'].previousValue.type\n    ) {\n      this.createLinks();\n    }\n    if (this.config?.links && this.config?.links.length > 0) {\n      if (this.config.type == 'routerLink') {\n        this.config?.links.forEach((link) => {\n          delete link.href;\n        });\n      } else {\n        this.config?.links.forEach((link) => {\n          delete link.routerLink;\n        });\n      }\n    }\n    this.separatorIcon.size = this.config.size;\n  }\n\n  /**\n   * Create href or routerLinks\n   */\n  createLinks() {\n    this.baseUrl = this.standalone.getBaseUrl('', this.config.baseUrlKey);\n    if (this.config.links && this.config.links.length > 1) {\n      let prev: string | undefined;\n      this.config?.links.forEach((link, i) => {\n        if (i === 0) {\n          link[this.config.type] = this.baseUrl;\n          prev = link[this.config.type];\n        } else if (link.linkKey) {\n          link[this.config.type] =\n            prev + this.translate.instant(link.linkKey) + '/';\n          prev = link[this.config.type];\n        }\n        link.overflow = false;\n      });\n\n      this.overflowLinks = this.config?.links.filter((link) => link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  getMaxHeight(): number {\n    const containerElement = this.divRef && this.divRef.nativeElement;\n    const tempElement = this.renderer.createElement('p');\n    const text = this.renderer.createText('Test');\n    this.renderer.appendChild(tempElement, text);\n    this.renderer.addClass(tempElement, 'breadcrumb-child');\n    this.renderer.appendChild(containerElement, tempElement);\n    const maxHeight = tempElement.offsetHeight;\n    this.renderer.removeChild(containerElement, tempElement);\n    // Calculate based on elipsis icon size to p tag ratio\n    return maxHeight * 1.375;\n  }\n\n  createOverflows() {\n    if (\n      this.divRef &&\n      this.divRef?.nativeElement.offsetHeight  1) {\n      const linksLength = this.config.links.length;\n\n      const overflow = this.config?.links.find(\n        (link, i) => i > 0 && i  link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.overflowLinks = [];\n    this.normalLinks = [];\n    this.createLinks();\n    this.createOverflows();\n    this.isChildOverflow = this.getChildOverflow();\n  }\n\n  flipOverflow(buttonId: string) {\n    this.displayOverflow = !this.displayOverflow;\n  }\n\n  // Check if child page title overflows to 2nd line\n  getChildOverflow(): boolean {\n    if (this.childRef) {\n      return (\n        this.childRef.nativeElement.offsetWidth \n    \n\n    \n        \n  \n    \n      \n       0\">\n        \n        \n      \n    \n    \n      \n      \n    \n    \n      \n      \n        {{ link.text }}\n        {{ link.text }}\n      \n    \n  \n   0\"\n  >\n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   0\">                                                                      {{ link.text }}        {{ link.text }}               0\"  >                '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbLinkComponent.html":{"url":"components/BreadcrumbLinkComponent.html","title":"component - BreadcrumbLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-breadcrumb-link\n            \n\n\n\n\n            \n                templateUrl\n                ./link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ILinkComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    text: '',\n    overflow: false\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport interface ILinkComponentConfig {\n  text: string;\n  linkKey?: string;\n  href?: string;\n  routerLink?: string;\n  overflow?: boolean;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb-link',\n  templateUrl: './link.component.html'\n})\nexport class BreadcrumbLinkComponent {\n  @Input() config: ILinkComponentConfig = {\n    text: '',\n    overflow: false\n  };\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  {{ config.text | translate }}\n\n\n  {{\n    config.text | translate\n  }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config.text | translate }}  {{    config.text | translate  }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/button/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-button\n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                category\n                            \n                            \n                                color\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                iconDirection\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnAction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n}\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconDirection\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:60\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickEvent\n                        \n                    \n                \n            \n            \n                \nclickEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum ButtonCategories {\n  primary = 'primary',\n  secondary = 'secondary',\n  plain = 'plain'\n}\n\nexport enum ButtonSize {\n  small = 'small',\n  large = 'large'\n}\n\nexport enum ButtonColor {\n  critical = 'critical',\n  CTA = 'CTA'\n}\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n  left = 'left',\n  right = 'right'\n}\n\nexport interface IButtonConfig {\n    id: string;\n    category?: keyof typeof ButtonCategories;\n    size?: keyof typeof ButtonSize;\n    color?: keyof typeof ButtonColor;\n    ariaLabel?: string;\n    disabled?: boolean;\n    icon?: string;\n    iconDirection?: keyof typeof ButtonIconDirection;\n    tabIndex?: number;\n};\n\n@Component({\n  selector: 'ircc-cl-lib-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n@Input() config: IButtonConfig = {\n    id: '',\n};\n    @Input() id = '';\n    @Input() category?: keyof typeof ButtonCategories;\n    @Input() size?: keyof typeof ButtonSize;\n    @Input() color?: keyof typeof ButtonColor;\n    @Input() ariaLabel?: string;\n    @Input() disabled?: boolean;\n    @Input() icon?: string;\n    @Input() iconDirection?: keyof typeof ButtonIconDirection;\n    @Input() tabIndex?: number;\n\n  @Output() btnAction: EventEmitter = new EventEmitter();\n\n    ngOnInit() {\n        (this.id !== '') ? this.config.id = this.id : undefined;\n        (this.category === undefined) ? undefined : this.config.category = this.category;\n        (this.size === undefined) ? undefined : this.config.size = this.size;\n        (this.color === undefined) ? undefined : this.config.color = this.color;\n        (this.ariaLabel !== undefined) ? this.config.ariaLabel = this.ariaLabel : undefined;\n        (this.disabled !== undefined) ? this.config.disabled = this.disabled : undefined;\n        (this.tabIndex !== undefined) ? this.config.tabIndex = this.tabIndex : undefined;\n        if (this.icon || this.config.icon) {\n            this.config.icon = this.icon ? this.icon : this.config.icon;\n            this.config.iconDirection = this.iconDirection? this.iconDirection : this.config.iconDirection;\n            this.config.iconDirection = this.config.iconDirection ? this.config.iconDirection : 'left'\n        } else {\n            this.config.icon = undefined;\n            this.config.iconDirection = undefined;\n        }\n    }\n\n\n  clickEvent(id: string) {\n    this.btnAction.emit(id);\n  }\n}\n\n    \n\n    \n           \n        \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                           '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CheckboxComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                isDisabled\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                getErrorState\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ICheckBoxComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:160\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorState\n                        \n                    \n                \n            \n            \n                \ngetErrorState()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:191\n                \n            \n\n\n            \n                \n                    Return error state from FormGroup, must be touched & invalid\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:174\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:94\n                \n            \n\n\n            \n                \n                    This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  label?: string;\n  required?: boolean;\n  size?: keyof typeof DSSizes | DSSizes;\n  mixed?: true;\n  disableFocus?: boolean; //Default is true\n  inlineLabel?: string;\n  inlineLabelBold?: boolean;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  helpText?: string;\n  customErrorText?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  isDisabled = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorAria = '';\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {};\n  onChange = () => {};\n\n  writeValue(): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n    if (!this.config?.size) this.config.size = DSSizes.large;\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        \n      \n      {{ config.inlineLabel || '' | translate }}\n      \n    \n    \n      \n        {{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}\n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{ config.inlineLabel || \\'\\' | translate }}                            {{          errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'        }}                                                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipItemComponent.html":{"url":"components/ChipItemComponent.html","title":"component - ChipItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-chip-item\n            \n\n\n\n\n            \n                templateUrl\n                ./chip-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onEnterKeyPress\n                            \n                            \n                                onIconClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconClickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipContent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:8\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        iconClickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onEnterKeyPress\n                        \n                    \n                \n            \n            \n                \nonEnterKeyPress()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIconClick\n                        \n                    \n                \n            \n            \n                \nonIconClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-item',\n  templateUrl: './chip-item.component.html'\n})\nexport class ChipItemComponent {\n  @Input() chipContent?: string;\n  @Output() iconClickEvent = new EventEmitter();\n\n  constructor() {}\n\n  onIconClick() {\n    this.iconClickEvent.emit();\n  }\n\n  onEnterKeyPress() {\n    this.iconClickEvent.emit();\n  }\n}\n\n    \n\n    \n        \n  {{ chipContent || '' }}\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ chipContent || \\'\\' }}        '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChipItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipListComponent.html":{"url":"components/ChipListComponent.html","title":"component - ChipListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-chip-list\n            \n\n\n\n\n            \n                templateUrl\n                ./chip-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chipContentText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeChipItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipListChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:8\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chipListChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeChipItem\n                        \n                    \n                \n            \n            \n                \nremoveChipItem(chipIdx: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chipIdx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chipContentText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-list',\n  templateUrl: './chip-list.component.html'\n})\nexport class ChipListComponent implements OnInit {\n  @Input() chipList?: string[];\n  @Output() chipListChange = new EventEmitter>();\n  chipContentText?: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  removeChipItem(chipIdx: number) {\n    this.chipList?.splice(chipIdx, 1);\n    this.chipListChange.emit(this.chipList);\n  }\n\n  onSubmit() {\n    if (this.chipContentText) {\n      this.chipList?.push(this.chipContentText);\n      this.chipListChange.emit(this.chipList);\n      this.chipContentText = '';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChipListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentPreviewComponent.html":{"url":"components/ComponentPreviewComponent.html","title":"component - ComponentPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComponentPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/component-preview/component-preview.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-component-preview\n            \n\n            \n                styleUrls\n                ./component-preview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./component-preview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                copyStyle\n                            \n                            \n                                copyText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/component-preview/component-preview.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        copyStyle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/component-preview/component-preview.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        copyText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/component-preview/component-preview.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-component-preview',\n  templateUrl: './component-preview.component.html',\n  styleUrls: ['./component-preview.component.scss']\n})\nexport class ComponentPreviewComponent {\n  @Input() copyText?: string;\n  @Input() copyStyle?: string;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n  \n    {{ 'Buttons.CopyCode' | translate }}\n  \n  \n    {{ 'Buttons.CopyStyle' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./component-preview.component.scss\n                \n                :host {\n  display: block;\n\n  .preview-wrapper {\n    width: 100%;\n    display: inline-flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    background-color: var(--surface2);\n    max-width: 362px;\n    min-height: 170px;\n\n    jds-button.copy {\n      flex-basis: 100%;\n      text-align: center;\n      margin-top: -10px;\n      color: #2A4980;\n      cursor: pointer;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ \\'Buttons.CopyCode\\' | translate }}        {{ \\'Buttons.CopyStyle\\' | translate }}  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComponentPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-dropdown\n            \n\n\n\n\n            \n                templateUrl\n                ./drop-down.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                flyoutConfig\n                            \n                            \n                                selected\n                            \n                            \n                                showPlaceholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFlyoutFocus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectedOption\n                            \n                            \n                                toggleFlyout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                placeholderText\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IDropdownConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearFlyoutFocus\n                        \n                    \n                \n            \n            \n                \nclearFlyoutFocus()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:95\n                \n            \n\n\n            \n                \n                    Clear the flyout active state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOption\n                        \n                    \n                \n            \n            \n                \nselectedOption(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFlyout\n                        \n                    \n                \n            \n            \n                \ntoggleFlyout(status: boolean, e?: FocusEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:84\n                \n            \n\n\n            \n                \n                    function receives a truthy value which determines wether it closes or opens,\nbut also looks for FocusEvent to check if flyout is being interacted with\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n                                    \n                                            FocusEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        flyoutConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFlyoutConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from \"../../../shared/constants/jl-components.constants\";\nimport { ButtonCategories } from '../button/button.component';\nimport { IIconButtonIconConfig } from '../icon-button/icon-button.component';\nimport { IFlyoutConfig } from '../flyout/flyout.component';\nexport interface IDropdownConfig {\n    id: string;\n    label?: string;\n    size?: keyof typeof DSSizes;\n    category?: keyof typeof ButtonCategories;\n    placeholderText?: string;\n    disabled?: boolean;\n    icon?: IIconButtonIconConfig;\n    flyout?: IFlyoutConfig;\n}\n@Component({\n  selector: 'ircc-cl-lib-dropdown',\n  templateUrl: './drop-down.component.html'\n})\nexport class DropdownComponent implements OnInit {\n\n  @Input() config: IDropdownConfig = {\n    id: ''\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string = '';\n  @Input() placeholderText?: string = '';\n  @Input() disabled?: boolean;\n  @Input() category?: keyof typeof ButtonCategories;\n\n  showPlaceholder: boolean = false;\n  selected: boolean = false;\n\n  flyoutConfig : IFlyoutConfig = {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n\n  ngOnInit() {\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.placeholderText !== '')\n      this.config.placeholderText = this.placeholderText;\n    if (this.disabled !== undefined) this.config.disabled = this.disabled;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n\n    if (!this.config.category) this.config.category = ButtonCategories.primary;\n\n    if (!this.config.label || this.config.label.trim().length == 0) {\n      if (!this.config.placeholderText) {\n        this.config.placeholderText = 'Default';\n      }\n      this.showPlaceholder = true;\n    }\n\n    if(this.config.flyout) this.flyoutConfig = this.config.flyout;\n  }\n\n  selectedOption(e: Event) {\n    //if it receives it's event info it selects the index - if not closes flyout\n    if(e){\n      this.showPlaceholder = false;\n      this.config.label = e.toString();\n      this.selected = !this.selected;\n      this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }else{\n      this.toggleFlyout(false);\n    }\n  }\n\n  /**\n   * function receives a truthy value which determines wether it closes or opens, \n   * but also looks for FocusEvent to check if flyout is being interacted with\n   * @param status \n   * @param e \n   */\n  toggleFlyout(status: boolean, e?: FocusEvent) {\n    let target = e?.relatedTarget as HTMLElement;\n    if(!target?.id.includes(this.config.id) || !e){\n      this.selected = status;\n      !status && this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }\n  }\n\n  /**\n   * Clear the flyout active state\n   */\n  clearFlyoutFocus() {\n    if (this.config?.flyout?.options) {\n      this.config.flyout.options.forEach(i => {\n        i.active = false;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n        {{config.placeholderText}}\n        {{config.label}}\n      \n      \n        \n      \n      \n        \n      \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{config.placeholderText}}        {{config.label}}                                                  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/error/error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                portInputValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                errorLOV\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IErrorComponentConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLOV\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         IErrorIconConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        portInputValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    portInputValues()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    {{ config?.errorLOV || '' | translate }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ config?.errorLOV || \\'\\' | translate }}  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlyoutComponent.html":{"url":"components/FlyoutComponent.html","title":"component - FlyoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlyoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-flyout\n            \n\n\n\n\n            \n                templateUrl\n                ./flyout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                a11yText\n                            \n                            \n                                optionContainers\n                            \n                            \n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearOptions\n                            \n                            \n                                highlightIndex\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onArrowDown\n                            \n                            \n                                onArrowUp\n                            \n                            \n                                onEnter\n                            \n                            \n                                optionSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                id\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.arrowdown\n                            \n                            \n                                document:keydown.arrowup\n                            \n                            \n                                document:keydown.enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IFlyoutConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         IFlyoutOptionConfig[]\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :      | number\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown.arrowdown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.arrowdown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:49\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown.arrowup\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.arrowup(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:64\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown.enter\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.enter(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:84\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearOptions\n                        \n                    \n                \n            \n            \n                \nclearOptions()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlightIndex\n                        \n                    \n                \n            \n            \n                \nhighlightIndex(el_id: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el_id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onArrowDown\n                        \n                    \n                \n            \n            \n                \nonArrowDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.arrowdown', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onArrowUp\n                        \n                    \n                \n            \n            \n                \nonArrowUp(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.arrowup', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnter\n                        \n                    \n                \n            \n            \n                \nonEnter(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.enter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionSelected\n                        \n                    \n                \n            \n            \n                \noptionSelected(i: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        a11yText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionContainers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Default value : new QueryList\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren('option')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter, HostListener, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { IFlyoutOptionConfig } from '../flyout-option/flyout-option.component';\n\nexport enum IFlyoutSelectTypes {\n  single = 'single',\n  multi = 'multi'\n}\n\nexport interface IFlyoutConfig {\n  id: string,\n  options?: IFlyoutOptionConfig[],\n  disabled?: boolean\n  selection?: [] | number,\n  type?: keyof typeof IFlyoutSelectTypes\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout',\n  templateUrl: './flyout.component.html'\n})\nexport class FlyoutComponent implements OnInit {\n  @ViewChildren('option') optionContainers: QueryList = new QueryList;\n\n  @Input() config : IFlyoutConfig = {\n    id: ''\n  }\n  @Input() id? : string;\n  @Input() options?: IFlyoutOptionConfig[];\n  @Input() disabled?: boolean;\n  @Input() selection?: [] | number;\n  @Input() type?: keyof typeof IFlyoutSelectTypes;\n\n  //TODO: Must add the other config parameters\n  @Output() isSelected = new EventEmitter();\n\n  selectedIndex : number = -1;\n  a11yText : string = '';\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'single';\n    if(this.id) this.config.id = this.id;\n    if(this.options) this.config.options = this.options;\n    if(this.disabled) this.config.disabled = this.disabled;\n    if(this.selection) this.config.selection = this.selection;\n    if(this.type) this.config.type = this.type;\n  };\n\n  @HostListener('document:keydown.arrowdown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options.slice(this.selectedIndex + 1).forEach((option, index) => {\n        if (!foundClickable && option.clickable !== false) {\n          this.selectedIndex += index + 1;\n          this.highlightIndex(option.id);\n          foundClickable = true;\n        }\n      });\n    }\n  }\n\n  @HostListener('document:keydown.arrowup', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(0, this.selectedIndex)\n        .reverse()\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex -= index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n      // Ensure selectedIndex does not fall below 0\n      this.selectedIndex = Math.max(this.selectedIndex, 0);\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    event.preventDefault();\n    //if the index hasn't changes through arrow navigation, emits our event but lets the parent know nothing was selected\n    this.selectedIndex != -1 ? this.optionSelected(this.selectedIndex) : this.isSelected.emit(null);\n  }\n\n  //takes in the active index from HostListeners and sets the config option to active state which triggers styling\n  highlightIndex(el_id: any) {\n    if(el_id){\n      this.config.options?.forEach(option => {\n        if(option.id === el_id){\n          option.active = true;\n          this.optionContainers.toArray()[this.selectedIndex]?.nativeElement?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n          this.a11yText = option.value;\n          //updates a11yText to indicate currently selected item if scrolling through flyout again\n          if(option.selected) this.a11yText += ' currently selected'; //translation?\n        }else{\n          option.active = false;\n        }\n      });\n    }\n  }\n\n  //clears all selections by setting the option.selected to false\n  clearOptions(){\n    this.config?.options?.forEach(option => {\n      option.selected = false;\n    });\n  }\n\n  //function takes in index value of current active option and selects it\n  optionSelected(i: number){\n    if(this.config.options && !this.config.options[i].selected && this.config.options[i].clickable){\n      //setup for future multi select feature\n      this.config.type !== 'multi' ? this.clearOptions() : /*this.config.selection = [].push(this.config.options[i]);*/console.log('MULTI');\n      this.config.options[i].selected = true;\n      //emits the value of the selected index so it's visible to the parent\n      this.isSelected.emit(this.config.options[i].value);\n      }\n  }\n\n};\n\n    \n\n    \n        \n  \n    \n  \n\n{{ a11yText || '' | translate }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ a11yText || \\'\\' | translate }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlyoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlyoutOptionComponent.html":{"url":"components/FlyoutOptionComponent.html","title":"component - FlyoutOptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlyoutOptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-flyout-option\n            \n\n\n\n\n            \n                templateUrl\n                ./flyout-option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IFlyoutOptionConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    value: 'Blank label'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nexport enum IFlyoutOptionType {\n  text = 'text',\n  checkbox = 'checkbox',\n  dropdown = 'dropdown',\n  line = 'line',\n  heading = 'heading'\n}\n\nexport interface IFlyoutOptionConfig {\n  id?: string,\n  value: string,\n  selected?: boolean,\n  active?: boolean,\n  disabled?: boolean,\n  type?: keyof typeof IFlyoutOptionType,\n  clickable?: boolean\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout-option',\n  templateUrl: './flyout-option.component.html'\n})\nexport class FlyoutOptionComponent implements OnInit {\n\n  @Input() config : IFlyoutOptionConfig = {\n    id: '',\n    value: 'Blank label'\n  }\n\n  @Input() id? : string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'text';\n    if((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false) this.config.clickable = true;\n    if(this.id) this.config.id = this.id;\n  };\n\n};\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{ config.value || '' | translate }}\n        \n          \n        \n      \n    \n  \n  \n    \n      {{ config.value || '' | translate }}\n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ config.value || \\'\\' | translate }}                                                  {{ config.value || \\'\\' | translate }}                          '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlyoutOptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-footer\n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                altImage\n                            \n                            \n                                aria\n                            \n                            \n                                imageURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        altImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const GOV_LOGO_FOOTER =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/wmms-blk.svg';\n\nexport const GOV_LOGO_ARIA_LABEL_ENGLISH = 'Symbol of the Government of Canada';\nexport const GOV_LOGO_ARIA_LABEL_FRENCH = 'Symbole du gouvernement du Canada';\n\nexport const GOV_LOGO_ALT_TEXT_EN = 'Canada wordmark';\nexport const GOV_LOGO_ALT_TEXT_FR = 'FR Canada wordmark';\n\n@Component({\n  selector: 'ircc-cl-lib-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent {\n  @Input() id = '';\n\n  imageURL = '';\n  altImage = '';\n  aria = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.imageURL = GOV_LOGO_FOOTER;\n      this.aria = GOV_LOGO_ARIA_LABEL_ENGLISH;\n      this.altImage = GOV_LOGO_ALT_TEXT_EN;\n    } else {\n      this.imageURL = GOV_LOGO_FOOTER;\n      this.aria = GOV_LOGO_ARIA_LABEL_FRENCH;\n      this.altImage = GOV_LOGO_ALT_TEXT_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-header\n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aria\n                            \n                            \n                                govCanadaAlt\n                            \n                            \n                                govCanadaLink\n                            \n                            \n                                imageURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        govCanadaAlt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        govCanadaLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const ENGLISH_BANNER_URL =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-en.svg';\nexport const FRENCH_BANNER_URL =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-fr.svg';\n\nexport const HEADER_IMG_LINK_EN = 'https://www.canada.ca/en.html';\nexport const HEADER_IMG_LINK_FR = 'https://www.canada.ca/fr.html';\n\nexport const HEADER_LINK_ATL_EN = 'Government of Canada logo';\nexport const HEADER_LINK_ALT_FR = 'Gouvernement du Canada logo';\n\nexport const CANADA_LOGO_ARIA_LABEL_ENGLISH =\n  'Symbol of the Government of Canada';\nexport const CANADA_LOGO_ARIA_LABEL_FRENCH =\n  'Symbole du gouvernement du Canada';\n\n@Component({\n  selector: 'ircc-cl-lib-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {\n  @Input() id = '';\n\n  imageURL = '';\n  aria = '';\n  govCanadaLink = '';\n  govCanadaAlt = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.imageURL = ENGLISH_BANNER_URL;\n      this.aria = CANADA_LOGO_ARIA_LABEL_ENGLISH;\n      this.govCanadaLink = HEADER_IMG_LINK_EN;\n      this.govCanadaAlt = HEADER_LINK_ATL_EN;\n    } else {\n      this.imageURL = FRENCH_BANNER_URL;\n      this.aria = CANADA_LOGO_ARIA_LABEL_FRENCH;\n      this.govCanadaLink = HEADER_IMG_LINK_FR;\n      this.govCanadaAlt = HEADER_LINK_ALT_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenNavComponent.html":{"url":"components/HiddenNavComponent.html","title":"component - HiddenNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HiddenNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-hidden-nav\n            \n\n\n\n\n            \n                templateUrl\n                ./hidden-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleKeyDown\n                            \n                            \n                                scrollToAnchor\n                            \n                            \n                                showNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IHiddenNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.key' \n                \n            \n            \n                \nkeydown(key: string, link?: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:33\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \nhandleKeyDown(key: string, link?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('keydown', ['$event.key'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToAnchor\n                        \n                    \n                \n            \n            \n                \nscrollToAnchor(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNav\n                        \n                    \n                \n            \n            \n                \nshowNav()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ link.title }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ link.title }}      '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccordionContainerConfig.html":{"url":"interfaces/IAccordionContainerConfig.html","title":"interface - IAccordionContainerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccordionContainerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/src/app/components/accordion-panel/accordion-container.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            buttonTextClosed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buttonTextClosed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonTextClosed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IButtonConfig } from 'ircc-ds-angular-component-library';\n\nexport interface IAccordionContainerConfig {\n  id: string;\n  buttonText?: string;\n  buttonTextClosed?: string;\n  open?: boolean;\n}\n\n@Component({\n  selector: 'app-accordian-container',\n  templateUrl: './accordion-container.component.html',\n  styleUrls: ['./accordion-container.component.scss']\n})\nexport class accordionContainerComponent implements OnInit {\n  @Input() config: IAccordionContainerConfig = {\n    id: ''\n  };\n  @Input() id: string = '';\n  @Input() buttonText: string = '';\n  @Input() buttonTextClosed: string = '';\n  @Input() open?: boolean | undefined;\n\n  @Output() getOpen = new EventEmitter();\n\n  buttonConfigAcccordion: IButtonConfig = {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to expand the accordion',\n    iconDirection: 'left'\n  };\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    console.log(this.config);\n    if (this.config.buttonText === '' || this.config.buttonText === undefined)\n      this.config.buttonText = 'Accordion.HideCode';\n\n    if (\n      this.config.buttonTextClosed === '' ||\n      this.config.buttonTextClosed === undefined\n    )\n      this.config.buttonTextClosed = 'Accordion.ShowCode';\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.buttonText !== '') this.config.buttonText = this.buttonText;\n    if (this.buttonTextClosed !== '')\n      this.config.buttonTextClosed = this.buttonTextClosed;\n    if (this.open !== undefined) this.config.open = this.open;\n  }\n\n  openAccordion() {\n    this.config.open = !this.config.open;\n    this.getOpen.emit(this.config.open);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBannerConfig.html":{"url":"interfaces/IBannerConfig.html","title":"interface - IBannerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBannerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaDissmissible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissible\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rounded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaDissmissible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaDissmissible:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cta:         ICTAConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICTAConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rounded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rounded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBreadcrumbConfig.html":{"url":"interfaces/IBreadcrumbConfig.html","title":"interface - IBreadcrumbConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBreadcrumbConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            baseUrlKey\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrlKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrlKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         ILinkComponentConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILinkComponentConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  HostListener,\n  ElementRef,\n  AfterViewInit,\n  Renderer2,\n  ChangeDetectorRef,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ILinkComponentConfig } from './link/link.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IIconButtonComponentConfig } from '../icon-button/icon-button.component';\n\nexport enum LinkType {\n  href = 'href',\n  routerLink = 'routerLink'\n}\n\nexport interface IBreadcrumbConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof LinkType;\n  // Translation key of base url segment\n  baseUrlKey: string;\n  // The mid-layer navigation to the ancestor links, the previous pages that lead to users to the child page\n  links?: ILinkComponentConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() config: IBreadcrumbConfig = {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  };\n  baseUrl = '';\n  separatorIcon: IIconButtonComponentConfig = {\n    id: 'breadcrumb_separator',\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: 'fa-solid fa-ellipsis',\n      color: 'var(--text-primary)'\n    }\n  };\n  overflowLinks?: ILinkComponentConfig[];\n  normalLinks?: ILinkComponentConfig[]; // Links that are not overflow\n  displayOverflow = false;\n  private maxHeight: number = 0; // Max height of element in px\n  @ViewChild('breadcrumb_div', { static: false })\n  divRef?: ElementRef;\n  @ViewChild('breadcrumb_child', { static: false })\n  childRef?: ElementRef;\n  isChildOverflow: boolean = false;\n  constructor(\n    private translate: TranslateService,\n    private standalone: StandAloneFunctions,\n    private renderer: Renderer2,\n    private changeRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.createLinks();\n    this.separatorIcon.size = this.config.size;\n    this.maxHeight = this.getMaxHeight();\n    this.separatorIcon.ariaLabel = this.translate.instant(\n      'ACC_DEMO.BREADCRUMB_COMPONENT.ADDITIONAL_LINKS'\n    );\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.createOverflows();\n      this.isChildOverflow = this.getChildOverflow();\n      this.changeRef.detectChanges();\n    }, 500);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If changing size, update max height\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.size !==\n        changes['config'].previousValue.size\n    ) {\n      this.maxHeight = this.getMaxHeight();\n    }\n    // If changing link type, recreate all links\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.type !==\n        changes['config'].previousValue.type\n    ) {\n      this.createLinks();\n    }\n    if (this.config?.links && this.config?.links.length > 0) {\n      if (this.config.type == 'routerLink') {\n        this.config?.links.forEach((link) => {\n          delete link.href;\n        });\n      } else {\n        this.config?.links.forEach((link) => {\n          delete link.routerLink;\n        });\n      }\n    }\n    this.separatorIcon.size = this.config.size;\n  }\n\n  /**\n   * Create href or routerLinks\n   */\n  createLinks() {\n    this.baseUrl = this.standalone.getBaseUrl('', this.config.baseUrlKey);\n    if (this.config.links && this.config.links.length > 1) {\n      let prev: string | undefined;\n      this.config?.links.forEach((link, i) => {\n        if (i === 0) {\n          link[this.config.type] = this.baseUrl;\n          prev = link[this.config.type];\n        } else if (link.linkKey) {\n          link[this.config.type] =\n            prev + this.translate.instant(link.linkKey) + '/';\n          prev = link[this.config.type];\n        }\n        link.overflow = false;\n      });\n\n      this.overflowLinks = this.config?.links.filter((link) => link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  getMaxHeight(): number {\n    const containerElement = this.divRef && this.divRef.nativeElement;\n    const tempElement = this.renderer.createElement('p');\n    const text = this.renderer.createText('Test');\n    this.renderer.appendChild(tempElement, text);\n    this.renderer.addClass(tempElement, 'breadcrumb-child');\n    this.renderer.appendChild(containerElement, tempElement);\n    const maxHeight = tempElement.offsetHeight;\n    this.renderer.removeChild(containerElement, tempElement);\n    // Calculate based on elipsis icon size to p tag ratio\n    return maxHeight * 1.375;\n  }\n\n  createOverflows() {\n    if (\n      this.divRef &&\n      this.divRef?.nativeElement.offsetHeight  1) {\n      const linksLength = this.config.links.length;\n\n      const overflow = this.config?.links.find(\n        (link, i) => i > 0 && i  link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.overflowLinks = [];\n    this.normalLinks = [];\n    this.createLinks();\n    this.createOverflows();\n    this.isChildOverflow = this.getChildOverflow();\n  }\n\n  flipOverflow(buttonId: string) {\n    this.displayOverflow = !this.displayOverflow;\n  }\n\n  // Check if child page title overflows to 2nd line\n  getChildOverflow(): boolean {\n    if (this.childRef) {\n      return (\n        this.childRef.nativeElement.offsetWidth \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IButtonConfig.html":{"url":"interfaces/IButtonConfig.html","title":"interface - IButtonConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/button/button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconDirection\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tabIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconDirection:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tabIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tabIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum ButtonCategories {\n  primary = 'primary',\n  secondary = 'secondary',\n  plain = 'plain'\n}\n\nexport enum ButtonSize {\n  small = 'small',\n  large = 'large'\n}\n\nexport enum ButtonColor {\n  critical = 'critical',\n  CTA = 'CTA'\n}\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n  left = 'left',\n  right = 'right'\n}\n\nexport interface IButtonConfig {\n    id: string;\n    category?: keyof typeof ButtonCategories;\n    size?: keyof typeof ButtonSize;\n    color?: keyof typeof ButtonColor;\n    ariaLabel?: string;\n    disabled?: boolean;\n    icon?: string;\n    iconDirection?: keyof typeof ButtonIconDirection;\n    tabIndex?: number;\n};\n\n@Component({\n  selector: 'ircc-cl-lib-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n@Input() config: IButtonConfig = {\n    id: '',\n};\n    @Input() id = '';\n    @Input() category?: keyof typeof ButtonCategories;\n    @Input() size?: keyof typeof ButtonSize;\n    @Input() color?: keyof typeof ButtonColor;\n    @Input() ariaLabel?: string;\n    @Input() disabled?: boolean;\n    @Input() icon?: string;\n    @Input() iconDirection?: keyof typeof ButtonIconDirection;\n    @Input() tabIndex?: number;\n\n  @Output() btnAction: EventEmitter = new EventEmitter();\n\n    ngOnInit() {\n        (this.id !== '') ? this.config.id = this.id : undefined;\n        (this.category === undefined) ? undefined : this.config.category = this.category;\n        (this.size === undefined) ? undefined : this.config.size = this.size;\n        (this.color === undefined) ? undefined : this.config.color = this.color;\n        (this.ariaLabel !== undefined) ? this.config.ariaLabel = this.ariaLabel : undefined;\n        (this.disabled !== undefined) ? this.config.disabled = this.disabled : undefined;\n        (this.tabIndex !== undefined) ? this.config.tabIndex = this.tabIndex : undefined;\n        if (this.icon || this.config.icon) {\n            this.config.icon = this.icon ? this.icon : this.config.icon;\n            this.config.iconDirection = this.iconDirection? this.iconDirection : this.config.iconDirection;\n            this.config.iconDirection = this.config.iconDirection ? this.config.iconDirection : 'left'\n        } else {\n            this.config.icon = undefined;\n            this.config.iconDirection = undefined;\n        }\n    }\n\n\n  clickEvent(id: string) {\n    this.btnAction.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICTAConfig.html":{"url":"interfaces/ICTAConfig.html","title":"interface - ICTAConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICTAConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            btnConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linkConfig\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        btnConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        btnConfig:         IButtonConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IButtonConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICheckBoxComponentConfig.html":{"url":"interfaces/ICheckBoxComponentConfig.html","title":"interface - ICheckBoxComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICheckBoxComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customErrorText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFocus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            helpText\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inlineLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inlineLabelBold\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mixed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customErrorText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customErrorText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFocus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helpText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helpText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inlineLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineLabelBold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inlineLabelBold:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixed:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:      | DSSizes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | DSSizes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  label?: string;\n  required?: boolean;\n  size?: keyof typeof DSSizes | DSSizes;\n  mixed?: true;\n  disableFocus?: boolean; //Default is true\n  inlineLabel?: string;\n  inlineLabelBold?: boolean;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  helpText?: string;\n  customErrorText?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  isDisabled = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorAria = '';\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {};\n  onChange = () => {};\n\n  writeValue(): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n    if (!this.config?.size) this.config.size = DSSizes.large;\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICodeViewerConfig.html":{"url":"interfaces/ICodeViewerConfig.html","title":"interface - ICodeViewerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICodeViewerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/src/app/components/code-viewer/code-viewer.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            openAccordion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tab\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        openAccordion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        openAccordion:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ITabConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITabConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  IButtonConfig,\n  ITabNavConfig,\n  ITabConfig\n} from 'ircc-ds-angular-component-library';\n\nimport { IAccordionContainerConfig } from '../accordion-panel/accordion-container.component';\n\nexport interface ICodeViewerConfig {\n  id: string;\n  openAccordion?: boolean;\n  tab?: ITabConfig[];\n  selected?: string;\n}\n\n@Component({\n  selector: 'app-code-viewer',\n  templateUrl: './code-viewer.component.html',\n  styleUrls: ['./code-viewer.component.scss']\n})\nexport class codeViewerComponent implements OnInit {\n  @Input() config: ICodeViewerConfig = {\n    id: ''\n  };\n  @Output() getSelected = new EventEmitter();\n\n  tabConfig: ITabNavConfig = {\n    id: 'codeViewerTabs',\n    showContent: false\n  };\n  selectedTab: any = {\n    title: ''\n  };\n\n  accordionConfig: IAccordionContainerConfig = {\n    id: 'codeViewerTabsCccordion',\n    open: this.config.openAccordion\n  };\n\n  openAccordion: boolean = false;\n  minHeightResizeContainer = 150;\n  height: number = 150;\n\n  buttonConfigCopy: IButtonConfig = {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to copy the code'\n  };\n\n  ngOnInit() {\n    this.setupComponent();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config']) {\n      this.config = changes['config'].currentValue;\n      this.setupComponent();\n    }\n  }\n\n  setupComponent() {\n    if (this.config.openAccordion !== undefined) {\n      this.openAccordion = this.config.openAccordion;\n    }\n\n    if (this.config.selected) {\n      this.tabConfig.selected = this.config.selected;\n    }\n\n    if (this.config.tab) {\n      this.tabConfig.tab = this.config.tab;\n    } else {\n      this.tabConfig.tab = [];\n    }\n\n    if (this.config.tab && this.config.selected) {\n      this.selectedTab = this.config.tab.find(\n        (tab) => tab.id === this.config.selected\n      );\n    } else if (this.config.tab) {\n      this.selectedTab = this.config.tab[0];\n    } else {\n      this.selectedTab = {};\n    }\n  }\n\n  getSelectedTab(selected: any) {\n    if (this.config.tab) {\n      this.selectedTab = this.config.tab.find(\n        (element) => element.id === selected\n      );\n      this.config.selected = selected;\n      this.getSelected.emit(selected);\n    }\n  }\n\n  getHeight(height: number) {\n    this.height = height;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerConfig.html":{"url":"interfaces/IDatePickerConfig.html","title":"interface - IDatePickerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unknownDateToggle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:         IDatePickerErrorMessages\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatePickerErrorMessages\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unknownDateToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unknownDateToggle:         IDatePickerUnknownDateToggleConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatePickerUnknownDateToggleConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerDropDownConfigs.html":{"url":"interfaces/IDatePickerDropDownConfigs.html","title":"interface - IDatePickerDropDownConfigs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerDropDownConfigs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            day\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerErrorMessages.html":{"url":"interfaces/IDatePickerErrorMessages.html","title":"interface - IDatePickerErrorMessages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerErrorMessages\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            day\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            general\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            month\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        general\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        general:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerUnknownDateToggleConfig.html":{"url":"interfaces/IDatePickerUnknownDateToggleConfig.html","title":"interface - IDatePickerUnknownDateToggleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerUnknownDateToggleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dayUnknown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            monthUnknown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            yearUnknown\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dayUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monthUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monthUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yearUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDropdownConfig.html":{"url":"interfaces/IDropdownConfig.html","title":"interface - IDropdownConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDropdownConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flyout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholderText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flyout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flyout:         IFlyoutConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFlyoutConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IIconButtonIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IIconButtonIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholderText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from \"../../../shared/constants/jl-components.constants\";\nimport { ButtonCategories } from '../button/button.component';\nimport { IIconButtonIconConfig } from '../icon-button/icon-button.component';\nimport { IFlyoutConfig } from '../flyout/flyout.component';\nexport interface IDropdownConfig {\n    id: string;\n    label?: string;\n    size?: keyof typeof DSSizes;\n    category?: keyof typeof ButtonCategories;\n    placeholderText?: string;\n    disabled?: boolean;\n    icon?: IIconButtonIconConfig;\n    flyout?: IFlyoutConfig;\n}\n@Component({\n  selector: 'ircc-cl-lib-dropdown',\n  templateUrl: './drop-down.component.html'\n})\nexport class DropdownComponent implements OnInit {\n\n  @Input() config: IDropdownConfig = {\n    id: ''\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string = '';\n  @Input() placeholderText?: string = '';\n  @Input() disabled?: boolean;\n  @Input() category?: keyof typeof ButtonCategories;\n\n  showPlaceholder: boolean = false;\n  selected: boolean = false;\n\n  flyoutConfig : IFlyoutConfig = {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n\n  ngOnInit() {\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.placeholderText !== '')\n      this.config.placeholderText = this.placeholderText;\n    if (this.disabled !== undefined) this.config.disabled = this.disabled;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n\n    if (!this.config.category) this.config.category = ButtonCategories.primary;\n\n    if (!this.config.label || this.config.label.trim().length == 0) {\n      if (!this.config.placeholderText) {\n        this.config.placeholderText = 'Default';\n      }\n      this.showPlaceholder = true;\n    }\n\n    if(this.config.flyout) this.flyoutConfig = this.config.flyout;\n  }\n\n  selectedOption(e: Event) {\n    //if it receives it's event info it selects the index - if not closes flyout\n    if(e){\n      this.showPlaceholder = false;\n      this.config.label = e.toString();\n      this.selected = !this.selected;\n      this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }else{\n      this.toggleFlyout(false);\n    }\n  }\n\n  /**\n   * function receives a truthy value which determines wether it closes or opens, \n   * but also looks for FocusEvent to check if flyout is being interacted with\n   * @param status \n   * @param e \n   */\n  toggleFlyout(status: boolean, e?: FocusEvent) {\n    let target = e?.relatedTarget as HTMLElement;\n    if(!target?.id.includes(this.config.id) || !e){\n      this.selected = status;\n      !status && this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }\n  }\n\n  /**\n   * Clear the flyout active state\n   */\n  clearFlyoutFocus() {\n    if (this.config?.flyout?.options) {\n      this.config.flyout.options.forEach(i => {\n        i.active = false;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorComponentConfig.html":{"url":"interfaces/IErrorComponentConfig.html","title":"interface - IErrorComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/error/error.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorLOV\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorLOV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorLOV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IErrorIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IErrorIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorIconConfig.html":{"url":"interfaces/IErrorIconConfig.html","title":"interface - IErrorIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/error/error.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlyoutConfig.html":{"url":"interfaces/IFlyoutConfig.html","title":"interface - IFlyoutConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlyoutConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         IFlyoutOptionConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFlyoutOptionConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selection:      | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter, HostListener, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { IFlyoutOptionConfig } from '../flyout-option/flyout-option.component';\n\nexport enum IFlyoutSelectTypes {\n  single = 'single',\n  multi = 'multi'\n}\n\nexport interface IFlyoutConfig {\n  id: string,\n  options?: IFlyoutOptionConfig[],\n  disabled?: boolean\n  selection?: [] | number,\n  type?: keyof typeof IFlyoutSelectTypes\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout',\n  templateUrl: './flyout.component.html'\n})\nexport class FlyoutComponent implements OnInit {\n  @ViewChildren('option') optionContainers: QueryList = new QueryList;\n\n  @Input() config : IFlyoutConfig = {\n    id: ''\n  }\n  @Input() id? : string;\n  @Input() options?: IFlyoutOptionConfig[];\n  @Input() disabled?: boolean;\n  @Input() selection?: [] | number;\n  @Input() type?: keyof typeof IFlyoutSelectTypes;\n\n  //TODO: Must add the other config parameters\n  @Output() isSelected = new EventEmitter();\n\n  selectedIndex : number = -1;\n  a11yText : string = '';\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'single';\n    if(this.id) this.config.id = this.id;\n    if(this.options) this.config.options = this.options;\n    if(this.disabled) this.config.disabled = this.disabled;\n    if(this.selection) this.config.selection = this.selection;\n    if(this.type) this.config.type = this.type;\n  };\n\n  @HostListener('document:keydown.arrowdown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options.slice(this.selectedIndex + 1).forEach((option, index) => {\n        if (!foundClickable && option.clickable !== false) {\n          this.selectedIndex += index + 1;\n          this.highlightIndex(option.id);\n          foundClickable = true;\n        }\n      });\n    }\n  }\n\n  @HostListener('document:keydown.arrowup', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(0, this.selectedIndex)\n        .reverse()\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex -= index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n      // Ensure selectedIndex does not fall below 0\n      this.selectedIndex = Math.max(this.selectedIndex, 0);\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    event.preventDefault();\n    //if the index hasn't changes through arrow navigation, emits our event but lets the parent know nothing was selected\n    this.selectedIndex != -1 ? this.optionSelected(this.selectedIndex) : this.isSelected.emit(null);\n  }\n\n  //takes in the active index from HostListeners and sets the config option to active state which triggers styling\n  highlightIndex(el_id: any) {\n    if(el_id){\n      this.config.options?.forEach(option => {\n        if(option.id === el_id){\n          option.active = true;\n          this.optionContainers.toArray()[this.selectedIndex]?.nativeElement?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n          this.a11yText = option.value;\n          //updates a11yText to indicate currently selected item if scrolling through flyout again\n          if(option.selected) this.a11yText += ' currently selected'; //translation?\n        }else{\n          option.active = false;\n        }\n      });\n    }\n  }\n\n  //clears all selections by setting the option.selected to false\n  clearOptions(){\n    this.config?.options?.forEach(option => {\n      option.selected = false;\n    });\n  }\n\n  //function takes in index value of current active option and selects it\n  optionSelected(i: number){\n    if(this.config.options && !this.config.options[i].selected && this.config.options[i].clickable){\n      //setup for future multi select feature\n      this.config.type !== 'multi' ? this.clearOptions() : /*this.config.selection = [].push(this.config.options[i]);*/console.log('MULTI');\n      this.config.options[i].selected = true;\n      //emits the value of the selected index so it's visible to the parent\n      this.isSelected.emit(this.config.options[i].value);\n      }\n  }\n\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlyoutOptionConfig.html":{"url":"interfaces/IFlyoutOptionConfig.html","title":"interface - IFlyoutOptionConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlyoutOptionConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nexport enum IFlyoutOptionType {\n  text = 'text',\n  checkbox = 'checkbox',\n  dropdown = 'dropdown',\n  line = 'line',\n  heading = 'heading'\n}\n\nexport interface IFlyoutOptionConfig {\n  id?: string,\n  value: string,\n  selected?: boolean,\n  active?: boolean,\n  disabled?: boolean,\n  type?: keyof typeof IFlyoutOptionType,\n  clickable?: boolean\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout-option',\n  templateUrl: './flyout-option.component.html'\n})\nexport class FlyoutOptionComponent implements OnInit {\n\n  @Input() config : IFlyoutOptionConfig = {\n    id: '',\n    value: 'Blank label'\n  }\n\n  @Input() id? : string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'text';\n    if((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false) this.config.clickable = true;\n    if(this.id) this.config.id = this.id;\n  };\n\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHiddenNavConfig.html":{"url":"interfaces/IHiddenNavConfig.html","title":"interface - IHiddenNavConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHiddenNavConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipLinks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipLinks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipLinks:         ISkipLinkConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISkipLinkConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIconButtonComponentConfig.html":{"url":"interfaces/IIconButtonComponentConfig.html","title":"interface - IIconButtonComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconButtonComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IIconButtonIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IIconButtonIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIconButtonIconConfig.html":{"url":"interfaces/IIconButtonIconConfig.html","title":"interface - IIconButtonIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconButtonIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIconConfig.html":{"url":"interfaces/IIconConfig.html","title":"interface - IIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon/icon.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FA_keywords\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FA_keywords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FA_keywords:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface IIconConfig {\n  ariaLabel?: string;\n  FA_keywords?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent implements OnChanges {\n  @ViewChild('iconSpan') iconSpan!: ElementRef;\n  @Input() config: IIconConfig = {};\n  @Input() ariaLabel?: string;\n  @Input() FA_keywords?: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config'] && !changes['config'].firstChange) {\n      const change = changes['config'].currentValue;\n      const keys = Object.keys(change);\n      let spanContent = ``;\n      this.iconSpan.nativeElement.innerHTML = spanContent;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIndicatorConfig.html":{"url":"interfaces/IIndicatorConfig.html","title":"interface - IIndicatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIndicatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            palette\n                                        \n                                \n                                \n                                        \n                                            purpose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        palette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        palette:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purpose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        purpose:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IndicatorType {\n  dot,\n  text,\n  number\n}\n\nexport enum IndicatorTreatment {\n  strong = 'strong',\n  weak = 'weak'\n}\n\nexport enum IndicatorPurpose {\n  status = 'status',\n  palette = 'palette'\n}\n\nexport enum IndicatorStatus {\n  information = 'information',\n  warning = 'warning',\n  critical = 'critical',\n  neutral = 'neutral',\n  primary = 'primary',\n  success = 'success'\n}\n\nexport enum IndicatorPalette {\n  teal,\n  orange,\n  red,\n  grey,\n  blue,\n  green,\n  purple,\n  navy\n}\n\nexport interface IIndicatorConfig {\n  label?: string | number;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof IndicatorType;\n  icon?: string;\n  category: keyof typeof IndicatorTreatment; // Treatment\n  purpose: keyof typeof IndicatorPurpose;\n  status?: keyof typeof IndicatorStatus; // Sentiment\n  palette?: keyof typeof IndicatorPalette; // Colour\n  ariaLabel?: string; // Aria label line of value\n}\n\n@Component({\n  selector: 'lib-indicator',\n  templateUrl: './indicator.component.html'\n})\nexport class IndicatorComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: IIndicatorConfig = {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  };\n  @ViewChild('label') label?: ElementRef;\n  EIndicatorStatus = IndicatorStatus;\n  rounded?: boolean;\n  abbr?: boolean; // Display abbr tag when text is truncated\n\n  ngOnInit() {\n    this.checkLabelRounded();\n    this.checkNumber();\n  }\n\n  ngAfterViewInit() {\n    this.checkLabelLength();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.checkNumber();\n    this.checkLabelRounded();\n    this.checkLabelLength();\n  }\n\n  // Check if number exceeds 99\n  private checkNumber() {\n    if (\n      this.config.type === 'number' &&\n      this.config?.label &&\n      this.config.label > 99\n    ) {\n      this.config.label = '99+';\n    }\n  }\n\n  // If label only have 1 character, it should be rounded\n  private checkLabelRounded() {\n    if (typeof this.config?.label === 'string') {\n      this.rounded = this.config.label.length == 1 && !this.config.icon;\n    }\n  }\n\n  // Check if div exceeds 200px\n  private checkLabelLength() {\n    // Max 200px - padding 8px x2\n    this.abbr = (\n      (this.label?.nativeElement?.offsetWidth &&\n        this.label?.nativeElement?.offsetWidth > 184)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInputComponentConfig.html":{"url":"interfaces/IInputComponentConfig.html","title":"interface - IInputComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInputComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/input/input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IInputComponentConfig {\n  label?: string;\n  hint?: string;\n  desc?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  type?: keyof typeof InputTypes;\n  id: string;\n  size?: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password'\n}\n@Component({\n  selector: 'ircc-cl-lib-input',\n  templateUrl: './input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\n/**\n* \n*/\nexport class InputComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  /**\n   * Note: DON'T include default values of '' unless it REALLY makes sense to do so - instead, make them optional.\n   * The config input is where you declare the inputs desired properties such as labels, hints, descriptions, etc. where only the id and form group are mandatory properties. Refer to IInputComponentConfig interface.\n*/\n  @Input() config: IInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  /**\n* The input id is used to identify the component uniquely for subscribing to value changes and errors\n*/\n  @Input() id = '';\n\n  /**\n  * \n  The form group is the form name each of the configurable options will share and can be subscribed to\n  */\n  @Input() formGroup = this.formGroupEmpty;\n\n  /**\n  * Type refers to the 2 different input options: basic text or password as the password type has additional configuration\n  */\n  @Input() type: keyof typeof InputTypes = InputTypes.password;\n\n  disabled = false;\n  focusState = false;\n  showPassword?: boolean;\n  typeControl: keyof typeof InputTypes = InputTypes.text;\n  ariaText = 'Text Input';\n  errorIds: IErrorIDs[] = [];\n  errorAria = '';\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  /**\n * When the page loads, we initialize the form with it's controls, labels, and config, and detect value changes and errors. setLang detects changes to the language toggle to serve the correct text\n */\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (!this.config.type) {\n      this.config.type = InputTypes.text;\n    } else if (this.config.type === InputTypes.password) {\n      this.showPassword = false;\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n\n    this.type === InputTypes.text\n      ? (this.showPassword = false)\n      : (this.showPassword = true);\n\n    //set disable to true when form is disabled\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      if (change[this.config.id] === undefined) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n  /**\n* setLang detects changes to the language toggle to serve the correct aria error text\n*/\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n* \n*/\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n  * Apply focus state\n  */\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n\n    if (this.showPassword) {\n      this.typeControl = InputTypes.text;\n      this.ariaText = 'Text Input';\n    } else {\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n  }\n\n  /**\n* \n*/\n  public clearvalue() { }\n  writeValue(value: string): void { }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelConfig.html":{"url":"interfaces/ILabelConfig.html","title":"interface - ILabelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILabelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconButton\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            parentID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            touched\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconButton:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touched\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        touched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelIconConfig.html":{"url":"interfaces/ILabelIconConfig.html","title":"interface - ILabelIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILabelIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ariaText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            colour\n                                        \n                                \n                                \n                                        \n                                            iconClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colour:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILinkComponentConfig.html":{"url":"interfaces/ILinkComponentConfig.html","title":"interface - ILinkComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILinkComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            href\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linkKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overflow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routerLink\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overflow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overflow:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport interface ILinkComponentConfig {\n  text: string;\n  linkKey?: string;\n  href?: string;\n  routerLink?: string;\n  overflow?: boolean;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb-link',\n  templateUrl: './link.component.html'\n})\nexport class BreadcrumbLinkComponent {\n  @Input() config: ILinkComponentConfig = {\n    text: '',\n    overflow: false\n  };\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOption.html":{"url":"interfaces/IOption.html","title":"interface - IOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewChild\n} from '@angular/core';\nimport { InputComponent } from '../../form-components/input/input.component';\n//TODO: This should be changed. Ideally the component doesn't need to know about these, and can just\n//add them in using the template.\nimport { ChipItemComponent } from '../chips/chip-item/chip-item.component';\n\ninterface IOption {\n  //Changed: Interfaces should ALWAYS start with 'I'.\n  text: string;\n  value: string;\n}\n\n@Component({\n  selector: 'lib-autocomplete',\n  templateUrl: './autocomplete.component.html'\n})\nexport class AutocompleteComponent implements OnInit, DoCheck {\n  @ViewChild(InputComponent, { static: true })\n  inputComponent?: InputComponent;\n\n  //TODO: Change this to a config\n  @Input() options: IOption[] = [];\n  @Input() title = `Title`;\n  @Input() hintText = `Hint Text`;\n  @Input() name = `Add Name`;\n  @Input() error = false;\n  @Input() limit = 0;\n  @Output() selectValueChange = new EventEmitter();\n  @Input() savedSelectedOptions: IOption[] = [];\n\n  selectedOptions: IOption[] = [];\n  originalOptions: IOption[] = [];\n  inputValue?: string;\n  hideDropdown = true;\n  isFocusInsideComponent = false;\n  isComponentClicked = false;\n  addHover = false;\n  emptyResults = false;\n\n  differ: KeyValueDiffer;\n  constructor(private differs: KeyValueDiffers) {\n    this.differ = this.differs.find({}).create();\n  }\n\n  @HostListener('window:keydown.escape', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (this.hideDropdown === false || this.options.length > 0) {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  clickInside(event: { target: HTMLInputElement }) {\n    const target = event.target;\n    if (\n      this.hideDropdown === true &&\n      target.type === `text` &&\n      this.options.length > 0\n    ) {\n      this.isFocusInsideComponent = true;\n      this.isComponentClicked = true;\n      this.toggleDropDown();\n      this.addHover = true;\n    } else if (\n      target.classList.contains('select-target') ||\n      target.classList.contains(`selected`)\n    ) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.toggleDropDown();\n    }\n  }\n\n  @HostListener('document:click')\n  clickout() {\n    if (!this.isFocusInsideComponent && this.isComponentClicked) {\n      this.toggleDropDown();\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n    }\n    this.isFocusInsideComponent = false;\n  }\n\n  onMouseEnter() {\n    this.addHover = false;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this);\n    if (change) {\n      change.forEachChangedItem((item) => {\n        if (item.key === `options`) {\n          this.selectValueChange.emit(this.selectedOptions);\n        }\n      });\n    }\n  }\n\n  valueChange(event: any) {\n    this.filterList(event);\n  }\n\n  filterList(filterValue: any) {\n    if (filterValue.length  {\n        return value.text.toLowerCase().includes(filterValue.toLowerCase());\n      });\n      this.options = filteredOptions.slice(0);\n      if (this.options.length === 0) {\n        this.emptyResults = true;\n      } else {\n        this.emptyResults = false;\n      }\n    }\n  }\n\n  public checkActive(value: string): boolean {\n    for (const selectedOption of this.selectedOptions) {\n      if (selectedOption.value === value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  returnOptionsToDefault() {\n    this.emptyResults = false;\n    this.options = this.originalOptions.slice(0);\n  }\n\n  public toggleDropDown() {\n    this.hideDropdown = !this.hideDropdown;\n    this.inputComponent?.focusInput(this.hideDropdown);\n  }\n\n  public toggleDropDownKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.toggleDropDown();\n    }\n  }\n\n  removeChipItem(index: number) {\n    this.selectedOptions.splice(index, 1);\n    this.returnOptionsToDefault();\n  }\n\n  public removeAllChipItems() {\n    this.selectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n\n  public selectAll() {\n    for (const option of this.options) {\n      this.selectedOptions.push(option);\n    }\n    this.returnOptionsToDefault();\n  }\n\n  public selectIndex(index: number) {\n    if (this.limit !== 0 && this.selectedOptions.length >= this.limit) {\n      return;\n    } else {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      if (this.checkDuplicated(index) === false) {\n        this.selectedOptions.push(this.options[index]);\n      }\n    }\n  }\n\n  checkDuplicated(index: number) {\n    return this.selectedOptions.some((element: { value: string }) => {\n      if (element.value === this.options[index].value) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedOptions = [];\n    this.originalOptions = this.options.slice(0);\n    this.selectedOptions = this.savedSelectedOptions;\n    this.savedSelectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProgressIndicatorConfig.html":{"url":"interfaces/IProgressIndicatorConfig.html","title":"interface - IProgressIndicatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProgressIndicatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orientation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            steps\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:         IStepConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IStepConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProgressTagsConfig.html":{"url":"interfaces/IProgressTagsConfig.html","title":"interface - IProgressTagsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProgressTagsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport const TAG_LABELS_EN = [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n];\nexport const TAG_LABELS_FR = [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n];\n\nexport enum TagType {\n  primary = 'primary',\n  success = 'success',\n  critical = 'critical',\n  locked = 'locked',\n  notStarted = 'notStarted'\n}\nexport interface IProgressTagsConfig {\n  id: string;\n  type?: keyof typeof TagType;\n  size?: keyof typeof DSSizes;\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-tags',\n  templateUrl: './progress-tags.component.html'\n})\nexport class ProgressTagsComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: IProgressTagsConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof TagType | TagType;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = TAG_LABELS_EN;\n    } else {\n      this.text = TAG_LABELS_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioInputComponentConfig.html":{"url":"interfaces/IRadioInputComponentConfig.html","title":"interface - IRadioInputComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRadioInputComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            helpText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helpText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helpText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         IRadioInputOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRadioInputOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:     ValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioInputOption.html":{"url":"interfaces/IRadioInputOption.html","title":"interface - IRadioInputOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRadioInputOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizeOverride\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeOverride\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeOverride:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchInputButtonConfig.html":{"url":"interfaces/ISearchInputButtonConfig.html","title":"interface - ISearchInputButtonConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchInputButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            colour\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colour:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchInputConfig.html":{"url":"interfaces/ISearchInputConfig.html","title":"interface - ISearchInputConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchInputConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholderText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchButton\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholderText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchButton:         ISearchInputButtonConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISearchInputButtonConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectConfig.html":{"url":"interfaces/ISelectConfig.html","title":"interface - ISelectConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISelectConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/select/select.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableError\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ISelectOptionsConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectOptionsConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectOptionsConfig.html":{"url":"interfaces/ISelectOptionsConfig.html","title":"interface - ISelectOptionsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISelectOptionsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/select/select.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISkipLinkConfig.html":{"url":"interfaces/ISkipLinkConfig.html","title":"interface - ISkipLinkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISkipLinkConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpinnerConfig.html":{"url":"interfaces/ISpinnerConfig.html","title":"interface - ISpinnerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISpinnerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orientation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  DSFullSizes,\n  DSOrientations\n} from '../../../shared/constants/jl-components.constants';\n\nexport const SPINNER_LABELS_EN = ['Loading', 'Success', 'Error'];\nexport const SPINNER_LABELS_FR = ['Chargement', 'Succès', 'Erreur'];\n\nexport enum SpinnerType {\n  active = 'active',\n  success = 'success',\n  critical = 'critical'\n}\nexport interface ISpinnerConfig {\n  id: string;\n  type?: keyof typeof SpinnerType;\n  size?: keyof typeof DSFullSizes;\n  orientation?: keyof typeof DSOrientations;\n  label?: string;\n  description?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-spinner',\n  templateUrl: './spinner.component.html'\n})\nexport class SpinnerComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: ISpinnerConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof SpinnerType | SpinnerType;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() orientation?: keyof typeof DSOrientations | DSOrientations;\n  @Input() label?: '';\n  @Input() description?: '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    if (!this.config.size) this.config.size = 'large';\n\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    this.removeVertical();\n\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = SPINNER_LABELS_EN;\n    } else {\n      this.text = SPINNER_LABELS_FR;\n    }\n  }\n\n  removeVertical() {\n    if (\n      this.config.size !== 'large' &&\n      this.config.orientation === 'vertical'\n    ) {\n      this.config.orientation = 'horizontal';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStepConfig.html":{"url":"interfaces/IStepConfig.html","title":"interface - IStepConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStepConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tagConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tagConfig:         IProgressTagsConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProgressTagsConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITabConfig.html":{"url":"interfaces/ITabConfig.html","title":"interface - ITabConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITabConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITabNavConfig.html":{"url":"interfaces/ITabNavConfig.html","title":"interface - ITabNavConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITabNavConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tab\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ITabConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITabConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITextareaComponentConfig.html":{"url":"interfaces/ITextareaComponentConfig.html","title":"interface - ITextareaComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITextareaComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            charLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resizable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorIcon:         IErrorIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IErrorIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizable:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorIconConfig } from '../error/error.component';\n\nexport interface ITextareaComponentConfig {\n  formGroup: FormGroup;\n  id: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  charLimit?: string;\n  resizable?: keyof typeof ResizableTypes;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  errorIcon?: IErrorIconConfig;\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum ResizableTypes {\n  vertical = 'vertical',\n  horizontal = 'password',\n  both = 'both',\n  none = 'none'\n}\n\n@Component({\n  selector: 'ircc-cl-lib-textarea',\n  templateUrl: './textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: ITextareaComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() charLimit = '';\n\n  disabled = false;\n  focusState = false;\n  errorIds: IErrorIDs[] = [];\n  charLimitStatus = '';\n  currentCharacterStatusAria = '';\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n\n  constructor(public standAloneFunctions: StandAloneFunctions) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit(): void {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.charLimit !== '') {\n      this.config.charLimit = this.charLimit;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.characterCountStatus(\n        this.config.formGroup.controls[this.config.id].value.length\n      );\n    }\n\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.characterCountStatus(change[this.config.id]?.length);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  characterCountStatus(currCharCount: any) {\n    if (this.config?.charLimit) {\n      if (this.config?.charLimit == currCharCount) {\n        this.charLimitStatus = 'maxLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.maxLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount == 15) {\n        this.charLimitStatus = 'warningLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.warningLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconButtonComponent.html":{"url":"components/IconButtonComponent.html","title":"component - IconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-icon-button\n            \n\n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                category\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :      | IconButtonCategories\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         IIconButtonIconConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSFullSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClick\n                        \n                    \n                \n            \n            \n                \nbuttonClick(id)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.config.id\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/icon/icon.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconSpan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                config\n                            \n                            \n                                FA_keywords\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIconConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FA_keywords\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconSpan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('iconSpan')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface IIconConfig {\n  ariaLabel?: string;\n  FA_keywords?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent implements OnChanges {\n  @ViewChild('iconSpan') iconSpan!: ElementRef;\n  @Input() config: IIconConfig = {};\n  @Input() ariaLabel?: string;\n  @Input() FA_keywords?: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config'] && !changes['config'].firstChange) {\n      const change = changes['config'].currentValue;\n      const keys = Object.keys(change);\n      let spanContent = ``;\n      this.iconSpan.nativeElement.innerHTML = spanContent;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndicatorComponent.html":{"url":"components/IndicatorComponent.html","title":"component - IndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-indicator\n            \n\n\n\n\n            \n                templateUrl\n                ./indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                abbr\n                            \n                            \n                                EIndicatorStatus\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLabelLength\n                            \n                            \n                                    Private\n                                checkLabelRounded\n                            \n                            \n                                    Private\n                                checkNumber\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIndicatorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:66\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkLabelLength\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkLabelLength()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkLabelRounded\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkLabelRounded()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkNumber()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        abbr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EIndicatorStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : IndicatorStatus\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('label')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rounded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IndicatorType {\n  dot,\n  text,\n  number\n}\n\nexport enum IndicatorTreatment {\n  strong = 'strong',\n  weak = 'weak'\n}\n\nexport enum IndicatorPurpose {\n  status = 'status',\n  palette = 'palette'\n}\n\nexport enum IndicatorStatus {\n  information = 'information',\n  warning = 'warning',\n  critical = 'critical',\n  neutral = 'neutral',\n  primary = 'primary',\n  success = 'success'\n}\n\nexport enum IndicatorPalette {\n  teal,\n  orange,\n  red,\n  grey,\n  blue,\n  green,\n  purple,\n  navy\n}\n\nexport interface IIndicatorConfig {\n  label?: string | number;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof IndicatorType;\n  icon?: string;\n  category: keyof typeof IndicatorTreatment; // Treatment\n  purpose: keyof typeof IndicatorPurpose;\n  status?: keyof typeof IndicatorStatus; // Sentiment\n  palette?: keyof typeof IndicatorPalette; // Colour\n  ariaLabel?: string; // Aria label line of value\n}\n\n@Component({\n  selector: 'lib-indicator',\n  templateUrl: './indicator.component.html'\n})\nexport class IndicatorComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: IIndicatorConfig = {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  };\n  @ViewChild('label') label?: ElementRef;\n  EIndicatorStatus = IndicatorStatus;\n  rounded?: boolean;\n  abbr?: boolean; // Display abbr tag when text is truncated\n\n  ngOnInit() {\n    this.checkLabelRounded();\n    this.checkNumber();\n  }\n\n  ngAfterViewInit() {\n    this.checkLabelLength();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.checkNumber();\n    this.checkLabelRounded();\n    this.checkLabelLength();\n  }\n\n  // Check if number exceeds 99\n  private checkNumber() {\n    if (\n      this.config.type === 'number' &&\n      this.config?.label &&\n      this.config.label > 99\n    ) {\n      this.config.label = '99+';\n    }\n  }\n\n  // If label only have 1 character, it should be rounded\n  private checkLabelRounded() {\n    if (typeof this.config?.label === 'string') {\n      this.rounded = this.config.label.length == 1 && !this.config.icon;\n    }\n  }\n\n  // Check if div exceeds 200px\n  private checkLabelLength() {\n    // Max 200px - padding 8px x2\n    this.abbr = (\n      (this.label?.nativeElement?.offsetWidth &&\n        this.label?.nativeElement?.offsetWidth > 184)\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ config?.label }}\n    \n    \n      {{ config?.label }}\n    \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ config?.label }}              {{ config?.label }}          '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoTextSmallComponent.html":{"url":"components/InfoTextSmallComponent.html","title":"component - InfoTextSmallComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoTextSmallComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/info-text-small/info-text-small.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-text-small\n            \n\n            \n                styleUrls\n                ./info-text-small.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-text-small.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                circleInfoIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/info-text-small/info-text-small.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        circleInfoIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    FA_keywords: 'f05a',\n    ariaLabel: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/info-text-small/info-text-small.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IIconConfig } from 'ircc-ds-angular-component-library';\n\n@Component({\n  selector: 'app-info-text-small',\n  templateUrl: './info-text-small.component.html',\n  styleUrls: ['./info-text-small.component.scss']\n})\nexport class InfoTextSmallComponent {\n  circleInfoIcon: IIconConfig = {\n    FA_keywords: 'f05a',\n    ariaLabel: ''\n  };\n\n  constructor() {}\n}\n\n    \n\n    \n         -->\n\n  \n\n\n    \n\n    \n                \n                    ./info-text-small.component.scss\n                \n                :host {\n  small {\n    margin-left: 6px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoTextSmallComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/input/input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-input\n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ariaText\n                            \n                            \n                                disabled\n                            \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                focusState\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                    Private\n                                    Optional\n                                onChange\n                            \n                            \n                                    Private\n                                    Optional\n                                onTouch\n                            \n                            \n                                    Optional\n                                showPassword\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                            \n                                typeControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearvalue\n                            \n                            \n                                    Public\n                                focusInput\n                            \n                            \n                                getAriaErrorText\n                            \n                            \n                                hideShow\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getErrorState\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IInputComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:60\n                            \n                        \n                \n                    \n                        Note: DON'T include default values of '' unless it REALLY makes sense to do so - instead, make them optional.\nThe config input is where you declare the inputs desired properties such as labels, hints, descriptions, etc. where only the id and form group are mandatory properties. Refer to IInputComponentConfig interface.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:73\n                            \n                        \n                \n                    \n                        The form group is the form name each of the configurable options will share and can be subscribed to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:67\n                            \n                        \n                \n                    \n                        The input id is used to identify the component uniquely for subscribing to value changes and errors\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : InputTypes.password\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:78\n                            \n                        \n                \n                    \n                        Type refers to the 2 different input options: basic text or password as the password type has additional configuration\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearvalue\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearvalue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:245\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        focusInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusInput(focusValue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:223\n                \n            \n\n\n            \n                \n                    Apply focus state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focusValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:174\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideShow\n                        \n                    \n                \n            \n            \n                \nhideShow()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:230\n                \n            \n\n\n            \n                \n                    Toggle the password field\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:107\n                \n            \n\n\n            \n                \n                    When the page loads, we initialize the form with it's controls, labels, and config, and detect value changes and errors. setLang detects changes to the language toggle to serve the correct text\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:188\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:195\n                \n            \n\n\n            \n                \n                    setLang detects changes to the language toggle to serve the correct aria error text\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ariaText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Text Input'\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : InputTypes.text\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:83\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getErrorState\n                    \n                \n\n                \n                    \n                        getgetErrorState()\n                    \n                \n                            \n                                \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:260\n                                \n                            \n                    \n                        \n                                Return error state from FormGroup, must be touched & invalid\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IInputComponentConfig {\n  label?: string;\n  hint?: string;\n  desc?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  type?: keyof typeof InputTypes;\n  id: string;\n  size?: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password'\n}\n@Component({\n  selector: 'ircc-cl-lib-input',\n  templateUrl: './input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\n/**\n* \n*/\nexport class InputComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  /**\n   * Note: DON'T include default values of '' unless it REALLY makes sense to do so - instead, make them optional.\n   * The config input is where you declare the inputs desired properties such as labels, hints, descriptions, etc. where only the id and form group are mandatory properties. Refer to IInputComponentConfig interface.\n*/\n  @Input() config: IInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  /**\n* The input id is used to identify the component uniquely for subscribing to value changes and errors\n*/\n  @Input() id = '';\n\n  /**\n  * \n  The form group is the form name each of the configurable options will share and can be subscribed to\n  */\n  @Input() formGroup = this.formGroupEmpty;\n\n  /**\n  * Type refers to the 2 different input options: basic text or password as the password type has additional configuration\n  */\n  @Input() type: keyof typeof InputTypes = InputTypes.password;\n\n  disabled = false;\n  focusState = false;\n  showPassword?: boolean;\n  typeControl: keyof typeof InputTypes = InputTypes.text;\n  ariaText = 'Text Input';\n  errorIds: IErrorIDs[] = [];\n  errorAria = '';\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  /**\n * When the page loads, we initialize the form with it's controls, labels, and config, and detect value changes and errors. setLang detects changes to the language toggle to serve the correct text\n */\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (!this.config.type) {\n      this.config.type = InputTypes.text;\n    } else if (this.config.type === InputTypes.password) {\n      this.showPassword = false;\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n\n    this.type === InputTypes.text\n      ? (this.showPassword = false)\n      : (this.showPassword = true);\n\n    //set disable to true when form is disabled\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      if (change[this.config.id] === undefined) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n  /**\n* setLang detects changes to the language toggle to serve the correct aria error text\n*/\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n* \n*/\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n  * Apply focus state\n  */\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n\n    if (this.showPassword) {\n      this.typeControl = InputTypes.text;\n      this.ariaText = 'Text Input';\n    } else {\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n  }\n\n  /**\n* \n*/\n  public clearvalue() { }\n  writeValue(value: string): void { }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n          \n\n          \n            \n              \n            \n            \n              \n            \n          \n        \n      \n      \n        \n          {{\n            errorStubText + ': ' + (config.label || '' | translate) + ': '\n          }}\n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                      {{            errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'          }}                                                                              '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InteractiveDemoComponent.html":{"url":"components/InteractiveDemoComponent.html","title":"component - InteractiveDemoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InteractiveDemoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/interactive-demo/interactive-demo.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-interactive-demo\n            \n\n            \n                styleUrls\n                ./interactive-demo.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./interactive-demo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordionConfig\n                            \n                            \n                                iconConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accordionConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAccordionContainerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'InteractiveDemoComponentAcccordion',\n    open: true,\n    buttonText: 'DEMO_COMPONENT.ACCORDION_OPEN',\n    buttonTextClosed: 'DEMO_COMPONENT.ACCORDION_CLOSED'\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonIconConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    class: 'fa-light fa-chevron-down'\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IIconButtonIconConfig } from 'ircc-ds-angular-component-library';\nimport { IAccordionContainerConfig } from '../accordion-panel/accordion-container.component';\n\nexport enum ComponentType {\n  banner = 'banner'\n}\n\n@Component({\n  selector: 'app-interactive-demo',\n  templateUrl: './interactive-demo.component.html',\n  styleUrls: ['./interactive-demo.component.scss']\n})\nexport class InteractiveDemoComponent implements OnInit {\n  iconConfig: IIconButtonIconConfig = {\n    class: 'fa-light fa-chevron-down'\n  };\n\n  /*\n   This variable is added to the class of component container,\n   it is being used to overrride background color for interactive\n   component specifically for Banner in the scss file, since \n   banner has a white background and rest have a grey background.\n  */\n  @Input() componentType?: keyof typeof ComponentType;\n\n  accordionConfig: IAccordionContainerConfig = {\n    id: 'InteractiveDemoComponentAcccordion',\n    open: true,\n    buttonText: 'DEMO_COMPONENT.ACCORDION_OPEN',\n    buttonTextClosed: 'DEMO_COMPONENT.ACCORDION_CLOSED'\n  };\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./interactive-demo.component.scss\n                \n                @use \"../../../../../core-library/tokens/sizes\" as token-size;\n@use \"../../../../../core-library/util/size\" as size;\n@use \"../../../../../core-library/tokens/sizes\";\n\n.container {\n  border-radius: 5px;\n  padding-bottom: 4px;\n  border-width: sizes.$fixed-1;\n  border-color: var(--neutral-border);\n  border-style: solid;\n\n  .test_component {\n    background-color: var(--surface2);\n    display: flex;\n    justify-content: center;\n    border-top: sizes.$fixed-1 solid var(--divider);\n  }\n\n  .banner {\n    background-color: var(--surface1);\n  }\n\n  .hide-show-button {\n    width: 100%;\n    max-width: 100%;\n    display: flex;\n    align-items: center;\n    height: 48px;\n  }\n\n  .icon-container {\n    padding-right: 9px;\n  }\n\n  .flip-chevron {\n    .custom-chevron {\n      transform: rotateZ(180deg);\n    }\n  }\n\n  .toggles {\n    margin: 16px 28px 24px;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    row-gap: 24px;\n  }\n\n  .tabs {\n    padding: 12px 12px 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InteractiveDemoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularBannerModule.html":{"url":"modules/IrccDsAngularBannerModule.html","title":"module - IrccDsAngularBannerModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularBannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularBannerModule\n\n\n\ncluster_IrccDsAngularBannerModule_exports\n\n\n\ncluster_IrccDsAngularBannerModule_declarations\n\n\n\n\nBannerComponent\n\nBannerComponent\n\n\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule -->\n\nBannerComponent->IrccDsAngularBannerModule\n\n\n\n\n\nBannerComponent \n\nBannerComponent \n\nBannerComponent  -->\n\nIrccDsAngularBannerModule->BannerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/ircc-ds-angular-banner.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BannerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BannerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BannerComponent } from './banner/banner.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [BannerComponent],\n  imports: [IrccDsAngularComponentsSharedModule, CommonModule, TranslateModule],\n  exports: [BannerComponent]\n})\nexport class IrccDsAngularBannerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularComponentsSharedModule.html":{"url":"modules/IrccDsAngularComponentsSharedModule.html","title":"module - IrccDsAngularComponentsSharedModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularComponentsSharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularComponentsSharedModule\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_exports\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_declarations\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\n\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbLinkComponent\n\nBreadcrumbLinkComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbLinkComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nDropdownComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutComponent\n\nFlyoutComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutOptionComponent\n\nFlyoutOptionComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutOptionComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIndicatorComponent\n\nIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nLabelComponent\n\nLabelComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nLabelComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressIndicatorComponent\n\nProgressIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressTagsComponent\n\nProgressTagsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressTagsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nSpinnerComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nTabsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbComponent \n\n\n\n\n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbLinkComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->ButtonComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nIrccDsAngularComponentsSharedModule->DropdownComponent \n\n\n\n\n\nFlyoutComponent \n\nFlyoutComponent \n\nFlyoutComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutComponent \n\n\n\n\n\nFlyoutOptionComponent \n\nFlyoutOptionComponent \n\nFlyoutOptionComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutOptionComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconComponent \n\n\n\n\n\nIndicatorComponent \n\nIndicatorComponent \n\nIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->IndicatorComponent \n\n\n\n\n\nLabelComponent \n\nLabelComponent \n\nLabelComponent  -->\n\nIrccDsAngularComponentsSharedModule->LabelComponent \n\n\n\n\n\nProgressIndicatorComponent \n\nProgressIndicatorComponent \n\nProgressIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressIndicatorComponent \n\n\n\n\n\nProgressTagsComponent \n\nProgressTagsComponent \n\nProgressTagsComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressTagsComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nIrccDsAngularComponentsSharedModule->SpinnerComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nIrccDsAngularComponentsSharedModule->TabsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            BreadcrumbLinkComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FlyoutComponent\n                        \n                        \n                            FlyoutOptionComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            IndicatorComponent\n                        \n                        \n                            LabelComponent\n                        \n                        \n                            ProgressIndicatorComponent\n                        \n                        \n                            ProgressTagsComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            BreadcrumbLinkComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FlyoutComponent\n                        \n                        \n                            FlyoutOptionComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            IndicatorComponent\n                        \n                        \n                            LabelComponent\n                        \n                        \n                            ProgressIndicatorComponent\n                        \n                        \n                            ProgressTagsComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonComponent } from './button/button.component';\nimport { IconComponent } from './icon/icon.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { ProgressTagsComponent } from './progress-tags/progress-tags.component';\nimport { DropdownComponent } from './dropdown/drop-down.component';\nimport { LabelComponent } from './label/label.component';\nimport { ProgressIndicatorComponent } from './progress-indicator/progress-indicator.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { BreadcrumbLinkComponent } from './breadcrumb/link/link.component';\nimport { IndicatorComponent } from './indicator/indicator.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { DomChangeDirective } from \"../../shared/directives/dom-change.directive\";\nimport { FlyoutComponent } from './flyout/flyout.component';\nimport { FlyoutOptionComponent } from './flyout-option/flyout-option.component';\n\nconst IrccDsSharedComponents = [\n  ButtonComponent,\n  BreadcrumbComponent,\n  BreadcrumbLinkComponent,\n  IconComponent,\n  IconButtonComponent,\n  IndicatorComponent,\n  TabsComponent,\n  ProgressTagsComponent,\n  DropdownComponent,\n  LabelComponent,\n  ProgressTagsComponent,\n  ProgressIndicatorComponent,\n  SpinnerComponent,\n  FlyoutComponent,\n  FlyoutOptionComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsSharedComponents, DomChangeDirective],\n  imports: [CommonModule, TranslateModule, RouterModule],\n  exports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule,\n    ...IrccDsSharedComponents\n  ]\n})\nexport class IrccDsAngularComponentsSharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularFormComponentsModule.html":{"url":"modules/IrccDsAngularFormComponentsModule.html","title":"module - IrccDsAngularFormComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularFormComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularFormComponentsModule\n\n\n\ncluster_IrccDsAngularFormComponentsModule_exports\n\n\n\ncluster_IrccDsAngularFormComponentsModule_declarations\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule -->\n\nCheckboxComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nDatePickerComponent\n\nDatePickerComponent\n\nIrccDsAngularFormComponentsModule -->\n\nDatePickerComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nIrccDsAngularFormComponentsModule -->\n\nErrorComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nRadioInputComponent\n\nRadioInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nRadioInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nIrccDsAngularFormComponentsModule -->\n\nSelectComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\nIrccDsAngularFormComponentsModule -->\n\nTextareaComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nIrccDsAngularFormComponentsModule->CheckboxComponent \n\n\n\n\n\nDatePickerComponent \n\nDatePickerComponent \n\nDatePickerComponent  -->\n\nIrccDsAngularFormComponentsModule->DatePickerComponent \n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nIrccDsAngularFormComponentsModule->ErrorComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIrccDsAngularFormComponentsModule->InputComponent \n\n\n\n\n\nRadioInputComponent \n\nRadioInputComponent \n\nRadioInputComponent  -->\n\nIrccDsAngularFormComponentsModule->RadioInputComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nIrccDsAngularFormComponentsModule->SelectComponent \n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nIrccDsAngularFormComponentsModule->TextareaComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                        \n                            DatePickerComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioInputComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            TextareaComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                        \n                            DatePickerComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioInputComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            TextareaComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorComponent } from './error/error.component';\nimport { InputComponent } from './input/input.component';\nimport { RadioInputComponent } from './radio-input/radio-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TextareaComponent } from './textarea/textarea.component';\nimport { SelectComponent } from './select/select.component';\n\nconst IrccDsAngularFormComponents = [\n  CheckboxComponent,\n  ErrorComponent,\n  InputComponent,\n  RadioInputComponent,\n  DatePickerComponent,\n  TextareaComponent,\n  SelectComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsAngularFormComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsAngularFormComponents]\n})\nexport class IrccDsAngularFormComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularHeaderFooterModule.html":{"url":"modules/IrccDsAngularHeaderFooterModule.html","title":"module - IrccDsAngularHeaderFooterModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularHeaderFooterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularHeaderFooterModule\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_declarations\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule -->\n\nFooterComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHeaderComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHiddenNavComponent\n\nHiddenNavComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHiddenNavComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nLanguageSwitchComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nIrccDsAngularHeaderFooterModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nIrccDsAngularHeaderFooterModule->HeaderComponent \n\n\n\n\n\nHiddenNavComponent \n\nHiddenNavComponent \n\nHiddenNavComponent  -->\n\nIrccDsAngularHeaderFooterModule->HiddenNavComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nIrccDsAngularHeaderFooterModule->LanguageSwitchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HiddenNavComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HiddenNavComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LanguageSwitchComponent } from './language-switch/language-switch.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HiddenNavComponent } from './hidden-nav/hidden-nav.component';\n\nconst IrccDsHeaderFooterComponents = [\n  HeaderComponent,\n  FooterComponent,\n  LanguageSwitchComponent,\n  HiddenNavComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsHeaderFooterComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsHeaderFooterComponents]\n})\nexport class IrccDsAngularHeaderFooterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularLegacyOldModule.html":{"url":"modules/IrccDsAngularLegacyOldModule.html","title":"module - IrccDsAngularLegacyOldModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularLegacyOldModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularLegacyOldModule\n\n\n\ncluster_IrccDsAngularLegacyOldModule_declarations\n\n\n\ncluster_IrccDsAngularLegacyOldModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule -->\n\nAutocompleteComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipItemComponent\n\nChipItemComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipItemComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipListComponent\n\nChipListComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipListComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSearchInputComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSecondaryChipsComponent\n\nSecondaryChipsComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSecondaryChipsComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nIrccDsAngularLegacyOldModule->AutocompleteComponent \n\n\n\n\n\nChipItemComponent \n\nChipItemComponent \n\nChipItemComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipItemComponent \n\n\n\n\n\nChipListComponent \n\nChipListComponent \n\nChipListComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipListComponent \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nIrccDsAngularLegacyOldModule->SearchInputComponent \n\n\n\n\n\nSecondaryChipsComponent \n\nSecondaryChipsComponent \n\nSecondaryChipsComponent  -->\n\nIrccDsAngularLegacyOldModule->SecondaryChipsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ChipItemComponent\n                        \n                        \n                            ChipListComponent\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            SecondaryChipsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ChipItemComponent\n                        \n                        \n                            ChipListComponent\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            SecondaryChipsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { ChipListComponent } from './chips/chip-list/chip-list.component';\nimport { SecondaryChipsComponent } from './chips/secondary-chips/secondary-chips.component';\nimport { ChipItemComponent } from './chips/chip-item/chip-item.component';\nimport { SearchInputComponent } from './search-input/search-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst IrccDsLegacyOldComponents = [\n  AutocompleteComponent,\n  ChipListComponent,\n  SecondaryChipsComponent,\n  ChipItemComponent,\n  SearchInputComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsLegacyOldComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsLegacyOldComponents]\n})\nexport class IrccDsAngularLegacyOldModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelButtonService.html":{"url":"injectables/LabelButtonService.html","title":"injectable - LabelButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labelButtonClickObs$\n                            \n                            \n                                    Private\n                                labelButtonClickSubj\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonPress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonPress\n                        \n                    \n                \n            \n            \n                \nbuttonPress(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labelButtonClickObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.labelButtonClickSubj.asObservable()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        labelButtonClickSubj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelButtonService {\n  private labelButtonClickSubj = new BehaviorSubject('');\n  labelButtonClickObs$ = this.labelButtonClickSubj.asObservable();\n\n  buttonPress(id: string) {\n    this.labelButtonClickSubj.next(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelComponent.html":{"url":"components/LabelComponent.html","title":"component - LabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/label/label.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-label\n            \n\n\n\n\n            \n                templateUrl\n                ./label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labelIconText\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                iconButtonClick\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnLabel\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, standAloneFunctions: StandAloneFunctions, labelButton: LabelButtonService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelButton\n                                                  \n                                                        \n                                                                        LabelButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        iconButtonClick\n                        \n                    \n                \n            \n            \n                \niconButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:71\n                \n            \n\n\n            \n                \n                    Output the button press\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnLabel\n                        \n                    \n                \n            \n            \n                \nreturnLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labelIconText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ config.label || '' | translate }}\n      \n      \n        {{ config.label || '' | translate }}\n      \n      \n        \n        \n      \n    \n  \n  \n    {{ config.desc || '' | translate }}\n  \n  \n    {{ config.hint | translate }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ config.label || \\'\\' | translate }}                    {{ config.label || \\'\\' | translate }}                                              {{ config.desc || \\'\\' | translate }}        {{ config.hint | translate }}  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageSwitchButtonService.html":{"url":"injectables/LanguageSwitchButtonService.html","title":"injectable - LanguageSwitchButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageSwitchButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                languageClickObs$\n                            \n                            \n                                    Private\n                                languageClickSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                languageToggleClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        languageToggleClick\n                        \n                    \n                \n            \n            \n                \nlanguageToggleClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        languageClickObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languageClickSub.asObservable()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languageClickSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageSwitchButtonService {\n  private languageClickSub = new BehaviorSubject(false);\n  languageClickObs$ = this.languageClickSub.asObservable();\n\n  languageToggleClick() {\n    this.languageClickSub.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitchComponent.html":{"url":"components/LanguageSwitchComponent.html","title":"component - LanguageSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-language-switch\n            \n\n\n\n\n            \n                templateUrl\n                ./language-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aria\n                            \n                            \n                                isMobile\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setText\n                            \n                            \n                                switch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: object, langToggle: LanguageSwitchButtonService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        langToggle\n                                                  \n                                                        \n                                                                        LanguageSwitchButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(e: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:41\n                \n            \n\n\n            \n                \n                    Listens for screen resizes and sets mobile-tablet boolean\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleResize\n                        \n                    \n                \n            \n            \n                \nhandleResize(e: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:41\n                \n            \n\n\n            \n                \n                    Listens for screen resizes and sets mobile-tablet boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setText\n                        \n                    \n                \n            \n            \n                \nsetText(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switch\n                        \n                    \n                \n            \n            \n                \nswitch()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  PLATFORM_ID\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguageSwitchButtonService } from './language-switch-button.service';\n\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH = 'Français';\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE = 'FR';\n\nexport const LANGUAGE_SWITCH_TEXT_FRENCH = 'English';\nexport const LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE = 'EN';\n\n@Component({\n  selector: 'ircc-cl-lib-language-switch',\n  templateUrl: './language-switch.component.html'\n})\nexport class LanguageSwitchComponent implements OnInit {\n  @Input() id = '';\n\n  isMobile = false;\n\n  text = '';\n  aria = '';\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private langToggle: LanguageSwitchButtonService,\n    private translate: TranslateService\n  ) {\n    this.isMobile = window.innerWidth  {\n      console.log(newLang.lang, 'switch');\n      this.setText(newLang.lang);\n    });\n  }\n\n  switch() {\n    this.langToggle.languageToggleClick();\n  }\n\n  setText(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH);\n    } else {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_FRENCH);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ text }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ text }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressIndicatorComponent.html":{"url":"components/ProgressIndicatorComponent.html","title":"component - ProgressIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProgressIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-progress-indicator\n            \n\n\n\n\n            \n                templateUrl\n                ./progress-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepText\n                            \n                            \n                                tabConfig\n                            \n                            \n                                tabNavConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                            \n                                tabClickFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tabClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IProgressIndicatorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tabClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabClickFn\n                        \n                    \n                \n            \n            \n                \ntabClickFn(selected: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stepText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    title: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabNavConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ stepText + ' ' + (i + 1) }}\n          \n          \n            {{ stepText + ' ' + (i + 1) }}\n          \n          \n          \n            \n          \n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ stepText + \\' \\' + (i + 1) }}                                {{ stepText + \\' \\' + (i + 1) }}                                                                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressTagsComponent.html":{"url":"components/ProgressTagsComponent.html","title":"component - ProgressTagsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProgressTagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-progress-tags\n            \n\n\n\n\n            \n                templateUrl\n                ./progress-tags.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTypeTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IProgressTagsConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :          | TagType\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:43\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypeTitle\n                        \n                    \n                \n            \n            \n                \nsetTypeTitle()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport const TAG_LABELS_EN = [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n];\nexport const TAG_LABELS_FR = [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n];\n\nexport enum TagType {\n  primary = 'primary',\n  success = 'success',\n  critical = 'critical',\n  locked = 'locked',\n  notStarted = 'notStarted'\n}\nexport interface IProgressTagsConfig {\n  id: string;\n  type?: keyof typeof TagType;\n  size?: keyof typeof DSSizes;\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-tags',\n  templateUrl: './progress-tags.component.html'\n})\nexport class ProgressTagsComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: IProgressTagsConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof TagType | TagType;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = TAG_LABELS_EN;\n    } else {\n      this.text = TAG_LABELS_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          {{ text[1] }}\n        \n        \n          \n          {{ text[2] }}\n        \n        \n          \n          {{ text[3] }}\n        \n        \n          \n          {{ text[4] }}\n        \n        \n          \n          {{ text[0] }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ text[1] }}                                    {{ text[2] }}                                    {{ text[3] }}                                    {{ text[4] }}                                    {{ text[0] }}                    '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressTagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioInputComponent.html":{"url":"components/RadioInputComponent.html","title":"component - RadioInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RadioInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => RadioInputComponent)\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-radio-input\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                getDisabled\n                            \n                            \n                                markAsTouched\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IRadioInputComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: this.formGroupEmpty\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:69\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:153\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisabled\n                        \n                    \n                \n            \n            \n                \ngetDisabled(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:186\n                \n            \n\n\n            \n                \n                    used to disable individual fields (from the config under 'options')\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the option field to be disabled\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        null if value is undefined, empty string otherwise. This works with [attr.disabled].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsTouched\n                        \n                    \n                \n            \n            \n                \nmarkAsTouched()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:167\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(formValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      \n      {{ option.text || '' | translate }}\n    \n  \n  \n    \n      {{\n        errorStubText + ': ' + (config.label || '' | translate) + ': '\n      }}\n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ option.text || \\'\\' | translate }}                  {{        errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'      }}                                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadioInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchInputComponent.html":{"url":"components/SearchInputComponent.html","title":"component - SearchInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-search-input\n            \n\n\n\n\n            \n                templateUrl\n                ./search-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInputControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISearchInputConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        searchInputControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n    \n        \n\n\n  {{ config?.searchButton?.text }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config?.searchButton?.text }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SecondaryChipsComponent.html":{"url":"components/SecondaryChipsComponent.html","title":"component - SecondaryChipsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SecondaryChipsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-secondary-chips\n            \n\n\n\n\n            \n                templateUrl\n                ./secondary-chips.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipContent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:8\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipContent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-secondary-chips',\n  templateUrl: './secondary-chips.component.html'\n})\nexport class SecondaryChipsComponent implements OnInit {\n  @Input() chipContent?: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  {{ chipContent || '' | translate }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ chipContent || \\'\\' | translate }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecondaryChipsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/select/select.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => SelectComponent)\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-select\n            \n\n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activiatedSelect\n                            \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                rotateChevron\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                markAsTouched\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onClicked\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setLang\n                            \n                            \n                                valueChange\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISelectConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:159\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsTouched\n                        \n                    \n                \n            \n            \n                \nmarkAsTouched()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClicked\n                        \n                    \n                \n            \n            \n                \nonClicked()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:173\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueChange\n                        \n                    \n                \n            \n            \n                \nvalueChange($event: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(formValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activiatedSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotateChevron\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          {{ config.placeholder || '' | translate }}\n        \n        \n          {{ option.text | translate }}\n        \n      \n      \n        \n      \n    \n    \n      \n        {{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}\n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ config.placeholder || \\'\\' | translate }}                          {{ option.text | translate }}                                                        {{          errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'        }}                                                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-spinner\n            \n\n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeVertical\n                            \n                            \n                                setTypeTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                orientation\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISpinnerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        orientation\n                    \n                \n                \n                    \n                        Type :          | DSOrientations\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSFullSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :          | SpinnerType\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeVertical\n                        \n                    \n                \n            \n            \n                \nremoveVertical()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypeTitle\n                        \n                    \n                \n            \n            \n                \nsetTypeTitle()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  DSFullSizes,\n  DSOrientations\n} from '../../../shared/constants/jl-components.constants';\n\nexport const SPINNER_LABELS_EN = ['Loading', 'Success', 'Error'];\nexport const SPINNER_LABELS_FR = ['Chargement', 'Succès', 'Erreur'];\n\nexport enum SpinnerType {\n  active = 'active',\n  success = 'success',\n  critical = 'critical'\n}\nexport interface ISpinnerConfig {\n  id: string;\n  type?: keyof typeof SpinnerType;\n  size?: keyof typeof DSFullSizes;\n  orientation?: keyof typeof DSOrientations;\n  label?: string;\n  description?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-spinner',\n  templateUrl: './spinner.component.html'\n})\nexport class SpinnerComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: ISpinnerConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof SpinnerType | SpinnerType;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() orientation?: keyof typeof DSOrientations | DSOrientations;\n  @Input() label?: '';\n  @Input() description?: '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    if (!this.config.size) this.config.size = 'large';\n\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    this.removeVertical();\n\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = SPINNER_LABELS_EN;\n    } else {\n      this.text = SPINNER_LABELS_FR;\n    }\n  }\n\n  removeVertical() {\n    if (\n      this.config.size !== 'large' &&\n      this.config.orientation === 'vertical'\n    ) {\n      this.config.orientation = 'horizontal';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n          \n        \n      \n      \n        \n          \n        \n        \n          \n          \n        \n      \n      \n        \n          \n        \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    showContent: true\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelected\n                        \n                    \n                \n            \n            \n                \nsetSelected(selectedID: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ val.title }}\n      \n      \n        {{ val.title }}\n      \n    \n  \n  \n    \n    \n      \n        \n          \n            {{ cont.value }}\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ val.title }}                    {{ val.title }}                                                          {{ cont.value }}                              '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaComponent.html":{"url":"components/TextareaComponent.html","title":"component - TextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TextareaComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-textarea\n            \n\n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charLimitStatus\n                            \n                            \n                                currentCharacterStatusAria\n                            \n                            \n                                disabled\n                            \n                            \n                                errorIds\n                            \n                            \n                                focusState\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                    Private\n                                    Optional\n                                onChange\n                            \n                            \n                                    Private\n                                    Optional\n                                onTouch\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                characterCountStatus\n                            \n                            \n                                    Public\n                                clearvalue\n                            \n                            \n                                    Public\n                                focusInput\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                charLimit\n                            \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        charLimit\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ITextareaComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        characterCountStatus\n                        \n                    \n                \n            \n            \n                \ncharacterCountStatus(currCharCount: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currCharCount\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearvalue\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearvalue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        focusInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusInput(focusValue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focusValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        charLimitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCharacterStatusAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorIconConfig } from '../error/error.component';\n\nexport interface ITextareaComponentConfig {\n  formGroup: FormGroup;\n  id: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  charLimit?: string;\n  resizable?: keyof typeof ResizableTypes;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  errorIcon?: IErrorIconConfig;\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum ResizableTypes {\n  vertical = 'vertical',\n  horizontal = 'password',\n  both = 'both',\n  none = 'none'\n}\n\n@Component({\n  selector: 'ircc-cl-lib-textarea',\n  templateUrl: './textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: ITextareaComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() charLimit = '';\n\n  disabled = false;\n  focusState = false;\n  errorIds: IErrorIDs[] = [];\n  charLimitStatus = '';\n  currentCharacterStatusAria = '';\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n\n  constructor(public standAloneFunctions: StandAloneFunctions) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit(): void {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.charLimit !== '') {\n      this.config.charLimit = this.charLimit;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.characterCountStatus(\n        this.config.formGroup.controls[this.config.id].value.length\n      );\n    }\n\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.characterCountStatus(change[this.config.id]?.length);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  characterCountStatus(currCharCount: any) {\n    if (this.config?.charLimit) {\n      if (this.config?.charLimit == currCharCount) {\n        this.charLimitStatus = 'maxLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.maxLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount == 15) {\n        this.charLimitStatus = 'warningLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.warningLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount \n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n123\n          \n          \n            {{ textareaInput.value.length }}/{{ config.charLimit }}\n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      123                                {{ textareaInput.value.length }}/{{ config.charLimit }}                                                                                          '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleSlugUrlComponent.html":{"url":"components/TitleSlugUrlComponent.html","title":"component - TitleSlugUrlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleSlugUrlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            SlugifyPipe\n                \n            \n\n\n            \n                selector\n                app-title-slug-url\n            \n\n            \n                styleUrls\n                ./title-slug-url.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title-slug-url.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                windowOrigin\n                            \n                            \n                                windowPathname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translator: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         slugTitleURLConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: slugTitleURLType.primary,\n    title: '',\n    anchorType: slugAnchorType.primary\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        windowOrigin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        windowPathname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterContentInit, Component, Input } from '@angular/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { SlugifyPipe } from '../../share/pipe-slugify.pipe';\n\nexport enum slugTitleURLType {\n  'primary' = 'primary',\n  'secondary' = 'secondary'\n}\n\nexport enum slugAnchorType {\n  'primary' = 'primary',\n  'secondary' = 'secondary'\n}\nexport interface slugTitleURLConfig {\n  type: slugTitleURLType;\n  title: string;\n  anchorType: slugAnchorType;\n}\n\n@Component({\n  selector: 'app-title-slug-url',\n  templateUrl: './title-slug-url.component.html',\n  styleUrls: ['./title-slug-url.component.scss'],\n  providers: [SlugifyPipe]\n})\nexport class TitleSlugUrlComponent implements AfterContentInit {\n  @Input()\n  config: slugTitleURLConfig = {\n    type: slugTitleURLType.primary,\n    title: '',\n    anchorType: slugAnchorType.primary\n  };\n  currentLang = '';\n  windowPathname = '';\n  windowOrigin = '';\n\n  constructor(private translator: TranslateService) {\n    this.currentLang = translator.currentLang;\n  }\n\n  ngOnInit() {\n    this.translator.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLang = event.lang;\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.windowOrigin = window.location.origin;\n    this.windowPathname = window.location.pathname;\n  }\n}\n\n    \n\n    \n        \n  {{ config.title | translate }}\n\n\n  {{ 'Buttons.CopyURL' | translate }}\n\n\n    \n\n    \n                \n                    ./title-slug-url.component.scss\n                \n                :host {\n  display: block;\n\n  >h2 {\n    display: inline-block;\n    font-weight: 700;\n\n    &.primary {\n      font-size: 36px;\n      margin-top: 0px;\n      margin-bottom: 24px;\n    }\n\n    &.secondary {\n      font-size: 28px;\n      margin-top: 80px;\n      margin-bottom: 24px;\n    }\n  }\n\n  >a {\n    margin-left: 16px;\n    position: relative;\n    bottom: 5px;\n    text-decoration: none !important;\n    color: var(--link-text);\n\n    &.primary {\n      font-family: Lato;\n      font-size: 16px;\n      font-weight: 400;\n      line-height: 24px;\n      letter-spacing: 0em;\n      text-align: center;\n\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config.title | translate }}  {{ \\'Buttons.CopyURL\\' | translate }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleSlugUrlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/accordionContainerComponent.html":{"url":"components/accordionContainerComponent.html","title":"component - accordionContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  accordionContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/accordion-panel/accordion-container.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-accordian-container\n            \n\n            \n                styleUrls\n                ./accordion-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonConfigAcccordion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openAccordion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                buttonTextClosed\n                            \n                            \n                                config\n                            \n                            \n                                id\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                getOpen\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonTextClosed\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IAccordionContainerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        getOpen\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAccordion\n                        \n                    \n                \n            \n            \n                \nopenAccordion()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonConfigAcccordion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to expand the accordion',\n    iconDirection: 'left'\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IButtonConfig } from 'ircc-ds-angular-component-library';\n\nexport interface IAccordionContainerConfig {\n  id: string;\n  buttonText?: string;\n  buttonTextClosed?: string;\n  open?: boolean;\n}\n\n@Component({\n  selector: 'app-accordian-container',\n  templateUrl: './accordion-container.component.html',\n  styleUrls: ['./accordion-container.component.scss']\n})\nexport class accordionContainerComponent implements OnInit {\n  @Input() config: IAccordionContainerConfig = {\n    id: ''\n  };\n  @Input() id: string = '';\n  @Input() buttonText: string = '';\n  @Input() buttonTextClosed: string = '';\n  @Input() open?: boolean | undefined;\n\n  @Output() getOpen = new EventEmitter();\n\n  buttonConfigAcccordion: IButtonConfig = {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to expand the accordion',\n    iconDirection: 'left'\n  };\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    console.log(this.config);\n    if (this.config.buttonText === '' || this.config.buttonText === undefined)\n      this.config.buttonText = 'Accordion.HideCode';\n\n    if (\n      this.config.buttonTextClosed === '' ||\n      this.config.buttonTextClosed === undefined\n    )\n      this.config.buttonTextClosed = 'Accordion.ShowCode';\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.buttonText !== '') this.config.buttonText = this.buttonText;\n    if (this.buttonTextClosed !== '')\n      this.config.buttonTextClosed = this.buttonTextClosed;\n    if (this.open !== undefined) this.config.open = this.open;\n  }\n\n  openAccordion() {\n    this.config.open = !this.config.open;\n    this.getOpen.emit(this.config.open);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n    \n      \n        {{ config.buttonText || '' | translate }}\n      \n      \n        {{ config.buttonTextClosed || '' | translate }}\n      \n    \n\n    \n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./accordion-container.component.scss\n                \n                @use '../../../../../core-library/tokens/template-const' as template-const;\n@use '../../../../../core-library/tokens/sizes' as sizes;\n@use '../../../../../core-library/layout/layout-grid' as layout-grid;\n@use '../../../../../core-library/util/device' as device;\n\n@mixin selector {\n  app-accordian-container#{template-const.$escape} {\n    @content;\n  }\n}\n\n@mixin create {\n  @include selector() {\n    @include layout();\n  }\n}\n\n@mixin layout {\n  .accordion-nav {\n    display: grid;\n    grid-template-columns: 30% auto 30%;\n\n    @include device.in-phone-layout() {\n      grid-template-columns: auto 30% 30%;\n    }\n\n    .accordion-extra-left {\n      grid-column: 1;\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n\n      @include device.in-phone-layout() {\n        grid-column: 2;\n      }\n    }\n\n    .accordion-expand-button {\n      grid-column: 2;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      @include device.in-phone-layout() {\n        grid-column: 1;\n      }\n    }\n    .accordion-extra-right {\n      grid-column: 3;\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      @include device.in-phone-layout() {\n        grid-column: 3;\n      }\n    }\n  }\n\n  .accordion-content {\n    &.open {\n      height: auto;\n    }\n\n    &.close {\n      height: 0px;\n      padding-bottom: 0px;\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ config.buttonText || \\'\\' | translate }}                    {{ config.buttonTextClosed || \\'\\' | translate }}                                      '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'accordionContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/codeViewerComponent.html":{"url":"components/codeViewerComponent.html","title":"component - codeViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  codeViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/code-viewer/code-viewer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-viewer\n            \n\n            \n                styleUrls\n                ./code-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./code-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordionConfig\n                            \n                            \n                                buttonConfigCopy\n                            \n                            \n                                height\n                            \n                            \n                                minHeightResizeContainer\n                            \n                            \n                                openAccordion\n                            \n                            \n                                selectedTab\n                            \n                            \n                                tabConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeight\n                            \n                            \n                                getSelectedTab\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setupComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                getSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ICodeViewerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        getSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight(height: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedTab\n                        \n                    \n                \n            \n            \n                \ngetSelectedTab(selected: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupComponent\n                        \n                    \n                \n            \n            \n                \nsetupComponent()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accordionConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAccordionContainerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'codeViewerTabsCccordion',\n    open: this.config.openAccordion\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonConfigCopy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to copy the code'\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 150\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minHeightResizeContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 150\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAccordion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    title: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'codeViewerTabs',\n    showContent: false\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  IButtonConfig,\n  ITabNavConfig,\n  ITabConfig\n} from 'ircc-ds-angular-component-library';\n\nimport { IAccordionContainerConfig } from '../accordion-panel/accordion-container.component';\n\nexport interface ICodeViewerConfig {\n  id: string;\n  openAccordion?: boolean;\n  tab?: ITabConfig[];\n  selected?: string;\n}\n\n@Component({\n  selector: 'app-code-viewer',\n  templateUrl: './code-viewer.component.html',\n  styleUrls: ['./code-viewer.component.scss']\n})\nexport class codeViewerComponent implements OnInit {\n  @Input() config: ICodeViewerConfig = {\n    id: ''\n  };\n  @Output() getSelected = new EventEmitter();\n\n  tabConfig: ITabNavConfig = {\n    id: 'codeViewerTabs',\n    showContent: false\n  };\n  selectedTab: any = {\n    title: ''\n  };\n\n  accordionConfig: IAccordionContainerConfig = {\n    id: 'codeViewerTabsCccordion',\n    open: this.config.openAccordion\n  };\n\n  openAccordion: boolean = false;\n  minHeightResizeContainer = 150;\n  height: number = 150;\n\n  buttonConfigCopy: IButtonConfig = {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to copy the code'\n  };\n\n  ngOnInit() {\n    this.setupComponent();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config']) {\n      this.config = changes['config'].currentValue;\n      this.setupComponent();\n    }\n  }\n\n  setupComponent() {\n    if (this.config.openAccordion !== undefined) {\n      this.openAccordion = this.config.openAccordion;\n    }\n\n    if (this.config.selected) {\n      this.tabConfig.selected = this.config.selected;\n    }\n\n    if (this.config.tab) {\n      this.tabConfig.tab = this.config.tab;\n    } else {\n      this.tabConfig.tab = [];\n    }\n\n    if (this.config.tab && this.config.selected) {\n      this.selectedTab = this.config.tab.find(\n        (tab) => tab.id === this.config.selected\n      );\n    } else if (this.config.tab) {\n      this.selectedTab = this.config.tab[0];\n    } else {\n      this.selectedTab = {};\n    }\n  }\n\n  getSelectedTab(selected: any) {\n    if (this.config.tab) {\n      this.selectedTab = this.config.tab.find(\n        (element) => element.id === selected\n      );\n      this.config.selected = selected;\n      this.getSelected.emit(selected);\n    }\n  }\n\n  getHeight(height: number) {\n    this.height = height;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{ 'Accordion.CopyCode' | translate }}\n    \n\n    \n       \n\n\n    \n\n    \n                \n                    ./code-viewer.component.scss\n                \n                @use '../../../../../core-library/util/theme' as theme;\n@use '../../../../../core-library/util/size' as size;\n@use '../../../../../core-library/tokens/template-const';\n\n@use 'sass:map';\n$selectors: 'app-code-viewer';\n\n@mixin selectors {\n  #{$selectors}#{template-const.$escape} {\n    @content;\n  }\n}\n\n@mixin create {\n  @include selectors() {\n    @include layout();\n  }\n}\n\n@mixin layout {\n  .code-viewer {\n    border: 1px solid var(--border);\n    border-radius: 8px;\n    width: 100%;\n\n    app-accordian-container {\n      border-top: 1px solid var(--divider);\n      display: block;\n    }\n    pre,\n    code {\n      overflow: auto;\n      width: 100%;\n      height: 100%;\n      white-space: pre;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ \\'Accordion.CopyCode\\' | translate }}               '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'codeViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            interface\n            IBannerConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            interface\n            ICTAConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                15 %\n                (4/26)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n            \n            interface\n            ICheckBoxComponentConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            component\n            DatePickerComponent\n            \n                20 %\n                (9/44)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerConfig\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerDropDownConfigs\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerErrorMessages\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerUnknownDateToggleConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_DAY_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTHS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTHS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_DAY_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_DAY_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_MONTH_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_MONTH_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_YEAR_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_YEAR_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_UNKOWN_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_UNKOWN_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_YEAR_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            interface\n            IErrorComponentConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            interface\n            IErrorIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                30 %\n                (10/33)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/input/input.component.ts\n            \n            interface\n            IInputComponentConfig\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n            \n            variable\n            IrccDsAngularFormComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            component\n            RadioInputComponent\n            \n                12 %\n                (3/25)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            interface\n            IRadioInputComponentConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            interface\n            IRadioInputOption\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                7 %\n                (2/26)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            interface\n            ISelectConfig\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            interface\n            ISelectOptionsConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n            \n            component\n            TextareaComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n            \n            interface\n            ITextareaComponentConfig\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ALT_TEXT_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ALT_TEXT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ARIA_LABEL_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ARIA_LABEL_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_FOOTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            CANADA_LOGO_ARIA_LABEL_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            CANADA_LOGO_ARIA_LABEL_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            ENGLISH_BANNER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            FRENCH_BANNER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_IMG_LINK_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_IMG_LINK_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_LINK_ALT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_LINK_ATL_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            component\n            HiddenNavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            interface\n            IHiddenNavConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            interface\n            ISkipLinkConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n            \n            variable\n            IrccDsHeaderFooterComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts\n            \n            injectable\n            LanguageSwitchButtonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            component\n            LanguageSwitchComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n            \n            interface\n            IOption\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts\n            \n            component\n            ChipItemComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts\n            \n            component\n            ChipListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts\n            \n            component\n            SecondaryChipsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n            \n            variable\n            IrccDsLegacyOldComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            component\n            SearchInputComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            interface\n            ISearchInputButtonConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            interface\n            ISearchInputConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n            \n            interface\n            IBreadcrumbConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n            \n            component\n            BreadcrumbLinkComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n            \n            interface\n            ILinkComponentConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/button/button.component.ts\n            \n            interface\n            IButtonConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n            \n            component\n            DropdownComponent\n            \n                13 %\n                (2/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n            \n            interface\n            IDropdownConfig\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n            \n            component\n            FlyoutOptionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n            \n            interface\n            IFlyoutOptionConfig\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n            \n            component\n            FlyoutComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n            \n            interface\n            IFlyoutConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            component\n            IconButtonComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            interface\n            IIconButtonComponentConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            interface\n            IIconButtonIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            variable\n            CLASS_TRASHCAN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            variable\n            CLASS_X_MARK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon/icon.component.ts\n            \n            interface\n            IIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n            \n            component\n            IndicatorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n            \n            interface\n            IIndicatorConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n            \n            variable\n            IrccDsSharedComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label-button.service.ts\n            \n            injectable\n            LabelButtonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            component\n            LabelComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            interface\n            ILabelConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            interface\n            ILabelIconConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            ERROR_TEXT_STUB_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            ERROR_TEXT_STUB_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            HELP_ICON_ALT_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            HELP_ICON_ALT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            component\n            ProgressIndicatorComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            interface\n            IProgressIndicatorConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            interface\n            IStepConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            variable\n            PROGRESS_INDICATOR_STEP_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            variable\n            PROGRESS_INDICATOR_STEP_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            component\n            ProgressTagsComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            interface\n            IProgressTagsConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            variable\n            TAG_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            variable\n            TAG_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            interface\n            ISpinnerConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            variable\n            SPINNER_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            variable\n            SPINNER_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            interface\n            ITabConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            interface\n            ITabNavConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/src/app/components/accordion-panel/accordion-container.component.ts\n            \n            component\n            accordionContainerComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                component-library/src/app/components/accordion-panel/accordion-container.component.ts\n            \n            interface\n            IAccordionContainerConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/src/app/components/code-viewer/code-viewer.component.ts\n            \n            component\n            codeViewerComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/src/app/components/code-viewer/code-viewer.component.ts\n            \n            interface\n            ICodeViewerConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/src/app/components/component-preview/component-preview.component.ts\n            \n            component\n            ComponentPreviewComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/src/app/components/info-text-small/info-text-small.component.ts\n            \n            component\n            InfoTextSmallComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/src/app/components/interactive-demo/interactive-demo.component.ts\n            \n            component\n            InteractiveDemoComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/src/app/components/resizable-container/resizable-container.component.ts\n            \n            component\n            resizableContainerComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n            \n            component\n            TitleSlugUrlComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n            \n            interface\n            slugTitleURLConfig\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cli : ^14.2.11\n        \n            @aws-sdk/client-s3 : ^3.321.1\n        \n            @aws-sdk/lib-storage : ^3.321.1\n        \n            cheerio : ^1.0.0-rc.12\n        \n            mime-types : ^2.1.35\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BannerSize   (component-library/.../banner.component.ts)\n                        \n                        \n                            BannerType   (component-library/.../banner.component.ts)\n                        \n                        \n                            ButtonCategories   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonColor   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonIconDirection   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonSize   (component-library/.../button.component.ts)\n                        \n                        \n                            ComponentType   (component-library/.../interactive-demo.component.ts)\n                        \n                        \n                            CTAType   (component-library/.../banner.component.ts)\n                        \n                        \n                            IconButtonCategories   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            IFlyoutOptionType   (component-library/.../flyout-option.component.ts)\n                        \n                        \n                            IFlyoutSelectTypes   (component-library/.../flyout.component.ts)\n                        \n                        \n                            IndicatorPalette   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorPurpose   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorStatus   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorTreatment   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorType   (component-library/.../indicator.component.ts)\n                        \n                        \n                            InputTypes   (component-library/.../input.component.ts)\n                        \n                        \n                            LinkType   (component-library/.../breadcrumb.component.ts)\n                        \n                        \n                            Orientations   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            ResizableTypes   (component-library/.../textarea.component.ts)\n                        \n                        \n                            slugAnchorType   (component-library/.../title-slug-url.component.ts)\n                        \n                        \n                            slugTitleURLType   (component-library/.../title-slug-url.component.ts)\n                        \n                        \n                            SpinnerType   (component-library/.../spinner.component.ts)\n                        \n                        \n                            TagType   (component-library/.../progress-tags.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n    \n        \n            \n                \n                    \n                        \n                        BannerSize\n                    \n                \n                        \n                            \n                                 large\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        BannerType\n                    \n                \n                        \n                            \n                                 generic\n                            \n                        \n                        \n                            \n                                Value : generic\n                            \n                        \n                        \n                            \n                                 info\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CTAType\n                    \n                \n                        \n                            \n                                 link\n                            \n                        \n                        \n                            \n                                Value : link\n                            \n                        \n                        \n                            \n                                 button\n                            \n                        \n                        \n                            \n                                Value : button\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/button/button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ButtonCategories\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 secondary\n                            \n                        \n                        \n                            \n                                Value : secondary\n                            \n                        \n                        \n                            \n                                 plain\n                            \n                        \n                        \n                            \n                                Value : plain\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonColor\n                    \n                \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 CTA\n                            \n                        \n                        \n                            \n                                Value : CTA\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonIconDirection\n                    \n                \n                        \n                            \n                                 left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n                        \n                            \n                                 right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonSize\n                    \n                \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n                        \n                            \n                                 large\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n            \n        \n\n    component-library/src/app/components/interactive-demo/interactive-demo.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ComponentType\n                    \n                \n                        \n                            \n                                 banner\n                            \n                        \n                        \n                            \n                                Value : banner\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IconButtonCategories\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IFlyoutOptionType\n                    \n                \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 checkbox\n                            \n                        \n                        \n                            \n                                Value : checkbox\n                            \n                        \n                        \n                            \n                                 dropdown\n                            \n                        \n                        \n                            \n                                Value : dropdown\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n                        \n                            \n                                 heading\n                            \n                        \n                        \n                            \n                                Value : heading\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IFlyoutSelectTypes\n                    \n                \n                        \n                            \n                                 single\n                            \n                        \n                        \n                            \n                                Value : single\n                            \n                        \n                        \n                            \n                                 multi\n                            \n                        \n                        \n                            \n                                Value : multi\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IndicatorPalette\n                    \n                \n                        \n                            \n                                 teal\n                            \n                        \n                        \n                            \n                                 orange\n                            \n                        \n                        \n                            \n                                 red\n                            \n                        \n                        \n                            \n                                 grey\n                            \n                        \n                        \n                            \n                                 blue\n                            \n                        \n                        \n                            \n                                 green\n                            \n                        \n                        \n                            \n                                 purple\n                            \n                        \n                        \n                            \n                                 navy\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorPurpose\n                    \n                \n                        \n                            \n                                 status\n                            \n                        \n                        \n                            \n                                Value : status\n                            \n                        \n                        \n                            \n                                 palette\n                            \n                        \n                        \n                            \n                                Value : palette\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorStatus\n                    \n                \n                        \n                            \n                                 information\n                            \n                        \n                        \n                            \n                                Value : information\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 neutral\n                            \n                        \n                        \n                            \n                                Value : neutral\n                            \n                        \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorTreatment\n                    \n                \n                        \n                            \n                                 strong\n                            \n                        \n                        \n                            \n                                Value : strong\n                            \n                        \n                        \n                            \n                                 weak\n                            \n                        \n                        \n                            \n                                Value : weak\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorType\n                    \n                \n                        \n                            \n                                 dot\n                            \n                        \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/form-components/input/input.component.ts\n    \n        \n            \n                \n                    \n                        \n                        InputTypes\n                    \n                \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 password\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LinkType\n                    \n                \n                        \n                            \n                                 href\n                            \n                        \n                        \n                            \n                                Value : href\n                            \n                        \n                        \n                            \n                                 routerLink\n                            \n                        \n                        \n                            \n                                Value : routerLink\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Orientations\n                    \n                \n                        \n                            \n                                 horizontal\n                            \n                        \n                        \n                            \n                                Value : horizontal\n                            \n                        \n                        \n                            \n                                 vertical\n                            \n                        \n                        \n                            \n                                Value : vertical\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ResizableTypes\n                    \n                \n                        \n                            \n                                 vertical\n                            \n                        \n                        \n                            \n                                Value : vertical\n                            \n                        \n                        \n                            \n                                 horizontal\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n                        \n                            \n                                 both\n                            \n                        \n                        \n                            \n                                Value : both\n                            \n                        \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n    \n        \n            \n                \n                    \n                        \n                        slugAnchorType\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 secondary\n                            \n                        \n                        \n                            \n                                Value : secondary\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        slugTitleURLType\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 secondary\n                            \n                        \n                        \n                            \n                                Value : secondary\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n    \n        \n            \n                \n                    \n                        \n                        SpinnerType\n                    \n                \n                        \n                            \n                                 active\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TagType\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 locked\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 notStarted\n                            \n                        \n                        \n                            \n                                Value : notStarted\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularBannerModule\n\n\n\ncluster_IrccDsAngularBannerModule_declarations\n\n\n\ncluster_IrccDsAngularBannerModule_exports\n\n\n\ncluster_IrccDsAngularComponentsSharedModule\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_declarations\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_exports\n\n\n\ncluster_IrccDsAngularFormComponentsModule\n\n\n\ncluster_IrccDsAngularFormComponentsModule_declarations\n\n\n\ncluster_IrccDsAngularFormComponentsModule_exports\n\n\n\ncluster_IrccDsAngularHeaderFooterModule\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_declarations\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_exports\n\n\n\ncluster_IrccDsAngularLegacyOldModule\n\n\n\ncluster_IrccDsAngularLegacyOldModule_declarations\n\n\n\ncluster_IrccDsAngularLegacyOldModule_exports\n\n\n\n\nBannerComponent\n\nBannerComponent\n\n\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule -->\n\nBannerComponent->IrccDsAngularBannerModule\n\n\n\n\n\nBannerComponent \n\nBannerComponent \n\nBannerComponent  -->\n\nIrccDsAngularBannerModule->BannerComponent \n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\n\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbLinkComponent\n\nBreadcrumbLinkComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbLinkComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nDropdownComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutComponent\n\nFlyoutComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutOptionComponent\n\nFlyoutOptionComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutOptionComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIndicatorComponent\n\nIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nLabelComponent\n\nLabelComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nLabelComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressIndicatorComponent\n\nProgressIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressTagsComponent\n\nProgressTagsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressTagsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nSpinnerComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nTabsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbComponent \n\n\n\n\n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbLinkComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->ButtonComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nIrccDsAngularComponentsSharedModule->DropdownComponent \n\n\n\n\n\nFlyoutComponent \n\nFlyoutComponent \n\nFlyoutComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutComponent \n\n\n\n\n\nFlyoutOptionComponent \n\nFlyoutOptionComponent \n\nFlyoutOptionComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutOptionComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconComponent \n\n\n\n\n\nIndicatorComponent \n\nIndicatorComponent \n\nIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->IndicatorComponent \n\n\n\n\n\nLabelComponent \n\nLabelComponent \n\nLabelComponent  -->\n\nIrccDsAngularComponentsSharedModule->LabelComponent \n\n\n\n\n\nProgressIndicatorComponent \n\nProgressIndicatorComponent \n\nProgressIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressIndicatorComponent \n\n\n\n\n\nProgressTagsComponent \n\nProgressTagsComponent \n\nProgressTagsComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressTagsComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nIrccDsAngularComponentsSharedModule->SpinnerComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nIrccDsAngularComponentsSharedModule->TabsComponent \n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule -->\n\nCheckboxComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nDatePickerComponent\n\nDatePickerComponent\n\nIrccDsAngularFormComponentsModule -->\n\nDatePickerComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nIrccDsAngularFormComponentsModule -->\n\nErrorComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nRadioInputComponent\n\nRadioInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nRadioInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nIrccDsAngularFormComponentsModule -->\n\nSelectComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\nIrccDsAngularFormComponentsModule -->\n\nTextareaComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nIrccDsAngularFormComponentsModule->CheckboxComponent \n\n\n\n\n\nDatePickerComponent \n\nDatePickerComponent \n\nDatePickerComponent  -->\n\nIrccDsAngularFormComponentsModule->DatePickerComponent \n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nIrccDsAngularFormComponentsModule->ErrorComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIrccDsAngularFormComponentsModule->InputComponent \n\n\n\n\n\nRadioInputComponent \n\nRadioInputComponent \n\nRadioInputComponent  -->\n\nIrccDsAngularFormComponentsModule->RadioInputComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nIrccDsAngularFormComponentsModule->SelectComponent \n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nIrccDsAngularFormComponentsModule->TextareaComponent \n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule -->\n\nFooterComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHeaderComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHiddenNavComponent\n\nHiddenNavComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHiddenNavComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nLanguageSwitchComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nIrccDsAngularHeaderFooterModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nIrccDsAngularHeaderFooterModule->HeaderComponent \n\n\n\n\n\nHiddenNavComponent \n\nHiddenNavComponent \n\nHiddenNavComponent  -->\n\nIrccDsAngularHeaderFooterModule->HiddenNavComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nIrccDsAngularHeaderFooterModule->LanguageSwitchComponent \n\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule -->\n\nAutocompleteComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipItemComponent\n\nChipItemComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipItemComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipListComponent\n\nChipListComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipListComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSearchInputComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSecondaryChipsComponent\n\nSecondaryChipsComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSecondaryChipsComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nIrccDsAngularLegacyOldModule->AutocompleteComponent \n\n\n\n\n\nChipItemComponent \n\nChipItemComponent \n\nChipItemComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipItemComponent \n\n\n\n\n\nChipListComponent \n\nChipListComponent \n\nChipListComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipListComponent \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nIrccDsAngularLegacyOldModule->SearchInputComponent \n\n\n\n\n\nSecondaryChipsComponent \n\nSecondaryChipsComponent \n\nSecondaryChipsComponent  -->\n\nIrccDsAngularLegacyOldModule->SecondaryChipsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    41 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        IrccDsAngularBannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularComponentsSharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularFormComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularHeaderFooterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularLegacyOldModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/resizableContainerComponent.html":{"url":"components/resizableContainerComponent.html","title":"component - resizableContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  resizableContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/resizable-container/resizable-container.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resizable-container\n            \n\n            \n                styleUrls\n                ./resizable-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resizable-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dragListener\n                            \n                            \n                                isDragging\n                            \n                            \n                                resizeBar\n                            \n                            \n                                resizeButtonConfig\n                            \n                            \n                                resizeContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minHeight\n                            \n                            \n                                setHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                getHeight\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 150\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        setHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 150\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        getHeight\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dragListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Function | undefined\n\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDragging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('resizeBar', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeButtonConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'resize_button',\n    category: 'custom',\n    size: 'small',\n    ariaLabel: 'RESIZE_ARIA',\n    icon: {\n      class: 'fa-regular fa-grip-lines',\n      color: 'var(--text-primary)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('resizeContainer', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { IIconButtonComponentConfig } from 'ircc-ds-angular-component-library';\n\n@Component({\n  selector: 'app-resizable-container',\n  templateUrl: './resizable-container.component.html',\n  styleUrls: ['./resizable-container.component.scss']\n})\nexport class resizableContainerComponent {\n  @ViewChild('resizeBar', { static: false }) resizeBar: ElementRef | undefined;\n  @ViewChild('resizeContainer', { static: false }) resizeContainer:\n    | ElementRef\n    | undefined;\n\n  @Input() minHeight: number = 150;\n  @Input() setHeight: number = 150;\n\n  @Output() getHeight = new EventEmitter();\n\n  isDragging = false;\n  dragListener: Function | undefined;\n\n  resizeButtonConfig: IIconButtonComponentConfig = {\n    id: 'resize_button',\n    category: 'custom',\n    size: 'small',\n    ariaLabel: 'RESIZE_ARIA',\n    icon: {\n      class: 'fa-regular fa-grip-lines',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  constructor(private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    if (this.resizeContainer) {\n      this.renderer.setStyle(\n        this.resizeContainer.nativeElement,\n        'min-height',\n        this.minHeight + 'px'\n      );\n      this.renderer.setStyle(\n        this.resizeContainer.nativeElement,\n        'height',\n        this.setHeight + 'px'\n      );\n    }\n\n    if (this.resizeBar) {\n      this.dragListener = this.renderer.listen(\n        this.resizeBar?.nativeElement,\n        'mousedown',\n        () => {\n          this.isDragging = true;\n        }\n      );\n    }\n\n    this.dragListener = this.renderer.listen(\n      'document',\n      'mousemove',\n      (event: MouseEvent) => {\n        if (this.isDragging && this.resizeContainer) {\n          this.renderer.setStyle(\n            this.resizeContainer.nativeElement,\n            'height',\n            this.resizeContainer.nativeElement.getBoundingClientRect().height +\n              event.movementY +\n              'px'\n          );\n          this.getHeight.emit(\n            this.resizeContainer.nativeElement.getBoundingClientRect().height +\n              event.movementY\n          );\n        }\n      }\n    );\n\n    this.dragListener = this.renderer.listen('document', 'mouseup', () => {\n      this.isDragging = false;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./resizable-container.component.scss\n                \n                .resize-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .resize-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    flex: 1;\n    width: 100%;\n    overflow: auto;\n  }\n  .resize-bar {\n    align-self: center;\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    cursor: row-resize;\n    ircc-cl-lib-icon-button {\n      button {\n        padding: 10px 10px 4px 10px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'resizableContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/slugTitleURLConfig.html":{"url":"interfaces/slugTitleURLConfig.html","title":"interface - slugTitleURLConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  slugTitleURLConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anchorType\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anchorType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anchorType:         slugAnchorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         slugAnchorType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         slugTitleURLType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         slugTitleURLType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterContentInit, Component, Input } from '@angular/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { SlugifyPipe } from '../../share/pipe-slugify.pipe';\n\nexport enum slugTitleURLType {\n  'primary' = 'primary',\n  'secondary' = 'secondary'\n}\n\nexport enum slugAnchorType {\n  'primary' = 'primary',\n  'secondary' = 'secondary'\n}\nexport interface slugTitleURLConfig {\n  type: slugTitleURLType;\n  title: string;\n  anchorType: slugAnchorType;\n}\n\n@Component({\n  selector: 'app-title-slug-url',\n  templateUrl: './title-slug-url.component.html',\n  styleUrls: ['./title-slug-url.component.scss'],\n  providers: [SlugifyPipe]\n})\nexport class TitleSlugUrlComponent implements AfterContentInit {\n  @Input()\n  config: slugTitleURLConfig = {\n    type: slugTitleURLType.primary,\n    title: '',\n    anchorType: slugAnchorType.primary\n  };\n  currentLang = '';\n  windowPathname = '';\n  windowOrigin = '';\n\n  constructor(private translator: TranslateService) {\n    this.currentLang = translator.currentLang;\n  }\n\n  ngOnInit() {\n    this.translator.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLang = event.lang;\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.windowOrigin = window.location.origin;\n    this.windowPathname = window.location.pathname;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CANADA_LOGO_ARIA_LABEL_ENGLISH   (component-library/.../header.component.ts)\n                        \n                        \n                            CANADA_LOGO_ARIA_LABEL_FRENCH   (component-library/.../header.component.ts)\n                        \n                        \n                            CLASS_TRASHCAN   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            CLASS_X_MARK   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            DATE_PICKER_DAY_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_LABELS_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_LABELS_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTH_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTHS_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTHS_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_DAY_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_DAY_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_MONTH_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_MONTH_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_YEAR_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_YEAR_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_UNKOWN_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_UNKOWN_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_YEAR_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            ENGLISH_BANNER_URL   (component-library/.../header.component.ts)\n                        \n                        \n                            ERROR_TEXT_STUB_EN   (component-library/.../label.component.ts)\n                        \n                        \n                            ERROR_TEXT_STUB_FR   (component-library/.../label.component.ts)\n                        \n                        \n                            FRENCH_BANNER_URL   (component-library/.../header.component.ts)\n                        \n                        \n                            GOV_LOGO_ALT_TEXT_EN   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ALT_TEXT_FR   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ARIA_LABEL_ENGLISH   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ARIA_LABEL_FRENCH   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_FOOTER   (component-library/.../footer.component.ts)\n                        \n                        \n                            HEADER_IMG_LINK_EN   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_IMG_LINK_FR   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_LINK_ALT_FR   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_LINK_ATL_EN   (component-library/.../header.component.ts)\n                        \n                        \n                            HELP_ICON_ALT_EN   (component-library/.../label.component.ts)\n                        \n                        \n                            HELP_ICON_ALT_FR   (component-library/.../label.component.ts)\n                        \n                        \n                            IrccDsAngularFormComponents   (component-library/.../ircc-ds-angular-form-components.module.ts)\n                        \n                        \n                            IrccDsHeaderFooterComponents   (component-library/.../ircc-ds-angular-header-footer.module.ts)\n                        \n                        \n                            IrccDsLegacyOldComponents   (component-library/.../ircc-ds-angular-legacy-old.module.ts)\n                        \n                        \n                            IrccDsSharedComponents   (component-library/.../ircc-ds-angular-component-shared.module.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_ENGLISH   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_FRENCH   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            PROGRESS_INDICATOR_STEP_EN   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            PROGRESS_INDICATOR_STEP_FR   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            SPINNER_LABELS_EN   (component-library/.../spinner.component.ts)\n                        \n                        \n                            SPINNER_LABELS_FR   (component-library/.../spinner.component.ts)\n                        \n                        \n                            TAG_LABELS_EN   (component-library/.../progress-tags.component.ts)\n                        \n                        \n                            TAG_LABELS_FR   (component-library/.../progress-tags.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    component-library/component-lib/src/lib/header-footer/header/header.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CANADA_LOGO_ARIA_LABEL_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbol of the Government of Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CANADA_LOGO_ARIA_LABEL_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbole du gouvernement du Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENGLISH_BANNER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-en.svg'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FRENCH_BANNER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-fr.svg'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_IMG_LINK_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/en.html'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_IMG_LINK_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/fr.html'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_LINK_ALT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gouvernement du Canada logo'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_LINK_ATL_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Government of Canada logo'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CLASS_TRASHCAN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fa-solid fa-trash-can'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CLASS_X_MARK\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fa-thin fa-xmark'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_DAY_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_dayControl'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Day', 'Month', 'Year']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Jour', 'Mois', 'Année']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_monthControl'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTHS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTHS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_DAY_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DD'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_DAY_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JJ'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_MONTH_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Month'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_MONTH_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mois'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_YEAR_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'YYYY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_YEAR_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AAAA'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_UNKOWN_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Unknown'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_UNKOWN_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Inconnu'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_YEAR_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_yearControl'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/label/label.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_TEXT_STUB_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Error'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_TEXT_STUB_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Erreur'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HELP_ICON_ALT_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ', more information'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HELP_ICON_ALT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \", plus d'information\"\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ALT_TEXT_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Canada wordmark'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ALT_TEXT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR Canada wordmark'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ARIA_LABEL_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbol of the Government of Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ARIA_LABEL_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbole du gouvernement du Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_FOOTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/wmms-blk.svg'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsAngularFormComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CheckboxComponent,\n  ErrorComponent,\n  InputComponent,\n  RadioInputComponent,\n  DatePickerComponent,\n  TextareaComponent,\n  SelectComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsHeaderFooterComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  HeaderComponent,\n  FooterComponent,\n  LanguageSwitchComponent,\n  HiddenNavComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsLegacyOldComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  AutocompleteComponent,\n  ChipListComponent,\n  SecondaryChipsComponent,\n  ChipItemComponent,\n  SearchInputComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsSharedComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ButtonComponent,\n  BreadcrumbComponent,\n  BreadcrumbLinkComponent,\n  IconComponent,\n  IconButtonComponent,\n  IndicatorComponent,\n  TabsComponent,\n  ProgressTagsComponent,\n  DropdownComponent,\n  LabelComponent,\n  ProgressTagsComponent,\n  ProgressIndicatorComponent,\n  SpinnerComponent,\n  FlyoutComponent,\n  FlyoutOptionComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Français'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'English'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'EN'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PROGRESS_INDICATOR_STEP_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Step'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROGRESS_INDICATOR_STEP_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Étap'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SPINNER_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Loading', 'Success', 'Error']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPINNER_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Chargement', 'Succès', 'Erreur']\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TAG_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TAG_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
