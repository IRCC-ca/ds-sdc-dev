var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/BannerComponent.html",[0,0.229,1,0.779]],["body/components/BannerComponent.html",[0,0.456,1,1.186,2,1.058,3,0.112,4,0.068,5,0.701,6,0.744,7,0.744,8,0.059,9,0.333,10,5.144,11,2.268,12,0.419,13,0.517,14,0.744,15,0.362,16,0.492,17,0.55,18,0.441,19,4.603,20,0.202,21,3.854,22,0.088,23,0.281,24,4.209,25,4.559,26,4.559,27,1.123,28,4.852,29,5.018,30,4.068,31,0.554,32,5.018,33,1.123,34,5.018,35,0.432,36,0.728,37,2.353,38,4.559,39,0.25,40,0.012,41,0.361,42,1.26,43,0.832,44,3.557,45,1.675,46,3.314,47,3.929,48,3.314,49,3.314,50,1.495,51,3.314,52,3.854,53,3.314,54,0.889,55,1.215,56,0.249,57,3.314,58,1.301,59,0.917,60,3.314,61,3.314,62,3.314,63,3.314,64,2.676,65,1.77,66,1.956,67,2.559,68,0.922,69,0.119,70,3.485,71,2.677,72,2.955,73,2.099,74,1.401,75,0.594,76,1.829,77,3.314,78,1.263,79,3.314,80,3.314,81,0.119,82,0.283,83,1.191,84,0.068,85,1.674,86,2.018,87,1.384,88,1.747,89,2.451,90,2.632,91,0.145,92,1.54,93,3.557,94,3.557,95,2.099,96,2.451,97,3.124,98,3.557,99,2.353,100,2.353,101,3.557,102,3.027,103,1.891,104,0.207,105,3.321,106,0.893,107,0.893,108,2.632,109,2.632,110,2.134,111,2.632,112,2.632,113,2.632,114,0.967,115,2.632,116,1.17,117,0.779,118,1.918,119,2.268,120,0.856,121,2.632,122,2.134,123,0.483,124,0.499,125,2.632,126,4.559,127,2.632,128,2.632,129,2.632,130,2.632,131,2.632,132,2.43,133,2.632,134,2.632,135,5.341,136,2.632,137,4.068,138,3.854,139,1.828,140,4.559,141,2.632,142,2.632,143,3.854,144,1.918,145,1.918,146,2.632,147,2.632,148,2.632,149,2.632,150,2.632,151,2.632,152,3.854,153,2.632,154,2.632,155,1.747,156,3.854,157,2.632,158,3.854,159,4.852,160,1.401,161,6.319,162,0.744,163,1.09,164,1.058,165,0.744,166,0.744,167,0.681,168,1.491,169,0.723,170,1.09,171,0.641,172,0.744,173,0.744,174,0.622,175,0.744,176,0.622,177,0.701,178,0.744,179,0.622,180,1.09,181,0.622,182,0.744,183,0.622,184,1.09,185,0.744,186,0.641,187,0.744,188,0.681,189,0.723,190,0.744,191,0.701,192,0.744,193,0.585,194,0.603,195,0.744,196,0.622,197,0.744,198,0.603,199,0.744,200,0.622,201,0.744,202,0.622,203,0.661,204,0.744,205,0.641,206,0.744,207,0.641,208,0.744,209,0.603,210,0.681,211,0.744,212,0.603,213,0.622,214,0.744,215,0.622,216,1.09,217,0.701,218,0.744,219,0.603,220,1.289,221,0.701,222,0.744,223,0.744,224,0.603,225,0.744,226,0.641,227,0.641,228,0.744,229,0.603,230,0.938,231,0.622,232,0.744,233,0.603,234,0.681,235,0.701,236,0.723,237,0.603,238,0.681,239,0.641,240,0.681,241,0.744,242,0.603,243,0.744,244,0.622,245,0.744,246,0.603,247,0.744,248,0.622,249,0.744,250,0.681,251,0.681,252,0.744,253,0.744,254,0.006,255,0.006]],["title/components/BreadcrumbComponent.html",[0,0.229,174,0.779]],["body/components/BreadcrumbComponent.html",[0,0.444,1,0.712,2,1.166,3,0.095,4,0.078,5,0.803,6,0.852,7,0.852,8,0.068,9,0.315,12,0.461,13,0.558,14,0.852,15,0.365,16,0.498,17,0.557,18,0.445,20,0.223,22,0.1,23,0.31,27,1.237,31,0.53,33,1.237,35,0.466,36,0.606,39,0.245,40,0.012,41,0.301,42,1.066,43,0.704,45,1.557,54,1.435,55,1.423,56,0.402,58,1.198,59,0.844,68,0.61,69,0.078,74,1.341,75,0.356,81,0.146,82,0.24,84,0.078,91,0.128,92,1.018,104,0.137,106,0.832,107,0.832,114,1.066,117,0.61,123,0.553,160,1.066,162,0.852,163,1.201,164,1.166,165,0.852,166,0.852,167,0.78,168,1.553,169,0.828,170,1.201,171,0.734,172,0.852,173,0.852,174,1.262,175,0.852,176,0.712,177,1.311,178,0.852,179,0.712,180,1.201,181,0.712,182,0.852,183,0.712,184,1.201,185,0.852,186,0.734,187,0.852,188,0.78,189,0.828,190,0.852,191,0.803,192,0.852,193,0.67,194,0.691,195,0.852,196,0.712,197,0.852,198,0.691,199,0.852,200,0.712,201,0.852,202,0.712,203,0.757,204,0.852,205,0.734,206,0.852,207,0.734,208,0.852,209,0.691,210,0.78,211,0.852,212,0.691,213,0.712,214,0.852,215,0.712,216,1.201,217,0.803,218,0.852,219,0.691,220,1.391,221,0.803,222,0.852,223,0.852,224,0.691,225,0.852,226,0.734,227,0.734,228,0.852,229,0.691,230,1.035,231,0.712,232,0.852,233,0.691,234,0.78,235,0.803,236,0.828,237,0.691,238,0.78,239,0.734,240,0.78,241,0.852,242,0.691,243,0.852,244,0.712,245,0.852,246,0.691,247,0.852,248,0.712,249,0.852,250,0.78,251,0.78,252,0.852,253,0.852,254,0.007,255,0.007,256,2.783,257,3.129,258,4.685,259,5.426,260,5.891,261,2.084,262,0.915,263,2.196,264,1.651,265,5.426,266,2.375,267,5.349,268,4.541,269,5.426,270,4.257,271,3.796,272,3.796,273,3.922,274,4.685,275,2.702,276,3.398,277,3.796,278,1.585,279,3.796,280,1.313,281,0.803,282,0.803,283,3.444,284,3.325,285,0.803,286,0.803,287,1.34,288,1.34,289,4.248,290,4.239,291,2.598,292,2.196,293,3.325,294,3.325,295,3.325,296,3.325,297,2.783,298,3.325,299,4.685,300,3.325,301,3.325,302,3.325,303,3.325,304,3.325,305,3.325,306,1.478,307,4.685,308,3.325,309,3.325,310,2.314,311,1.704,312,5.426,313,4.685,314,3.325,315,3.325,316,4.685,317,3.325,318,3.325,319,3.325,320,3.325,321,1.43,322,5.891,323,0.959,324,5.891,325,3.325,326,3.325,327,5.349]],["title/components/BreadcrumbLinkComponent.html",[0,0.229,176,0.779]],["body/components/BreadcrumbLinkComponent.html",[0,0.439,1,0.863,2,1.33,3,0.109,4,0.095,5,0.973,6,1.033,7,1.033,8,0.082,9,0.285,14,1.033,15,0.368,16,0.506,17,0.565,18,0.451,20,0.254,22,0.122,33,1.411,35,0.515,39,0.149,40,0.012,41,0.327,42,0.917,43,0.606,45,1.291,55,1.291,68,0.739,69,0.095,74,1.453,75,0.685,81,0.095,82,0.273,84,0.095,91,0.126,102,3.216,104,0.166,114,0.917,117,0.739,160,1.453,162,1.033,163,1.37,164,1.33,165,1.033,166,1.033,167,0.945,168,1.634,169,1.003,170,1.37,171,0.889,172,1.033,173,1.033,174,0.863,175,1.033,176,1.368,177,1.449,178,1.033,179,0.863,180,1.37,181,0.863,182,1.033,183,0.863,184,1.37,185,1.033,186,0.889,187,1.033,188,0.945,189,1.003,190,1.033,191,0.973,192,1.033,193,0.811,194,0.837,195,1.033,196,0.863,197,1.033,198,0.837,199,1.033,200,0.863,201,1.033,202,0.863,203,0.917,204,1.033,205,0.889,206,1.033,207,0.889,208,1.033,209,0.837,210,0.945,211,1.033,212,0.837,213,0.863,214,1.033,215,0.863,216,1.37,217,0.973,218,1.033,219,0.837,220,1.537,221,0.973,222,1.033,223,1.033,224,0.837,225,1.033,226,0.889,227,0.889,228,1.033,229,0.837,230,1.18,231,0.863,232,1.033,233,0.837,234,0.945,235,0.973,236,1.003,237,0.837,238,0.945,239,0.889,240,0.945,241,1.033,242,0.837,243,1.033,244,0.863,245,1.033,246,0.837,247,1.033,248,0.863,249,1.033,250,0.945,251,0.945,252,1.033,253,1.033,254,0.008,255,0.008,262,1.171,270,2.661,283,4.406,290,3.147,328,3.652,329,5.343,330,4.599,331,4.599,332,4.028,333,7.29]],["title/components/ButtonComponent.html",[0,0.229,179,0.779]],["body/components/ButtonComponent.html",[0,0.46,1,0.665,2,1.111,3,0.091,4,0.073,5,0.75,6,0.796,7,0.796,8,0.063,9,0.34,14,0.796,15,0.363,16,0.496,17,0.554,18,0.443,20,0.212,22,0.094,27,1.179,31,0.514,33,1.179,35,0.449,36,0.725,37,2.471,39,0.246,40,0.012,41,0.356,42,1.016,43,0.671,45,1.712,50,1.698,54,0.951,55,1.263,56,0.267,58,0.986,59,0.695,66,2.63,68,1.11,69,0.073,73,2.822,74,1.3,75,0.333,76,1.921,81,0.073,82,0.356,83,1.251,84,0.073,89,3.014,91,0.153,92,1.853,95,2.205,99,2.471,100,2.471,103,2.542,104,0.128,106,1.179,107,1.179,114,0.707,116,2.303,117,0.57,120,1.053,122,3.281,123,0.95,124,0.534,162,0.796,163,1.145,164,1.111,165,0.796,166,0.796,167,0.728,168,1.522,169,0.773,170,1.145,171,0.686,172,0.796,173,0.796,174,0.665,175,0.796,176,0.665,177,0.75,178,0.796,179,1.224,180,1.145,181,0.665,182,0.796,183,0.665,184,1.145,185,0.796,186,0.686,187,0.796,188,0.728,189,0.773,190,0.796,191,0.75,192,0.796,193,0.626,194,0.645,195,0.796,196,0.665,197,0.796,198,0.645,199,0.796,200,0.665,201,0.796,202,0.665,203,0.707,204,0.796,205,0.686,206,0.796,207,0.686,208,0.796,209,0.645,210,0.728,211,0.796,212,0.645,213,0.665,214,0.796,215,0.665,216,1.145,217,0.75,218,0.796,219,0.645,220,1.34,221,0.75,222,0.796,223,0.796,224,0.645,225,0.796,226,0.686,227,0.686,228,0.796,229,0.645,230,0.986,231,0.665,232,0.796,233,0.645,234,0.728,235,0.75,236,0.773,237,0.645,238,0.728,239,0.686,240,1.225,241,0.796,242,0.645,243,0.796,244,0.665,245,0.796,246,0.645,247,0.796,248,0.665,249,0.796,250,0.728,251,0.728,252,0.796,253,0.796,254,0.007,255,0.007,323,2.074,334,2.6,335,3.488,336,3.736,337,2.379,338,4.782,339,5.713,340,5.226,341,3.546,342,3.546,343,3.546,344,3.546,345,3.546,346,3.546,347,3.546,348,3.546,349,3.546,350,2.041,351,3.546,352,3.546,353,4.464,354,3.546,355,3.546,356,4.083,357,3.104,358,4.738,359,4.738,360,3.106,361,4.464,362,2.949,363,4.738,364,3.633,365,3.488,366,1.251,367,0.796,368,3.104,369,2.16,370,1.986,371,1.293,372,4.464,373,3.106,374,3.488,375,2.427,376,2.376,377,1.592,378,4.464,379,3.106,380,3.452,381,3.439,382,6.301,383,4.464,384,3.106]],["title/components/CheckboxComponent.html",[0,0.229,181,0.779]],["body/components/CheckboxComponent.html",[0,0.464,1,0.496,2,0.893,3,0.073,4,0.055,5,1.06,6,0.594,7,0.594,8,0.047,9,0.345,12,0.353,13,0.451,14,0.594,15,0.356,16,0.481,17,0.537,18,0.432,20,0.171,22,0.07,23,0.237,27,0.948,31,0.445,33,0.948,35,0.377,36,0.631,39,0.253,40,0.012,41,0.338,42,1.522,43,1.005,45,1.747,54,1.636,55,1.424,56,0.537,58,1.41,59,1.027,65,2.057,68,0.425,69,0.055,74,1.124,75,0.53,78,1.752,81,0.139,82,0.253,83,1.005,84,0.055,91,0.085,104,0.095,106,0.412,107,0.412,114,0.527,117,0.425,120,1.286,123,0.73,124,0.617,155,1.395,160,1.341,162,0.594,163,0.92,164,0.893,165,0.594,166,0.594,167,0.544,168,1.382,169,0.577,170,0.92,171,0.512,172,0.594,173,0.594,174,0.496,175,0.594,176,0.496,177,0.56,178,0.594,179,0.496,180,0.92,181,1.21,182,0.594,183,0.496,184,0.92,185,0.594,186,0.512,187,0.594,188,0.544,189,0.577,190,0.594,191,0.56,192,0.594,193,0.467,194,0.482,195,0.594,196,0.496,197,0.594,198,0.482,199,0.594,200,0.496,201,0.594,202,0.496,203,0.527,204,0.594,205,0.512,206,0.594,207,0.512,208,0.594,209,0.482,210,0.544,211,0.594,212,0.482,213,0.496,214,0.594,215,0.496,216,0.92,217,0.56,218,0.594,219,0.482,220,1.125,221,0.56,222,0.594,223,0.594,224,0.482,225,0.594,226,0.512,227,0.512,228,0.594,229,0.482,230,0.792,231,0.496,232,0.594,233,0.482,234,0.544,235,0.56,236,0.577,237,0.482,238,0.544,239,0.512,240,0.544,241,0.594,242,0.482,243,0.594,244,0.496,245,0.594,246,0.482,247,0.594,248,0.496,249,0.594,250,0.544,251,0.544,252,0.594,253,0.594,254,0.005,255,0.005,261,2.198,262,0.701,264,1.384,266,2.52,278,1.105,280,1.23,281,0.56,282,0.56,285,0.56,286,0.56,287,0.935,288,0.935,306,0.731,323,0.669,337,1.494,366,1.005,367,1.37,371,0.965,376,1.234,377,1.188,385,2.747,386,2.102,387,2.43,388,1.596,389,1.71,390,2.092,391,1.71,392,2.092,393,1.544,394,2.803,395,3.588,396,2.642,397,2.092,398,2.738,399,3.137,400,2.764,401,3.834,402,2.092,403,2.43,404,3.226,405,1.828,406,2.713,407,3.402,408,4.135,409,2.974,410,2.803,411,2.803,412,3.253,413,2.37,414,3.631,415,2.987,416,1.811,417,4.096,418,3.673,419,3.365,420,4.389,421,2.646,422,2.646,423,2.646,424,2.646,425,1.544,426,1.845,427,1.79,428,2.646,429,2.168,430,2.532,431,3.003,432,2.646,433,2.646,434,2.646,435,1.838,436,2.069,437,2.259,438,2.646,439,3.111,440,2.259,441,2.646,442,1.94,443,2.646,444,2.844,445,3.588,446,3.003,447,1.596,448,2.646,449,1.888,450,2.646,451,2.646,452,2.092,453,2.646,454,2.642,455,2.646,456,2.646,457,1.79,458,2.646,459,1.77,460,2.809,461,1.544,462,2.646,463,2.646,464,2.646,465,2.646,466,2.646,467,0.825,468,1.544,469,0.997,470,0.997,471,1.544,472,1.544,473,1.446,474,1.105,475,0.997,476,2.318,477,2.318,478,2.318,479,2.318,480,2.318,481,2.318,482,2.318,483,2.318,484,1.811,485,2.318,486,0.997,487,0.997,488,1.105,489,1.283,490,1.234,491,2.318,492,2.102,493,2.318,494,2.318,495,2.318,496,2.318,497,2.318,498,1.395,499,1.94,500,1.188,501,1.704,502,2.318,503,0.496,504,2.642,505,1.188,506,1.395,507,1.031,508,1.031,509,1.031,510,1.71,511,1.71,512,2.693,513,1.358,514,1.71,515,3.588,516,1.71,517,1.71,518,2.318,519,1.91,520,1.105,521,1.105,522,1.94,523,2.642,524,1.395,525,1.395,526,1.395,527,1.188,528,1.166,529,1.651,530,1.94,531,1.94,532,4.096,533,2.637]],["title/components/ChipItemComponent.html",[0,0.229,183,0.779]],["body/components/ChipItemComponent.html",[0,0.453,1,0.839,2,1.306,3,0.107,4,0.092,5,0.947,6,1.005,7,1.005,8,0.08,9,0.322,14,1.005,15,0.368,16,0.503,17,0.563,18,0.45,20,0.25,22,0.118,27,1.385,33,1.385,37,2.904,39,0.194,40,0.012,41,0.268,45,1.591,50,1.758,55,1.267,58,1.158,59,0.816,68,0.718,69,0.092,74,1.437,75,0.42,81,0.092,82,0.268,83,1.47,84,0.092,91,0.092,114,0.892,117,0.718,124,0.674,162,1.005,163,1.345,164,1.306,165,1.005,166,1.005,167,0.919,168,1.623,169,0.975,170,1.345,171,0.865,172,1.005,173,1.005,174,0.839,175,1.005,176,0.839,177,0.947,178,1.005,179,0.839,180,1.345,181,0.839,182,1.005,183,1.353,184,1.737,185,1.005,186,0.865,187,1.005,188,0.919,189,0.975,190,1.005,191,0.947,192,1.005,193,0.789,194,0.814,195,1.005,196,0.839,197,1.005,198,0.814,199,1.005,200,0.839,201,1.005,202,0.839,203,0.892,204,1.005,205,0.865,206,1.005,207,0.865,208,1.005,209,0.814,210,0.919,211,1.005,212,0.814,213,0.839,214,1.005,215,0.839,216,1.345,217,0.947,218,1.005,219,0.814,220,1.516,221,0.947,222,1.005,223,1.005,224,0.814,225,1.005,226,0.865,227,0.865,228,1.005,229,0.814,230,1.158,231,0.839,232,1.005,233,0.814,234,0.919,235,0.947,236,0.975,237,0.814,238,0.919,239,0.865,240,0.919,241,1.005,242,0.814,243,1.005,244,0.839,245,1.005,246,0.814,247,1.005,248,0.839,249,1.005,250,0.919,251,0.919,252,1.005,253,1.005,254,0.008,255,0.008,262,1.155,534,4.078,535,6.143,536,5.671,537,3.918,538,4.756,539,5.988,540,7.209,541,7.209,542,6.583,543,6.751,544,5.988,545,4.473,546,4.473,547,4.473,548,5.988]],["title/components/ChipListComponent.html",[0,0.229,186,0.803]],["body/components/ChipListComponent.html",[0,0.457,1,0.805,2,1.269,3,0.104,4,0.089,5,0.908,6,0.963,7,0.963,8,0.076,9,0.331,12,0.502,13,0.595,14,0.963,15,0.367,16,0.502,17,0.561,18,0.449,20,0.243,22,0.114,23,0.337,27,1.347,31,0.559,33,1.347,37,2.823,39,0.23,40,0.012,41,0.318,45,1.654,50,1.721,54,1.15,55,1.398,56,0.497,58,1.278,59,0.966,68,0.689,69,0.089,74,1.413,75,0.403,81,0.089,82,0.261,83,1.429,84,0.089,91,0.089,114,0.855,117,0.689,124,0.646,162,0.963,163,1.307,164,1.269,165,0.963,166,0.963,167,0.881,168,1.605,169,0.935,170,1.307,171,0.83,172,0.963,173,0.963,174,0.805,175,0.963,176,0.805,177,0.908,178,0.963,179,0.805,180,1.307,181,0.805,182,0.963,183,0.805,184,1.716,185,0.963,186,1.371,187,0.963,188,0.881,189,0.935,190,0.963,191,0.908,192,0.963,193,0.757,194,0.781,195,0.963,196,0.805,197,0.963,198,0.781,199,0.963,200,0.805,201,0.963,202,0.805,203,0.855,204,0.963,205,0.83,206,0.963,207,0.83,208,0.963,209,0.781,210,0.881,211,0.963,212,0.781,213,0.805,214,0.963,215,0.805,216,1.307,217,0.908,218,0.963,219,0.781,220,1.484,221,0.908,222,0.963,223,0.963,224,0.781,225,0.963,226,0.83,227,0.83,228,0.963,229,0.781,230,1.126,231,0.805,232,0.963,233,0.781,234,0.881,235,0.908,236,0.935,237,0.781,238,0.881,239,0.83,240,0.881,241,0.963,242,0.781,243,0.963,244,0.805,245,0.963,246,0.781,247,0.963,248,0.805,249,0.963,250,0.881,251,0.881,252,0.963,253,0.963,254,0.008,255,0.008,262,1.13,321,1.617,350,2.261,534,4.193,535,6.315,549,6.315,550,3.757,551,5.821,552,5.821,553,6.608,554,7.087,555,5.821,556,6.608,557,6.608,558,5.821,559,4.289,560,4.289,561,4.289,562,4.289,563,5.821,564,4.289,565,4.289,566,4.289,567,5.821,568,5.821,569,4.289]],["title/components/ComponentPreviewComponent.html",[0,0.229,191,0.879]],["body/components/ComponentPreviewComponent.html",[0,0.467,1,0.825,2,1.291,3,0.105,4,0.091,5,0.931,6,0.988,7,0.988,8,0.078,14,0.988,15,0.368,16,0.503,17,0.562,18,0.449,20,0.247,22,0.116,33,1.369,39,0.192,40,0.012,41,0.321,45,1.416,55,1.253,68,0.706,69,0.091,73,2.561,74,1.489,75,0.556,81,0.091,82,0.3,84,0.091,91,0.091,114,0.876,117,0.706,118,2.544,144,2.544,160,1.427,162,0.988,163,1.329,164,1.291,165,0.988,166,0.988,167,0.903,168,1.664,169,0.959,170,1.329,171,0.85,172,0.988,173,0.988,174,0.825,175,0.988,176,0.825,177,0.931,178,0.988,179,0.825,180,1.329,181,0.825,182,0.988,183,0.825,184,1.329,185,0.988,186,0.85,187,0.988,188,0.903,189,0.959,190,0.988,191,1.515,192,0.988,193,0.776,194,0.8,195,0.988,196,0.825,197,0.988,198,0.8,199,0.988,200,0.825,201,0.988,202,0.825,203,0.876,204,0.988,205,0.85,206,0.988,207,0.85,208,0.988,209,0.8,210,0.903,211,0.988,212,0.8,213,0.825,214,0.988,215,0.825,216,1.329,217,0.931,218,0.988,219,0.8,220,1.503,221,0.931,222,0.988,223,0.988,224,0.8,225,0.988,226,0.85,227,0.85,228,0.988,229,0.8,230,1.145,231,0.825,232,0.988,233,0.8,234,0.903,235,0.931,236,0.959,237,0.8,238,0.903,239,0.85,240,0.903,241,0.988,242,0.8,243,0.988,244,0.825,245,0.988,246,0.8,247,0.988,248,0.825,249,0.988,250,0.903,251,0.903,252,0.988,253,0.988,254,0.008,255,0.008,262,1.145,570,2.678,571,6.271,572,6.271,573,3.851,574,6.692,575,3.121,576,6.692,577,5.92,578,6.692,579,6.692,580,5.92,581,4.397,582,5.92,583,5.92,584,3.492,585,3.425,586,4.397,587,4.34,588,3.425,589,3.851,590,4.906,591,5.92,592,4.051,593,3.223,594,4.58,595,3.223,596,3.851,597,3.851,598,3.223,599,4.397,600,3.851,601,2.678,602,4.397,603,4.397,604,4.397,605,4.397,606,3.223,607,3.223,608,3.851,609,4.397,610,3.851,611,4.397]],["title/components/DropdownComponent.html",[0,0.229,196,0.779]],["body/components/DropdownComponent.html",[0,0.457,1,0.611,2,1.045,3,0.101,4,0.067,5,0.689,6,0.731,7,0.731,8,0.058,9,0.337,12,0.413,13,0.512,14,0.731,15,0.361,16,0.492,17,0.549,18,0.44,20,0.2,22,0.127,23,0.277,27,1.108,31,0.494,33,1.108,35,0.428,36,0.725,39,0.249,40,0.012,41,0.339,42,1.476,43,1.026,45,1.7,54,1.285,55,1.326,56,0.36,58,1.212,59,0.854,66,2.527,68,0.913,69,0.067,74,1.249,75,0.306,78,0.848,81,0.138,82,0.332,84,0.067,85,2.42,87,1.36,88,1.717,91,0.099,104,0.117,106,0.975,107,0.975,114,0.649,117,0.523,120,1.356,123,0.913,162,0.731,163,1.076,164,1.045,165,0.731,166,0.731,167,0.669,168,1.483,169,0.71,170,1.076,171,0.63,172,0.731,173,0.731,174,0.611,175,0.731,176,0.611,177,0.689,178,0.731,179,0.611,180,1.076,181,0.611,182,0.731,183,0.611,184,1.076,185,0.731,186,0.63,187,0.731,188,0.669,189,0.71,190,0.731,191,0.689,192,0.731,193,0.575,194,0.593,195,0.731,196,1.176,197,0.731,198,0.593,199,0.731,200,0.611,201,0.731,202,0.611,203,1.554,204,0.731,205,0.63,206,0.731,207,0.63,208,0.731,209,0.593,210,0.669,211,0.731,212,0.593,213,0.611,214,0.731,215,0.611,216,1.076,217,0.689,218,0.731,219,0.593,220,1.276,221,0.689,222,0.731,223,0.731,224,0.593,225,0.731,226,0.63,227,0.63,228,0.731,229,0.593,230,0.927,231,0.611,232,0.731,233,0.593,234,0.669,235,0.689,236,0.71,237,0.593,238,0.669,239,0.63,240,0.669,241,0.731,242,0.593,243,0.731,244,0.611,245,0.731,246,0.593,247,0.731,248,0.611,249,0.731,250,0.669,251,0.669,252,0.731,253,0.731,254,0.006,255,0.006,280,1.395,281,0.689,282,0.689,310,1.409,323,1.437,337,2.286,356,3.889,366,1.176,367,1.276,368,2.918,369,3.461,370,1.867,371,1.188,376,2.234,377,1.462,427,1.838,430,2.15,457,2.049,500,2.15,513,1.884,533,3.084,612,6.429,613,2.587,614,2.643,615,4.196,616,4.196,617,4.978,618,2.215,619,4.978,620,5.489,621,4.196,622,4.791,623,4.289,624,3.257,625,4.166,626,3.257,627,3.257,628,3.257,629,3.257,630,3.257,631,3.257,632,3.257,633,5.489,634,2.643,635,3.257,636,4.196,637,3.626,638,3.257,639,5.546,640,4.196,641,5.849,642,3.257,643,2.918,644,4.978,645,4.196,646,4.196,647,4.196,648,4.978,649,4.196,650,4.196,651,2.42,652,3.084,653,4.196,654,4.289,655,2.853,656,4.034,657,4.196,658,2.711,659,2.643,660,3.257,661,3.257,662,3.257,663,2.587,664,2.587,665,3.084,666,4.196,667,4.978,668,2.853,669,2.853,670,4.196,671,2.853,672,2.853,673,2.853,674,2.388,675,2.388,676,2.853,677,2.853,678,4.978,679,4.196,680,4.196,681,4.196,682,2.853,683,2.587,684,2.853,685,2.853,686,2.853,687,2.853,688,2.853,689,2.853,690,4.791]],["title/components/ErrorComponent.html",[0,0.229,198,0.756]],["body/components/ErrorComponent.html",[0,0.458,1,0.751,2,1.21,3,0.099,4,0.083,5,0.847,6,0.899,7,0.899,8,0.071,9,0.335,12,0.479,13,0.574,14,0.899,15,0.366,16,0.501,17,0.559,18,0.447,20,0.231,22,0.106,27,1.284,31,0.543,33,1.284,35,0.479,36,0.707,39,0.235,40,0.012,41,0.351,45,1.681,54,1.074,55,1.349,56,0.301,58,1.233,59,0.938,68,1.232,69,0.132,73,2.402,74,1.372,75,0.376,81,0.115,82,0.335,84,0.083,91,0.132,104,0.2,106,0.863,107,0.863,114,0.798,117,0.643,123,1.003,155,3.361,160,1.107,162,0.899,163,1.247,164,1.21,165,0.899,166,0.899,167,0.822,168,1.576,169,0.873,170,1.247,171,0.774,172,0.899,173,0.899,174,0.751,175,0.899,176,0.751,177,0.847,178,0.899,179,0.751,180,1.247,181,0.751,182,0.899,183,0.751,184,1.247,185,0.899,186,0.774,187,0.899,188,0.822,189,0.873,190,0.899,191,0.847,192,0.899,193,0.706,194,0.728,195,0.899,196,0.751,197,0.899,198,1.253,199,0.899,200,0.751,201,0.899,202,0.751,203,0.798,204,0.899,205,0.774,206,0.899,207,0.774,208,0.899,209,0.728,210,0.822,211,0.899,212,0.728,213,0.751,214,0.899,215,0.751,216,1.247,217,0.847,218,0.899,219,0.728,220,1.431,221,0.847,222,0.899,223,0.899,224,0.728,225,0.899,226,0.774,227,0.774,228,0.899,229,0.728,230,1.074,231,0.751,232,0.899,233,0.728,234,0.822,235,0.847,236,0.873,237,0.728,238,0.822,239,0.774,240,0.822,241,0.899,242,0.728,243,0.899,244,0.751,245,0.899,246,0.728,247,0.899,248,0.751,249,0.899,250,0.822,251,0.822,252,0.899,253,0.899,254,0.007,255,0.007,257,3.22,261,2.163,262,1.09,275,2.805,276,3.477,278,1.671,280,1.564,281,0.847,282,0.847,306,1.761,366,1.363,367,0.899,370,2.163,371,1.46,380,3.212,381,2.111,385,2.666,426,1.679,651,2.022,691,2.935,692,4.409,693,5.467,694,5.742,695,5.552,696,4.362,697,4.003,698,4.003,699,4.192,700,4.003,701,4.003,702,4.003,703,4.003,704,4.003,705,2.577,706,3.179,707,1.671,708,2.438,709,4.409,710,4.409,711,3.179,712,5.552]],["title/components/FlyoutComponent.html",[0,0.229,200,0.779]],["body/components/FlyoutComponent.html",[0,0.462,1,0.562,2,0.981,3,0.08,4,0.062,5,0.634,6,0.673,7,0.673,8,0.053,9,0.344,12,0.388,13,0.487,14,0.673,15,0.359,16,0.488,17,0.545,18,0.437,20,0.188,22,0.196,23,0.26,27,1.041,31,0.474,33,1.041,35,0.485,36,0.663,37,2.183,39,0.264,40,0.012,41,0.289,42,1.199,43,0.892,45,1.74,50,1.408,54,1.816,55,1.487,56,0.485,58,1.359,59,0.957,68,0.481,69,0.062,74,1.199,75,0.281,78,1.566,81,0.093,82,0.315,83,1.105,84,0.062,91,0.112,92,0.803,104,0.108,106,0.7,107,0.7,114,0.597,117,0.481,120,0.954,124,0.814,144,1.733,160,0.897,162,0.673,163,1.011,164,0.981,165,0.673,166,0.673,167,0.615,168,1.443,169,0.653,170,1.011,171,0.579,172,0.673,173,0.673,174,0.562,175,0.673,176,0.562,177,0.634,178,0.673,179,0.562,180,1.011,181,0.562,182,0.673,183,0.562,184,1.011,185,0.673,186,0.579,187,0.673,188,0.615,189,0.653,190,0.673,191,0.634,192,0.673,193,0.528,194,0.545,195,0.673,196,0.562,197,0.673,198,0.545,199,0.673,200,1.128,201,0.673,202,0.562,203,1.285,204,0.673,205,0.579,206,0.673,207,0.579,208,0.673,209,0.545,210,0.615,211,0.673,212,0.545,213,0.562,214,0.673,215,0.562,216,1.011,217,0.634,218,0.673,219,0.545,220,1.215,221,0.634,222,0.673,223,0.673,224,0.545,225,0.673,226,0.579,227,0.579,228,0.673,229,0.545,230,0.871,231,0.562,232,0.673,233,0.545,234,0.615,235,0.634,236,0.653,237,0.545,238,0.615,239,0.579,240,0.615,241,0.673,242,0.545,243,0.673,244,0.562,245,0.673,246,0.545,247,0.673,248,0.562,249,0.673,250,0.615,251,0.615,252,0.673,253,0.673,254,0.006,255,0.006,278,1.25,291,2.05,297,2.196,310,1.947,311,2.427,321,2.43,323,0.757,337,2.193,350,2.473,366,0.735,367,0.673,376,1.396,377,1.344,393,2.266,430,1.344,446,3.3,457,2.061,489,1.452,490,1.396,538,2.378,618,2.343,634,2.983,637,4.534,643,1.824,656,3.481,658,2.602,674,2.196,675,2.196,713,2.196,714,3.943,715,5.931,716,4.737,717,5.267,718,5.267,719,4.501,720,4.501,721,4.501,722,4.501,723,4.501,724,5.267,725,4.737,726,3.965,727,4.501,728,4.501,729,4.501,730,2.995,731,2.995,732,2.995,733,3.871,734,2.995,735,2.995,736,2.995,737,2.995,738,4.295,739,2.995,740,6.154,741,4.501,742,2.995,743,4.501,744,2.995,745,4.501,746,2.995,747,3.943,748,2.995,749,3.943,750,2.995,751,3.943,752,3.871,753,3.943,754,3.943,755,3.943,756,3.943,757,3.943,758,3.943,759,2.995,760,2.995,761,5.647,762,3.943,763,2.995,764,2.995,765,1.824,766,2.623,767,1.824,768,1.824,769,2.378,770,4.295,771,4.295,772,2.196,773,2.196,774,2.623,775,4.115,776,2.378,777,2.623,778,2.623,779,3.943,780,2.623,781,2.623,782,1.733,783,4.737,784,5.931,785,2.623,786,2.623,787,3.943,788,5.647,789,3.943,790,2.623,791,2.623,792,2.623,793,2.623,794,2.623,795,2.623,796,2.623,797,2.623,798,3.943,799,2.623,800,3.943,801,2.623,802,2.378,803,2.623,804,2.623,805,2.623,806,3.943,807,2.378,808,2.604,809,2.623,810,1.928,811,2.623,812,2.623,813,2.623,814,3.943,815,2.623,816,2.623,817,2.623,818,2.378,819,3.943,820,2.623,821,2.623,822,2.623,823,3.575,824,2.623,825,1.733,826,2.623,827,2.623,828,2.623,829,2.623,830,3.943,831,2.623,832,1.824,833,2.623,834,3.943,835,2.623,836,2.623,837,2.623,838,1.652,839,2.623,840,2.623,841,2.623,842,2.623,843,2.623]],["title/components/FlyoutOptionComponent.html",[0,0.229,202,0.779]],["body/components/FlyoutOptionComponent.html",[0,0.442,1,0.78,2,1.242,3,0.101,4,0.086,5,0.879,6,0.933,7,0.933,8,0.074,9,0.305,12,0.491,13,0.585,14,0.933,15,0.367,16,0.502,17,0.561,18,0.448,20,0.237,22,0.11,27,1.318,31,0.551,33,1.318,35,0.489,36,0.74,39,0.211,40,0.012,41,0.313,42,0.828,43,0.921,45,1.48,55,1.206,58,0.804,59,0.566,68,0.667,69,0.086,74,1.394,75,0.688,78,1.082,81,0.086,82,0.291,84,0.086,91,0.134,92,1.114,104,0.15,106,0.646,107,0.646,114,0.828,117,0.667,120,1.234,139,3.142,160,1.394,162,0.933,163,1.279,164,1.242,165,0.933,166,0.933,167,0.853,168,1.592,169,0.906,170,1.279,171,0.804,172,0.933,173,0.933,174,0.78,175,0.933,176,0.78,177,0.879,178,0.933,179,0.78,180,1.279,181,0.78,182,0.933,183,0.78,184,1.279,185,0.933,186,0.804,187,0.933,188,0.853,189,0.906,190,0.933,191,0.879,192,0.933,193,0.733,194,0.756,195,0.933,196,0.78,197,0.933,198,0.756,199,0.933,200,0.78,201,0.933,202,1.312,203,1.461,204,0.933,205,0.804,206,0.933,207,0.804,208,0.933,209,0.756,210,0.853,211,0.933,212,0.756,213,0.78,214,0.933,215,0.78,216,1.279,217,0.879,218,0.933,219,0.756,220,1.46,221,0.879,222,0.933,223,0.933,224,0.756,225,0.933,226,0.804,227,0.804,228,0.933,229,0.756,230,1.102,231,0.78,232,0.933,233,0.756,234,0.853,235,0.879,236,0.906,237,0.756,238,0.853,239,0.804,240,0.853,241,0.933,242,0.756,243,0.933,244,0.78,245,0.933,246,0.756,247,0.933,248,0.78,249,0.933,250,0.853,251,0.853,252,0.933,253,0.933,254,0.008,255,0.008,262,1.112,311,1.865,323,1.05,337,1.516,366,1.02,367,0.933,394,4.449,427,1.671,457,1.219,614,3.585,618,1.619,634,2.292,733,4.185,768,4.463,772,3.046,773,3.046,808,3.296,844,5.372,845,3.046,846,4.99,847,5.697,848,4.99,849,4.155,850,4.155,851,4.524,852,4.524,853,3.64,854,3.64,855,4.99,856,6.994]],["title/components/FooterComponent.html",[0,0.229,205,0.803]],["body/components/FooterComponent.html",[0,0.453,1,0.762,2,1.223,3,0.1,4,0.084,5,0.86,6,0.912,7,0.912,8,0.072,9,0.327,14,0.912,15,0.366,16,0.501,17,0.56,18,0.448,20,0.234,22,0.108,23,0.325,27,1.298,31,0.546,33,1.298,36,0.629,39,0.244,40,0.012,41,0.345,42,1.381,43,0.912,45,1.63,54,1.504,55,1.466,56,0.422,58,1.085,59,0.764,68,0.652,69,0.084,74,1.381,75,0.382,81,0.116,82,0.251,84,0.084,91,0.155,114,0.81,117,0.652,160,1.118,162,0.912,163,1.26,164,1.223,165,0.912,166,0.912,167,0.834,168,1.582,169,0.886,170,1.26,171,0.786,172,0.912,173,0.912,174,0.762,175,0.912,176,0.762,177,0.86,178,0.912,179,0.762,180,1.26,181,0.762,182,0.912,183,0.762,184,1.26,185,0.912,186,0.786,187,0.912,188,0.834,189,0.886,190,0.912,191,0.86,192,0.912,193,0.717,194,0.739,195,0.912,196,0.762,197,0.912,198,0.739,199,0.912,200,0.762,201,0.912,202,0.762,203,0.81,204,0.912,205,1.34,206,0.912,207,0.786,208,0.912,209,0.739,210,0.834,211,0.912,212,0.739,213,0.762,214,0.912,215,0.762,216,1.26,217,0.86,218,0.912,219,0.739,220,1.443,221,0.86,222,0.912,223,0.912,224,0.739,225,0.912,226,0.786,227,0.786,228,0.912,229,0.739,230,1.085,231,0.762,232,0.912,233,0.739,234,0.834,235,0.86,236,0.886,237,0.739,238,0.834,239,0.786,240,0.834,241,0.912,242,0.739,243,0.912,244,0.762,245,0.912,246,0.739,247,0.912,248,0.762,249,0.912,250,0.834,251,0.834,252,0.912,253,0.912,254,0.007,255,0.007,262,0.695,263,2.351,264,1.7,285,0.86,286,0.86,413,3.245,425,2.421,447,2.186,449,2.421,503,1.364,507,1.583,508,1.583,509,1.583,528,1.597,857,4.139,858,3.226,859,5.609,860,5.609,861,6.424,862,5.627,863,5.609,864,4.062,865,4.062,866,4.062,867,4.062,868,4.062,869,5.102,870,3.226,871,3.558,872,3.558,873,4.454,874,3.226,875,3.226,876,5.501,877,4.454,878,3.226,879,4.454,880,3.226,881,4.454,882,4.913,883,4.454,884,3.226,885,1.758,886,4.913,887,4.913,888,5.609]],["title/components/HeaderComponent.html",[0,0.229,207,0.803]],["body/components/HeaderComponent.html",[0,0.455,1,0.689,2,1.14,3,0.093,4,0.076,5,0.777,6,0.825,7,0.825,8,0.065,9,0.324,14,0.825,15,0.364,16,0.497,17,0.555,18,0.444,20,0.218,22,0.097,23,0.302,27,1.209,31,0.574,33,1.209,36,0.733,39,0.243,40,0.012,41,0.362,42,1.396,43,0.986,45,1.62,54,1.402,55,1.403,56,0.393,58,1.011,59,0.712,67,2.756,68,0.59,69,0.076,74,1.321,75,0.345,81,0.108,82,0.234,84,0.076,91,0.161,114,1.213,117,0.59,160,1.042,162,0.825,163,1.174,164,1.587,165,0.825,166,0.825,167,0.755,168,1.538,169,0.801,170,1.174,171,0.71,172,0.825,173,0.825,174,0.689,175,0.825,176,0.689,177,0.777,178,0.825,179,0.689,180,1.174,181,0.689,182,0.825,183,0.689,184,1.174,185,0.825,186,0.71,187,0.825,188,0.755,189,0.801,190,0.825,191,0.777,192,0.825,193,0.648,194,0.668,195,0.825,196,0.689,197,0.825,198,0.668,199,0.825,200,0.689,201,0.825,202,0.689,203,0.732,204,0.825,205,0.71,206,0.825,207,1.282,208,0.825,209,0.668,210,0.755,211,0.825,212,0.668,213,0.689,214,0.825,215,0.689,216,1.174,217,0.777,218,0.825,219,0.668,220,1.366,221,0.777,222,0.825,223,0.825,224,0.668,225,0.825,226,0.71,227,1.177,228,0.825,229,0.668,230,1.011,231,0.689,232,0.825,233,0.668,234,0.755,235,0.777,236,0.801,237,0.668,238,0.755,239,0.71,240,0.755,241,0.825,242,0.668,243,0.825,244,0.689,245,0.825,246,0.668,247,0.825,248,0.689,249,0.825,250,0.755,251,0.755,252,0.825,253,0.825,254,0.007,255,0.007,262,0.628,263,2.126,264,1.627,278,2.182,285,0.777,286,0.777,291,3.577,413,3.024,425,2.293,436,2.64,447,2.583,449,2.293,503,1.436,507,1.431,508,1.431,509,1.431,528,2.072,823,4.151,832,3.183,857,4.106,862,5.329,870,4.151,874,2.917,875,4.151,876,5.264,878,2.917,879,4.832,880,4.151,885,1.589,886,4.578,887,4.578,889,2.917,890,5.336,891,5.227,892,6.084,893,6.084,894,5.227,895,3.674,896,5.227,897,5.227,898,3.674,899,5.227,900,5.227,901,5.227,902,5.227,903,5.227,904,3.674,905,5.227,906,5.227,907,4.151,908,6.628,909,3.024,910,5.227,911,5.227,912,3.674,913,3.674,914,3.674,915,4.151,916,4.578,917,4.578,918,3.218,919,4.151,920,3.218,921,4.151,922,3.218,923,4.151,924,3.218,925,4.151,926,4.578,927,4.151,928,4.151,929,4.151,930,5.227,931,5.227]],["title/components/HiddenNavComponent.html",[0,0.229,209,0.756]],["body/components/HiddenNavComponent.html",[0,0.445,1,0.765,2,1.226,3,0.1,4,0.084,5,0.863,6,0.916,7,0.916,8,0.073,9,0.314,13,0.367,14,0.916,15,0.366,16,0.501,17,0.56,18,0.448,20,0.234,22,0.108,27,1.301,33,1.301,35,0.484,36,0.712,39,0.209,40,0.012,41,0.375,42,0.813,43,0.537,45,1.541,54,1.509,55,1.469,56,0.423,58,1.245,59,0.877,68,0.655,69,0.084,74,1.383,75,0.383,81,0.084,82,0.252,84,0.084,91,0.133,102,3.838,104,0.203,114,0.813,116,1.441,117,0.903,137,2.626,162,0.916,163,1.263,164,1.226,165,0.916,166,0.916,167,0.838,168,1.584,169,0.889,170,1.263,171,0.789,172,0.916,173,0.916,174,0.765,175,0.916,176,0.765,177,0.863,178,0.916,179,0.765,180,1.263,181,0.765,182,0.916,183,0.765,184,1.263,185,0.916,186,0.789,187,0.916,188,0.838,189,0.889,190,0.916,191,0.863,192,0.916,193,0.72,194,0.742,195,0.916,196,0.765,197,0.916,198,0.742,199,0.916,200,0.765,201,0.916,202,0.765,203,0.813,204,0.916,205,0.789,206,0.916,207,0.789,208,0.916,209,1.263,210,1.495,211,0.916,212,0.742,213,0.765,214,0.916,215,0.765,216,1.263,217,0.863,218,0.916,219,0.742,220,1.446,221,0.863,222,0.916,223,0.916,224,0.742,225,0.916,226,0.789,227,0.789,228,0.916,229,0.742,230,1.088,231,0.765,232,0.916,233,0.742,234,0.838,235,0.863,236,0.889,237,0.742,238,0.838,239,0.789,240,0.838,241,0.916,242,0.742,243,0.916,244,0.765,245,0.916,246,0.742,247,0.916,248,0.765,249,0.916,250,0.838,251,0.838,252,0.916,253,0.916,254,0.007,255,0.007,270,2.36,292,3.725,321,1.537,503,1.208,655,3.573,707,2.348,726,4.124,738,3.24,752,2.626,765,2.484,857,3.968,932,5.517,933,5.15,934,2.991,935,4.226,936,4.467,937,5.625,938,5.625,939,5.511,940,5.625,941,4.406,942,4.079,943,5.113,944,4.079,945,5.625,946,4.467,947,4.467,948,4.467,949,4.079,950,4.079,951,3.849,952,3.24,953,3.24,954,3.24,955,3.24,956,3.24,957,2.061,958,3.24,959,3.24,960,3.24,961,3.255,962,3.24,963,4.467,964,3.24,965,3.24,966,5.625]],["title/interfaces/IAccordionContainerConfig.html",[104,0.15,967,2.529]],["body/interfaces/IAccordionContainerConfig.html",[0,0.425,3,0.094,4,0.11,8,0.094,12,0.458,13,0.603,15,0.221,16,0.307,20,0.221,22,0.14,23,0.387,31,0.418,35,0.399,36,0.805,39,0.25,40,0.012,41,0.383,50,1.742,56,0.609,59,0.723,66,2.138,69,0.11,81,0.151,82,0.363,83,1.642,84,0.11,89,3.379,91,0.138,100,2.572,103,2.067,104,0.191,116,1.873,120,1.358,123,0.773,124,0.799,160,1.057,167,1.089,168,1.089,169,1.156,254,0.009,255,0.009,264,1.642,285,1.122,286,1.122,323,1.945,338,3.888,357,3.23,364,3.23,366,1.642,367,1.191,575,2.797,885,2.295,961,3.069,967,4.463,968,0.995,969,4.212,970,3.414,971,3.888,972,6.3,973,6.3,974,5.429,975,2.381,976,2.381,977,3.23,978,5.266,979,4.212,980,4.212,981,4.646,982,4.646,983,3.888,984,4.646,985,4.646,986,6.74,987,4.646,988,6.74,989,4.646,990,5.859,991,5.859,992,5.859,993,6.419,994,3.888,995,4.646]],["title/interfaces/IBannerConfig.html",[47,2.842,104,0.15]],["body/interfaces/IBannerConfig.html",[0,0.4,1,0.849,3,0.121,4,0.094,8,0.081,9,0.189,10,2.914,11,3.098,12,0.391,13,0.544,15,0.189,16,0.262,17,0.293,18,0.232,19,4.957,20,0.189,21,3.595,22,0.12,23,0.349,24,3.319,25,3.595,26,3.595,29,3.595,30,2.914,31,0.476,32,3.595,34,5.993,35,0.341,36,0.775,38,3.595,39,0.273,40,0.012,41,0.383,44,3.319,47,4.647,50,1.572,52,3.595,56,0.641,64,2.814,65,1.651,66,1.825,67,2.387,68,0.727,69,0.125,70,3.329,71,2.497,72,2.757,73,1.958,74,0.902,75,0.567,76,1.706,78,1.179,81,0.14,82,0.325,83,1.481,84,0.094,85,2.287,86,2.757,87,1.89,88,2.387,89,3.049,90,3.595,91,0.16,92,1.821,93,4.425,94,4.425,95,2.612,96,3.049,97,3.886,98,4.425,99,2.927,100,2.927,101,4.425,102,3.581,103,2.352,104,0.245,105,4.957,106,1.056,107,1.056,108,3.595,109,3.595,110,2.914,111,3.595,112,3.595,113,3.595,114,0.902,115,3.595,116,1.599,117,1.163,118,4.191,119,4.957,120,1.369,121,5.753,122,4.663,123,1.056,124,0.682,125,3.595,126,5.393,127,3.595,128,3.595,129,3.595,130,3.595,131,3.595,132,3.319,133,3.595,134,3.595,135,5.993,136,3.595,137,4.663,138,4.794,139,2.497,140,5.393,141,3.595,142,3.595,143,4.794,144,2.619,145,2.619,146,3.595,147,3.595,148,3.595,149,3.595,150,3.595,151,3.595,152,4.794,153,3.595,154,3.595,155,2.387,156,4.794,157,3.595,158,4.794,254,0.008,255,0.008,968,0.849]],["title/interfaces/IBreadcrumbConfig.html",[104,0.15,268,3.044]],["body/interfaces/IBreadcrumbConfig.html",[0,0.398,3,0.091,4,0.106,8,0.091,9,0.213,12,0.441,13,0.589,15,0.213,16,0.296,17,0.331,18,0.262,20,0.213,22,0.135,23,0.378,31,0.403,35,0.385,36,0.768,39,0.268,40,0.012,41,0.366,56,0.571,69,0.106,81,0.162,82,0.293,84,0.106,91,0.149,92,1.372,104,0.184,106,1.017,107,1.017,114,1.02,123,1.107,160,1.02,174,0.96,177,1.083,254,0.009,255,0.009,256,3.751,257,3.303,258,4.481,259,4.481,260,4.481,262,0.875,264,1.605,265,4.481,266,2.309,268,5.283,269,6.873,270,4.394,273,3.751,274,4.481,275,2.584,276,3.303,280,1.605,281,1.083,282,1.083,283,4.889,284,4.481,285,1.083,286,1.083,287,1.807,288,1.807,289,5.192,290,4.932,291,3.501,292,2.96,293,4.481,294,4.481,295,4.481,296,4.481,297,3.751,298,4.481,299,6.873,300,4.481,301,4.481,302,4.481,303,4.481,304,4.481,305,4.481,306,1.807,307,5.727,308,4.481,309,4.481,310,2.829,311,2.296,312,6.312,313,5.727,314,4.481,315,4.481,316,5.727,317,4.481,318,4.481,319,4.481,320,4.481,321,1.928,322,6.651,323,1.293,324,6.651,325,4.481,326,4.481,968,0.96]],["title/interfaces/IButtonConfig.html",[89,2.098,104,0.15]],["body/interfaces/IButtonConfig.html",[0,0.38,3,0.083,4,0.096,8,0.083,9,0.193,15,0.193,16,0.269,17,0.3,18,0.238,20,0.193,22,0.123,23,0.355,31,0.366,35,0.349,36,0.765,39,0.247,40,0.012,41,0.376,50,1.79,56,0.643,66,3.068,68,1.222,69,0.096,73,3.292,76,2.313,81,0.096,82,0.374,83,1.506,84,0.096,89,3.474,91,0.165,92,2.041,95,2.656,99,2.976,100,2.976,103,2.68,104,0.167,106,1.259,107,1.259,116,2.687,120,1.291,122,3.951,123,1.109,124,0.699,179,0.871,240,1.261,254,0.008,255,0.008,323,2.153,334,3.403,335,3.177,337,2.775,338,5.578,339,6.665,340,4.066,350,2.503,353,4.066,356,4.706,357,3.738,358,5.461,359,5.461,360,4.066,361,5.376,362,3.551,363,5.461,364,4.188,365,4.201,366,1.506,367,1.043,368,3.738,369,2.827,370,2.392,371,1.693,372,5.376,373,4.066,374,4.201,375,3.177,376,2.862,377,2.084,378,5.376,379,4.066,380,3.979,381,3.858,382,6.847,383,5.376,384,4.066,968,0.871]],["title/interfaces/ICTAConfig.html",[104,0.15,105,2.842]],["body/interfaces/ICTAConfig.html",[0,0.405,1,0.878,3,0.123,4,0.097,8,0.083,9,0.195,10,3.014,11,3.204,12,0.404,13,0.556,15,0.195,16,0.271,17,0.303,18,0.24,19,5.024,20,0.195,21,3.718,22,0.124,23,0.357,24,3.432,25,3.718,26,3.718,29,3.718,30,3.014,31,0.487,32,3.718,34,4.902,35,0.352,36,0.718,38,3.718,39,0.269,40,0.012,41,0.379,44,3.432,47,4.224,50,1.607,52,3.718,56,0.589,64,2.878,65,1.708,66,1.888,67,2.469,68,0.752,69,0.128,70,3.405,71,2.582,72,2.851,73,2.026,74,0.933,75,0.717,76,1.765,78,1.219,81,0.143,82,0.329,83,1.515,84,0.097,85,2.365,86,2.851,87,1.955,88,2.469,89,3.709,90,3.718,91,0.162,92,1.852,93,4.525,94,4.525,95,2.671,96,3.118,97,3.974,98,4.525,99,2.993,100,2.993,101,4.525,102,3.641,103,2.405,104,0.249,105,4.726,106,1.074,107,1.074,108,5.83,109,3.718,110,3.014,111,3.718,112,3.718,113,3.718,114,0.933,115,5.83,116,2.593,117,0.752,118,2.709,119,3.204,120,1.089,121,3.718,122,3.014,123,0.682,124,0.705,125,3.718,126,5.484,127,3.718,128,3.718,129,3.718,130,3.718,131,3.718,132,3.432,133,3.718,134,3.718,135,6.06,136,3.718,137,4.726,138,4.902,139,2.582,140,5.484,141,3.718,142,3.718,143,4.902,144,2.709,145,2.709,146,3.718,147,3.718,148,3.718,149,3.718,150,3.718,151,3.718,152,4.902,153,3.718,154,3.718,155,2.469,156,4.902,157,3.718,158,4.902,254,0.008,255,0.008,968,0.878]],["title/interfaces/ICheckBoxComponentConfig.html",[104,0.15,418,3.044]],["body/interfaces/ICheckBoxComponentConfig.html",[0,0.374,3,0.069,4,0.08,5,0.818,8,0.069,9,0.161,12,0.334,13,0.488,15,0.161,16,0.224,17,0.25,18,0.198,20,0.161,22,0.102,23,0.314,31,0.305,35,0.291,36,0.724,39,0.266,40,0.012,41,0.379,42,0.771,43,0.509,56,0.645,59,0.853,65,1.977,69,0.08,75,0.509,78,1.859,81,0.157,82,0.304,83,1.33,84,0.08,91,0.112,104,0.139,106,0.601,107,0.601,120,1.437,123,1.04,124,0.582,155,2.039,160,0.771,181,1.017,254,0.007,255,0.007,261,1.507,262,0.661,264,1.33,266,2.21,278,1.614,280,1.752,281,0.818,282,0.818,285,0.818,286,0.818,287,1.366,288,1.366,306,1.069,323,0.978,337,1.411,366,1.33,367,1.604,371,1.411,376,1.803,377,1.736,385,1.282,386,3.071,387,2.628,388,1.507,389,1.614,390,2.263,391,1.614,392,2.263,393,1.458,394,2.647,395,3.387,396,2.039,397,1.614,398,1.736,399,3.162,400,2.133,401,3.938,402,1.614,403,1.875,404,2.49,405,1.411,406,2.523,407,2.858,408,2.835,409,2.039,414,2.49,415,3.115,418,4.587,419,3.452,420,4.747,425,1.458,426,1.892,427,2.171,429,2.345,430,2.433,431,2.835,435,1.736,436,1.954,437,2.133,439,2.99,440,2.133,444,2.917,445,3.387,446,2.835,447,1.507,449,2.043,452,2.263,454,2.858,457,1.836,459,1.914,460,3.09,461,1.458,467,1.205,468,2.556,469,1.458,470,1.458,471,2.043,472,2.043,473,2.395,474,1.614,475,2.556,476,5.94,477,5.94,478,5.94,479,5.94,480,3.387,481,3.387,482,3.387,483,3.387,484,4.641,485,5.94,486,2.556,487,2.556,488,2.831,489,1.875,490,1.803,491,3.387,492,3.071,493,3.387,494,3.387,495,3.387,496,3.387,497,3.387,498,2.039,499,2.835,500,1.736,501,2.49,502,3.387,503,0.726,504,3.299,505,1.736,506,2.039,507,1.507,508,1.507,509,1.507,510,2.263,511,2.263,512,3.09,513,1.797,514,2.263,515,4.747,516,2.263,517,2.263,518,3.387,519,2.527,520,1.614,521,1.614,522,2.835,523,3.299,524,2.039,525,2.039,526,2.039,527,1.736,528,1.543,529,2.185,530,2.835,531,2.835,968,0.726]],["title/interfaces/ICodeViewerConfig.html",[104,0.15,996,3.044]],["body/interfaces/ICodeViewerConfig.html",[0,0.417,3,0.09,4,0.104,8,0.09,12,0.435,13,0.583,15,0.21,16,0.291,20,0.21,22,0.133,23,0.375,31,0.397,35,0.379,36,0.806,39,0.245,40,0.012,41,0.358,50,1.686,56,0.601,66,2.031,69,0.104,81,0.148,82,0.29,83,1.589,84,0.104,89,3.27,91,0.134,100,2.443,103,1.963,104,0.181,116,1.779,117,0.809,120,1.332,123,0.734,124,0.758,155,2.656,164,1.098,168,1.035,188,1.035,189,1.646,254,0.009,255,0.009,275,2.545,276,3.27,323,1.273,350,2.215,357,3.068,457,1.899,575,2.656,601,3.943,618,3.115,957,3.945,967,3.943,968,0.945,970,3.243,974,3.447,975,2.261,976,2.261,977,3.068,978,4.43,983,3.693,994,5.725,996,5.244,997,4,998,4,999,4,1000,3.981,1001,3.413,1002,4,1003,4.412,1004,4.412,1005,4.412,1006,4.412,1007,3.447,1008,4.412,1009,3.447,1010,4.412,1011,4,1012,4.412,1013,6.266,1014,4.412,1015,5.141,1016,4.412,1017,4.412,1018,5.67,1019,3.693,1020,3.693,1021,4.412,1022,4.412,1023,4.519,1024,4.412,1025,5.345,1026,5.67,1027,6.613,1028,5.67,1029,4.412,1030,4.412,1031,4.412,1032,4.412,1033,4.412,1034,4.412,1035,4.412]],["title/interfaces/IDatePickerConfig.html",[104,0.15,1036,2.674]],["body/interfaces/IDatePickerConfig.html",[0,0.256,3,0.042,4,0.048,8,0.042,9,0.098,12,0.202,13,0.335,15,0.098,16,0.136,17,0.152,18,0.12,20,0.098,22,0.099,23,0.215,31,0.185,35,0.28,36,0.672,39,0.233,40,0.012,41,0.364,43,0.946,56,0.596,58,1.021,59,0.835,64,1.093,65,1.925,69,0.048,75,0.706,78,1.596,81,0.142,82,0.333,84,0.048,86,1.427,87,0.978,88,1.236,91,0.164,99,2.246,104,0.19,106,0.579,107,0.579,120,1.29,123,0.972,124,0.561,160,0.467,193,0.657,194,0.96,227,0.72,254,0.005,255,0.005,262,0.401,264,0.914,266,1.636,278,0.978,280,1.137,281,0.496,282,0.496,285,0.496,286,0.496,287,0.828,288,0.828,306,1.694,310,2.491,321,1.746,323,0.592,350,2.71,366,0.914,367,1.443,370,1.451,371,1.925,385,0.777,388,0.913,389,0.978,390,1.554,391,0.978,392,1.554,393,0.883,397,0.978,398,1.052,401,1.293,402,0.978,405,0.855,406,0.945,415,2.895,425,2.589,426,1.126,427,2.274,429,3.163,435,1.671,437,1.293,439,1.293,440,1.293,444,1.093,452,1.554,457,1.885,459,1.315,460,2.999,461,0.883,467,0.73,468,2.17,469,0.883,470,0.883,471,1.403,472,1.403,473,1.864,474,0.978,475,2.17,486,2.17,487,2.17,488,2.203,489,1.136,490,1.093,500,2.751,501,1.509,503,1.476,505,1.052,510,0.978,511,0.978,512,0.978,513,2.032,514,1.934,516,1.554,517,0.978,519,1.736,520,0.978,521,0.978,527,1.052,528,1.898,529,1.501,588,1.356,614,2.054,618,2.056,651,1.184,658,2.283,659,1.293,665,2.397,708,1.427,832,1.427,838,1.293,909,1.356,968,0.44,1036,2.982,1037,1.509,1038,1.427,1039,1.509,1040,2.389,1041,4.221,1042,4.221,1043,4.221,1044,3.707,1045,3.707,1046,2.911,1047,1.604,1048,2.397,1049,1.604,1050,1.604,1051,1.604,1052,1.604,1053,1.604,1054,1.604,1055,1.604,1056,1.604,1057,1.604,1058,1.604,1059,1.604,1060,2.397,1061,1.604,1062,1.604,1063,1.604,1064,1.604,1065,1.604,1066,1.604,1067,1.604,1068,1.604,1069,1.604,1070,1.604,1071,1.604,1072,1.604,1073,2.397,1074,1.604,1075,2.982,1076,1.604,1077,3.397,1078,1.604,1079,1.509,1080,3.611,1081,5.304,1082,5.56,1083,1.509,1084,1.604,1085,2.548,1086,1.604,1087,2.397,1088,1.604,1089,2.397,1090,1.604,1091,2.397,1092,2.397,1093,2.397,1094,1.604,1095,2.397,1096,1.604,1097,3.707,1098,3.17,1099,3.707,1100,1.604,1101,1.718,1102,1.718,1103,1.718,1104,1.718,1105,2.397,1106,2.821,1107,1.718,1108,4.221,1109,2.73,1110,1.718,1111,2.821,1112,1.718,1113,1.718,1114,1.718,1115,1.236,1116,1.718,1117,1.718,1118,2.73,1119,2.079,1120,1.427,1121,1.718,1122,2.73,1123,2.73,1124,2.73,1125,2.73,1126,2.73,1127,3.396,1128,2.73,1129,3.869,1130,2.73,1131,1.718,1132,1.718,1133,1.718,1134,1.718,1135,1.718,1136,1.718,1137,1.718,1138,1.718,1139,1.718,1140,1.718,1141,1.718,1142,1.718,1143,1.718,1144,1.718,1145,1.718,1146,1.718,1147,1.718,1148,1.718,1149,1.718,1150,2.73,1151,2.73,1152,1.356,1153,1.718,1154,1.718,1155,3.858,1156,3.869,1157,2.73,1158,1.718,1159,1.427,1160,3.396,1161,2.73,1162,1.718,1163,1.718,1164,1.718,1165,1.718,1166,4.494,1167,3.396,1168,2.73,1169,1.718,1170,1.718,1171,1.718,1172,1.881,1173,1.718,1174,1.718,1175,1.718,1176,1.718,1177,2.73,1178,2.73,1179,2.73,1180,2.73,1181,2.73,1182,1.718,1183,3.869,1184,1.718,1185,3.869,1186,1.718,1187,3.869,1188,1.718,1189,2.73,1190,2.73,1191,2.73,1192,1.718,1193,1.718,1194,1.718,1195,1.718,1196,1.718,1197,1.718,1198,2.73,1199,1.427,1200,1.718,1201,1.718,1202,1.718,1203,1.718,1204,1.718,1205,1.718,1206,1.718,1207,2.73,1208,1.509,1209,1.718,1210,1.718,1211,3.396,1212,1.718,1213,1.718,1214,2.73,1215,1.718,1216,1.604,1217,1.718,1218,1.604,1219,1.718,1220,2.73,1221,1.718,1222,1.604,1223,1.718,1224,3.869,1225,2.73,1226,2.73,1227,2.73,1228,2.73,1229,2.73,1230,2.73,1231,1.718,1232,1.718,1233,1.718,1234,1.427,1235,3.869,1236,1.718,1237,1.718,1238,2.73,1239,4.494,1240,3.396,1241,1.718,1242,2.73,1243,1.718,1244,2.73,1245,2.73,1246,2.268,1247,1.427,1248,3.396,1249,1.718,1250,4.221,1251,1.718,1252,1.718,1253,1.718,1254,3.869,1255,1.718,1256,1.718,1257,1.718,1258,1.718,1259,1.718,1260,1.718,1261,1.718,1262,1.718,1263,1.236,1264,1.718,1265,1.718,1266,1.236]],["title/interfaces/IDatePickerDropDownConfigs.html",[104,0.15,1105,2.674]],["body/interfaces/IDatePickerDropDownConfigs.html",[0,0.262,3,0.043,4,0.05,8,0.043,9,0.101,12,0.21,13,0.346,15,0.101,16,0.141,17,0.157,18,0.125,20,0.101,22,0.102,23,0.222,31,0.192,35,0.289,36,0.61,39,0.154,40,0.012,41,0.35,43,0.956,58,1.043,59,0.849,64,1.135,65,1.966,69,0.05,75,0.712,78,1.623,81,0.144,82,0.336,84,0.05,86,1.483,87,1.017,88,1.284,91,0.165,99,2.304,104,0.194,106,0.597,107,0.597,120,1.256,123,0.855,124,0.578,160,0.485,193,0.677,194,0.981,227,0.742,254,0.005,255,0.005,262,0.417,264,0.942,266,1.678,278,1.017,280,1.166,281,0.515,282,0.515,285,0.515,286,0.515,287,0.86,288,0.86,306,1.722,310,2.538,321,1.79,323,0.616,350,2.648,366,0.942,367,1.465,370,1.496,371,1.966,385,0.807,388,0.949,389,1.017,390,1.602,391,1.017,392,1.602,393,0.918,397,1.017,398,1.093,401,1.343,402,1.017,405,0.888,406,0.982,415,2.737,425,2.621,426,1.161,427,2.225,429,3.194,435,1.723,437,1.343,439,1.343,440,1.343,444,1.135,452,1.602,457,1.914,459,1.356,460,3.031,461,0.918,467,0.759,468,2.211,469,0.918,470,0.918,471,1.447,472,1.447,473,1.356,474,1.017,475,1.447,486,1.447,487,1.447,488,1.017,489,1.181,490,1.135,500,2.797,501,1.568,503,1.486,505,1.093,510,1.017,511,1.017,512,1.017,513,2.066,514,1.983,516,1.602,517,1.017,519,1.789,520,1.017,521,1.017,527,1.093,528,1.924,529,1.547,588,1.409,614,2.117,618,2.101,651,1.23,658,2.333,659,1.343,665,2.471,708,1.483,832,1.483,838,1.343,909,1.409,968,0.457,1036,2.471,1037,1.568,1038,1.483,1039,1.568,1040,1.851,1041,2.814,1042,2.814,1043,2.814,1044,3.058,1045,3.058,1046,3.927,1047,1.667,1048,2.471,1049,1.667,1050,1.667,1051,1.667,1052,1.667,1053,1.667,1054,1.667,1055,1.667,1056,1.667,1057,1.667,1058,1.667,1059,1.667,1060,2.471,1061,1.667,1062,1.667,1063,1.667,1064,1.667,1065,1.667,1066,1.667,1067,1.667,1068,1.667,1069,1.667,1070,1.667,1071,1.667,1072,1.667,1073,2.471,1074,1.667,1075,3.058,1076,1.667,1077,3.471,1078,1.667,1079,1.568,1080,4.464,1081,5.456,1082,5.649,1083,1.568,1084,1.667,1085,2.627,1086,1.667,1087,2.471,1088,1.667,1089,2.471,1090,1.667,1091,2.471,1092,2.471,1093,2.471,1094,1.667,1095,2.471,1096,1.667,1097,3.776,1098,3.251,1099,3.776,1100,1.667,1101,1.785,1102,1.785,1103,1.785,1104,1.785,1105,3.058,1106,2.893,1107,1.785,1108,4.3,1109,2.814,1110,1.785,1111,2.893,1112,1.785,1113,1.785,1114,1.785,1115,1.284,1116,1.785,1117,1.785,1118,2.814,1119,2.132,1120,1.483,1121,1.785,1122,2.814,1123,2.814,1124,2.814,1125,2.814,1126,2.814,1127,3.483,1128,2.814,1129,3.952,1130,2.814,1131,1.785,1132,1.785,1133,1.785,1134,1.785,1135,1.785,1136,1.785,1137,1.785,1138,1.785,1139,1.785,1140,1.785,1141,1.785,1142,1.785,1143,1.785,1144,1.785,1145,1.785,1146,1.785,1147,1.785,1148,1.785,1149,1.785,1150,2.814,1151,2.814,1152,1.409,1153,1.785,1154,1.785,1155,3.911,1156,3.952,1157,2.814,1158,1.785,1159,1.483,1160,3.483,1161,2.814,1162,1.785,1163,1.785,1164,1.785,1165,1.785,1166,4.569,1167,3.483,1168,2.814,1169,1.785,1170,1.785,1171,1.785,1172,1.939,1173,1.785,1174,1.785,1175,1.785,1176,1.785,1177,2.814,1178,2.814,1179,2.814,1180,2.814,1181,2.814,1182,1.785,1183,3.952,1184,1.785,1185,3.952,1186,1.785,1187,3.952,1188,1.785,1189,2.814,1190,2.814,1191,2.814,1192,1.785,1193,1.785,1194,1.785,1195,1.785,1196,1.785,1197,1.785,1198,2.814,1199,1.483,1200,1.785,1201,1.785,1202,1.785,1203,1.785,1204,1.785,1205,1.785,1206,1.785,1207,2.814,1208,1.568,1209,1.785,1210,1.785,1211,3.483,1212,1.785,1213,1.785,1214,2.814,1215,1.785,1216,1.667,1217,1.785,1218,1.667,1219,1.785,1220,2.814,1221,1.785,1222,1.667,1223,1.785,1224,3.952,1225,2.814,1226,2.814,1227,2.814,1228,2.814,1229,2.814,1230,2.814,1231,1.785,1232,1.785,1233,1.785,1234,1.483,1235,3.952,1236,1.785,1237,1.785,1238,2.814,1239,4.569,1240,3.483,1241,1.785,1242,2.814,1243,1.785,1244,2.814,1245,2.814,1246,2.337,1247,1.483,1248,3.483,1249,1.785,1250,4.3,1251,1.785,1252,1.785,1253,1.785,1254,3.952,1255,1.785,1256,1.785,1257,1.785,1258,1.785,1259,1.785,1260,1.785,1261,1.785,1262,1.785,1263,1.284,1264,1.785,1265,1.785,1266,1.284]],["title/interfaces/IDatePickerErrorMessages.html",[104,0.15,1044,2.674]],["body/interfaces/IDatePickerErrorMessages.html",[0,0.261,3,0.043,4,0.05,8,0.043,9,0.101,12,0.209,13,0.344,15,0.101,16,0.14,17,0.156,18,0.124,20,0.101,22,0.101,23,0.221,31,0.191,35,0.287,36,0.608,39,0.174,40,0.012,41,0.349,43,0.954,56,0.507,58,1.038,59,0.847,64,1.127,65,1.958,69,0.05,75,0.711,78,1.618,81,0.143,82,0.335,84,0.05,86,1.472,87,1.009,88,1.274,91,0.164,99,2.293,104,0.193,106,0.593,107,0.593,120,1.254,123,0.852,124,0.575,160,0.482,193,0.673,194,0.977,227,0.738,254,0.005,255,0.005,262,0.413,264,0.936,266,1.67,278,1.009,280,1.16,281,0.512,282,0.512,285,0.512,286,0.512,287,0.854,288,0.854,306,1.717,310,2.529,321,1.782,323,0.611,350,2.644,366,0.936,367,1.461,370,1.487,371,1.958,385,0.801,388,0.942,389,1.009,390,1.593,391,1.009,392,1.593,393,0.911,397,1.009,398,1.085,401,1.333,402,1.009,405,0.882,406,0.975,415,2.731,425,2.615,426,1.154,427,2.221,429,3.188,435,1.713,437,1.333,439,1.333,440,1.333,444,1.127,452,1.593,457,1.908,459,1.348,460,3.025,461,0.911,467,0.753,468,2.818,469,0.911,470,0.911,471,1.438,472,1.438,473,1.348,474,1.009,475,1.438,486,1.438,487,1.438,488,1.009,489,1.172,490,1.127,500,2.788,501,1.556,503,1.484,505,1.085,510,1.009,511,1.009,512,1.009,513,2.06,514,1.974,516,1.593,517,1.009,519,1.779,520,1.009,521,1.009,527,1.085,528,1.919,529,1.538,588,1.399,614,2.105,618,2.092,651,1.221,658,2.323,659,1.333,665,2.457,708,1.472,832,1.472,838,1.333,909,1.399,968,0.453,1036,2.457,1037,1.556,1038,1.472,1039,1.556,1040,1.842,1041,2.797,1042,2.797,1043,2.797,1044,3.457,1045,3.044,1046,2.962,1047,1.654,1048,2.457,1049,1.654,1050,1.654,1051,1.654,1052,1.654,1053,1.654,1054,1.654,1055,1.654,1056,1.654,1057,1.654,1058,1.654,1059,1.654,1060,2.457,1061,1.654,1062,1.654,1063,1.654,1064,1.654,1065,1.654,1066,1.654,1067,1.654,1068,1.654,1069,1.654,1070,1.654,1071,1.654,1072,1.654,1073,2.457,1074,1.654,1075,3.044,1076,1.654,1077,3.457,1078,1.654,1079,1.556,1080,4.451,1081,5.449,1082,5.644,1083,1.556,1084,1.654,1085,2.611,1086,1.654,1087,2.457,1088,1.654,1089,2.457,1090,1.654,1091,2.457,1092,2.457,1093,2.457,1094,1.654,1095,2.457,1096,1.654,1097,3.763,1098,3.235,1099,3.763,1100,1.654,1101,1.772,1102,1.772,1103,1.772,1104,3.936,1105,2.457,1106,2.879,1107,1.772,1108,4.285,1109,2.797,1110,1.772,1111,2.879,1112,1.772,1113,1.772,1114,1.772,1115,1.274,1116,1.772,1117,1.772,1118,2.797,1119,2.122,1120,1.472,1121,1.772,1122,2.797,1123,2.797,1124,2.797,1125,2.797,1126,2.797,1127,3.466,1128,2.797,1129,3.936,1130,2.797,1131,1.772,1132,1.772,1133,1.772,1134,1.772,1135,1.772,1136,1.772,1137,1.772,1138,1.772,1139,1.772,1140,1.772,1141,1.772,1142,1.772,1143,1.772,1144,1.772,1145,1.772,1146,1.772,1147,1.772,1148,1.772,1149,1.772,1150,2.797,1151,2.797,1152,1.399,1153,1.772,1154,1.772,1155,3.901,1156,3.936,1157,2.797,1158,1.772,1159,1.472,1160,3.466,1161,2.797,1162,1.772,1163,1.772,1164,1.772,1165,1.772,1166,4.554,1167,3.466,1168,2.797,1169,1.772,1170,1.772,1171,1.772,1172,1.928,1173,1.772,1174,1.772,1175,1.772,1176,1.772,1177,2.797,1178,2.797,1179,2.797,1180,2.797,1181,2.797,1182,1.772,1183,3.936,1184,1.772,1185,3.936,1186,1.772,1187,3.936,1188,1.772,1189,2.797,1190,2.797,1191,2.797,1192,1.772,1193,1.772,1194,1.772,1195,1.772,1196,1.772,1197,1.772,1198,2.797,1199,1.472,1200,1.772,1201,1.772,1202,1.772,1203,1.772,1204,1.772,1205,1.772,1206,1.772,1207,2.797,1208,1.556,1209,1.772,1210,1.772,1211,3.466,1212,1.772,1213,1.772,1214,2.797,1215,1.772,1216,1.654,1217,1.772,1218,1.654,1219,1.772,1220,2.797,1221,1.772,1222,1.654,1223,1.772,1224,3.936,1225,2.797,1226,2.797,1227,2.797,1228,2.797,1229,2.797,1230,2.797,1231,1.772,1232,1.772,1233,1.772,1234,1.472,1235,3.936,1236,1.772,1237,1.772,1238,2.797,1239,4.554,1240,3.466,1241,1.772,1242,2.797,1243,1.772,1244,2.797,1245,2.797,1246,2.324,1247,1.472,1248,3.466,1249,1.772,1250,4.285,1251,1.772,1252,1.772,1253,1.772,1254,3.936,1255,1.772,1256,1.772,1257,1.772,1258,1.772,1259,1.772,1260,1.772,1261,1.772,1262,1.772,1263,1.274,1264,1.772,1265,1.772,1266,1.274]],["title/interfaces/IDatePickerUnknownDateToggleConfig.html",[104,0.15,1045,2.674]],["body/interfaces/IDatePickerUnknownDateToggleConfig.html",[0,0.262,3,0.043,4,0.05,8,0.043,9,0.101,12,0.209,13,0.345,15,0.101,16,0.14,17,0.157,18,0.124,20,0.101,22,0.101,23,0.222,31,0.191,35,0.288,36,0.609,39,0.154,40,0.012,41,0.35,43,0.956,56,0.468,58,1.041,59,0.848,64,1.132,65,1.963,69,0.05,75,0.712,78,1.621,81,0.144,82,0.335,84,0.05,86,1.479,87,1.014,88,1.28,91,0.165,99,2.299,104,0.194,106,0.596,107,0.596,120,1.365,123,0.854,124,0.577,160,0.484,193,0.676,194,0.979,227,0.741,254,0.005,255,0.005,262,0.415,264,0.94,266,1.674,278,1.014,280,1.164,281,0.514,282,0.514,285,0.514,286,0.514,287,0.857,288,0.857,306,1.72,310,2.534,321,1.787,323,0.614,350,2.647,366,0.94,367,1.463,370,1.492,371,1.963,385,0.805,388,0.946,389,1.014,390,1.599,391,1.014,392,1.599,393,0.915,397,1.014,398,1.09,401,1.339,402,1.014,405,0.886,406,0.979,415,2.734,425,2.619,426,1.158,427,2.223,429,3.192,435,1.719,437,1.339,439,1.339,440,1.339,444,1.132,452,1.599,457,1.911,459,1.352,460,3.029,461,0.915,467,0.757,468,2.208,469,0.915,470,0.915,471,1.443,472,1.443,473,1.352,474,1.014,475,1.443,486,1.443,487,1.443,488,1.014,489,1.177,490,1.132,500,2.794,501,1.563,503,1.486,505,1.09,510,1.014,511,1.014,512,1.014,513,2.064,514,1.979,516,1.599,517,1.014,519,1.785,520,1.014,521,1.014,527,1.09,528,1.922,529,1.544,588,1.405,614,2.112,618,2.097,651,1.227,658,2.329,659,1.339,665,2.465,708,1.479,832,1.479,838,1.339,909,1.405,968,0.456,1036,2.465,1037,1.563,1038,1.479,1039,1.563,1040,1.848,1041,2.807,1042,2.807,1043,2.807,1044,3.052,1045,3.465,1046,2.969,1047,1.662,1048,2.465,1049,1.662,1050,1.662,1051,1.662,1052,1.662,1053,1.662,1054,1.662,1055,1.662,1056,1.662,1057,1.662,1058,1.662,1059,1.662,1060,2.465,1061,1.662,1062,1.662,1063,1.662,1064,1.662,1065,1.662,1066,1.662,1067,1.662,1068,1.662,1069,1.662,1070,1.662,1071,1.662,1072,1.662,1073,2.465,1074,1.662,1075,3.052,1076,1.662,1077,3.465,1078,1.662,1079,1.563,1080,3.684,1081,5.34,1082,5.587,1083,1.563,1084,1.662,1085,2.621,1086,1.662,1087,2.465,1088,1.662,1089,2.465,1090,1.662,1091,2.465,1092,2.465,1093,2.465,1094,1.662,1095,2.465,1096,1.662,1097,3.771,1098,3.245,1099,3.771,1100,1.662,1101,3.946,1102,3.946,1103,3.946,1104,1.78,1105,2.465,1106,2.888,1107,1.78,1108,4.294,1109,2.807,1110,1.78,1111,2.888,1112,1.78,1113,1.78,1114,1.78,1115,1.28,1116,1.78,1117,1.78,1118,2.807,1119,2.128,1120,1.479,1121,1.78,1122,2.807,1123,2.807,1124,2.807,1125,2.807,1126,2.807,1127,3.476,1128,2.807,1129,3.946,1130,2.807,1131,1.78,1132,1.78,1133,1.78,1134,1.78,1135,1.78,1136,1.78,1137,1.78,1138,1.78,1139,1.78,1140,1.78,1141,1.78,1142,1.78,1143,1.78,1144,1.78,1145,1.78,1146,1.78,1147,1.78,1148,1.78,1149,1.78,1150,2.807,1151,2.807,1152,1.405,1153,1.78,1154,1.78,1155,3.907,1156,3.946,1157,2.807,1158,1.78,1159,1.479,1160,3.476,1161,2.807,1162,1.78,1163,1.78,1164,1.78,1165,1.78,1166,4.563,1167,3.476,1168,2.807,1169,1.78,1170,1.78,1171,1.78,1172,1.934,1173,1.78,1174,1.78,1175,1.78,1176,1.78,1177,2.807,1178,2.807,1179,2.807,1180,2.807,1181,2.807,1182,1.78,1183,3.946,1184,1.78,1185,3.946,1186,1.78,1187,3.946,1188,1.78,1189,2.807,1190,2.807,1191,2.807,1192,1.78,1193,1.78,1194,1.78,1195,1.78,1196,1.78,1197,1.78,1198,2.807,1199,1.479,1200,1.78,1201,1.78,1202,1.78,1203,1.78,1204,1.78,1205,1.78,1206,1.78,1207,2.807,1208,1.563,1209,1.78,1210,1.78,1211,3.476,1212,1.78,1213,1.78,1214,2.807,1215,1.78,1216,1.662,1217,1.78,1218,1.662,1219,1.78,1220,2.807,1221,1.78,1222,1.662,1223,1.78,1224,3.946,1225,2.807,1226,2.807,1227,2.807,1228,2.807,1229,2.807,1230,2.807,1231,1.78,1232,1.78,1233,1.78,1234,1.479,1235,3.946,1236,1.78,1237,1.78,1238,2.807,1239,4.563,1240,3.476,1241,1.78,1242,2.807,1243,1.78,1244,2.807,1245,2.807,1246,2.332,1247,1.479,1248,3.476,1249,1.78,1250,4.294,1251,1.78,1252,1.78,1253,1.78,1254,3.946,1255,1.78,1256,1.78,1257,1.78,1258,1.78,1259,1.78,1260,1.78,1261,1.78,1262,1.78,1263,1.28,1264,1.78,1265,1.78,1266,1.28]],["title/interfaces/IDropdownConfig.html",[104,0.15,625,3.044]],["body/interfaces/IDropdownConfig.html",[0,0.376,3,0.108,4,0.094,8,0.081,9,0.189,12,0.392,13,0.545,15,0.189,16,0.263,17,0.294,18,0.233,20,0.189,22,0.16,23,0.35,31,0.359,35,0.342,36,0.776,39,0.252,40,0.012,41,0.375,42,0.906,43,0.797,56,0.636,66,3.047,68,1.214,69,0.094,78,1.184,81,0.156,82,0.361,84,0.094,85,3.666,87,1.898,88,2.398,91,0.125,104,0.164,106,1.129,107,1.129,120,1.4,123,1.101,196,0.853,203,1.656,254,0.008,255,0.008,280,1.671,281,0.962,282,0.962,310,1.968,323,1.721,337,2.756,356,4.658,366,1.486,367,1.36,368,3.687,369,4.145,370,2.359,371,1.659,376,2.823,377,2.041,427,2.217,430,2.041,457,2.129,500,2.718,513,2.257,612,3.612,613,3.612,614,2.508,615,3.983,616,3.983,617,3.983,618,1.772,619,3.983,620,3.983,623,5.172,625,4.99,633,5.962,634,2.508,636,3.983,637,3.503,639,5.406,640,3.983,641,5.303,643,2.77,644,5.303,645,3.983,646,3.983,647,3.983,648,5.303,649,3.983,650,3.983,651,2.297,652,2.928,653,3.983,654,4.658,656,4.865,657,3.983,658,2.62,659,2.508,663,3.612,664,3.612,665,3.898,666,5.303,667,5.962,668,3.983,669,3.983,670,5.303,671,3.983,672,3.983,673,3.983,674,3.334,675,3.334,676,3.983,677,3.983,678,5.962,679,5.303,680,5.303,681,5.303,682,3.983,683,3.612,684,3.983,685,3.983,686,3.983,687,3.983,688,3.983,689,3.983,968,0.853]],["title/interfaces/IErrorComponentConfig.html",[104,0.15,696,2.842]],["body/interfaces/IErrorComponentConfig.html",[0,0.414,3,0.099,4,0.115,8,0.099,9,0.233,12,0.482,13,0.622,15,0.233,16,0.323,17,0.361,18,0.286,20,0.233,22,0.148,23,0.4,31,0.441,35,0.42,36,0.803,39,0.243,40,0.012,41,0.382,56,0.59,59,0.761,68,1.336,69,0.155,73,2.99,81,0.143,82,0.368,84,0.115,91,0.155,104,0.249,106,1.075,107,1.075,123,1.174,155,3.956,198,1.017,254,0.009,255,0.009,257,3.491,262,0.956,275,2.823,276,3.491,280,1.841,281,1.182,282,1.182,306,1.544,366,1.696,367,1.255,370,2.693,371,2.038,380,3.999,381,2.946,385,1.853,426,1.689,651,2.823,691,4.096,692,4.437,693,4.437,694,6.518,696,5.135,699,4.906,705,3.597,706,4.437,707,2.333,708,3.403,709,5.488,710,5.488,711,4.437,968,1.048]],["title/interfaces/IErrorIconConfig.html",[104,0.15,699,2.529]],["body/interfaces/IErrorIconConfig.html",[0,0.417,3,0.101,4,0.117,8,0.101,9,0.236,12,0.489,13,0.628,15,0.236,16,0.328,17,0.366,18,0.29,20,0.236,22,0.15,23,0.403,31,0.447,35,0.426,36,0.739,39,0.226,40,0.012,41,0.383,56,0.524,59,0.772,68,1.265,69,0.17,73,3.499,81,0.144,82,0.369,84,0.117,91,0.156,104,0.251,106,1.084,107,1.084,123,1.016,155,3.981,198,1.031,254,0.009,255,0.009,257,3.521,262,0.969,275,2.862,276,3.521,280,1.853,281,1.199,282,1.199,306,1.565,366,1.711,367,1.272,370,2.716,371,2.066,380,4.033,381,2.987,385,1.878,426,1.713,651,2.862,691,4.153,692,4.499,693,4.499,694,5.995,696,4.77,699,4.797,705,3.647,706,4.499,707,2.365,708,3.45,709,5.535,710,5.535,711,4.499,968,1.063]],["title/interfaces/IFlyoutConfig.html",[104,0.15,656,2.674]],["body/interfaces/IFlyoutConfig.html",[0,0.366,3,0.077,4,0.089,8,0.077,9,0.18,12,0.373,13,0.527,15,0.18,16,0.25,17,0.28,18,0.222,20,0.18,22,0.214,23,0.339,31,0.341,35,0.499,36,0.75,39,0.262,40,0.012,41,0.333,43,0.771,50,1.525,54,1.161,56,0.599,69,0.089,78,1.852,81,0.121,82,0.351,83,1.437,84,0.089,91,0.137,92,1.161,104,0.156,106,0.911,107,0.911,120,1.255,124,0.882,144,2.504,200,0.812,203,1.323,254,0.008,255,0.008,278,1.806,291,2.961,297,3.172,310,2.534,311,2.98,321,2.681,323,1.094,337,2.711,350,2.621,366,1.062,367,0.972,376,2.017,377,1.942,393,2.681,430,1.942,446,4.293,457,2.298,489,2.098,490,2.017,538,3.437,618,2.772,634,3.661,637,4.115,643,2.635,656,4.273,658,3.215,674,3.172,675,3.172,713,3.172,714,3.79,715,5.129,716,3.79,717,5.129,718,3.79,724,6.509,725,3.79,726,3.172,733,4.784,740,5.272,747,3.79,749,3.79,751,3.79,753,3.79,754,3.79,755,3.79,756,3.79,757,3.79,758,3.79,761,5.814,762,3.79,765,2.635,766,3.79,767,2.635,768,2.635,769,3.437,770,5.272,771,5.272,772,3.172,773,3.172,774,3.79,775,4.868,776,3.437,777,3.79,778,3.79,779,5.129,780,3.79,781,3.79,782,2.504,783,5.814,784,6.71,785,3.79,786,3.79,787,5.129,788,6.509,789,5.129,790,3.79,791,3.79,792,3.79,793,3.79,794,3.79,795,3.79,796,3.79,797,3.79,798,5.129,799,3.79,800,5.129,801,3.79,802,3.437,803,3.79,804,3.79,805,3.79,806,5.129,807,3.437,808,3.388,809,3.79,810,2.786,811,3.79,812,3.79,813,3.79,814,5.129,815,3.79,816,3.79,817,3.79,818,3.437,819,5.129,820,3.79,821,3.79,822,3.79,823,4.651,824,3.79,825,2.504,826,3.79,827,3.79,828,3.79,829,3.79,830,5.129,831,3.79,832,2.635,833,3.79,834,5.129,835,3.79,836,3.79,837,3.79,838,2.387,839,3.79,840,3.79,841,3.79,842,3.79,843,3.79,968,0.812]],["title/interfaces/IFlyoutOptionConfig.html",[104,0.15,733,2.674]],["body/interfaces/IFlyoutOptionConfig.html",[0,0.411,3,0.098,4,0.114,8,0.098,9,0.229,12,0.474,13,0.616,15,0.229,16,0.318,17,0.356,18,0.282,20,0.229,22,0.146,23,0.396,31,0.434,35,0.414,36,0.8,39,0.276,40,0.012,41,0.372,43,1.056,56,0.646,69,0.114,75,0.732,78,1.432,81,0.114,82,0.334,84,0.114,91,0.154,92,1.475,104,0.198,106,0.855,107,0.855,120,1.516,139,3.775,202,1.032,203,1.364,254,0.009,255,0.009,262,0.941,311,2.469,323,1.39,337,2.843,366,1.35,367,1.235,394,5.099,427,1.613,457,1.613,614,4.109,618,3.038,634,4.3,733,4.796,768,3.349,772,4.032,773,4.032,808,3.182,844,4.032,845,4.032,846,4.817,848,4.817,851,5.435,852,5.435,853,6.828,854,4.817,855,5.994,968,1.032]],["title/interfaces/IHiddenNavConfig.html",[104,0.15,941,2.842]],["body/interfaces/IHiddenNavConfig.html",[0,0.421,3,0.103,4,0.12,8,0.103,9,0.241,13,0.521,15,0.241,16,0.335,17,0.374,18,0.297,20,0.241,22,0.153,23,0.409,35,0.435,36,0.81,39,0.229,40,0.012,41,0.382,56,0.531,69,0.12,81,0.12,82,0.316,84,0.12,91,0.157,102,3.722,104,0.254,116,2.043,117,0.929,137,3.724,209,1.053,210,1.45,254,0.009,255,0.009,270,3.347,292,4.085,321,2.18,503,1.43,707,2.947,765,3.523,857,3.05,932,4.241,933,3.959,934,4.241,935,4.64,936,4.594,939,4.594,941,5.215,943,4.594,946,4.594,947,4.594,948,4.594,951,5.43,952,6.301,953,4.594,954,4.594,955,4.594,956,4.594,957,2.922,958,4.594,959,4.594,960,4.594,961,4.085,962,4.594,963,5.607,964,4.594,965,4.594,968,1.085]],["title/interfaces/IIconButtonComponentConfig.html",[64,1.936,104,0.15]],["body/interfaces/IIconButtonComponentConfig.html",[0,0.391,3,0.088,4,0.102,8,0.088,9,0.205,12,0.425,13,0.575,15,0.205,16,0.285,17,0.319,18,0.253,20,0.205,22,0.131,23,0.37,31,0.389,35,0.371,36,0.778,39,0.243,40,0.012,41,0.375,50,1.663,56,0.617,59,0.672,64,3.301,66,3.261,67,3.367,68,1.331,69,0.16,70,4.131,71,2.72,72,3.003,73,3.24,74,1.273,75,0.6,76,2.823,81,0.132,82,0.367,83,1.567,84,0.102,85,4.015,87,2.059,91,0.164,92,1.323,95,3.24,103,1.922,104,0.23,106,1.165,107,1.165,116,2.807,120,1.322,123,1.13,124,0.742,212,0.897,254,0.008,255,0.008,281,1.044,282,1.044,292,2.853,335,3.375,336,3.615,337,2.83,366,1.567,367,1.434,368,3.889,369,4.313,370,2.488,371,1.799,374,4.37,375,3.375,376,2.977,377,2.213,380,4.097,381,4.091,503,1.198,705,3.175,968,0.925,1267,3.175,1268,3.175,1269,5.126,1270,5.491,1271,4.37,1272,3.615,1273,4.37,1274,3.615,1275,3.916,1276,3.916,1277,3.916,1278,3.916,1279,5.071,1280,5.624,1281,3.916,1282,3.916]],["title/interfaces/IIconButtonIconConfig.html",[85,2.098,104,0.15]],["body/interfaces/IIconButtonIconConfig.html",[0,0.396,3,0.09,4,0.105,8,0.09,9,0.211,12,0.437,13,0.585,15,0.211,16,0.293,17,0.327,18,0.26,20,0.211,22,0.134,23,0.376,31,0.399,35,0.381,36,0.702,39,0.211,40,0.012,41,0.376,50,1.691,56,0.489,59,0.69,64,3.028,66,3.05,67,3.425,68,1.285,69,0.17,70,4.173,71,2.793,72,3.084,73,3.521,74,1.295,75,0.61,76,2.851,81,0.134,82,0.369,83,1.594,84,0.105,85,3.952,87,2.114,91,0.165,92,1.358,95,3.273,103,1.973,104,0.234,106,1.177,107,1.177,116,2.533,120,1.146,123,0.946,124,0.762,212,0.921,254,0.009,255,0.009,281,1.072,282,1.072,292,2.93,335,3.465,336,3.712,337,2.369,366,1.594,367,1.459,368,3.956,369,4.367,370,2.531,371,1.847,374,4.445,375,3.465,376,3.028,377,2.273,380,4.149,381,4.124,503,1.219,705,3.26,968,0.95,1267,3.26,1268,3.26,1269,5.177,1270,5.546,1271,4.445,1272,3.712,1273,4.445,1274,3.712,1275,4.021,1276,4.021,1277,4.021,1278,4.021,1279,5.158,1280,5.695,1281,4.021,1282,4.021]],["title/interfaces/IIconConfig.html",[104,0.15,1283,2.842]],["body/interfaces/IIconConfig.html",[0,0.429,3,0.108,4,0.125,8,0.108,9,0.252,12,0.522,15,0.252,16,0.35,17,0.391,18,0.31,20,0.252,22,0.16,23,0.42,35,0.455,39,0.235,40,0.012,41,0.382,56,0.606,68,0.971,69,0.125,81,0.125,82,0.361,84,0.125,91,0.15,104,0.218,116,2.909,213,1.135,254,0.01,255,0.01,257,3.664,275,3.055,276,3.664,503,1.361,767,4.417,968,1.135,1019,4.434,1020,4.434,1199,3.683,1283,5.316,1284,4.803,1285,6.541,1286,3.894,1287,5.298,1288,5.298,1289,5.298,1290,5.298,1291,5.298,1292,5.298,1293,6.353,1294,5.298]],["title/interfaces/IIndicatorConfig.html",[104,0.15,1295,3.044]],["body/interfaces/IIndicatorConfig.html",[0,0.383,3,0.084,4,0.098,8,0.084,9,0.197,12,0.407,13,0.559,15,0.197,18,0.242,20,0.197,22,0.125,23,0.359,30,3.04,31,0.372,35,0.355,39,0.264,40,0.012,41,0.372,43,0.622,56,0.633,66,3.085,68,1.183,69,0.098,75,0.651,76,2.34,81,0.128,82,0.278,84,0.098,91,0.165,92,2.052,95,2.686,96,3.136,97,3.996,104,0.17,106,1.222,107,1.245,116,2.601,119,4.248,120,1.095,123,1.073,139,2.605,215,0.886,254,0.008,255,0.008,257,3.136,275,2.386,276,3.136,280,1.524,281,0.999,282,0.999,306,1.916,311,2.12,321,2.34,350,2.687,381,2.49,425,1.78,427,2.349,513,2.058,585,2.732,598,3.462,651,3.136,654,5.375,767,3.781,968,0.886,1286,3.04,1295,5.084,1296,3.462,1297,6.238,1298,6.702,1299,5.437,1300,4.93,1301,3.75,1302,4.93,1303,4.93,1304,4.93,1305,4.93,1306,5.507,1307,3.781,1308,4.551,1309,4.93,1310,3.75,1311,3.75,1312,3.75,1313,3.462,1314,3.75,1315,3.75,1316,3.75,1317,3.75,1318,4.136,1319,4.136,1320,2.732,1321,3.232,1322,3.232,1323,4.136,1324,4.136,1325,4.136,1326,4.136,1327,5.437,1328,4.136,1329,4.136,1330,5.437,1331,5.437,1332,5.437,1333,5.437,1334,6.074,1335,4.136,1336,5.437,1337,4.136,1338,4.136,1339,4.136,1340,4.136,1341,4.136,1342,5.437,1343,4.136,1344,3.232,1345,3.75,1346,4.136,1347,4.136,1348,5.437,1349,4.136]],["title/interfaces/IInputComponentConfig.html",[104,0.15,1350,3.044]],["body/interfaces/IInputComponentConfig.html",[0,0.336,3,0.065,4,0.076,8,0.065,9,0.153,12,0.317,13,0.471,15,0.153,16,0.213,17,0.238,18,0.188,20,0.153,22,0.097,23,0.302,31,0.29,35,0.276,36,0.712,39,0.266,40,0.012,41,0.374,42,0.732,43,0.688,56,0.632,59,0.992,65,1.906,69,0.076,75,0.684,78,1.895,81,0.155,82,0.358,84,0.076,91,0.126,92,0.985,104,0.132,106,1.031,107,1.031,120,1.351,123,0.966,124,0.787,160,0.732,219,0.951,254,0.007,255,0.007,261,1.431,262,0.628,264,1.283,266,2.149,278,1.534,280,1.283,281,0.777,282,0.777,285,0.777,286,0.777,287,1.297,288,1.297,306,1.681,311,2.731,323,0.929,337,1.906,366,1.283,367,1.573,376,2.837,385,1.218,387,2.535,388,1.431,389,1.534,390,2.182,391,1.534,392,2.182,393,1.384,396,1.937,397,1.534,398,1.649,399,2.437,400,2.026,401,2.026,402,1.534,403,2.535,404,2.365,405,2.219,406,2.453,407,2.756,408,2.693,409,1.937,415,3.109,419,2.883,425,1.384,426,1.84,427,2.135,429,2.261,430,2.346,431,2.693,435,1.649,436,1.856,437,2.026,439,2.883,440,2.026,442,2.693,447,1.431,449,1.97,452,2.182,454,2.756,457,2.197,459,1.846,460,3.039,461,1.384,467,1.145,468,2.498,469,1.384,470,1.384,471,1.97,472,1.97,473,2.341,474,1.534,475,2.498,486,2.498,487,2.498,488,2.767,490,1.713,498,1.937,499,2.693,503,0.689,504,3.208,505,1.649,506,1.937,507,1.431,508,1.431,509,1.431,510,2.182,511,2.182,512,3.039,513,1.733,514,2.182,516,2.182,517,2.182,519,2.437,520,1.534,521,1.534,522,2.693,523,3.208,524,1.937,525,1.937,526,1.937,527,1.649,528,1.488,529,2.107,530,2.693,531,2.693,707,1.534,782,2.126,810,2.365,968,0.689,1040,2.583,1119,2.346,1172,3.074,1350,4.46,1351,2.693,1352,4.037,1353,2.693,1354,2.693,1355,5.264,1356,4.793,1357,2.126,1358,2.693,1359,2.365,1360,2.693,1361,2.693,1362,2.693,1363,2.693,1364,2.693,1365,2.237,1366,2.693,1367,5.806,1368,2.693,1369,3.218,1370,3.218,1371,5.806,1372,2.514,1373,2.693,1374,2.514,1375,2.693,1376,6.375,1377,5.329,1378,5.329,1379,2.126,1380,2.365,1381,2.693,1382,3.218,1383,2.693,1384,2.693,1385,2.693,1386,3.218,1387,3.218,1388,2.917,1389,2.917]],["title/interfaces/ILabelConfig.html",[104,0.15,459,1.467]],["body/interfaces/ILabelConfig.html",[0,0.41,3,0.086,4,0.1,8,0.086,9,0.201,12,0.416,13,0.567,15,0.201,16,0.279,17,0.312,18,0.247,20,0.201,22,0.128,23,0.364,31,0.38,35,0.363,36,0.616,39,0.27,40,0.012,41,0.388,42,0.962,50,1.256,56,0.646,69,0.1,75,0.453,76,1.818,81,0.163,82,0.282,83,1.545,84,0.1,91,0.166,103,2.453,104,0.227,120,1.394,124,0.726,160,0.962,224,0.878,254,0.008,255,0.008,262,0.825,264,1.545,266,2.475,285,1.021,286,1.021,287,1.704,288,1.704,306,1.739,405,1.76,406,2.995,415,3.138,426,1.459,427,2.318,429,2.087,447,1.88,449,2.373,459,2.475,461,2.904,467,1.504,468,2.799,469,1.818,470,1.818,471,2.373,472,2.373,473,2.623,475,2.799,486,2.799,487,2.799,500,2.166,503,1.393,507,1.88,508,1.88,509,1.88,513,1.6,528,1.792,529,2.538,652,3.106,968,0.905,1040,2.894,1307,2.938,1320,2.791,1372,3.302,1390,3.302,1391,5.899,1392,4.782,1393,4.053,1394,3.537,1395,3.831,1396,3.537,1397,2.791,1398,4.308,1399,3.537,1400,4.308,1401,3.537,1402,3.537,1403,3.831,1404,3.831,1405,3.831,1406,4.999,1407,3.831,1408,3.831,1409,3.831,1410,3.831,1411,3.831,1412,3.831,1413,4.053]],["title/interfaces/ILabelIconConfig.html",[104,0.15,473,1.467]],["body/interfaces/ILabelIconConfig.html",[0,0.42,3,0.092,4,0.106,8,0.092,9,0.214,12,0.444,13,0.591,15,0.214,16,0.298,17,0.333,18,0.264,20,0.214,22,0.136,23,0.38,31,0.406,35,0.387,36,0.642,39,0.234,40,0.012,41,0.386,42,1.025,50,1.339,56,0.493,69,0.106,75,0.483,76,1.938,81,0.166,82,0.294,83,1.61,84,0.106,91,0.169,103,2.556,104,0.236,120,1.157,124,0.774,160,1.025,224,0.936,254,0.009,255,0.009,262,0.88,264,1.61,266,2.551,285,1.088,286,1.088,287,1.816,288,1.816,306,1.813,405,1.876,406,2.073,415,2.962,426,1.555,427,2.119,429,2.225,447,2.004,449,2.472,459,2.317,461,2.472,467,1.603,468,2.472,469,1.938,470,1.938,471,2.472,472,2.472,473,2.551,475,1.938,486,1.938,487,1.938,500,2.308,503,1.427,507,2.004,508,2.004,509,2.004,513,1.705,528,1.868,529,2.645,652,3.311,968,0.965,1040,2.004,1307,3.132,1320,4.402,1372,5.207,1390,3.519,1391,4.084,1392,3.311,1393,4.223,1394,3.77,1395,6.042,1396,3.77,1397,2.976,1398,4.489,1399,3.77,1400,4.489,1401,3.77,1402,3.77,1403,4.084,1404,4.084,1405,4.084,1406,5.21,1407,4.084,1408,4.084,1409,4.084,1410,4.084,1411,4.084,1412,4.084,1413,4.223]],["title/interfaces/ILinkComponentConfig.html",[104,0.15,283,2.674]],["body/interfaces/ILinkComponentConfig.html",[0,0.431,3,0.109,4,0.127,8,0.109,9,0.256,15,0.256,16,0.355,17,0.397,18,0.315,20,0.256,22,0.163,23,0.423,35,0.462,39,0.263,40,0.012,41,0.39,56,0.631,69,0.127,75,0.777,81,0.127,82,0.328,84,0.127,91,0.151,102,3.237,104,0.221,176,1.152,177,1.299,254,0.01,255,0.01,262,1.05,270,4.683,283,5.033,290,5.539,328,4.875,329,5.377,332,7.09,968,1.152]],["title/interfaces/IOption.html",[104,0.15,1414,3.298]],["body/interfaces/IOption.html",[0,0.387,3,0.074,4,0.086,5,0.885,8,0.074,9,0.174,12,0.361,13,0.515,15,0.174,18,0.214,20,0.174,22,0.111,23,0.331,31,0.33,35,0.315,39,0.186,40,0.012,41,0.359,43,0.999,50,1.49,55,1.211,59,0.57,69,0.086,75,0.712,78,2.112,81,0.135,82,0.354,83,1.405,84,0.086,91,0.086,104,0.151,117,0.919,120,0.738,124,0.63,171,0.809,183,0.785,219,1.187,254,0.008,255,0.008,310,3.178,321,1.577,350,2.232,405,2.766,426,1.265,429,3.359,457,2.495,489,2.775,490,2.668,492,3.322,503,1.316,534,2.206,536,3.067,621,3.664,637,3.311,658,2.476,683,5.181,740,4.545,765,2.548,776,5.181,802,3.322,808,2.421,885,1.81,968,1.074,1040,1.63,1199,3.973,1286,2.693,1380,2.693,1414,6.023,1415,3.664,1416,5.723,1417,5.723,1418,5.723,1419,4.184,1420,5.723,1421,4.184,1422,4.184,1423,4.184,1424,3.664,1425,3.664,1426,4.184,1427,3.322,1428,4.184,1429,4.184,1430,4.184,1431,3.664,1432,4.184,1433,4.184,1434,4.184,1435,4.184,1436,4.184,1437,4.184,1438,4.184,1439,4.184,1440,4.184,1441,4.184,1442,4.184,1443,4.184,1444,4.184,1445,4.184,1446,4.184,1447,4.184,1448,4.184,1449,4.184,1450,4.184,1451,7.345,1452,6.523,1453,6.523,1454,7.764,1455,7.345,1456,7.345,1457,4.184,1458,4.184,1459,4.184,1460,4.184,1461,4.184,1462,7.014,1463,5.723,1464,4.184,1465,4.184,1466,4.184,1467,4.184,1468,4.184,1469,3.067,1470,4.184,1471,4.184,1472,4.184,1473,4.184,1474,4.184,1475,4.184,1476,4.184,1477,4.184,1478,4.184,1479,4.184,1480,6.523,1481,4.184,1482,7.014,1483,4.184,1484,4.184,1485,4.184,1486,4.184,1487,4.184,1488,4.184,1489,4.184,1490,3.664,1491,4.184,1492,4.184,1493,4.184,1494,4.184,1495,4.184,1496,4.184,1497,5.723,1498,4.184,1499,4.184,1500,4.184,1501,4.184,1502,4.184,1503,4.184,1504,4.184,1505,4.184,1506,4.184,1507,5.723]],["title/interfaces/IProgressIndicatorConfig.html",[104,0.15,1508,2.842]],["body/interfaces/IProgressIndicatorConfig.html",[0,0.398,3,0.091,4,0.106,8,0.091,9,0.213,12,0.441,13,0.588,15,0.213,16,0.296,17,0.33,18,0.262,20,0.213,22,0.135,23,0.378,31,0.403,35,0.384,36,0.816,39,0.234,40,0.012,41,0.352,50,1.875,56,0.621,69,0.106,81,0.162,82,0.293,83,1.604,84,0.106,91,0.166,92,1.371,104,0.235,106,1.016,107,1.016,117,1.157,123,1.106,124,0.77,160,1.019,229,0.93,230,1.393,254,0.009,255,0.009,264,1.604,280,1.604,281,1.082,282,1.082,285,1.082,286,1.082,310,2.211,323,1.292,350,2.597,447,1.991,449,2.463,503,1.226,507,1.991,508,1.991,509,1.991,528,1.86,618,2.958,885,2.211,957,2.582,968,0.959,1000,3.445,1001,3.445,1007,3.498,1023,3.781,1321,3.498,1322,3.498,1508,4.929,1509,2.957,1510,3.112,1511,3.29,1512,5.369,1513,6.23,1514,5.195,1515,3.979,1516,2.819,1517,3.747,1518,3.747,1519,4.472,1520,3.747,1521,4.472,1522,3.747,1523,5.189,1524,4.79,1525,4.392,1526,3.781,1527,4.059,1528,4.059,1529,4.059,1530,4.472,1531,4.059,1532,4.059,1533,5.189]],["title/interfaces/IProgressTagsConfig.html",[104,0.15,1515,2.529]],["body/interfaces/IProgressTagsConfig.html",[0,0.406,3,0.095,4,0.11,8,0.095,9,0.222,12,0.461,13,0.605,15,0.222,16,0.309,17,0.345,18,0.274,20,0.222,22,0.141,23,0.389,31,0.421,35,0.402,36,0.794,39,0.263,40,0.012,41,0.346,56,0.58,59,0.728,69,0.11,75,0.501,76,2.532,81,0.152,82,0.356,84,0.11,91,0.164,92,1.432,95,2.906,96,3.393,104,0.192,106,1.2,107,1.2,123,1.158,160,1.064,230,1.421,231,1.002,254,0.009,255,0.009,257,2.697,261,2.08,264,1.649,280,1.893,281,1.13,282,1.13,285,1.13,286,1.13,311,2.396,366,1.649,367,1.199,370,2.617,371,1.947,426,1.614,503,1.26,528,2.092,782,3.887,885,2.31,968,1.002,1152,3.089,1155,3.887,1397,3.089,1509,3.089,1515,4.476,1516,2.945,1534,3.653,1535,4.924,1536,4.24,1537,5.388,1538,4.24,1539,4.924,1540,4.24,1541,4.24,1542,4.24,1543,4.24,1544,4.24,1545,6.125,1546,5.334,1547,4.676,1548,4.676,1549,5.388,1550,3.914,1551,4.597]],["title/interfaces/IRadioInputComponentConfig.html",[104,0.15,1552,2.842]],["body/interfaces/IRadioInputComponentConfig.html",[0,0.349,3,0.07,4,0.081,8,0.07,9,0.164,12,0.34,13,0.495,15,0.164,16,0.228,17,0.255,18,0.202,20,0.164,22,0.145,23,0.318,31,0.311,35,0.413,36,0.729,39,0.265,40,0.012,41,0.381,43,0.723,56,0.646,58,0.762,65,1.438,69,0.081,75,0.516,78,1.989,81,0.158,82,0.322,84,0.081,91,0.131,104,0.198,106,0.854,107,0.854,120,1.348,123,0.996,124,0.594,160,0.786,233,0.999,234,1.128,254,0.007,255,0.007,261,1.536,262,0.674,264,1.348,266,2.233,280,1.552,281,0.834,282,0.834,285,0.834,286,0.834,287,1.392,288,1.392,306,1.089,323,1.388,337,2.716,350,1.349,366,1.348,367,1.615,377,1.769,385,1.307,387,2.664,388,1.536,389,1.646,390,2.293,391,1.646,392,2.293,393,1.486,396,2.078,397,1.646,398,1.769,399,1.838,400,2.174,402,1.646,403,2.664,405,1.438,406,2.215,407,2.896,409,2.078,415,3.08,419,3.487,425,1.486,426,2.31,427,2.109,429,2.376,430,2.465,435,1.769,436,1.991,444,1.838,447,1.536,449,2.07,452,2.293,454,2.896,457,1.156,459,1.94,460,3.108,461,1.486,467,1.229,468,2.577,469,1.486,470,1.486,471,2.07,472,2.07,473,2.415,474,1.646,475,2.577,484,4.68,486,2.577,487,2.577,488,2.855,498,2.078,500,1.769,503,0.74,504,3.333,505,1.769,506,2.078,507,1.536,508,1.536,509,1.536,510,2.293,511,2.293,512,3.108,513,1.821,514,2.293,516,2.293,517,2.293,519,2.561,520,1.646,521,1.646,523,2.896,524,2.078,525,2.078,526,2.078,527,2.838,528,1.564,529,2.215,658,3.111,659,2.174,707,2.293,775,2.698,808,2.281,825,2.281,909,2.281,968,0.74,1040,2.665,1119,2.465,1120,2.401,1172,1.991,1234,2.401,1263,2.896,1266,2.896,1357,2.281,1379,2.281,1552,4.326,1553,2.89,1554,2.698,1555,2.401,1556,5.43,1557,4.68,1558,5.43,1559,3.13,1560,2.538,1561,2.538,1562,2.538,1563,2.538,1564,2.538,1565,2.538,1566,2.538,1567,2.538,1568,3.13,1569,3.13,1570,3.13,1571,3.13,1572,3.13]],["title/interfaces/IRadioInputOption.html",[104,0.15,1557,2.842]],["body/interfaces/IRadioInputOption.html",[0,0.362,3,0.075,4,0.087,8,0.075,9,0.176,12,0.364,13,0.519,15,0.176,16,0.244,17,0.273,18,0.216,20,0.176,22,0.153,23,0.333,31,0.333,35,0.433,36,0.641,39,0.187,40,0.012,41,0.375,43,0.971,56,0.596,58,0.817,65,1.54,69,0.087,75,0.692,78,2.027,81,0.161,82,0.33,84,0.087,91,0.135,104,0.207,106,0.896,107,0.896,120,1.157,123,0.615,124,0.636,160,0.842,233,1.048,234,1.183,254,0.008,255,0.008,261,1.646,262,0.722,264,1.414,266,2.315,280,1.609,281,0.894,282,0.894,285,0.894,286,0.894,287,1.491,288,1.491,306,1.167,323,1.456,337,2.774,350,1.445,366,1.414,367,1.655,377,1.896,385,1.4,387,2.793,388,1.646,389,1.763,390,2.405,391,1.763,392,2.405,393,1.592,396,2.227,397,1.763,398,1.896,399,1.969,400,2.329,402,1.763,403,2.793,405,1.54,406,2.322,407,3.037,409,2.227,415,2.933,419,3.616,425,1.592,426,2.353,427,1.69,429,2.492,430,2.585,435,1.896,436,2.133,444,1.969,447,1.646,449,2.171,452,2.405,454,3.037,457,1.239,459,2.034,460,3.175,461,1.592,467,1.316,468,2.171,469,1.592,470,1.592,471,2.171,472,2.171,473,2.034,474,1.763,475,1.592,484,2.89,486,1.592,487,1.592,488,1.763,498,2.227,500,1.896,503,0.792,504,3.456,505,1.896,506,2.227,507,1.646,508,1.646,509,1.646,510,2.405,511,2.405,512,3.175,513,1.91,514,2.405,516,2.405,517,2.405,519,2.685,520,1.763,521,1.763,523,3.037,524,2.227,525,2.227,526,2.227,527,2.942,528,1.64,529,2.322,658,2.492,659,2.329,707,2.405,775,2.89,808,2.443,825,2.443,909,2.443,968,0.792,1040,1.646,1119,2.585,1120,2.572,1172,2.133,1234,2.572,1263,3.037,1266,3.037,1357,2.443,1379,2.443,1552,3.942,1553,3.096,1554,2.89,1555,2.572,1556,3.354,1557,4.486,1558,4.574,1559,5.592,1560,2.719,1561,2.719,1562,2.719,1563,2.719,1564,2.719,1565,2.719,1566,2.719,1567,2.719,1568,3.354,1569,3.354,1570,3.354,1571,3.354,1572,3.354]],["title/interfaces/ISearchInputButtonConfig.html",[104,0.15,1573,2.842]],["body/interfaces/ISearchInputButtonConfig.html",[0,0.429,3,0.108,4,0.125,8,0.108,9,0.252,12,0.521,13,0.653,15,0.252,18,0.31,20,0.252,22,0.16,23,0.419,31,0.476,35,0.454,39,0.235,40,0.012,41,0.382,50,2.022,56,0.606,59,0.823,69,0.125,75,0.756,81,0.15,82,0.348,83,1.779,84,0.125,91,0.16,104,0.261,124,1.091,237,1.099,238,1.489,254,0.01,255,0.01,262,1.033,399,3.379,467,1.883,534,3.185,623,4.134,968,1.133,1320,4.659,1357,3.495,1555,3.679,1573,5.313,1574,4.429,1575,4.134,1576,4.96,1577,4.797,1578,4.797,1579,4.797,1580,4.797,1581,4.797]],["title/interfaces/ISearchInputConfig.html",[104,0.15,1576,2.842]],["body/interfaces/ISearchInputConfig.html",[0,0.426,3,0.106,4,0.123,8,0.106,9,0.249,12,0.515,13,0.648,15,0.249,18,0.306,20,0.249,22,0.158,23,0.417,31,0.471,35,0.449,39,0.251,40,0.012,41,0.381,50,2.012,56,0.627,59,0.814,69,0.123,75,0.561,81,0.149,82,0.346,83,1.767,84,0.123,91,0.16,104,0.259,124,1.084,237,1.087,238,1.479,254,0.01,255,0.01,262,1.022,399,3.357,467,1.862,534,3.15,623,5.49,968,1.121,1320,3.457,1357,3.457,1555,3.639,1573,5.49,1574,4.38,1575,4.089,1576,5.288,1577,6.371,1578,6.371,1579,4.745,1580,4.745,1581,4.745]],["title/interfaces/ISelectConfig.html",[104,0.15,1046,2.291]],["body/interfaces/ISelectConfig.html",[0,0.354,3,0.072,4,0.084,8,0.072,9,0.168,12,0.349,13,0.503,15,0.168,16,0.234,17,0.261,18,0.207,20,0.168,22,0.107,23,0.323,31,0.319,35,0.42,36,0.71,39,0.266,40,0.012,41,0.384,43,0.532,56,0.645,65,1.474,69,0.084,75,0.525,78,1.954,81,0.159,82,0.251,84,0.084,91,0.132,104,0.201,106,0.629,107,0.629,110,2.602,120,1.404,123,1.007,124,0.609,160,0.806,194,1.017,242,1.017,254,0.007,255,0.007,262,0.691,264,1.372,266,2.263,280,1.372,281,0.855,282,0.855,285,0.855,286,0.855,287,1.428,288,1.428,306,1.117,367,1.552,385,1.34,387,2.71,388,1.575,389,1.688,390,2.333,391,1.688,392,2.333,393,1.523,396,2.131,397,1.688,398,1.814,399,1.885,402,1.688,403,2.71,405,1.474,406,2.254,407,2.947,409,2.131,415,3.067,425,2.107,426,1.937,427,2.129,430,2.509,435,1.814,436,2.042,444,2.606,447,1.575,449,2.107,452,2.333,454,2.947,457,2.028,459,1.974,460,3.029,461,1.523,467,1.26,468,2.605,469,1.523,470,1.523,471,2.107,472,2.107,473,2.441,474,1.688,475,2.605,486,2.605,487,2.605,488,2.886,489,1.96,498,2.131,503,0.758,504,3.378,505,1.814,506,2.131,507,1.575,508,1.575,509,1.575,510,2.333,511,2.333,512,3.133,513,1.853,514,2.333,516,2.333,517,2.333,520,1.688,521,1.688,523,2.947,524,2.131,525,2.131,526,2.131,527,3.103,528,1.591,529,2.254,658,2.991,825,2.339,838,2.23,968,0.758,1040,2.694,1046,3.534,1106,3.404,1111,4.21,1115,2.131,1119,2.509,1159,2.462,1263,2.947,1266,2.947,1352,4.21,1365,2.462,1379,2.339,1392,4.45,1413,3.598,1469,2.963,1560,3.598,1561,2.602,1562,2.602,1563,2.602,1564,2.602,1565,2.602,1566,2.602,1567,2.602,1582,2.963,1583,4.731,1584,3.21,1585,3.21,1586,3.21,1587,3.21,1588,3.21,1589,3.21,1590,3.21,1591,3.21,1592,3.21,1593,5.088,1594,3.21,1595,3.21,1596,3.21,1597,3.21,1598,3.21,1599,3.21]],["title/interfaces/ISelectOptionsConfig.html",[104,0.15,1583,2.842]],["body/interfaces/ISelectOptionsConfig.html",[0,0.369,3,0.078,4,0.09,8,0.078,9,0.182,12,0.378,13,0.532,15,0.182,16,0.253,17,0.283,18,0.224,20,0.182,22,0.116,23,0.342,31,0.345,35,0.444,36,0.577,39,0.191,40,0.012,41,0.377,43,0.941,56,0.444,65,1.597,69,0.09,75,0.701,78,2.001,81,0.162,82,0.265,84,0.09,91,0.138,104,0.213,106,0.681,107,0.681,110,2.818,120,1.316,123,0.638,124,0.659,160,0.873,194,1.074,242,1.074,254,0.008,255,0.008,262,0.749,264,1.448,266,2.358,280,1.448,281,0.926,282,0.926,285,0.926,286,0.926,287,1.546,288,1.546,306,1.21,367,1.605,385,1.451,387,2.862,388,1.706,389,1.827,390,2.464,391,1.827,392,2.464,393,1.65,396,2.308,397,1.827,398,1.965,399,2.041,402,1.827,403,2.862,405,1.597,406,2.379,407,3.112,409,2.308,415,2.897,425,2.224,426,2.019,427,1.731,430,2.649,435,1.965,436,2.211,444,2.752,447,1.706,449,2.224,452,2.464,454,3.112,457,2.097,459,2.084,460,3.115,461,1.65,467,1.364,468,2.224,469,1.65,470,1.65,471,2.224,472,2.224,473,2.084,474,1.827,475,1.65,486,1.65,487,1.65,488,1.827,489,2.123,498,2.308,503,0.821,504,3.521,505,1.965,506,2.308,507,1.706,508,1.706,509,1.706,510,2.464,511,2.464,512,3.209,513,1.957,514,2.464,516,2.464,517,2.464,520,1.827,521,1.827,523,3.112,524,2.308,525,2.308,526,2.308,527,3.208,528,1.68,529,2.379,658,1.894,825,2.533,838,2.414,968,0.821,1040,1.706,1046,3.255,1106,3.594,1111,2.666,1115,2.308,1119,2.649,1159,2.666,1263,3.112,1266,3.112,1352,2.666,1365,2.666,1379,2.533,1392,2.818,1413,3.8,1469,3.209,1560,3.8,1561,2.818,1562,2.818,1563,2.818,1564,2.818,1565,2.818,1566,2.818,1567,2.818,1582,3.209,1583,4.57,1584,3.476,1585,3.476,1586,3.476,1587,3.476,1588,3.476,1589,3.476,1590,3.476,1591,3.476,1592,3.476,1593,5.303,1594,3.476,1595,3.476,1596,3.476,1597,3.476,1598,3.476,1599,3.476]],["title/interfaces/ISkipLinkConfig.html",[104,0.15,951,2.842]],["body/interfaces/ISkipLinkConfig.html",[0,0.419,3,0.102,4,0.119,8,0.102,9,0.239,13,0.517,15,0.239,16,0.332,17,0.371,18,0.294,20,0.239,22,0.152,23,0.406,35,0.432,36,0.743,39,0.246,40,0.012,41,0.389,56,0.528,69,0.119,81,0.119,82,0.315,84,0.119,91,0.157,102,3.704,104,0.253,116,2.794,117,1.271,137,3.694,209,1.044,210,1.443,254,0.009,255,0.009,270,4.578,292,4.064,321,2.162,503,1.424,707,2.932,765,3.494,857,3.025,932,4.206,933,3.926,934,4.206,935,4.624,936,4.556,939,4.556,941,4.807,943,4.556,946,4.556,947,4.556,948,4.556,951,5.196,952,4.556,953,4.556,954,4.556,955,4.556,956,4.556,957,2.898,958,4.556,959,4.556,960,4.556,961,4.064,962,4.556,963,5.579,964,4.556,965,4.556,968,1.076]],["title/interfaces/ISpinnerConfig.html",[104,0.15,1600,3.044]],["body/interfaces/ISpinnerConfig.html",[0,0.395,3,0.09,4,0.104,8,0.09,9,0.21,12,0.435,13,0.584,15,0.21,16,0.292,17,0.326,18,0.259,20,0.21,22,0.134,23,0.375,31,0.398,35,0.38,36,0.782,39,0.267,40,0.012,41,0.376,56,0.631,69,0.104,75,0.474,81,0.148,82,0.369,84,0.104,91,0.161,92,1.354,95,2.805,96,3.617,99,3.143,104,0.182,106,1.244,107,1.244,123,1.139,160,1.006,244,0.947,254,0.009,255,0.009,261,1.967,264,1.591,281,1.068,282,1.068,285,1.068,286,1.068,311,2.266,366,1.591,367,1.134,370,2.526,371,2.756,426,1.526,427,2.293,503,1.216,528,1.845,634,3.575,782,3.751,885,2.184,968,0.947,1152,2.921,1155,3.751,1247,4.759,1269,5.171,1397,2.921,1512,5.348,1525,3.751,1526,2.921,1530,5.348,1549,5.249,1550,3.7,1551,4.436,1600,5.249,1601,3.454,1602,6.618,1603,4.752,1604,4.009,1605,4.752,1606,4.009,1607,4.009,1608,6.001,1609,4.421,1610,4.421,1611,5.678,1612,4.421,1613,4.421]],["title/interfaces/IStepConfig.html",[104,0.15,1514,2.842]],["body/interfaces/IStepConfig.html",[0,0.401,3,0.093,4,0.108,8,0.093,9,0.217,12,0.45,13,0.596,15,0.217,16,0.302,17,0.337,18,0.267,20,0.217,22,0.138,23,0.383,31,0.411,35,0.392,36,0.789,39,0.215,40,0.012,41,0.354,50,1.893,56,0.498,69,0.108,81,0.163,82,0.297,83,1.624,84,0.108,91,0.167,92,1.398,104,0.238,106,1.029,107,1.029,117,1.295,123,0.76,124,0.785,160,1.039,229,0.949,230,1.406,254,0.009,255,0.009,264,1.624,280,1.624,281,1.103,282,1.103,285,1.103,286,1.103,310,2.256,323,1.318,350,2.264,447,2.032,449,2.494,503,1.242,507,2.032,508,2.032,509,2.032,528,1.884,618,2.032,885,2.256,957,2.634,968,0.978,1000,3.489,1001,3.489,1007,3.568,1023,3.829,1321,3.568,1322,3.568,1508,4.529,1509,3.017,1510,3.175,1511,3.356,1512,4.529,1513,5.255,1514,4.975,1515,4.657,1516,2.876,1517,3.822,1518,3.822,1519,4.529,1520,3.822,1521,4.529,1522,3.822,1523,6.268,1524,4.851,1525,4.425,1526,3.829,1527,4.141,1528,4.141,1529,4.141,1530,4.529,1531,4.141,1532,4.141,1533,5.255]],["title/interfaces/ITabConfig.html",[104,0.15,1000,2.19]],["body/interfaces/ITabConfig.html",[0,0.415,3,0.1,4,0.116,8,0.1,9,0.234,12,0.484,13,0.624,15,0.234,16,0.324,17,0.363,18,0.287,20,0.234,22,0.148,23,0.401,31,0.442,35,0.422,36,0.804,39,0.244,40,0.012,41,0.384,43,1.034,50,1.803,56,0.59,65,2.045,69,0.116,78,1.46,81,0.155,82,0.31,83,1.7,84,0.143,91,0.155,104,0.249,106,0.872,107,0.872,117,1.26,120,0.989,123,0.817,124,0.844,246,1.02,254,0.009,255,0.009,280,1.7,281,1.186,282,1.186,323,1.417,618,2.699,707,2.341,935,4.78,957,3.796,968,1.052,1000,3.962,1001,3.652,1009,4.739,1023,4.348,1025,3.837,1614,4.11,1615,4.452,1616,4.452,1617,4.11,1618,4.452,1619,4.452,1620,4.452,1621,5.5,1622,4.452,1623,4.452,1624,5.968,1625,4.452,1626,5.5,1627,4.452,1628,4.452]],["title/interfaces/ITabNavConfig.html",[104,0.15,1001,2.19]],["body/interfaces/ITabNavConfig.html",[0,0.412,3,0.098,4,0.114,8,0.098,9,0.23,12,0.476,13,0.618,15,0.23,16,0.319,17,0.357,18,0.283,20,0.23,22,0.146,23,0.397,31,0.435,35,0.415,36,0.801,39,0.253,40,0.012,41,0.379,43,0.727,50,1.786,56,0.631,65,2.013,69,0.114,78,1.437,81,0.154,82,0.307,83,1.683,84,0.142,91,0.154,104,0.247,106,0.858,107,0.858,117,0.886,120,1.317,123,1.137,124,0.831,246,1.004,254,0.009,255,0.009,280,1.683,281,1.168,282,1.168,323,1.395,618,3.128,707,2.304,935,4.753,957,4.133,968,1.035,1000,4.115,1001,3.934,1009,5.493,1023,4.317,1025,3.776,1614,4.046,1615,4.382,1616,4.382,1617,4.046,1618,4.382,1619,4.382,1620,4.382,1621,5.446,1622,4.382,1623,4.382,1624,5.926,1625,4.382,1626,5.446,1627,4.382,1628,4.382]],["title/interfaces/ITextareaComponentConfig.html",[104,0.15,1629,3.044]],["body/interfaces/ITextareaComponentConfig.html",[0,0.362,3,0.075,4,0.087,8,0.075,9,0.176,12,0.365,13,0.519,15,0.176,16,0.245,17,0.273,18,0.217,20,0.176,22,0.112,23,0.334,31,0.333,35,0.318,36,0.744,39,0.266,40,0.012,41,0.382,42,0.842,43,0.557,56,0.649,59,0.96,69,0.087,78,1.101,81,0.161,82,0.341,84,0.087,91,0.135,92,1.134,104,0.152,106,0.896,107,0.896,120,1.243,123,1.026,124,0.868,145,3.335,236,1.536,248,1.081,254,0.008,255,0.008,261,1.647,266,2.316,280,1.414,281,0.894,282,0.894,287,1.493,288,1.493,306,1.593,337,1.542,366,1.414,367,1.582,385,1.401,387,2.795,388,1.647,389,1.765,390,2.406,391,1.765,392,2.406,393,1.593,397,1.765,400,2.331,402,1.765,403,2.795,404,2.721,405,1.542,415,3.156,419,3.179,427,2.163,452,2.406,457,1.691,459,2.035,460,3.077,461,1.593,467,1.318,468,2.655,469,1.593,470,1.593,473,2.488,474,1.765,475,2.655,486,2.655,487,2.655,488,2.941,490,1.971,510,2.406,511,2.406,512,2.941,513,1.911,514,2.406,516,2.406,517,2.406,519,2.687,520,1.765,521,1.765,699,4.29,707,1.765,810,2.721,968,0.793,1040,2.745,1119,2.587,1172,2.912,1352,4.29,1353,3.099,1354,3.099,1356,2.893,1358,3.099,1359,2.721,1360,3.099,1361,3.099,1362,3.099,1363,3.099,1364,3.099,1365,2.574,1366,3.099,1368,3.099,1373,3.099,1374,2.893,1375,3.099,1381,3.099,1383,3.099,1384,3.099,1385,3.099,1525,2.446,1526,3.335,1629,4.808,1630,3.099,1631,6.457,1632,6.17,1633,3.357,1634,4.577,1635,4.577,1636,3.702,1637,3.702,1638,3.702,1639,3.702,1640,3.702,1641,5.048,1642,3.702,1643,3.702,1644,3.702,1645,3.702,1646,3.702,1647,3.702,1648,5.048,1649,5.744,1650,5.048,1651,3.702,1652,5.048,1653,3.702,1654,5.048,1655,3.357,1656,3.702,1657,3.702]],["title/components/IconButtonComponent.html",[0,0.229,212,0.756]],["body/components/IconButtonComponent.html",[0,0.455,1,0.66,2,1.105,3,0.09,4,0.073,5,0.745,6,0.79,7,0.79,8,0.063,9,0.334,12,0.437,13,0.535,14,0.79,15,0.363,16,0.495,17,0.553,18,0.443,20,0.211,22,0.093,23,0.293,27,1.172,31,0.512,33,1.172,35,0.447,36,0.723,37,2.457,39,0.254,40,0.012,41,0.339,42,1.295,43,0.856,45,1.677,50,1.547,54,0.944,55,1.257,56,0.265,58,0.98,59,0.809,64,2.769,66,2.981,67,2.672,68,1.272,69,0.153,70,3.585,71,1.941,72,2.143,73,3.104,74,1.508,75,0.647,76,2.704,81,0.105,82,0.339,83,1.244,84,0.073,85,3.479,87,3.342,91,0.148,92,0.944,95,3.104,103,1.975,104,0.183,106,1.011,107,1.011,114,0.701,116,2.534,117,0.565,120,1.048,123,0.947,124,0.53,162,0.79,163,1.138,164,1.105,165,0.79,166,0.79,167,0.723,168,1.519,169,0.767,170,1.138,171,0.68,172,0.79,173,0.79,174,0.66,175,0.79,176,0.66,177,0.745,178,0.79,179,0.66,180,1.138,181,0.66,182,0.79,183,0.66,184,1.138,185,0.79,186,0.68,187,0.79,188,0.723,189,0.767,190,0.79,191,0.745,192,0.79,193,0.621,194,0.64,195,0.79,196,0.66,197,0.79,198,0.64,199,0.79,200,0.66,201,0.79,202,0.66,203,0.701,204,0.79,205,0.68,206,0.79,207,0.68,208,0.79,209,0.64,210,0.723,211,0.79,212,1.183,213,0.66,214,0.79,215,0.66,216,1.138,217,0.745,218,0.79,219,0.64,220,1.334,221,0.745,222,0.79,223,0.79,224,0.64,225,0.79,226,0.68,227,0.68,228,0.79,229,0.64,230,0.98,231,0.66,232,0.79,233,0.64,234,0.723,235,0.745,236,0.767,237,0.64,238,0.723,239,0.68,240,0.723,241,0.79,242,0.64,243,0.79,244,0.66,245,0.79,246,0.64,247,0.79,248,0.66,249,0.79,250,0.723,251,0.723,252,0.79,253,0.79,254,0.007,255,0.007,281,0.745,282,0.745,292,2.036,335,3.468,336,4.354,337,2.37,366,1.244,367,1.334,368,3.086,369,3.617,370,1.975,371,1.283,374,3.468,375,2.408,376,2.363,377,1.579,380,3.437,381,3.632,503,0.951,705,2.265,1267,5.154,1268,2.265,1269,4.714,1270,5.049,1271,4.065,1272,2.579,1273,4.065,1274,2.579,1275,4.025,1276,2.794,1277,2.794,1278,4.717,1279,4.025,1280,4.717,1281,4.025,1282,2.794,1658,5.068,1659,3.518,1660,3.518,1661,3.518,1662,3.518,1663,3.518,1664,3.518,1665,3.518,1666,3.518,1667,3.518,1668,3.518,1669,3.518,1670,3.518]],["title/components/IconComponent.html",[0,0.229,213,0.779]],["body/components/IconComponent.html",[0,0.452,1,0.822,2,1.288,3,0.105,4,0.091,5,0.927,6,0.984,7,0.984,8,0.078,9,0.32,12,0.509,14,0.984,15,0.368,16,0.504,17,0.563,18,0.45,20,0.246,22,0.116,23,0.342,27,1.366,33,1.366,35,0.503,39,0.242,40,0.012,41,0.345,42,0.873,43,0.577,45,1.579,54,1.175,55,1.414,56,0.33,58,0.847,59,0.597,68,1.073,69,0.091,74,1.425,75,0.412,81,0.091,82,0.32,84,0.091,91,0.122,104,0.158,114,0.873,116,2.525,117,0.704,162,0.984,163,1.326,164,1.288,165,0.984,166,0.984,167,0.9,168,1.614,169,0.955,170,1.326,171,0.847,172,0.984,173,0.984,174,0.822,175,0.984,176,0.822,177,0.927,178,0.984,179,0.822,180,1.326,181,0.822,182,0.984,183,0.822,184,1.326,185,0.984,186,0.847,187,0.984,188,0.9,189,0.955,190,0.984,191,0.927,192,0.984,193,0.773,194,0.797,195,0.984,196,0.822,197,0.984,198,0.797,199,0.984,200,0.822,201,0.984,202,0.822,203,0.873,204,0.984,205,0.847,206,0.984,207,0.847,208,0.984,209,0.797,210,0.9,211,0.984,212,0.797,213,1.341,214,0.984,215,0.822,216,1.326,217,0.927,218,0.984,219,0.797,220,1.5,221,0.927,222,0.984,223,0.984,224,0.797,225,0.984,226,0.847,227,0.847,228,0.984,229,0.797,230,1.142,231,0.822,232,0.984,233,0.797,234,0.9,235,0.927,236,0.955,237,0.797,238,0.9,239,0.847,240,0.9,241,0.984,242,0.797,243,0.984,244,0.822,245,0.984,246,0.797,247,0.984,248,0.822,249,0.984,250,0.9,251,0.9,252,0.984,253,0.984,254,0.008,255,0.008,257,3.375,261,2.301,275,2.983,276,3.611,278,1.829,503,1.108,752,2.821,767,4.068,1019,3.212,1020,3.212,1199,2.668,1283,4.572,1284,3.479,1285,5.677,1286,2.821,1287,5.173,1288,5.173,1289,5.851,1290,3.838,1291,3.838,1292,3.838,1293,5.173,1294,3.838,1671,4.381,1672,4.381,1673,4.381,1674,4.381,1675,4.381]],["title/components/IndicatorComponent.html",[0,0.229,215,0.779]],["body/components/IndicatorComponent.html",[0,0.455,1,0.657,2,1.101,3,0.09,4,0.072,5,0.741,6,0.786,7,0.786,8,0.062,9,0.333,12,0.436,13,0.533,14,0.786,15,0.363,16,0.493,17,0.551,18,0.443,20,0.21,22,0.093,23,0.292,27,1.168,30,4.174,31,0.511,33,1.168,35,0.446,39,0.245,40,0.012,41,0.291,42,1.006,43,0.78,45,1.675,54,0.939,55,1.253,56,0.555,58,1.385,59,0.976,66,2.388,68,0.811,69,0.072,74,1.292,75,0.646,76,1.903,81,0.104,82,0.226,84,0.072,91,0.153,92,1.844,95,2.185,96,2.551,97,3.251,104,0.126,106,1.114,107,1.148,114,0.698,116,1.236,117,0.562,119,4.437,120,1.144,123,0.51,139,1.931,162,0.786,163,1.134,164,1.101,165,0.786,166,0.786,167,0.719,168,1.516,169,0.763,170,1.134,171,0.677,172,0.786,173,0.786,174,0.657,175,0.786,176,0.657,177,0.741,178,0.786,179,0.657,180,1.134,181,0.657,182,0.786,183,0.657,184,1.134,185,0.786,186,0.677,187,0.786,188,0.719,189,0.763,190,0.786,191,0.741,192,0.786,193,0.618,194,0.637,195,0.786,196,0.657,197,0.786,198,0.637,199,0.786,200,0.657,201,0.786,202,0.657,203,0.698,204,0.786,205,0.677,206,0.786,207,0.677,208,0.786,209,0.637,210,0.719,211,0.786,212,0.637,213,0.657,214,0.786,215,1.216,216,1.134,217,0.741,218,0.786,219,0.637,220,1.33,221,0.741,222,0.786,223,0.786,224,0.637,225,0.786,226,0.677,227,0.677,228,0.786,229,0.637,230,0.977,231,0.657,232,0.786,233,0.637,234,0.719,235,0.741,236,0.763,237,0.637,238,0.719,239,0.677,240,0.719,241,0.786,242,0.637,243,0.786,244,0.657,245,0.786,246,0.637,247,0.786,248,0.657,249,0.786,250,0.719,251,0.719,252,0.786,253,0.786,254,0.007,255,0.007,257,2.992,261,1.968,275,2.551,276,3.275,278,1.461,280,1.239,281,0.741,282,0.741,306,2.127,311,1.571,321,1.903,350,2.218,381,1.846,425,1.319,427,2.101,513,1.674,585,2.026,598,2.566,651,2.551,654,4.053,752,2.254,767,3.607,1286,2.254,1295,4.342,1296,2.566,1297,4.704,1298,5.188,1299,5.188,1300,4.01,1301,2.78,1302,4.01,1303,4.01,1304,4.01,1305,4.01,1306,5.149,1307,3.075,1308,3.702,1309,4.01,1310,2.78,1311,2.78,1312,2.78,1313,2.566,1314,2.78,1315,2.78,1316,2.78,1317,2.78,1318,3.066,1319,3.066,1320,2.026,1321,3.456,1322,3.456,1323,4.423,1324,4.423,1325,4.423,1326,5.188,1327,5.679,1328,3.066,1329,3.066,1330,4.423,1331,4.423,1332,4.423,1333,4.423,1334,5.188,1335,5.679,1336,4.423,1337,3.066,1338,5.679,1339,3.066,1340,3.066,1341,3.066,1342,4.423,1343,5.679,1344,2.396,1345,2.78,1346,3.066,1347,3.066,1348,4.423,1349,3.066,1676,3.501,1677,3.501,1678,3.501,1679,3.501,1680,3.501,1681,3.501,1682,3.501,1683,3.501,1684,3.501,1685,3.501,1686,3.501,1687,6.484]],["title/components/InfoTextSmallComponent.html",[0,0.229,217,0.879]],["body/components/InfoTextSmallComponent.html",[0,0.445,1,0.852,2,1.319,3,0.145,4,0.094,5,0.962,6,1.02,7,1.02,8,0.081,14,1.02,15,0.368,16,0.505,17,0.563,18,0.45,20,0.252,22,0.12,23,0.35,39,0.147,40,0.012,42,0.906,43,0.598,45,1.281,55,1.281,68,0.73,69,0.094,74,1.446,75,0.794,81,0.125,84,0.094,91,0.094,100,3.299,114,0.906,116,2.137,117,0.73,162,1.02,163,1.359,164,1.319,165,1.02,166,1.02,167,0.933,168,1.675,169,0.991,170,1.359,171,0.879,172,1.02,173,1.02,174,0.852,175,1.02,176,0.852,177,0.962,178,1.02,179,0.852,180,1.359,181,0.852,182,1.02,183,0.852,184,1.359,185,1.02,186,0.879,187,1.02,188,0.933,189,0.991,190,1.02,191,0.962,192,1.02,193,0.802,194,0.827,195,1.02,196,0.852,197,1.02,198,0.827,199,1.02,200,0.852,201,1.02,202,0.852,203,0.906,204,1.02,205,0.879,206,1.02,207,0.879,208,1.02,209,0.827,210,0.933,211,1.02,212,0.827,213,0.852,214,1.02,215,0.852,216,1.359,217,1.535,218,1.02,219,0.827,220,1.528,221,0.962,222,1.02,223,1.02,224,0.827,225,1.02,226,0.879,227,0.879,228,1.02,229,0.827,230,1.17,231,0.852,232,1.02,233,0.827,234,0.933,235,0.962,236,0.991,237,0.827,238,0.933,239,0.879,240,0.933,241,1.02,242,0.827,243,1.02,244,0.852,245,1.02,246,0.827,247,1.02,248,0.852,249,1.02,250,0.933,251,0.933,252,1.02,253,1.02,254,0.008,255,0.008,262,1.164,364,2.767,570,2.767,575,3.19,584,3.608,606,3.331,975,2.039,976,2.039,977,2.767,1283,4.656,1285,4.805,1688,5.959,1689,5.959,1690,3.98,1691,6.803,1692,6.051,1693,6.803,1694,4.543,1695,6.051,1696,4.543,1697,4.543]],["title/components/InputComponent.html",[0,0.229,219,0.756]],["body/components/InputComponent.html",[0,0.466,1,0.45,2,0.826,3,0.067,4,0.049,5,0.507,6,0.538,7,0.538,8,0.043,9,0.349,12,0.327,13,0.423,14,0.538,15,0.353,16,0.475,17,0.531,18,0.428,20,0.158,22,0.063,23,0.219,27,0.877,31,0.421,33,0.877,35,0.354,36,0.606,39,0.264,40,0.012,41,0.342,42,1.523,43,1.025,45,1.768,54,1.739,55,1.464,56,0.58,58,1.443,59,1.069,65,1.714,68,0.385,69,0.049,74,1.065,75,0.65,78,1.75,81,0.134,82,0.334,84,0.049,91,0.097,92,0.643,104,0.086,106,0.831,107,0.831,114,0.478,117,0.385,120,1.316,123,0.349,124,0.805,160,1.16,162,0.538,163,0.851,164,0.826,165,0.538,166,0.538,167,0.492,168,1.331,169,0.522,170,0.851,171,0.463,172,0.538,173,0.538,174,0.45,175,0.538,176,0.45,177,0.507,178,0.538,179,0.45,180,0.851,181,0.45,182,0.538,183,0.45,184,0.851,185,0.538,186,0.463,187,0.538,188,0.492,189,0.522,190,0.538,191,0.507,192,0.538,193,0.423,194,0.436,195,0.538,196,0.45,197,0.538,198,0.436,199,0.538,200,0.45,201,0.538,202,0.45,203,0.478,204,0.538,205,0.463,206,0.538,207,0.463,208,0.538,209,0.436,210,0.492,211,0.538,212,0.436,213,0.45,214,0.538,215,0.45,216,0.851,217,0.507,218,0.538,219,1.126,220,1.056,221,0.507,222,0.538,223,0.538,224,0.436,225,0.538,226,0.463,227,0.463,228,0.538,229,0.436,230,0.733,231,0.45,232,0.538,233,0.436,234,0.492,235,0.507,236,0.522,237,0.436,238,0.492,239,0.463,240,0.492,241,0.538,242,0.436,243,0.538,244,0.45,245,0.538,246,0.436,247,0.538,248,0.45,249,0.538,250,0.492,251,0.492,252,0.538,253,0.538,254,0.005,255,0.005,261,2.082,262,0.648,264,1.311,266,2.444,278,1,280,0.93,281,0.507,282,0.507,285,0.507,286,0.507,287,0.846,288,0.846,306,1.791,311,2.11,323,0.606,337,1.949,366,0.93,367,1.307,376,2.191,385,2.776,387,2.279,388,1.477,389,1.582,390,1.962,391,1.582,392,1.962,393,1.428,396,2.478,397,1.962,398,2.612,399,2.491,400,2.593,401,2.09,402,1.962,403,2.591,404,3.026,405,2.524,406,2.613,407,3.263,408,3.446,409,2.817,410,2.593,411,2.593,412,3.009,413,2.193,414,2.439,415,2.977,416,1.64,419,2.593,425,1.428,426,1.76,427,1.567,429,2.034,430,2.398,431,2.778,435,1.701,436,1.914,437,2.09,439,2.947,440,2.09,442,2.778,447,1.477,449,1.772,452,1.962,454,2.478,457,2.079,459,1.66,460,2.706,461,1.428,467,0.747,468,1.428,469,0.903,470,0.903,471,1.428,472,1.428,473,1.338,474,1,475,0.903,486,0.903,487,0.903,488,1,490,1.117,498,1.263,499,1.756,503,0.45,504,2.478,505,1.075,506,1.263,507,0.934,508,0.934,509,0.934,510,1.582,511,1.582,512,2.584,513,1.256,514,1.582,516,1.582,517,1.582,519,1.767,520,1,521,1,522,1.756,523,2.478,524,1.263,525,1.263,526,1.263,527,1.075,528,1.079,529,1.528,530,1.756,531,1.756,533,2.439,643,2.308,707,1,782,1.386,810,1.542,1040,0.934,1119,1.701,1172,2.699,1350,3.446,1351,1.756,1352,1.459,1353,1.756,1354,1.756,1355,4.243,1356,4.235,1357,2.193,1358,1.756,1359,1.542,1360,1.756,1361,1.756,1362,1.756,1363,1.756,1364,1.756,1365,1.459,1366,1.756,1367,5.098,1368,3.446,1369,4.117,1370,4.117,1371,5.098,1372,3.217,1373,1.756,1374,1.64,1375,1.756,1376,5.421,1377,4.117,1378,4.117,1379,1.386,1380,1.542,1381,1.756,1382,2.099,1383,2.778,1384,1.756,1385,2.778,1386,3.319,1387,4.68,1388,4.243,1389,3.009,1698,3.319,1699,3.789,1700,3.789,1701,2.396,1702,2.396,1703,2.396,1704,2.396,1705,2.396,1706,2.396,1707,2.396,1708,2.396,1709,2.396,1710,2.396,1711,2.396,1712,2.396,1713,2.396,1714,2.396,1715,2.396,1716,2.396,1717,2.396,1718,2.396,1719,2.396,1720,2.396,1721,2.396,1722,2.396,1723,2.396,1724,2.396,1725,2.396,1726,2.396,1727,2.396,1728,2.396,1729,2.396,1730,2.396,1731,2.396,1732,2.396]],["title/components/InteractiveDemoComponent.html",[0,0.229,221,0.879]],["body/components/InteractiveDemoComponent.html",[0,0.452,1,0.719,2,1.175,3,0.096,4,0.079,5,1.14,6,0.861,7,0.861,8,0.096,12,0.465,13,0.561,14,0.861,15,0.365,16,0.498,17,0.555,18,0.445,19,4.871,20,0.224,22,0.102,23,0.312,24,4.566,27,1.246,31,0.533,33,1.246,36,0.527,39,0.175,40,0.012,42,1.074,43,0.709,45,1.506,50,0.998,55,1.14,58,0.742,59,0.523,67,2.022,68,0.865,69,0.14,70,3.726,71,2.972,73,2.923,74,1.542,75,0.36,78,1.403,81,0.129,82,0.241,83,0.941,84,0.079,85,3.146,91,0.111,92,1.028,103,1.494,106,0.596,107,0.596,114,0.764,117,0.616,118,2.218,123,0.785,162,0.861,163,1.21,164,1.175,165,0.861,166,0.861,167,0.788,168,1.616,169,0.836,170,1.21,171,0.742,172,0.861,173,0.861,174,0.719,175,0.861,176,0.719,177,0.811,178,0.861,179,0.719,180,1.21,181,0.719,182,0.861,183,0.719,184,1.21,185,0.861,186,0.742,187,0.861,188,0.788,189,0.836,190,0.861,191,0.811,192,0.861,193,0.677,194,0.698,195,0.861,196,0.719,197,0.861,198,0.698,199,0.861,200,0.719,201,0.861,202,0.719,203,0.764,204,0.861,205,0.742,206,0.861,207,0.742,208,0.861,209,0.698,210,0.788,211,0.861,212,0.698,213,0.719,214,0.861,215,0.719,216,1.21,217,0.811,218,0.861,219,0.698,220,1.399,221,1.43,222,1.767,223,0.861,224,0.698,225,0.861,226,0.742,227,0.742,228,0.861,229,0.698,230,1.042,231,0.719,232,0.861,233,0.698,234,0.788,235,0.811,236,0.836,237,0.698,238,0.788,239,0.742,240,0.788,241,0.861,242,0.698,243,0.861,244,0.719,245,0.861,246,0.698,247,0.861,248,0.719,249,0.861,250,0.788,251,0.788,252,0.861,253,0.861,254,0.007,255,0.007,262,1.065,321,2.03,365,2.624,444,1.788,570,2.335,575,2.841,585,3.604,587,4.566,588,3.117,590,3.949,592,2.624,593,2.811,594,3.687,595,2.811,596,6.234,597,3.358,598,2.811,601,2.335,606,2.811,607,2.811,652,2.468,961,3.604,967,3.793,970,2.468,972,4.278,973,4.278,974,3.687,975,1.721,976,1.721,977,2.335,978,2.624,1002,3.045,1011,4.946,1115,3.284,1246,3.793,1308,2.811,1313,2.811,1344,2.624,1374,2.624,1396,2.811,1733,5.861,1734,5.861,1735,3.045,1736,5.387,1737,6.228,1738,5.387,1739,6.234,1740,3.834,1741,3.834,1742,3.834,1743,5.387,1744,5.387,1745,5.387,1746,3.834,1747,5.387,1748,6.756,1749,5.387,1750,3.834,1751,3.358,1752,3.834,1753,3.834,1754,3.834,1755,3.358,1756,3.834,1757,4.719,1758,3.358,1759,6.465,1760,3.358,1761,3.358,1762,5.387,1763,3.834,1764,3.834,1765,3.358,1766,3.834,1767,3.834,1768,3.834,1769,3.834,1770,3.834,1771,3.834,1772,3.834,1773,3.834,1774,3.834,1775,3.358,1776,5.455,1777,4.719,1778,3.358,1779,5.387,1780,3.358,1781,3.834,1782,3.358]],["title/modules/IrccDsAngularBannerModule.html",[1783,2.842,1784,3.044]],["body/modules/IrccDsAngularBannerModule.html",[0,0.406,1,1.636,3,0.11,4,0.128,8,0.11,9,0.258,10,3.982,40,0.012,69,0.128,81,0.171,84,0.128,91,0.128,254,0.01,255,0.01,285,1.309,286,1.309,362,3.579,975,3.299,976,3.299,1784,6.226,1785,3.579,1786,4.253,1787,5.418,1788,5.418,1789,5.418,1790,4.732,1791,3.982,1792,6.185,1793,6.185,1794,5.03,1795,5.03,1796,5.03,1797,6.185,1798,4.253,1799,4.535,1800,4.535,1801,5.03,1802,3.982,1803,5.03,1804,4.233]],["title/modules/IrccDsAngularComponentsSharedModule.html",[1783,2.842,1798,2.403]],["body/modules/IrccDsAngularComponentsSharedModule.html",[0,0.336,3,0.082,4,0.095,8,0.082,9,0.191,40,0.012,68,0.736,69,0.095,81,0.177,84,0.095,87,1.914,88,2.418,91,0.095,174,1.561,176,1.561,179,1.561,196,1.561,200,1.561,202,1.561,203,0.914,212,1.514,213,1.561,215,1.561,224,1.514,229,1.514,230,1.178,231,1.571,244,1.561,246,1.514,254,0.008,255,0.008,285,0.97,286,0.97,362,2.653,503,0.86,663,3.642,664,3.642,768,2.793,769,3.642,975,2.058,976,2.058,1510,2.793,1516,2.529,1517,3.362,1518,3.362,1785,2.653,1786,3.523,1790,3.92,1791,2.952,1794,4.167,1795,4.167,1796,4.167,1798,5.131,1801,4.678,1802,2.952,1803,4.678,1804,3.138,1805,4.017,1806,4.017,1807,4.017,1808,3.642,1809,3.642,1810,6.835,1811,4.586,1812,4.586,1813,4.586,1814,4.586,1815,4.586,1816,4.586,1817,4.586,1818,4.586,1819,4.586,1820,4.586,1821,5.428]],["title/modules/IrccDsAngularFormComponentsModule.html",[1783,2.842,1822,3.044]],["body/modules/IrccDsAngularFormComponentsModule.html",[0,0.367,3,0.094,4,0.109,8,0.094,9,0.219,40,0.012,69,0.109,81,0.176,84,0.109,91,0.109,181,1.594,193,1.499,194,0.956,198,1.546,219,1.546,233,1.546,234,1.079,242,1.546,248,1.594,254,0.009,255,0.009,285,1.112,286,1.112,362,3.039,385,1.742,467,1.637,503,0.985,975,2.984,976,2.984,1038,3.199,1047,3.595,1380,3.382,1554,3.595,1633,4.172,1785,3.039,1786,3.847,1790,4.28,1791,3.382,1794,4.55,1795,4.55,1796,4.55,1798,3.847,1799,3.851,1800,3.851,1801,4.55,1802,3.382,1803,4.55,1804,3.595,1822,6.452,1823,4.601,1824,4.601,1825,4.601,1826,4.172,1827,4.172,1828,5.253,1829,4.601,1830,5.253,1831,5.28,1832,5.28,1833,5.253,1834,5.253,1835,5.794]],["title/modules/IrccDsAngularHeaderFooterModule.html",[1783,2.842,1836,3.044]],["body/modules/IrccDsAngularHeaderFooterModule.html",[0,0.382,3,0.1,4,0.116,8,0.1,9,0.234,40,0.012,69,0.116,81,0.175,84,0.116,91,0.116,205,1.659,207,1.659,209,1.561,210,1.153,226,1.659,227,1.086,254,0.009,255,0.009,285,1.188,286,1.188,362,3.248,467,1.75,503,1.053,857,2.959,890,4.115,933,3.841,975,3.111,976,3.111,1785,3.248,1786,4.01,1790,4.462,1791,3.613,1794,4.743,1795,4.743,1796,4.743,1798,4.01,1799,4.115,1800,4.115,1801,4.743,1802,3.613,1803,4.743,1804,3.841,1831,5.504,1832,5.504,1836,6.394,1837,4.916,1838,4.916,1839,4.916,1840,4.458,1841,4.458,1842,5.613,1843,5.613,1844,3.841,1845,5.613,1846,5.613,1847,5.971]],["title/modules/IrccDsAngularLegacyOldModule.html",[1783,2.842,1848,3.044]],["body/modules/IrccDsAngularLegacyOldModule.html",[0,0.376,3,0.097,4,0.113,8,0.097,9,0.228,40,0.012,69,0.113,81,0.176,84,0.113,91,0.113,171,1.653,183,1.603,186,1.653,237,1.555,238,1.122,239,1.653,254,0.009,255,0.009,285,1.156,286,1.156,362,3.161,467,1.703,503,1.025,534,2.881,536,4.005,549,4.339,975,3.059,976,3.059,1424,5.969,1425,4.785,1575,3.739,1785,3.161,1786,3.943,1790,4.387,1791,3.517,1794,4.664,1795,4.664,1796,4.664,1798,3.943,1799,4.005,1800,4.005,1801,4.664,1802,3.517,1803,4.664,1804,3.739,1829,4.785,1831,5.412,1832,5.412,1848,6.417,1849,4.785,1850,4.785,1851,4.785,1852,4.339,1853,4.339,1854,4.339,1855,5.463,1856,5.463,1857,5.412,1858,5.463,1859,5.899]],["title/injectables/LabelButtonService.html",[1393,2.674,1860,2.842]],["body/injectables/LabelButtonService.html",[0,0.447,3,0.109,4,0.127,8,0.109,9,0.337,22,0.162,23,0.423,27,1.692,36,0.6,39,0.199,40,0.012,41,0.35,42,1.457,43,0.963,45,1.654,54,1.645,55,1.298,56,0.461,58,1.186,59,0.836,69,0.127,81,0.151,84,0.127,91,0.127,124,1.101,254,0.01,255,0.01,306,2.159,1393,4.707,1860,5.004,1861,4.869,1862,7.087,1863,4.869,1864,7.814,1865,7.814,1866,7.312,1867,7.312,1868,5.37,1869,7.312,1870,5.37,1871,6.844,1872,5.37,1873,5.37,1874,5.37,1875,5.37,1876,6.131]],["title/components/LabelComponent.html",[0,0.229,224,0.756]],["body/components/LabelComponent.html",[0,0.451,1,0.675,2,1.122,3,0.092,4,0.074,5,0.761,6,0.808,7,0.808,8,0.064,9,0.323,12,0.444,13,0.542,14,0.808,15,0.364,16,0.496,17,0.554,18,0.444,20,0.214,22,0.095,23,0.298,27,1.191,31,0.518,33,1.191,35,0.452,36,0.504,39,0.225,40,0.012,41,0.363,42,1.198,43,0.678,45,1.611,50,0.936,54,1.381,55,1.389,56,0.387,58,1.269,59,0.819,68,0.577,69,0.074,74,1.308,75,0.483,76,1.355,81,0.149,82,0.231,83,1.476,84,0.074,91,0.154,103,2.343,104,0.185,114,0.717,117,0.577,120,0.908,124,0.775,160,1.567,162,0.808,163,1.156,164,1.122,165,0.808,166,0.808,167,0.739,168,1.528,169,0.784,170,1.156,171,0.695,172,0.808,173,0.808,174,0.675,175,0.808,176,0.675,177,0.761,178,0.808,179,0.675,180,1.156,181,0.675,182,0.808,183,0.675,184,1.156,185,0.808,186,0.695,187,0.808,188,0.739,189,0.784,190,0.808,191,0.761,192,0.808,193,0.634,194,0.654,195,0.808,196,0.675,197,0.808,198,0.654,199,0.808,200,0.675,201,0.808,202,0.675,203,0.717,204,0.808,205,0.695,206,0.808,207,0.695,208,0.808,209,0.654,210,0.739,211,0.808,212,0.654,213,0.675,214,0.808,215,0.675,216,1.156,217,0.761,218,0.808,219,0.654,220,1.35,221,0.761,222,0.808,223,0.808,224,1.194,225,0.808,226,0.695,227,0.695,228,0.808,229,0.654,230,0.996,231,0.675,232,0.808,233,0.654,234,0.739,235,0.761,236,0.784,237,0.654,238,0.739,239,0.695,240,0.739,241,0.808,242,0.654,243,0.808,244,0.675,245,0.808,246,0.654,247,0.808,248,0.675,249,0.808,250,0.739,251,0.739,252,0.808,253,0.808,254,0.007,255,0.007,262,0.88,263,2.08,264,1.611,266,2.777,285,0.761,286,0.761,287,1.27,288,1.27,306,1.422,405,2.193,406,1.45,413,2.978,415,2.805,426,1.087,427,1.926,429,1.556,447,2.006,449,2.266,459,2.123,461,2.266,467,1.121,468,1.94,469,1.355,470,1.355,471,1.94,472,1.94,473,1.818,475,1.355,486,1.355,487,1.355,500,1.614,503,1.231,507,1.401,508,1.401,509,1.401,513,1.192,528,1.465,529,2.075,533,4.226,652,2.315,1040,1.401,1307,2.19,1320,2.08,1372,2.461,1390,2.461,1391,2.855,1392,2.315,1393,4.226,1394,2.636,1395,2.855,1396,2.636,1397,2.08,1398,3.523,1399,2.636,1400,3.523,1401,2.636,1402,2.636,1403,4.088,1404,4.775,1405,4.775,1406,4.088,1407,4.088,1408,2.855,1409,2.855,1410,5.213,1411,2.855,1412,5.213,1413,3.314,1877,5.147,1878,3.596,1879,3.596,1880,3.596,1881,3.596,1882,3.596,1883,3.596,1884,5.147,1885,5.147]],["title/injectables/LanguageSwitchButtonService.html",[1860,2.842,1886,3.044]],["body/injectables/LanguageSwitchButtonService.html",[0,0.446,3,0.109,4,0.126,8,0.109,9,0.337,22,0.162,23,0.422,27,1.688,40,0.012,42,1.454,43,0.961,45,1.651,58,1.181,59,0.832,69,0.126,81,0.151,84,0.126,91,0.126,124,1.099,254,0.01,255,0.01,306,2.156,857,4.261,1844,5.53,1860,4.993,1861,4.851,1863,4.851,1868,5.35,1870,5.35,1871,5.35,1872,5.35,1873,5.35,1874,5.35,1875,5.35,1886,5.349,1887,5.924,1888,6.418,1889,7.801,1890,7.801,1891,8.081,1892,7.296,1893,7.296,1894,6.108]],["title/components/LanguageSwitchComponent.html",[0,0.229,226,0.803]],["body/components/LanguageSwitchComponent.html",[0,0.456,1,0.698,2,1.149,3,0.094,4,0.077,5,0.787,6,0.835,7,0.835,8,0.066,9,0.334,12,0.455,13,0.552,14,0.835,15,0.364,16,0.498,17,0.556,18,0.445,20,0.22,22,0.098,23,0.305,27,1.22,31,0.483,33,1.22,36,0.599,39,0.237,40,0.012,41,0.328,42,1.328,43,0.878,45,1.676,54,1.643,55,1.489,56,0.461,58,1.289,59,0.908,68,0.597,69,0.077,74,1.328,75,0.686,81,0.138,82,0.236,84,0.077,91,0.145,114,0.741,117,0.597,120,0.93,160,1.221,162,0.835,163,1.184,164,1.149,165,0.835,166,0.835,167,0.764,168,1.544,169,0.811,170,1.184,171,0.719,172,0.835,173,0.835,174,0.698,175,0.835,176,0.698,177,0.787,178,0.835,179,0.698,180,1.184,181,0.698,182,0.835,183,0.698,184,1.184,185,0.835,186,0.719,187,0.835,188,0.764,189,0.811,190,0.835,191,0.787,192,0.835,193,0.656,194,0.677,195,0.835,196,0.698,197,0.835,198,0.677,199,0.835,200,0.698,201,0.835,202,0.698,203,0.741,204,0.835,205,0.719,206,0.835,207,0.719,208,0.835,209,0.677,210,0.764,211,0.835,212,0.677,213,0.698,214,0.835,215,0.698,216,1.184,217,0.787,218,0.835,219,0.677,220,1.376,221,0.787,222,0.835,223,0.835,224,0.677,225,0.835,226,1.289,227,1.413,228,0.835,229,0.677,230,1.02,231,0.698,232,0.835,233,0.677,234,0.764,235,0.787,236,0.811,237,0.677,238,0.764,239,0.719,240,0.764,241,0.835,242,0.677,243,0.835,244,0.698,245,0.835,246,0.677,247,0.835,248,0.698,249,0.835,250,0.764,251,0.764,252,0.835,253,0.835,254,0.007,255,0.007,262,0.902,264,1.636,285,0.787,286,0.787,306,1.692,425,2.308,449,2.308,457,1.547,503,1.25,528,1.744,637,3.05,639,2.953,726,3.865,738,2.953,752,2.394,765,2.264,807,4.187,857,4.224,884,2.953,907,2.953,1394,2.726,1551,4.561,1802,2.394,1844,5.482,1886,4.885,1887,5.873,1888,6.098,1895,2.953,1896,5.272,1897,6.125,1898,5.272,1899,5.272,1900,5.272,1901,3.718,1902,6.125,1903,6.125,1904,5.272,1905,5.272,1906,3.718,1907,3.718,1908,5.272,1909,5.272,1910,5.272,1911,5.272,1912,5.272,1913,5.272,1914,3.718,1915,3.718,1916,3.718,1917,5.272,1918,3.718,1919,3.718,1920,3.718,1921,3.718,1922,3.718,1923,3.718,1924,3.718,1925,4.187,1926,3.257,1927,4.187,1928,4.187,1929,4.187,1930,3.718,1931,6.125,1932,3.718,1933,3.718,1934,3.718,1935,3.718]],["title/components/ProgressIndicatorComponent.html",[0,0.229,229,0.756]],["body/components/ProgressIndicatorComponent.html",[0,0.449,1,0.659,2,1.103,3,0.09,4,0.073,5,0.743,6,0.788,7,0.788,8,0.062,9,0.326,12,0.437,13,0.534,14,0.788,15,0.363,16,0.495,17,0.553,18,0.443,20,0.211,22,0.093,23,0.293,27,1.171,31,0.512,33,1.171,35,0.446,36,0.775,37,2.454,39,0.245,40,0.012,41,0.321,42,1.294,43,0.855,45,1.63,50,1.69,54,1.591,55,1.456,56,0.446,58,1.147,59,0.808,68,0.564,69,0.073,74,1.294,75,0.33,81,0.142,82,0.227,83,1.242,84,0.073,91,0.148,92,0.942,104,0.182,106,0.787,107,0.787,114,0.7,117,1.151,123,0.512,124,0.529,160,1.009,162,0.788,163,1.136,164,1.103,165,0.788,166,0.788,167,0.721,168,1.518,169,0.765,170,1.136,171,0.679,172,0.788,173,0.788,174,0.659,175,0.788,176,0.659,177,0.743,178,0.788,179,0.659,180,1.136,181,0.659,182,0.788,183,0.659,184,1.136,185,0.788,186,0.679,187,0.788,188,0.721,189,0.765,190,0.788,191,0.743,192,0.788,193,0.619,194,0.639,195,0.788,196,0.659,197,0.788,198,0.639,199,0.788,200,0.659,201,0.788,202,0.659,203,0.7,204,0.788,205,0.679,206,0.788,207,0.679,208,0.788,209,0.639,210,0.721,211,0.788,212,0.639,213,0.659,214,0.788,215,0.659,216,1.136,217,0.743,218,0.788,219,0.639,220,1.332,221,0.743,222,0.788,223,0.788,224,0.639,225,0.788,226,0.679,227,0.679,228,0.788,229,1.181,230,1.429,231,0.659,232,0.788,233,0.639,234,0.721,235,0.743,236,0.765,237,0.639,238,0.721,239,0.679,240,0.721,241,0.788,242,0.639,243,0.788,244,0.659,245,0.788,246,0.639,247,0.788,248,0.659,249,0.788,250,0.721,251,0.721,252,0.788,253,0.788,254,0.007,255,0.007,262,0.6,263,2.031,264,1.593,280,1.242,281,0.743,282,0.743,285,0.743,286,0.743,310,1.519,321,2.447,323,0.887,350,2.221,413,2.928,447,1.972,449,2.236,503,0.949,507,1.368,508,1.368,509,1.368,528,1.441,618,1.972,885,1.519,957,2.556,1000,3.128,1001,3.128,1007,4.06,1023,2.928,1321,3.463,1322,3.463,1508,4.06,1509,4.525,1510,4.763,1511,2.26,1512,4.06,1513,4.711,1514,3.463,1515,3.082,1516,1.936,1517,2.574,1518,2.574,1519,3.463,1520,2.574,1521,3.463,1522,2.574,1523,4.711,1524,3.709,1525,3.982,1526,2.928,1527,4.711,1528,4.711,1529,5.868,1530,3.463,1531,4.018,1532,2.788,1533,4.018,1936,5.06,1937,5.06,1938,3.511,1939,3.511,1940,3.511,1941,3.511,1942,3.511,1943,3.511,1944,3.511]],["title/components/ProgressTagsComponent.html",[0,0.229,231,0.779]],["body/components/ProgressTagsComponent.html",[0,0.453,1,0.695,2,1.147,3,0.094,4,0.077,5,0.784,6,0.833,7,0.833,8,0.066,9,0.33,12,0.454,13,0.551,14,0.833,15,0.364,16,0.497,17,0.556,18,0.445,20,0.219,22,0.098,23,0.304,27,1.217,31,0.525,33,1.217,35,0.46,36,0.714,39,0.257,40,0.012,41,0.298,42,1.219,43,0.805,45,1.652,54,0.994,55,1.294,56,0.279,58,1.183,59,0.907,68,0.595,69,0.077,74,1.327,75,0.625,76,1.983,81,0.126,82,0.315,84,0.077,91,0.145,92,0.994,95,2.276,96,2.657,104,0.134,106,1.035,107,1.035,114,0.739,117,0.595,123,0.97,160,1.049,162,0.833,163,1.181,164,1.147,165,0.833,166,0.833,167,0.761,168,1.542,169,0.808,170,1.181,171,0.717,172,0.833,173,0.833,174,0.695,175,0.833,176,0.695,177,0.784,178,0.833,179,0.695,180,1.181,181,0.695,182,0.833,183,0.695,184,1.181,185,0.833,186,0.717,187,0.833,188,0.761,189,0.808,190,0.833,191,0.784,192,0.833,193,0.654,194,0.675,195,0.833,196,0.695,197,0.833,198,0.675,199,0.833,200,0.695,201,0.833,202,0.695,203,0.739,204,0.833,205,0.717,206,0.833,207,0.717,208,0.833,209,0.675,210,0.761,211,0.833,212,0.675,213,0.695,214,0.833,215,0.695,216,1.181,217,0.784,218,0.833,219,0.675,220,1.373,221,0.784,222,0.833,223,0.833,224,0.675,225,0.833,226,0.717,227,0.717,228,0.833,229,0.675,230,1.452,231,1.249,232,0.833,233,0.675,234,0.761,235,0.784,236,0.808,237,0.675,238,0.761,239,0.717,240,0.761,241,0.833,242,0.675,243,0.833,244,0.695,245,0.833,246,0.675,247,0.833,248,0.695,249,0.833,250,0.761,251,0.761,252,0.833,253,0.833,254,0.007,255,0.007,257,1.873,261,2.593,262,0.634,263,2.145,264,1.633,280,1.725,281,0.784,282,0.784,285,0.784,286,0.784,311,1.664,366,1.291,367,0.833,370,2.05,371,1.352,426,1.121,503,0.987,528,1.741,782,3.044,885,1.604,1152,2.145,1155,3.044,1397,2.145,1509,4.579,1515,3.724,1516,4.365,1534,2.537,1535,3.856,1536,2.944,1537,4.483,1538,2.944,1539,3.856,1540,2.944,1541,2.944,1542,2.944,1543,2.944,1544,2.944,1545,5.581,1546,4.178,1547,4.608,1548,4.608,1549,4.483,1550,4.879,1551,3.6,1945,5.26,1946,3.707,1947,3.707,1948,3.707,1949,3.707,1950,3.707,1951,3.707,1952,3.707,1953,5.26,1954,5.26,1955,5.26,1956,5.26,1957,5.26]],["title/components/RadioInputComponent.html",[0,0.229,233,0.756]],["body/components/RadioInputComponent.html",[0,0.461,1,0.491,2,0.885,3,0.072,4,0.054,5,0.553,6,0.587,7,0.587,8,0.047,9,0.343,12,0.35,13,0.448,14,0.587,15,0.355,16,0.48,17,0.537,18,0.432,20,0.169,22,0.132,23,0.235,27,0.939,31,0.442,33,0.939,35,0.456,36,0.628,39,0.252,40,0.012,41,0.355,42,1.475,43,1.014,45,1.738,54,1.722,55,1.465,56,0.521,58,1.431,59,0.969,65,1.48,68,0.42,69,0.054,74,1.117,75,0.526,78,1.851,81,0.138,82,0.288,84,0.054,91,0.103,104,0.146,106,0.631,107,0.631,114,0.521,117,0.42,120,0.989,123,0.381,124,0.611,160,1.335,162,0.587,163,0.912,164,0.885,165,0.587,166,0.587,167,0.537,168,1.376,169,0.57,170,0.912,171,0.506,172,0.587,173,0.587,174,0.491,175,0.587,176,0.491,177,0.553,178,0.587,179,0.491,180,0.912,181,0.491,182,0.587,183,0.491,184,0.912,185,0.587,186,0.506,187,0.587,188,0.537,189,0.57,190,0.587,191,0.553,192,0.587,193,0.461,194,0.476,195,0.587,196,0.491,197,0.587,198,0.476,199,0.587,200,0.491,201,0.587,202,0.491,203,0.521,204,0.587,205,0.506,206,0.587,207,0.506,208,0.587,209,0.476,210,0.537,211,0.587,212,0.476,213,0.491,214,0.587,215,0.491,216,0.912,217,0.553,218,0.587,219,0.476,220,1.117,221,0.553,222,0.587,223,0.587,224,0.476,225,0.587,226,0.506,227,0.506,228,0.587,229,0.476,230,0.785,231,0.491,232,0.587,233,1.168,234,1.246,235,0.553,236,0.57,237,0.476,238,0.537,239,0.506,240,0.537,241,0.587,242,0.476,243,0.587,244,0.491,245,0.587,246,0.476,247,0.587,248,0.491,249,0.587,250,0.537,251,0.537,252,0.587,253,0.587,254,0.005,255,0.005,261,2.184,262,0.694,264,1.376,266,2.511,280,1.221,281,0.553,282,0.553,285,0.553,286,0.553,287,0.924,288,0.924,306,0.723,323,1.257,337,2.044,350,1.702,366,0.996,367,1.363,377,1.174,385,2.733,387,2.412,388,1.582,389,1.694,390,2.076,391,1.694,392,2.076,393,1.53,396,2.622,397,2.076,398,2.723,399,2.319,400,2.743,402,2.076,403,2.942,405,1.814,406,2.446,407,3.385,409,2.955,410,2.778,411,2.778,413,2.348,414,2.613,415,2.832,416,1.79,419,3.347,425,1.53,426,1.835,427,1.459,429,1.756,430,2.232,435,1.822,436,2.05,444,1.892,447,1.582,449,1.874,452,2.076,454,2.622,457,1.191,459,1.756,460,2.797,461,1.53,467,0.815,468,1.53,469,0.986,470,0.986,471,1.53,472,1.53,473,1.433,474,1.092,475,0.986,484,1.79,486,0.986,487,0.986,488,1.092,498,1.379,500,1.174,503,0.491,504,2.622,505,1.174,506,1.379,507,1.019,508,1.019,509,1.019,510,1.694,511,1.694,512,2.68,513,1.346,514,1.694,516,1.694,517,1.694,519,1.892,520,1.092,521,1.092,523,2.14,524,1.379,525,1.379,526,1.379,527,2.232,528,1.155,529,1.636,533,2.613,658,2.152,659,2.239,707,2.076,775,1.79,808,2.348,825,1.513,909,2.348,1040,1.019,1119,1.822,1120,2.472,1172,2.05,1234,2.472,1247,1.593,1263,2.14,1266,3.199,1357,2.348,1379,2.348,1552,3.404,1553,6.044,1554,5.642,1555,1.593,1556,2.077,1557,2.778,1558,3.223,1559,2.077,1560,1.684,1561,1.684,1562,2.613,1563,2.613,1564,1.684,1565,2.613,1566,2.613,1567,3.608,1568,3.223,1569,3.223,1570,3.223,1571,3.223,1572,2.077,1958,4.059,1959,4.059,1960,2.615,1961,2.615,1962,2.615,1963,2.615,1964,2.615,1965,2.615,1966,2.615,1967,2.615,1968,2.615,1969,2.615,1970,2.615,1971,2.615,1972,2.615,1973,2.615,1974,2.615,1975,2.615,1976,2.615,1977,2.615,1978,2.615,1979,2.615,1980,2.615,1981,2.615,1982,3.555]],["title/components/SearchInputComponent.html",[0,0.229,237,0.756]],["body/components/SearchInputComponent.html",[0,0.451,1,0.817,2,1.282,3,0.105,4,0.09,5,0.921,6,0.978,7,0.978,8,0.078,9,0.32,12,0.507,13,0.6,14,0.978,15,0.367,16,0.502,17,0.561,18,0.449,20,0.245,22,0.115,23,0.34,27,1.36,31,0.562,33,1.36,35,0.501,37,2.852,39,0.191,40,0.012,41,0.32,42,0.868,43,0.573,45,1.576,50,1.857,55,1.245,58,0.842,59,0.801,68,0.699,69,0.09,74,1.421,75,0.552,81,0.121,82,0.32,83,1.443,84,0.09,91,0.138,104,0.212,114,0.868,117,0.699,124,1.003,162,0.978,163,1.321,164,1.282,165,0.978,166,0.978,167,0.894,168,1.611,169,0.949,170,1.321,171,0.842,172,0.978,173,0.978,174,0.817,175,0.978,176,0.817,177,0.921,178,0.978,179,0.817,180,1.321,181,0.817,182,0.978,183,0.817,184,1.321,185,0.978,186,0.842,187,0.978,188,0.894,189,0.949,190,0.978,191,0.921,192,0.978,193,0.768,194,0.792,195,0.978,196,0.817,197,0.978,198,0.792,199,0.978,200,0.817,201,0.978,202,0.817,203,0.868,204,0.978,205,0.842,206,0.978,207,0.842,208,0.978,209,0.792,210,0.894,211,0.978,212,0.792,213,0.817,214,0.978,215,0.817,216,1.321,217,0.921,218,0.978,219,0.792,220,1.496,221,0.921,222,0.978,223,0.978,224,0.792,225,0.978,226,0.842,227,0.842,228,0.978,229,0.792,230,1.137,231,0.817,232,0.978,233,0.792,234,0.894,235,0.921,236,0.949,237,1.298,238,1.53,239,0.842,240,0.894,241,0.978,242,0.792,243,0.978,244,0.817,245,0.978,246,0.792,247,0.978,248,0.817,249,0.978,250,0.894,251,0.894,252,0.978,253,0.978,254,0.008,255,0.008,262,1.139,399,3.105,467,1.357,534,4.047,623,2.98,1320,2.519,1357,3.403,1555,2.652,1573,4.025,1574,5.626,1575,5.252,1576,4.557,1577,3.458,1578,3.458,1579,5.288,1580,5.288,1581,3.458,1983,5.881,1984,4.354,1985,4.354,1986,4.354,1987,5.881]],["title/components/SecondaryChipsComponent.html",[0,0.229,239,0.803]],["body/components/SecondaryChipsComponent.html",[0,0.446,1,0.864,2,1.331,3,0.109,4,0.095,5,0.974,6,1.034,7,1.034,8,0.082,9,0.304,12,0.527,13,0.617,14,1.034,15,0.368,16,0.505,17,0.564,18,0.451,20,0.254,22,0.122,27,1.412,31,0.575,33,1.412,39,0.149,40,0.012,41,0.274,45,1.449,55,1.292,58,0.89,59,0.832,68,0.739,69,0.095,74,1.454,75,0.432,81,0.095,82,0.274,84,0.095,91,0.095,114,0.917,117,0.739,160,1.217,162,1.034,163,1.371,164,1.331,165,1.034,166,1.034,167,0.945,168,1.634,169,1.004,170,1.371,171,0.89,172,1.034,173,1.034,174,0.864,175,1.034,176,0.864,177,0.974,178,1.034,179,0.864,180,1.371,181,0.864,182,1.034,183,0.864,184,1.371,185,1.034,186,0.89,187,1.034,188,0.945,189,1.004,190,1.034,191,0.974,192,1.034,193,0.812,194,0.838,195,1.034,196,0.864,197,1.034,198,0.838,199,1.034,200,0.864,201,1.034,202,0.864,203,0.917,204,1.034,205,0.89,206,1.034,207,0.89,208,1.034,209,0.838,210,0.945,211,1.034,212,0.838,213,0.864,214,1.034,215,0.864,216,1.371,217,0.974,218,1.034,219,0.838,220,1.538,221,0.974,222,1.034,223,1.034,224,0.838,225,1.034,226,0.89,227,0.89,228,1.034,229,0.838,230,1.18,231,0.864,232,1.034,233,0.838,234,0.945,235,0.974,236,1.004,237,0.838,238,0.945,239,1.41,240,1.559,241,1.034,242,0.838,243,1.034,244,0.864,245,1.034,246,0.838,247,1.034,248,0.864,249,1.034,250,0.945,251,0.945,252,1.034,253,1.034,254,0.008,255,0.008,262,1.171,534,3.845,542,6.646,1857,5.791,1988,6.387,1989,4.032,1990,6.104,1991,6.104,1992,6.104,1993,4.603]],["title/components/SelectComponent.html",[0,0.229,242,0.756]],["body/components/SelectComponent.html",[0,0.464,1,0.511,2,0.913,3,0.075,4,0.056,5,0.577,6,0.612,7,0.612,8,0.048,9,0.346,12,0.361,13,0.46,14,0.612,15,0.357,16,0.483,17,0.539,18,0.434,20,0.175,22,0.072,23,0.242,27,0.969,31,0.452,33,0.969,35,0.431,36,0.499,39,0.254,40,0.012,41,0.348,42,1.465,43,0.985,45,1.753,54,1.751,55,1.485,56,0.528,58,1.467,59,1.034,65,1.528,68,0.437,69,0.056,74,1.142,75,0.538,78,1.827,81,0.14,82,0.188,84,0.056,91,0.105,104,0.151,106,0.424,107,0.424,110,1.754,114,0.543,117,0.437,120,1.238,123,0.397,124,0.631,160,1.435,162,0.612,163,0.941,164,0.913,165,0.612,166,0.612,167,0.56,168,1.396,169,0.594,170,0.941,171,0.527,172,0.612,173,0.612,174,0.511,175,0.612,176,0.511,177,0.577,178,0.612,179,0.511,180,0.941,181,0.511,182,0.612,183,0.511,184,0.941,185,0.612,186,0.527,187,0.612,188,0.56,189,0.594,190,0.612,191,0.577,192,0.612,193,0.481,194,0.928,195,0.612,196,0.511,197,0.612,198,0.496,199,0.612,200,0.511,201,0.612,202,0.511,203,0.543,204,0.612,205,0.527,206,0.612,207,0.527,208,0.612,209,0.496,210,0.56,211,0.612,212,0.496,213,0.511,214,0.612,215,0.511,216,0.941,217,0.577,218,0.612,219,0.496,220,1.146,221,0.577,222,0.612,223,0.612,224,0.496,225,0.612,226,0.527,227,0.527,228,0.612,229,0.496,230,0.81,231,0.511,232,0.612,233,0.496,234,0.56,235,0.577,236,0.594,237,0.496,238,0.56,239,0.527,240,0.56,241,0.612,242,1.188,243,0.612,244,0.511,245,0.612,246,0.496,247,0.612,248,0.511,249,0.612,250,0.56,251,0.56,252,0.612,253,0.612,254,0.006,255,0.006,262,0.716,264,1.406,266,2.542,280,1.028,281,0.577,282,0.577,285,0.577,286,0.577,287,0.962,288,0.962,306,0.753,367,1.286,385,2.756,387,2.474,388,1.632,389,1.749,390,2.13,391,1.749,392,2.13,393,1.579,396,2.69,397,2.13,398,2.775,399,2.379,402,2.13,403,2.998,405,1.861,406,2.492,407,3.442,409,3.02,410,2.866,411,2.866,413,2.423,414,2.696,415,2.712,416,1.864,425,1.923,426,1.732,427,1.497,430,2.29,435,1.88,436,2.116,444,1.953,447,1.632,449,1.923,452,2.13,454,2.69,457,1.994,459,1.802,460,2.725,461,1.579,467,0.849,468,1.579,469,1.027,470,1.027,471,1.579,472,1.579,473,1.479,474,1.137,475,1.027,486,1.027,487,1.027,488,1.137,489,1.321,498,1.436,503,0.511,504,2.69,505,1.223,506,1.436,507,1.062,508,1.062,509,1.062,510,1.749,511,1.749,512,2.725,513,1.389,514,1.749,516,1.749,517,1.749,520,1.137,521,1.137,523,2.208,524,1.436,525,1.436,526,1.436,527,2.571,528,1.192,529,1.689,533,2.696,637,1.576,658,1.179,825,1.576,838,2.31,1040,1.062,1046,2.814,1106,2.551,1111,1.659,1115,1.436,1119,1.88,1159,1.659,1263,2.208,1266,3.26,1352,1.659,1365,1.659,1379,1.576,1392,1.754,1413,2.696,1469,4.199,1560,2.696,1561,1.754,1562,2.696,1563,2.696,1564,1.754,1565,2.696,1566,2.696,1567,3.687,1582,1.997,1583,2.866,1584,2.163,1585,2.163,1586,2.163,1587,3.326,1588,4.052,1589,4.052,1590,3.326,1591,2.163,1592,4.549,1593,4.052,1594,4.549,1595,2.163,1596,2.163,1597,2.163,1598,2.163,1599,2.163,1617,3.071,1982,3.669,1994,4.188,1995,2.724,1996,2.724,1997,2.724,1998,2.724,1999,2.724,2000,2.724,2001,2.724,2002,2.724,2003,2.724,2004,2.724,2005,2.724,2006,2.724,2007,2.724,2008,2.724,2009,2.724,2010,2.724,2011,2.724,2012,2.724,2013,2.724,2014,2.724,2015,2.724,2016,2.724,2017,2.724,2018,4.188]],["title/components/SpinnerComponent.html",[0,0.229,244,0.779]],["body/components/SpinnerComponent.html",[0,0.462,1,0.689,2,1.14,3,0.093,4,0.076,5,0.777,6,0.825,7,0.825,8,0.065,9,0.342,12,0.451,13,0.548,14,0.825,15,0.364,16,0.497,17,0.555,18,0.444,20,0.218,22,0.097,23,0.302,27,1.209,31,0.523,33,1.209,35,0.458,36,0.712,39,0.259,40,0.012,41,0.326,42,1.213,43,0.801,45,1.722,54,0.985,55,1.288,56,0.276,58,1.282,59,0.903,68,0.59,69,0.076,74,1.321,75,0.623,81,0.126,82,0.343,84,0.076,91,0.145,92,0.985,95,2.261,96,3.074,99,2.535,104,0.132,106,1.132,107,1.132,114,0.732,117,0.59,123,0.966,160,1.042,162,0.825,163,1.174,164,1.14,165,0.825,166,0.825,167,0.755,168,1.538,169,0.801,170,1.174,171,0.71,172,0.825,173,0.825,174,0.689,175,0.825,176,0.689,177,0.777,178,0.825,179,0.689,180,1.174,181,0.689,182,0.825,183,0.689,184,1.174,185,0.825,186,0.71,187,0.825,188,0.755,189,0.801,190,0.825,191,0.777,192,0.825,193,0.648,194,0.668,195,0.825,196,0.689,197,0.825,198,0.668,199,0.825,200,0.689,201,0.825,202,0.689,203,0.732,204,0.825,205,0.71,206,0.825,207,0.71,208,0.825,209,0.668,210,0.755,211,0.825,212,0.668,213,0.689,214,0.825,215,0.689,216,1.174,217,0.777,218,0.825,219,0.668,220,1.366,221,0.777,222,0.825,223,0.825,224,0.668,225,0.825,226,0.71,227,0.71,228,0.825,229,0.668,230,1.011,231,0.689,232,0.825,233,0.668,234,0.755,235,0.777,236,0.801,237,0.668,238,0.755,239,0.71,240,0.755,241,0.825,242,0.668,243,0.825,244,1.244,245,0.825,246,0.668,247,0.825,248,0.689,249,0.825,250,0.755,251,0.755,252,0.825,253,0.825,254,0.007,255,0.007,261,2.583,262,0.628,263,2.126,264,1.627,281,0.777,282,0.777,285,0.777,286,0.777,311,1.649,366,1.283,367,0.825,370,2.037,371,2.417,426,1.111,427,1.944,503,0.981,528,1.488,634,2.883,782,3.024,885,1.589,1152,2.126,1155,3.024,1247,4.037,1269,4.793,1397,2.126,1512,4.536,1525,3.024,1526,2.126,1530,4.793,1549,4.46,1550,4.859,1551,3.577,1600,4.46,1601,2.514,1602,6.134,1603,3.832,1604,2.917,1605,3.832,1606,2.917,1607,2.917,1608,5.562,1609,4.578,1610,4.578,1611,4.578,1612,3.218,1613,5.806,2019,5.227,2020,3.674,2021,3.674,2022,3.674,2023,3.674,2024,3.674,2025,3.674,2026,3.674,2027,3.674,2028,3.674,2029,3.674,2030,3.674]],["title/components/TabsComponent.html",[0,0.229,246,0.756]],["body/components/TabsComponent.html",[0,0.441,1,0.776,2,1.238,3,0.101,4,0.085,5,0.875,6,0.928,7,0.928,8,0.074,9,0.305,12,0.49,13,0.584,14,0.928,15,0.366,16,0.502,17,0.561,18,0.448,20,0.237,22,0.109,27,1.313,31,0.55,33,1.313,35,0.488,36,0.683,37,2.753,39,0.21,40,0.012,41,0.328,42,0.824,43,0.748,45,1.477,50,1.688,54,1.109,55,1.372,56,0.311,58,1.098,59,0.774,65,1.508,68,0.664,69,0.085,74,1.391,75,0.388,78,1.478,81,0.134,82,0.254,83,1.393,84,0.117,91,0.134,104,0.204,106,0.643,107,0.643,114,0.824,117,0.912,120,0.729,123,0.602,124,0.623,162,0.928,163,1.275,164,1.238,165,0.928,166,0.928,167,0.849,168,1.59,169,0.901,170,1.275,171,0.8,172,0.928,173,0.928,174,0.776,175,0.928,176,0.776,177,0.875,178,0.928,179,0.776,180,1.275,181,0.776,182,0.928,183,0.776,184,1.275,185,0.928,186,0.8,187,0.928,188,0.849,189,0.901,190,0.928,191,0.875,192,0.928,193,0.729,194,0.752,195,0.928,196,0.776,197,0.928,198,0.752,199,0.928,200,0.776,201,0.928,202,0.776,203,0.824,204,0.928,205,0.8,206,0.928,207,0.8,208,0.928,209,0.752,210,0.849,211,0.928,212,0.752,213,0.776,214,0.928,215,0.776,216,1.275,217,0.875,218,0.928,219,0.752,220,1.456,221,0.875,222,0.928,223,0.928,224,0.752,225,0.928,226,0.8,227,0.8,228,0.928,229,0.752,230,1.098,231,0.776,232,0.928,233,0.752,234,0.849,235,0.875,236,0.901,237,0.752,238,0.849,239,0.8,240,0.849,241,0.928,242,0.752,243,0.928,244,0.776,245,0.928,246,1.27,247,0.928,248,0.776,249,0.928,250,0.849,251,0.849,252,0.928,253,0.928,254,0.008,255,0.008,280,1.393,281,0.875,282,0.875,323,1.045,618,2.212,707,1.726,935,4.25,957,3.275,1000,2.993,1001,3.418,1009,4.437,1023,3.751,1025,2.829,1614,3.031,1615,4.508,1616,4.508,1617,4.753,1618,3.283,1619,3.283,1620,4.508,1621,5.149,1622,3.283,1623,3.283,1624,5.149,1625,3.283,1626,4.508,1627,3.283,1628,3.283,2031,5.677,2032,4.134,2033,4.134,2034,4.134,2035,4.134,2036,6.979,2037,5.677]],["title/components/TextareaComponent.html",[0,0.229,248,0.779]],["body/components/TextareaComponent.html",[0,0.465,1,0.54,2,0.952,3,0.078,4,0.059,5,0.609,6,0.646,7,0.646,8,0.051,9,0.347,12,0.377,13,0.475,14,0.646,15,0.358,16,0.485,17,0.542,18,0.436,20,0.182,22,0.076,23,0.253,27,1.01,31,0.465,33,1.01,35,0.397,36,0.653,39,0.264,40,0.012,41,0.344,42,1.531,43,1.024,45,1.759,54,1.859,55,1.547,56,0.578,58,1.414,59,1.059,68,0.462,69,0.059,74,1.175,75,0.27,78,1.137,81,0.143,82,0.299,84,0.059,91,0.109,92,0.772,104,0.104,106,0.679,107,0.679,114,0.574,117,0.462,120,1.177,123,0.419,124,0.887,145,2.527,162,0.646,163,0.981,164,0.952,165,0.646,166,0.646,167,0.591,168,1.423,169,0.627,170,0.981,171,0.556,172,0.646,173,0.646,174,0.54,175,0.646,176,0.54,177,0.609,178,0.646,179,0.54,180,0.981,181,0.54,182,0.646,183,0.54,184,0.981,185,0.646,186,0.556,187,0.646,188,0.591,189,0.627,190,0.646,191,0.609,192,0.646,193,0.508,194,0.524,195,0.646,196,0.54,197,0.646,198,0.524,199,0.646,200,0.54,201,0.646,202,0.54,203,0.574,204,0.646,205,0.556,206,0.646,207,0.556,208,0.646,209,0.524,210,0.591,211,0.646,212,0.524,213,0.54,214,0.646,215,0.54,216,0.981,217,0.609,218,0.646,219,0.524,220,1.185,221,0.609,222,0.646,223,0.646,224,0.524,225,0.646,226,0.556,227,0.556,228,0.646,229,0.524,230,0.845,231,0.54,232,0.646,233,0.524,234,0.591,235,0.609,236,0.952,237,0.524,238,0.591,239,0.556,240,0.591,241,0.646,242,0.524,243,0.646,244,0.54,245,0.646,246,0.524,247,0.646,248,1.251,249,0.646,250,0.591,251,0.591,252,0.646,253,0.646,254,0.006,255,0.006,261,2.296,262,0.492,266,2.582,280,1.072,281,0.609,282,0.609,287,1.016,288,1.016,306,1.843,337,1.925,366,1.072,367,1.323,385,2.765,387,2.559,388,1.702,389,1.823,390,2.203,391,1.823,392,2.203,393,1.646,397,2.203,400,2.911,401,1.587,402,2.203,403,2.857,404,3.398,405,2.528,410,2.989,411,2.989,412,3.468,414,2.811,415,3.03,416,1.969,419,2.911,427,1.281,437,1.587,439,2.409,440,1.587,442,2.109,452,2.203,457,1.729,459,1.864,460,2.784,461,1.646,467,0.897,468,1.646,469,1.084,470,1.084,473,1.542,474,1.201,475,1.084,486,1.084,487,1.084,488,1.201,490,1.341,510,1.823,511,1.823,512,2.46,513,1.448,514,1.823,516,1.823,517,1.823,519,2.036,520,1.201,521,1.201,643,2.66,699,2.66,707,1.201,810,1.852,1040,1.121,1119,1.96,1172,2.206,1352,1.752,1353,2.109,1354,2.109,1356,1.969,1358,2.109,1359,1.852,1360,2.109,1361,2.109,1362,2.109,1363,2.109,1364,2.109,1365,1.752,1366,2.109,1368,3.869,1373,2.109,1374,1.969,1375,2.109,1381,2.109,1383,3.202,1384,2.109,1385,3.202,1388,4.192,1389,2.285,1525,1.665,1526,2.527,1629,3.869,1630,2.109,1631,5.161,1632,2.52,1633,2.285,1634,3.468,1635,3.468,1636,3.825,1637,3.825,1638,4.623,1639,4.623,1640,2.52,1641,3.825,1642,2.52,1643,2.52,1644,2.52,1645,2.52,1646,2.52,1647,3.825,1648,3.825,1649,5.161,1650,3.825,1651,2.52,1652,3.825,1653,2.52,1654,3.825,1655,2.285,1656,2.52,1657,2.52,1698,3.825,2038,4.367,2039,2.877,2040,2.877,2041,2.877,2042,2.877,2043,2.877,2044,2.877,2045,2.877,2046,2.877,2047,2.877,2048,2.877,2049,2.877,2050,2.877,2051,2.877,2052,2.877,2053,2.877,2054,2.877,2055,2.877,2056,2.877,2057,2.877,2058,2.877,2059,2.877,2060,2.877,2061,2.877,2062,2.877,2063,4.367,2064,4.367,2065,4.367]],["title/components/TitleSlugUrlComponent.html",[0,0.229,250,0.853]],["body/components/TitleSlugUrlComponent.html",[0,0.445,1,0.688,2,1.138,3,0.093,4,0.076,5,0.776,6,0.824,7,0.824,8,0.065,12,0.45,14,0.824,15,0.364,16,0.495,17,0.553,18,0.443,20,0.218,22,0.097,23,0.302,27,1.208,31,0.522,33,1.208,35,0.457,39,0.248,40,0.012,41,0.297,42,1.32,43,0.872,45,1.584,54,0.984,55,1.287,56,0.276,58,1.01,59,0.828,68,0.589,69,0.076,73,1.587,74,1.395,75,0.622,76,2.742,81,0.126,82,0.234,84,0.076,91,0.137,92,1.4,102,1.934,104,0.132,114,1.212,117,1.283,123,0.886,132,2.689,139,2.023,144,3.021,145,2.122,160,1.32,162,0.824,163,1.173,164,1.138,165,0.824,166,0.824,167,0.753,168,1.599,169,0.8,170,1.173,171,0.709,172,0.824,173,0.824,174,0.688,175,0.824,176,0.688,177,0.776,178,0.824,179,0.688,180,1.173,181,0.688,182,0.824,183,0.688,184,1.173,185,0.824,186,0.709,187,0.824,188,0.753,189,0.8,190,0.824,191,0.776,192,0.824,193,0.647,194,0.667,195,0.824,196,0.688,197,0.824,198,0.667,199,0.824,200,0.688,201,0.824,202,0.688,203,0.731,204,0.824,205,0.709,206,0.824,207,0.709,208,0.824,209,0.667,210,0.753,211,0.824,212,0.667,213,0.688,214,0.824,215,0.688,216,1.173,217,0.776,218,0.824,219,0.667,220,1.365,221,0.776,222,0.824,223,0.824,224,0.667,225,0.824,226,0.709,227,0.709,228,0.824,229,0.667,230,1.01,231,0.688,232,0.824,233,0.667,234,0.753,235,0.776,236,0.8,237,0.667,238,0.753,239,0.709,240,1.494,241,0.824,242,0.667,243,0.824,244,0.688,245,0.824,246,0.667,247,0.824,248,0.688,249,0.824,250,1.36,251,1.753,252,0.824,253,0.824,254,0.007,255,0.007,262,0.627,264,1.626,285,0.776,286,0.776,364,2.234,388,2.035,570,2.234,575,2.753,584,2.913,585,3.021,589,3.213,592,2.51,594,2.51,601,2.234,606,5.131,607,3.828,885,1.587,1222,2.51,1761,3.213,1775,4.573,1776,3.213,1782,5.325,2066,5.609,2067,5.609,2068,2.689,2069,5.325,2070,5.325,2071,5.325,2072,4.573,2073,5.325,2074,5.325,2075,5.325,2076,5.802,2077,3.668,2078,5.221,2079,4.573,2080,4.457,2081,4.573,2082,5.325,2083,4.573,2084,3.668,2085,3.668,2086,3.668,2087,3.668,2088,3.668,2089,4.573,2090,3.213,2091,3.213,2092,4.147,2093,4.147,2094,4.573,2095,3.213,2096,3.213,2097,3.213,2098,3.213,2099,3.213,2100,3.213,2101,3.213,2102,5.221,2103,5.221,2104,3.668,2105,7.275,2106,5.221,2107,3.668,2108,3.213,2109,5.325,2110,3.668,2111,3.668,2112,3.668,2113,3.668,2114,3.668,2115,3.668,2116,3.668,2117,3.668,2118,3.668,2119,3.668]],["title/components/accordionContainerComponent.html",[0,0.229,167,0.853]],["body/components/accordionContainerComponent.html",[0,0.45,1,0.612,2,1.046,3,0.085,4,0.067,5,1.327,6,0.733,7,0.733,8,0.058,12,0.414,13,0.512,14,0.733,15,0.362,16,0.491,17,0.547,18,0.439,20,0.2,22,0.086,23,0.278,27,1.11,31,0.495,33,1.11,35,0.428,36,0.725,37,2.327,39,0.24,40,0.012,41,0.339,42,1.332,43,0.88,44,2.392,45,1.628,50,1.481,54,0.875,55,1.204,56,0.246,58,0.928,59,0.775,66,1.934,68,0.524,69,0.067,74,1.25,75,0.307,81,0.118,82,0.313,83,1.178,84,0.067,89,2.874,91,0.099,100,2.327,103,2.217,104,0.118,114,0.65,116,1.694,117,0.524,118,3.867,120,1.004,123,0.699,124,0.491,145,1.888,160,1.393,162,0.733,163,1.078,164,1.046,165,0.733,166,0.733,167,1.288,168,1.58,169,1.368,170,1.078,171,0.631,172,0.733,173,0.733,174,0.612,175,0.733,176,0.612,177,0.691,178,0.733,179,0.612,180,1.078,181,0.612,182,0.733,183,0.612,184,1.078,185,0.733,186,0.631,187,0.733,188,0.67,189,0.712,190,0.733,191,0.691,192,0.733,193,0.576,194,0.594,195,0.733,196,0.612,197,0.733,198,0.594,199,0.733,200,0.612,201,0.733,202,0.612,203,0.65,204,0.733,205,0.631,206,0.733,207,0.631,208,0.733,209,0.594,210,0.67,211,0.733,212,0.594,213,0.612,214,0.733,215,0.612,216,1.078,217,0.691,218,0.733,219,0.594,220,1.278,221,0.691,222,0.733,223,0.733,224,0.594,225,0.733,226,0.631,227,0.631,228,0.733,229,0.594,230,0.928,231,0.612,232,0.733,233,0.594,234,0.67,235,0.691,236,0.712,237,0.594,238,0.67,239,0.631,240,0.67,241,0.733,242,0.594,243,0.733,244,0.612,245,0.733,246,0.594,247,0.733,248,0.612,249,0.733,250,0.67,251,0.67,252,0.733,253,0.733,254,0.006,255,0.006,262,0.558,263,1.888,264,1.539,273,2.392,285,0.691,286,0.691,321,1.808,323,1.689,338,3.517,357,2.922,364,3.465,365,2.233,366,1.178,367,0.733,503,0.9,570,1.988,575,2.53,585,3.867,590,4.9,592,3.894,593,4.171,594,4.293,595,4.171,601,2.922,818,2.592,885,1.412,935,1.988,961,2.776,967,3.465,969,6.193,970,5.02,971,2.392,972,4.981,973,4.981,974,4.574,975,1.465,976,1.465,977,1.988,978,5.5,979,3.81,980,4.519,981,4.984,982,4.984,983,3.517,984,4.984,985,2.859,986,5.494,987,2.859,988,5.494,989,2.859,990,4.203,991,4.203,992,4.203,993,4.984,994,4.598,995,2.859,1115,3.307,1208,3.089,1218,4.293,1246,3.82,1344,2.233,1359,4.499,1427,2.592,1757,2.859,1777,6.83,1778,4.203,2108,4.203,2109,2.859,2120,3.263,2121,3.263,2122,2.859,2123,2.859,2124,3.263,2125,2.859,2126,2.859,2127,3.263,2128,3.263,2129,2.859,2130,4.798,2131,4.798,2132,2.859,2133,3.263,2134,3.263,2135,6.328,2136,3.263,2137,3.263,2138,4.984,2139,3.263,2140,2.859,2141,4.519,2142,6.273,2143,6.273,2144,4.798,2145,6.121,2146,4.798]],["title/components/codeViewerComponent.html",[0,0.229,188,0.853]],["body/components/codeViewerComponent.html",[0,0.458,1,0.601,2,1.032,3,0.084,4,0.066,5,0.678,6,0.72,7,0.72,8,0.057,12,0.409,13,0.507,14,0.72,15,0.361,16,0.49,17,0.546,18,0.438,20,0.197,22,0.085,23,0.274,27,1.095,31,0.49,33,1.095,35,0.424,36,0.737,37,2.296,39,0.255,40,0.012,41,0.212,42,1.47,43,0.971,45,1.696,50,1.466,54,1.51,55,1.404,56,0.424,58,1.283,59,0.904,66,1.909,68,0.515,69,0.066,71,2.612,74,1.384,75,0.301,81,0.116,82,0.212,83,1.162,84,0.066,89,2.845,91,0.098,100,2.296,103,1.845,104,0.115,114,0.639,116,1.672,117,0.904,118,1.855,120,0.994,123,0.821,124,0.483,144,1.855,155,1.69,160,0.944,162,0.72,163,1.064,164,1.228,165,0.72,166,0.72,167,0.659,168,1.595,169,1.032,170,1.064,171,0.62,172,0.72,173,0.72,174,0.601,175,0.72,176,0.601,177,0.678,178,0.72,179,0.601,180,1.064,181,0.601,182,0.72,183,0.601,184,1.064,185,0.72,186,0.62,187,0.72,188,1.277,189,1.731,190,0.72,191,0.678,192,0.72,193,0.566,194,0.583,195,0.72,196,0.601,197,0.72,198,0.583,199,0.72,200,0.601,201,0.72,202,0.601,203,0.639,204,0.72,205,0.62,206,0.72,207,0.62,208,0.72,209,0.583,210,0.659,211,0.72,212,0.583,213,0.601,214,0.72,215,0.601,216,1.064,217,0.678,218,0.72,219,0.583,220,1.265,221,0.678,222,0.72,223,0.72,224,0.583,225,0.72,226,0.62,227,0.62,228,0.72,229,0.583,230,0.916,231,0.601,232,0.72,233,0.583,234,0.659,235,0.678,236,0.699,237,0.583,238,0.659,239,0.62,240,0.659,241,0.72,242,0.583,243,0.72,244,0.601,245,0.72,246,0.583,247,0.72,248,0.601,249,0.72,250,0.659,251,0.659,252,0.72,253,0.72,254,0.006,255,0.006,261,1.845,273,2.35,275,2.392,276,3.142,278,1.338,323,0.81,350,2.376,357,2.884,457,1.824,503,0.601,570,1.952,575,2.497,585,1.855,587,3.472,588,3.258,601,4.229,607,2.35,618,2.423,957,2.392,961,1.855,967,3.429,970,2.064,974,3.241,975,1.439,976,1.439,977,1.952,978,3.854,983,3.472,994,4.559,996,4.128,997,6.412,998,6.412,999,2.546,1000,2.497,1001,2.969,1002,2.546,1003,5.447,1004,4.148,1005,4.932,1006,4.932,1007,3.854,1008,4.148,1009,3.241,1010,4.932,1011,4.472,1012,4.148,1013,5.447,1014,4.932,1015,4.939,1016,4.932,1017,4.148,1018,4.148,1019,2.35,1020,2.35,1021,5.447,1022,2.808,1023,3.839,1024,2.808,1025,4.54,1026,4.148,1027,5.447,1028,4.148,1029,2.808,1030,2.808,1031,4.148,1032,2.808,1033,2.808,1034,4.148,1035,2.808,1115,3.279,1246,3.429,1345,2.546,1359,3.049,1755,2.808,1758,2.808,1759,5.447,1760,2.808,1765,2.808,2132,2.808,2135,4.148,2138,4.932,2140,2.808,2141,2.546,2147,4.148,2148,4.736,2149,3.206,2150,3.206,2151,3.206,2152,3.206,2153,3.206,2154,3.206,2155,3.206,2156,3.206,2157,3.206,2158,3.206,2159,3.206,2160,3.206,2161,3.206,2162,3.206,2163,4.736,2164,3.206,2165,3.206,2166,3.206,2167,5.631,2168,3.206,2169,4.736,2170,4.736,2171,2.808,2172,3.206]],["title/coverage.html",[2173,4.988]],["body/coverage.html",[0,0.492,1,0.468,8,0.044,9,0.369,10,3.106,11,3.302,39,0.081,40,0.012,47,1.707,64,1.163,75,0.367,85,1.26,87,2.477,89,1.26,104,0.307,105,1.707,124,0.376,167,0.512,171,0.482,174,0.468,176,0.468,179,0.468,181,0.468,183,0.468,186,0.482,188,0.512,191,0.528,193,0.44,196,0.468,198,0.454,200,0.468,202,0.468,205,0.482,207,0.482,209,0.454,212,0.454,213,0.468,215,0.468,217,0.528,219,0.454,221,0.528,224,0.454,226,0.482,229,0.454,231,0.468,233,0.454,235,0.528,237,0.454,239,0.482,242,0.454,244,0.468,246,0.454,248,0.468,250,0.512,251,1.122,254,0.005,255,0.005,256,2.868,268,1.829,283,1.606,310,3.833,328,3.106,334,2.868,385,2.798,386,3.106,418,1.829,459,0.881,471,0.94,472,0.94,473,0.881,534,3.695,535,3.106,536,1.829,537,2.185,549,1.981,550,2.185,571,2.185,572,2.185,573,2.185,612,3.106,613,3.106,625,1.829,656,1.606,691,3.537,696,1.707,699,1.519,713,2.868,733,1.606,768,2.382,844,2.868,845,2.868,857,4.32,858,5,869,1.981,873,1.981,877,1.981,881,1.981,883,1.981,889,5.565,890,1.829,915,1.981,919,1.981,921,1.981,923,1.981,925,1.981,927,1.981,928,1.981,929,1.981,932,3.537,933,3.302,934,3.537,941,1.707,951,1.707,967,1.519,969,3.106,970,2.518,971,3.537,975,2.452,976,2.452,996,1.829,997,3.106,998,3.106,999,3.106,1000,1.315,1001,1.315,1036,1.606,1037,5.152,1038,4.874,1039,5.152,1044,1.606,1045,1.606,1046,1.376,1048,1.606,1060,1.606,1073,1.606,1075,1.606,1077,1.606,1079,1.606,1083,1.606,1087,1.606,1089,1.606,1091,1.606,1092,1.606,1093,1.606,1095,1.606,1097,1.606,1099,1.606,1105,1.606,1216,1.707,1267,3.82,1268,3.82,1271,1.707,1273,1.707,1283,1.707,1284,3.106,1295,1.829,1296,2.868,1350,1.829,1351,2.868,1380,1.606,1390,4.505,1393,1.606,1398,1.707,1400,1.707,1414,1.981,1415,3.426,1490,2.185,1508,1.707,1509,4.055,1510,3.614,1511,3.82,1514,1.707,1515,1.519,1516,3.013,1519,1.707,1521,1.707,1534,3.739,1535,1.829,1539,1.829,1552,1.707,1553,3.537,1554,3.302,1555,3.834,1557,1.707,1573,1.707,1574,3.537,1575,3.302,1576,1.707,1582,3.537,1583,1.707,1600,1.829,1601,3.739,1603,1.829,1605,1.829,1614,3.537,1629,1.829,1630,2.868,1655,1.981,1688,2.185,1689,2.185,1690,2.185,1733,1.981,1734,1.981,1735,1.981,1751,7.52,1808,1.981,1809,1.981,1821,1.981,1826,1.981,1827,1.981,1835,1.981,1840,1.981,1841,1.981,1844,4.309,1847,1.981,1852,1.981,1853,1.981,1854,1.981,1857,1.981,1859,1.981,1860,2.677,1862,2.185,1863,3.106,1886,1.829,1887,4.616,1888,1.981,1895,4.713,1925,1.981,1927,1.981,1928,1.981,1929,1.981,1988,2.185,1989,2.185,2066,2.868,2067,2.868,2068,2.868,2080,1.829,2173,2.185,2174,2.494,2175,2.494,2176,2.494,2177,3.912,2178,6.296,2179,7.308,2180,2.494,2181,4.825,2182,2.494,2183,2.494,2184,7.428,2185,6.582,2186,8.585,2187,7.17,2188,2.494,2189,4.825,2190,2.494,2191,2.494,2192,2.494,2193,2.494,2194,5.463,2195,2.494,2196,5.463,2197,2.494,2198,2.494,2199,2.494,2200,2.494,2201,2.494,2202,2.494,2203,2.494,2204,2.494,2205,2.494,2206,2.494,2207,3.912,2208,2.494,2209,2.494,2210,4.825,2211,2.185,2212,2.185,2213,2.494,2214,2.494]],["title/dependencies.html",[1786,2.894,2215,3.026]],["body/dependencies.html",[40,0.011,254,0.01,255,0.01,1786,3.877,2216,6.7,2217,6.7,2218,7.702,2219,6.7,2220,6.7,2221,7.702,2222,6.7,2223,6.7,2224,6.7,2225,6.7,2226,6.7,2227,6.7,2228,6.7,2229,6.7]],["title/miscellaneous/enumerations.html",[2230,2.533,2231,4.381]],["body/miscellaneous/enumerations.html",[0,0.486,3,0.104,9,0.346,10,2.796,11,2.972,19,4.017,22,0.115,40,0.012,43,1.172,67,3.095,75,0.699,76,3.13,87,1.813,93,4.303,94,4.303,95,3.593,96,4.028,97,4.586,98,4.303,99,3.454,100,3.454,101,4.303,102,3.095,103,2.287,122,3.779,139,3.238,145,3.397,240,1.575,251,1.463,254,0.008,255,0.008,256,3.184,270,3.397,289,4.662,290,4.017,334,3.184,350,1.486,356,4.017,357,3.575,358,4.662,359,4.662,363,4.662,364,3.575,365,4.017,385,1.946,393,2.212,394,4.017,614,3.238,634,3.238,654,4.017,713,3.184,768,2.645,770,4.662,771,4.662,844,3.184,845,4.303,851,4.662,852,4.662,1267,2.796,1268,3.779,1270,4.303,1296,3.184,1297,4.662,1300,4.662,1301,3.449,1302,4.662,1303,4.662,1304,4.662,1305,4.662,1306,4.662,1307,3.575,1308,4.303,1309,4.662,1310,3.449,1311,3.449,1312,3.449,1313,3.184,1314,3.449,1315,3.449,1316,3.449,1317,3.449,1351,3.184,1355,4.662,1356,4.551,1509,3.397,1510,2.645,1511,3.779,1516,2.395,1524,4.303,1525,3.848,1526,4.121,1534,4.017,1537,4.303,1545,4.662,1546,4.662,1601,2.972,1608,4.662,1630,3.184,1634,4.662,1635,4.662,1733,3.449,1734,3.449,1735,4.662,1739,5.142,2066,3.184,2067,3.184,2068,4.875,2092,4.662,2093,4.662,2230,3.184,2231,3.804,2232,6.65,2233,7.123,2234,4.343,2235,3.804,2236,4.343,2237,4.343,2238,7.441,2239,4.343,2240,4.343,2241,5.142,2242,4.343,2243,5.87,2244,3.804]],["title/index.html",[22,0.11,2245,3.637]],["body/index.html",[1,1.474,2,0.954,40,0.012,171,1.519,174,1.474,176,1.474,179,1.474,181,1.474,183,1.474,186,1.519,193,1.386,196,1.474,198,1.429,200,1.474,202,1.474,205,1.519,207,1.519,209,1.429,212,1.429,213,1.474,215,1.474,219,1.429,224,1.429,226,1.519,229,1.429,231,1.474,233,1.429,237,1.429,239,1.519,242,1.429,244,1.474,246,1.429,248,1.474,254,0.008,255,0.008,362,2.531,968,0.821,1208,2.816,1784,5.468,1785,2.531,1786,3.413,1787,3.831,1788,3.831,1789,3.831,1790,3.797,1791,2.816,1798,5.115,1805,3.831,1806,3.831,1807,3.831,1822,6.344,1823,3.831,1824,3.831,1825,3.831,1836,6.167,1837,3.831,1838,3.831,1839,3.831,1848,6.246,1849,3.831,1850,3.831,1851,3.831,1861,3.473,2245,3.831,2246,4.373,2247,4.373,2248,4.373]],["title/modules.html",[1785,3.295]],["body/modules.html",[40,0.01,254,0.01,255,0.01,1784,4.885,1785,3.856,1798,3.856,1822,4.885,1836,4.885,1848,4.885,2249,8.449,2250,8.449,2251,8.449,2252,8.449]],["title/properties.html",[23,0.289,2215,3.026]],["body/properties.html",[23,0.397,40,0.011,254,0.01,255,0.01,2253,6.869,2254,6.869]],["title/components/resizableContainerComponent.html",[0,0.229,235,0.879]],["body/components/resizableContainerComponent.html",[0,0.455,1,0.655,2,1.099,3,0.09,4,0.072,5,0.739,6,0.784,7,0.784,8,0.062,14,0.784,15,0.363,16,0.495,17,0.552,18,0.442,20,0.21,22,0.092,23,0.292,27,1.166,30,4.169,33,1.166,36,0.493,37,2.444,39,0.245,40,0.012,42,1.291,43,0.853,45,1.653,50,1.54,54,0.936,55,1.251,56,0.263,58,0.675,59,0.476,64,2.757,66,2.032,67,2.657,68,1.04,69,0.122,70,3.572,73,2.18,74,1.426,75,0.555,76,1.899,78,0.909,81,0.104,82,0.265,83,1.237,84,0.072,91,0.072,100,2.444,103,1.964,114,0.696,116,1.78,117,0.561,118,3.747,123,0.734,124,0.526,162,0.784,163,1.132,164,1.099,165,0.784,166,0.784,167,0.717,168,1.58,169,0.761,170,1.132,171,0.675,172,0.784,173,0.784,174,0.655,175,0.784,176,0.655,177,0.739,178,0.784,179,0.655,180,1.132,181,0.655,182,0.784,183,0.655,184,1.132,185,0.784,186,0.675,187,0.784,188,0.717,189,0.761,190,0.784,191,0.739,192,0.784,193,0.616,194,0.635,195,0.784,196,0.655,197,0.784,198,0.635,199,0.784,200,0.655,201,0.784,202,0.655,203,0.696,204,0.784,205,0.675,206,0.784,207,0.675,208,0.784,209,0.635,210,0.717,211,0.784,212,0.635,213,0.655,214,0.784,215,0.655,216,1.132,217,0.739,218,0.784,219,0.635,220,1.328,221,0.739,222,0.784,223,0.784,224,0.635,225,0.784,226,0.675,227,0.675,228,0.784,229,0.635,230,0.975,231,0.655,232,0.784,233,0.635,234,0.717,235,1.37,236,1.646,237,0.635,238,0.717,239,0.675,240,0.717,241,0.784,242,0.635,243,0.784,244,0.655,245,0.784,246,0.635,247,0.784,248,0.655,249,0.784,250,0.717,251,0.717,252,0.784,253,0.784,254,0.007,255,0.007,262,0.597,321,1.316,323,1.809,350,2.215,457,2.164,570,2.126,575,2.657,585,3.422,587,3.694,588,2.916,590,5.407,592,4.047,593,3.694,594,4.699,595,4.335,600,3.058,601,3.601,608,5.18,610,3.058,637,2.02,643,3.069,752,3.244,767,4.182,885,1.51,961,3.422,971,2.559,975,1.567,976,1.567,977,2.126,979,4.002,980,4.696,1015,5.142,1286,2.247,1344,2.389,1427,2.772,1431,5.672,1780,3.058,2122,3.058,2123,3.058,2125,3.058,2126,3.058,2129,3.058,2141,2.772,2145,4.414,2147,5.18,2171,3.058,2211,6.928,2212,6.928,2255,5.913,2256,5.913,2257,5.913,2258,5.913,2259,5.913,2260,5.913,2261,5.913,2262,3.491,2263,6.475,2264,3.491,2265,5.039,2266,3.491,2267,3.491,2268,5.039,2269,5.039,2270,5.039,2271,5.039,2272,5.039,2273,5.039,2274,3.491,2275,5.039,2276,3.491,2277,5.039,2278,5.913,2279,5.913,2280,3.491,2281,5.913,2282,3.491,2283,3.491,2284,5.913,2285,5.039,2286,3.491,2287,3.491,2288,5.913,2289,3.491,2290,3.491,2291,3.491,2292,5.039,2293,5.039,2294,3.491,2295,3.491,2296,3.491,2297,6.475,2298,5.039,2299,3.491,2300,3.491,2301,3.491]],["title/interfaces/slugTitleURLConfig.html",[104,0.15,2080,3.044]],["body/interfaces/slugTitleURLConfig.html",[0,0.415,3,0.1,4,0.116,8,0.1,12,0.485,15,0.234,20,0.234,22,0.149,23,0.402,31,0.444,35,0.423,39,0.273,40,0.012,41,0.337,59,0.767,69,0.116,76,2.962,81,0.155,82,0.311,84,0.116,91,0.162,92,1.861,104,0.203,114,1.121,117,1.351,168,1.156,240,1.614,250,1.156,251,1.658,254,0.009,255,0.009,264,1.703,285,1.191,286,1.191,388,2.192,575,2.966,885,2.434,968,1.055,2066,4.124,2067,4.124,2068,4.124,2069,6.079,2070,6.079,2071,4.928,2072,4.928,2073,4.928,2074,4.928,2075,4.928,2076,4.928,2079,4.928,2080,5.518,2081,4.928,2082,7.07,2083,4.928,2089,6.079,2090,4.928,2091,4.928,2092,6.241,2093,6.241,2094,6.079,2095,4.928,2096,4.928,2097,4.928,2098,4.928,2099,4.928,2100,4.928,2101,4.928]],["title/miscellaneous/variables.html",[2230,2.533,2302,4.381]],["body/miscellaneous/variables.html",[0,0.487,9,0.333,22,0.088,39,0.284,40,0.012,41,0.387,42,1.743,43,1.151,70,3.493,71,1.837,72,2.028,87,1.39,96,1.682,171,0.644,174,0.625,176,0.625,179,0.625,181,0.625,183,0.625,186,0.644,193,0.588,196,0.625,198,0.606,200,0.625,202,0.625,205,0.644,207,0.644,209,0.606,212,0.606,213,0.625,215,0.625,219,0.606,224,0.606,226,0.644,229,0.606,230,0.644,231,0.914,233,0.606,237,0.606,239,0.644,242,0.606,244,0.625,246,0.606,248,0.625,254,0.006,255,0.006,385,1.614,426,1.741,471,1.835,472,1.835,528,1.386,534,1.756,857,3.339,858,2.644,869,3.867,870,4.571,871,2.917,872,2.917,873,3.867,874,3.867,875,4.571,876,5.919,877,3.867,878,3.867,879,5.351,880,4.571,881,3.867,882,4.265,883,3.867,884,3.867,889,2.644,890,3.57,907,2.644,915,3.867,916,4.265,917,4.265,918,2.917,919,3.867,920,2.917,921,3.867,922,2.917,923,3.867,924,2.917,925,3.867,926,4.265,927,3.867,928,3.867,929,3.867,975,3.346,976,3.346,1037,2.144,1038,2.028,1039,5.264,1048,3.135,1049,2.279,1050,2.279,1051,2.279,1052,2.279,1053,2.279,1054,2.279,1055,2.279,1056,2.279,1057,2.279,1058,2.279,1059,2.279,1060,3.135,1061,2.279,1062,2.279,1063,2.279,1064,2.279,1065,2.279,1066,2.279,1067,2.279,1068,2.279,1069,2.279,1070,2.279,1071,2.279,1072,2.279,1073,3.135,1074,2.279,1075,3.135,1076,2.279,1077,3.135,1078,2.279,1079,3.135,1080,2.279,1081,3.332,1082,2.279,1083,3.135,1084,2.279,1085,3.332,1086,2.279,1087,3.135,1088,2.279,1089,3.135,1090,2.279,1091,3.135,1092,3.135,1093,3.135,1094,2.279,1095,3.135,1096,2.279,1097,3.135,1098,2.279,1099,3.135,1100,2.279,1267,2.144,1268,3.706,1271,3.332,1272,2.441,1273,3.332,1274,2.441,1307,2.028,1380,3.135,1390,2.279,1397,3.331,1398,3.332,1399,2.441,1400,3.332,1401,2.441,1402,2.441,1509,2.817,1510,2.028,1511,3.706,1516,1.837,1519,3.332,1520,2.441,1521,3.332,1522,2.441,1534,3.939,1535,3.57,1536,2.644,1537,2.441,1538,2.644,1539,3.57,1540,2.644,1541,2.644,1542,2.644,1543,2.644,1544,2.644,1601,2.279,1603,3.57,1604,2.644,1605,3.57,1606,2.644,1607,2.644,1808,2.644,1809,3.867,1821,3.867,1826,2.644,1827,3.867,1835,3.867,1840,2.644,1841,3.867,1844,2.279,1847,3.867,1852,2.644,1853,3.867,1854,3.867,1859,3.867,1887,2.441,1895,5.351,1925,3.867,1926,2.917,1927,3.867,1928,3.867,1929,3.867,2230,2.441,2235,4.265,2241,5.547,2244,4.265,2302,2.917,2303,7.454,2304,8.125,2305,6.333,2306,6.738,2307,6.333,2308,6.333]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":310,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2254,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":2186,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2178,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2189,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2177,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2194,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2181,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2206,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2195,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2187,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["0/40",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2185,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2179,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2207,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2196,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["0em",{"_index":2119,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["0px",{"_index":2108,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{}}}],["1",{"_index":321,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IOption.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["1).foreach((option",{"_index":786,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["1).tostring().padstart(2",{"_index":1170,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["1.0.0",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["1/7",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":588,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["10px",{"_index":608,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/resizableContainerComponent.html":{}}}],["11",{"_index":2208,"title":{},"body":{"coverage.html":{}}}],["11].includes(monthnum",{"_index":1217,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["12",{"_index":2190,"title":{},"body":{"coverage.html":{}}}],["123",{"_index":2063,"title":{},"body":{"components/TextareaComponent.html":{}}}],["13",{"_index":1490,"title":{},"body":{"interfaces/IOption.html":{},"coverage.html":{}}}],["14",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["14.2.11",{"_index":2217,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1655,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["150",{"_index":1015,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["16px",{"_index":1775,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["170px",{"_index":602,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["18",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["184",{"_index":1349,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["1fr",{"_index":1779,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["1px",{"_index":2169,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["2",{"_index":1208,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/accordionContainerComponent.html":{},"index.html":{}}}],["2.1.35",{"_index":2229,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["2/15",{"_index":2204,"title":{},"body":{"coverage.html":{}}}],["2/26",{"_index":2193,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2182,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1342,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["23",{"_index":142,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["24px",{"_index":1782,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["28",{"_index":1213,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["28px",{"_index":1776,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["29",{"_index":1211,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["2a4980",{"_index":609,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["3",{"_index":2146,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["3.321.1",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["3/25",{"_index":2191,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":2188,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":2198,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1218,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/accordionContainerComponent.html":{}}}],["31",{"_index":1219,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["33",{"_index":2197,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":141,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["362px",{"_index":599,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["36px",{"_index":2107,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["38",{"_index":2247,"title":{},"body":{"index.html":{}}}],["4",{"_index":1214,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["4/26",{"_index":2180,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1222,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/TitleSlugUrlComponent.html":{}}}],["41",{"_index":2248,"title":{},"body":{"index.html":{}}}],["48px",{"_index":1769,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["4px",{"_index":2301,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["5",{"_index":2246,"title":{},"body":{"index.html":{}}}],["5px",{"_index":1761,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["6",{"_index":1215,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["6px",{"_index":1697,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["7",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":132,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/TitleSlugUrlComponent.html":{}}}],["80px",{"_index":2110,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["8px",{"_index":1345,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/codeViewerComponent.html":{}}}],["9",{"_index":1216,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["9/44",{"_index":2183,"title":{},"body":{"coverage.html":{}}}],["99",{"_index":1334,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["9px",{"_index":1770,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["_closebtn",{"_index":147,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["_daycontrol",{"_index":1074,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["_flyout",{"_index":657,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["_monthcontrol",{"_index":1076,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["_text",{"_index":149,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["_yearcontrol",{"_index":1078,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["_yearcontrol')?.value",{"_index":1162,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["a11ytext",{"_index":715,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["aaaa",{"_index":1090,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["abbr",{"_index":1327,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["abstractcontrol",{"_index":454,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["accepts",{"_index":905,"title":{},"body":{"components/HeaderComponent.html":{}}}],["accessors",{"_index":1699,"title":{},"body":{"components/InputComponent.html":{}}}],["accordian",{"_index":169,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["accordion",{"_index":978,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["accordion.copycode",{"_index":2163,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["accordion.hidecode",{"_index":987,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["accordion.showcode",{"_index":989,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["accordionconfig",{"_index":1011,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["accordioncontainercomponent",{"_index":167,"title":{"components/accordionContainerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["active",{"_index":634,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activiatedselect",{"_index":1588,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["actual_component",{"_index":253,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["add",{"_index":490,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["added",{"_index":1374,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TextareaComponent.html":{}}}],["addhover",{"_index":1442,"title":{},"body":{"interfaces/IOption.html":{}}}],["adds",{"_index":1353,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["aftercontentinit",{"_index":2069,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["afterviewinit",{"_index":1299,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["again",{"_index":825,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["align",{"_index":592,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["allows",{"_index":1560,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["alone.functions",{"_index":288,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["altimage",{"_index":861,"title":{},"body":{"components/FooterComponent.html":{}}}],["always",{"_index":1426,"title":{},"body":{"interfaces/IOption.html":{}}}],["ancestor",{"_index":298,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["anchortype",{"_index":2082,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["angular",{"_index":976,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["angular/cli",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1802,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LanguageSwitchComponent.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["angular/forms",{"_index":467,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["angular/router",{"_index":1811,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["année",{"_index":1086,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["anything",{"_index":493,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["août",{"_index":1068,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":168,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["applied",{"_index":896,"title":{},"body":{"components/HeaderComponent.html":{}}}],["approaches",{"_index":496,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["appropriate",{"_index":901,"title":{},"body":{"components/HeaderComponent.html":{}}}],["april",{"_index":1052,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":738,"title":{},"body":{"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["aria",{"_index":425,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["ariadissmissible",{"_index":34,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["arialabel",{"_index":116,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["ariatext",{"_index":1372,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{}}}],["array",{"_index":1196,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["arrays",{"_index":1149,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["arrow",{"_index":799,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["attr.disabled",{"_index":1570,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["august",{"_index":1055,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":2141,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["autocomplete",{"_index":1428,"title":{},"body":{"interfaces/IOption.html":{}}}],["autocomplete'},{'name",{"_index":172,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["autocomplete.component.html",{"_index":1429,"title":{},"body":{"interfaces/IOption.html":{}}}],["autocomplete/autocomplete.component",{"_index":1855,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{}}}],["autocompletecomponent",{"_index":171,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":445,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["avril",{"_index":1064,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":2218,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":596,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{}}}],["banner",{"_index":19,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["banner'},{'name",{"_index":173,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["banner.component.html",{"_index":21,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner.module.ts",{"_index":1793,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{}}}],["banner/banner.component",{"_index":1797,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{}}}],["banner?.classlist.add('bannerdismissed",{"_index":128,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner?.classlist.add('nodisplay",{"_index":130,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner?.classlist.remove('bannerdismissed",{"_index":131,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["banner?.classlist.remove('nodisplay",{"_index":134,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["bannercomponent",{"_index":1,"title":{"components/BannerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{}}}],["bannersize",{"_index":98,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["bannertype",{"_index":93,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["bar",{"_index":2299,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["base",{"_index":293,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["based",{"_index":1198,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["baseurl",{"_index":259,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["baseurlkey",{"_index":269,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["basis",{"_index":605,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["behavior",{"_index":816,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["behaviorsubject",{"_index":1871,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["behaviorsubject(false",{"_index":1893,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["being",{"_index":652,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{}}}],["below",{"_index":795,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["blank",{"_index":848,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["blk",{"_index":917,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["blk.svg",{"_index":872,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":144,"title":{},"body":{"components/BannerComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutConfig.html":{},"components/TitleSlugUrlComponent.html":{},"components/codeViewerComponent.html":{}}}],["blue",{"_index":1314,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["blunt",{"_index":1599,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["boew/assets/sig",{"_index":916,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["boew/assets/wmms",{"_index":871,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":120,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["border",{"_index":1759,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["both",{"_index":1635,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bottom",{"_index":2109,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{}}}],["breadcrumb",{"_index":177,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["breadcrumb'},{'name",{"_index":175,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["breadcrumb.component.html",{"_index":258,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["breadcrumb/breadcrumb.component",{"_index":1817,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["breadcrumb/link/link.component",{"_index":1818,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["breadcrumbcomponent",{"_index":174,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["breadcrumblinkcomponent",{"_index":176,"title":{"components/BreadcrumbLinkComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ILinkComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":2252,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2249,"title":{},"body":{"modules.html":{}}}],["btnaction",{"_index":340,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["btnconfig",{"_index":115,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["btnevent",{"_index":38,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["btns",{"_index":963,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["build",{"_index":109,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["button",{"_index":103,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["button'},{'name",{"_index":180,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["button.component",{"_index":88,"title":{},"body":{"components/BannerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["button.component.html",{"_index":335,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["button.component.ts",{"_index":1268,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["button.component.ts:30",{"_index":1661,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":1664,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1660,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:37",{"_index":1665,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:38",{"_index":1659,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:39",{"_index":1662,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:40",{"_index":1663,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:41",{"_index":1666,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:43",{"_index":1670,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:54",{"_index":1668,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:73",{"_index":1667,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.copy",{"_index":604,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["button.service",{"_index":1394,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["button.service.ts",{"_index":1863,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{},"coverage.html":{}}}],["button.service.ts:11",{"_index":1868,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["button.service.ts:8",{"_index":1872,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["button.service.ts:9",{"_index":1870,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["button/button.component",{"_index":663,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["button/icon",{"_index":87,"title":{},"body":{"components/BannerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["buttoncategories",{"_index":356,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDropdownConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttoncategories.primary",{"_index":668,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["buttonclick",{"_index":1658,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["buttonclick(id",{"_index":1281,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["buttoncolor",{"_index":359,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttoncomponent",{"_index":179,"title":{"components/ButtonComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IButtonConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["buttonconfigacccordion",{"_index":982,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["buttonconfigcopy",{"_index":1016,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["buttonicondirection",{"_index":363,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttonpress",{"_index":1866,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["buttonpress(id",{"_index":1867,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["buttons.copycode",{"_index":582,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["buttons.copystyle",{"_index":583,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["buttons.copyurl",{"_index":2103,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["buttonsize",{"_index":358,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"miscellaneous/enumerations.html":{}}}],["buttontext",{"_index":972,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["buttontextclosed",{"_index":973,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["buttontype",{"_index":360,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["canada",{"_index":876,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["canada_logo_aria_label_english",{"_index":928,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["canada_logo_aria_label_french",{"_index":929,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":1375,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["category",{"_index":66,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["center",{"_index":594,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["change",{"_index":1199,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IOption.html":{},"components/IconComponent.html":{}}}],["change.foreachchangeditem((item",{"_index":1471,"title":{},"body":{"interfaces/IOption.html":{}}}],["change[this.config.id",{"_index":1382,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["changed",{"_index":1420,"title":{},"body":{"interfaces/IOption.html":{}}}],["changes",{"_index":278,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/codeViewerComponent.html":{}}}],["changes['config",{"_index":1019,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"components/codeViewerComponent.html":{}}}],["changes['config'].currentvalue",{"_index":1020,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"components/codeViewerComponent.html":{}}}],["changes['config'].firstchange",{"_index":1290,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["character",{"_index":1337,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["charactercountstatus",{"_index":2038,"title":{},"body":{"components/TextareaComponent.html":{}}}],["charactercountstatus(currcharcount",{"_index":1647,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["chargement",{"_index":1606,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["charlimit",{"_index":1631,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["charlimitstatus",{"_index":1638,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["check",{"_index":651,"title":{},"body":{"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checkactive(value",{"_index":1481,"title":{},"body":{"interfaces/IOption.html":{}}}],["checkbox",{"_index":394,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox'},{'name",{"_index":182,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["checkbox.component.html",{"_index":395,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["checkbox/checkbox.component",{"_index":1830,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["checkboxcomponent",{"_index":181,"title":{"components/CheckboxComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["checkduplicated(index",{"_index":1501,"title":{},"body":{"interfaces/IOption.html":{}}}],["checklabellength",{"_index":1343,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checklabelrounded",{"_index":1338,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checknumber",{"_index":1335,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["checks",{"_index":899,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cheerio",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["chevron",{"_index":1748,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["child",{"_index":304,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["chip",{"_index":184,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["chipcontent",{"_index":542,"title":{},"body":{"components/ChipItemComponent.html":{},"components/SecondaryChipsComponent.html":{}}}],["chipcontenttext",{"_index":553,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chipidx",{"_index":565,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chipitemcomponent",{"_index":183,"title":{"components/ChipItemComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["chiplist",{"_index":556,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chiplistchange",{"_index":557,"title":{},"body":{"components/ChipListComponent.html":{}}}],["chiplistcomponent",{"_index":186,"title":{"components/ChipListComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["chips",{"_index":1990,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips'},{'name",{"_index":241,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["chips.component",{"_index":1858,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{}}}],["chips.component.html",{"_index":1991,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips.component.ts",{"_index":1989,"title":{},"body":{"components/SecondaryChipsComponent.html":{},"coverage.html":{}}}],["chips.component.ts:12",{"_index":1993,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips.component.ts:8",{"_index":1992,"title":{},"body":{"components/SecondaryChipsComponent.html":{}}}],["chips/chip",{"_index":1424,"title":{},"body":{"interfaces/IOption.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["chips/secondary",{"_index":1857,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"components/SecondaryChipsComponent.html":{},"coverage.html":{}}}],["circleinfoicon",{"_index":1693,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["cl",{"_index":17,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["class",{"_index":69,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["class_trashcan",{"_index":1273,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class_x_mark",{"_index":1271,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":633,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["clearflyoutfocus",{"_index":620,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["clearoptions",{"_index":718,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["clears",{"_index":827,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["clearvalue",{"_index":1388,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["click",{"_index":983,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["clickable",{"_index":853,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["clickevent",{"_index":336,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["clickevent(id",{"_index":353,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["clickinside(event",{"_index":1458,"title":{},"body":{"interfaces/IOption.html":{}}}],["clickout",{"_index":1467,"title":{},"body":{"interfaces/IOption.html":{}}}],["close",{"_index":44,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/accordionContainerComponent.html":{}}}],["closed",{"_index":681,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["closes",{"_index":648,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["cluster_irccdsangularbannermodule",{"_index":1787,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{}}}],["cluster_irccdsangularbannermodule_declarations",{"_index":1789,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{}}}],["cluster_irccdsangularbannermodule_exports",{"_index":1788,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{}}}],["cluster_irccdsangularcomponentssharedmodule",{"_index":1805,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"index.html":{}}}],["cluster_irccdsangularcomponentssharedmodule_declarations",{"_index":1807,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"index.html":{}}}],["cluster_irccdsangularcomponentssharedmodule_exports",{"_index":1806,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"index.html":{}}}],["cluster_irccdsangularformcomponentsmodule",{"_index":1823,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{}}}],["cluster_irccdsangularformcomponentsmodule_declarations",{"_index":1825,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{}}}],["cluster_irccdsangularformcomponentsmodule_exports",{"_index":1824,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{}}}],["cluster_irccdsangularheaderfootermodule",{"_index":1837,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{}}}],["cluster_irccdsangularheaderfootermodule_declarations",{"_index":1838,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{}}}],["cluster_irccdsangularheaderfootermodule_exports",{"_index":1839,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{}}}],["cluster_irccdsangularlegacyoldmodule",{"_index":1849,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["cluster_irccdsangularlegacyoldmodule_declarations",{"_index":1850,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["cluster_irccdsangularlegacyoldmodule_exports",{"_index":1851,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["code",{"_index":189,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["codeviewercomponent",{"_index":188,"title":{"components/codeViewerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["codeviewertabs",{"_index":1008,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["codeviewertabscccordion",{"_index":1012,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["color",{"_index":73,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/resizableContainerComponent.html":{}}}],["colour",{"_index":1320,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/IndicatorComponent.html":{},"components/LabelComponent.html":{},"components/SearchInputComponent.html":{}}}],["column",{"_index":2145,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["columns",{"_index":1778,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["commenc",{"_index":1544,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":1801,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["completed",{"_index":1536,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["complét",{"_index":1541,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["component/banner/banner.component.ts",{"_index":11,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["component/banner/banner.component.ts:114",{"_index":61,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:118",{"_index":60,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:52",{"_index":79,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:53",{"_index":80,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:55",{"_index":48,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:56",{"_index":49,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:57",{"_index":46,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:59",{"_index":51,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:61",{"_index":77,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:70",{"_index":53,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:84",{"_index":63,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/banner/banner.component.ts:98",{"_index":62,"title":{},"body":{"components/BannerComponent.html":{}}}],["component/ircc",{"_index":1792,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{}}}],["component_template",{"_index":166,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["componentpreviewcomponent",{"_index":191,"title":{"components/ComponentPreviewComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"index.html":{},"components/resizableContainerComponent.html":{}}}],["components.constants",{"_index":282,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["components.module.ts",{"_index":1827,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/checkbox/checkbox.component.ts",{"_index":386,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"coverage.html":{}}}],["components/checkbox/checkbox.component.ts:144",{"_index":432,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:160",{"_index":424,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:174",{"_index":434,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:179",{"_index":448,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:191",{"_index":428,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:51",{"_index":456,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:54",{"_index":421,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:60",{"_index":422,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:61",{"_index":423,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:63",{"_index":458,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:64",{"_index":453,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:65",{"_index":455,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:66",{"_index":462,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:70",{"_index":466,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:71",{"_index":451,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:72",{"_index":417,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:75",{"_index":465,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:79",{"_index":464,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:80",{"_index":463,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:82",{"_index":450,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:83",{"_index":438,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:86",{"_index":441,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:94",{"_index":443,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/checkbox/checkbox.component.ts:99",{"_index":433,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/date",{"_index":1037,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/error/error.component.ts",{"_index":691,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"coverage.html":{}}}],["components/error/error.component.ts:27",{"_index":697,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:28",{"_index":701,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:29",{"_index":698,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:30",{"_index":700,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:31",{"_index":695,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:34",{"_index":703,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:44",{"_index":702,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/error/error.component.ts:48",{"_index":704,"title":{},"body":{"components/ErrorComponent.html":{}}}],["components/input/input.component",{"_index":1419,"title":{},"body":{"interfaces/IOption.html":{}}}],["components/input/input.component.ts",{"_index":1351,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/input/input.component.ts:154",{"_index":1707,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:168",{"_index":1711,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:173",{"_index":1715,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:182",{"_index":1709,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:195",{"_index":1706,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:202",{"_index":1708,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:214",{"_index":1705,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:215",{"_index":1716,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:216",{"_index":1712,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:219",{"_index":1713,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:222",{"_index":1714,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:229",{"_index":1732,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:52",{"_index":1723,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:54",{"_index":1701,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:59",{"_index":1703,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:60",{"_index":1702,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:61",{"_index":1704,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:63",{"_index":1718,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:64",{"_index":1721,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:65",{"_index":1727,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:66",{"_index":1730,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:67",{"_index":1717,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:68",{"_index":1720,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:69",{"_index":1719,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:70",{"_index":1722,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:71",{"_index":1724,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:75",{"_index":1729,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:76",{"_index":1700,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:79",{"_index":1728,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:84",{"_index":1726,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:85",{"_index":1725,"title":{},"body":{"components/InputComponent.html":{}}}],["components/input/input.component.ts:87",{"_index":1710,"title":{},"body":{"components/InputComponent.html":{}}}],["components/ircc",{"_index":1826,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/radio",{"_index":1553,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts",{"_index":1582,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts:100",{"_index":2001,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:104",{"_index":2000,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:109",{"_index":1999,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:142",{"_index":1998,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:159",{"_index":1996,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:173",{"_index":2002,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:178",{"_index":2005,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:54",{"_index":2017,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:55",{"_index":2010,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:56",{"_index":2008,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:57",{"_index":2015,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:59",{"_index":1995,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:63",{"_index":2011,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:64",{"_index":2009,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:66",{"_index":2012,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:70",{"_index":1994,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:73",{"_index":2016,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:77",{"_index":2013,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:78",{"_index":2014,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:79",{"_index":2007,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:82",{"_index":2003,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:85",{"_index":2004,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:89",{"_index":1997,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/select/select.component.ts:96",{"_index":2006,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/textarea/textarea.component.ts",{"_index":1630,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/textarea/textarea.component.ts:124",{"_index":2047,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:137",{"_index":2046,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:141",{"_index":2044,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:159",{"_index":2045,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:160",{"_index":2052,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:161",{"_index":2049,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:164",{"_index":2050,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:167",{"_index":2051,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:54",{"_index":2058,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:56",{"_index":2041,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:61",{"_index":2043,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:62",{"_index":2042,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:63",{"_index":2040,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:65",{"_index":2055,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:66",{"_index":2057,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:67",{"_index":2056,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:68",{"_index":2053,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:69",{"_index":2054,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:70",{"_index":2059,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:73",{"_index":2039,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:75",{"_index":2062,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:78",{"_index":2061,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:79",{"_index":2060,"title":{},"body":{"components/TextareaComponent.html":{}}}],["components/textarea/textarea.component.ts:81",{"_index":2048,"title":{},"body":{"components/TextareaComponent.html":{}}}],["componenttype",{"_index":1739,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["config",{"_index":35,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["config.buttontext",{"_index":2130,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["config.buttontextclosed",{"_index":2131,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["config.charlimit",{"_index":2065,"title":{},"body":{"components/TextareaComponent.html":{}}}],["config.desc",{"_index":1884,"title":{},"body":{"components/LabelComponent.html":{}}}],["config.hint",{"_index":1885,"title":{},"body":{"components/LabelComponent.html":{}}}],["config.inlinelabel",{"_index":532,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["config.label",{"_index":533,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["config.placeholder",{"_index":2018,"title":{},"body":{"components/SelectComponent.html":{}}}],["config.placeholdertext",{"_index":690,"title":{},"body":{"components/DropdownComponent.html":{}}}],["config.text",{"_index":333,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{}}}],["config.title",{"_index":2102,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["config.value",{"_index":856,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["config?.errorlov",{"_index":712,"title":{},"body":{"components/ErrorComponent.html":{}}}],["config?.label",{"_index":1687,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["config?.searchbutton?.text",{"_index":1987,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["config?.title",{"_index":159,"title":{},"body":{"components/BannerComponent.html":{}}}],["configs",{"_index":470,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["consider",{"_index":491,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["console.log('testing",{"_index":1581,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["console.log(emitvalue",{"_index":125,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["console.log(newlang.lang",{"_index":1933,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["console.log(this.config",{"_index":985,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["const",{"_index":503,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["const.$escape",{"_index":2140,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["constructor",{"_index":262,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["constructor(platformid",{"_index":1901,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["constructor(private",{"_index":885,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["constructor(public",{"_index":1640,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["constructor(renderer",{"_index":2262,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["constructor(standalonefunctions",{"_index":416,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["constructor(translate",{"_index":263,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"components/accordionContainerComponent.html":{}}}],["constructor(translator",{"_index":2077,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["cont.value",{"_index":2037,"title":{},"body":{"components/TabsComponent.html":{}}}],["container",{"_index":961,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container#{template",{"_index":2139,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container'},{'name",{"_index":170,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component",{"_index":1002,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["container.component.html",{"_index":979,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.scss",{"_index":980,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts",{"_index":971,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:18",{"_index":2123,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:19",{"_index":2276,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:21",{"_index":2124,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container.component.ts:22",{"_index":2121,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container.component.ts:23",{"_index":2122,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:24",{"_index":2125,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:26",{"_index":2126,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:28",{"_index":2129,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["container.component.ts:29",{"_index":2267,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:31",{"_index":2274,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:34",{"_index":2120,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container.component.ts:38",{"_index":2127,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container.component.ts:40",{"_index":2264,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:44",{"_index":2266,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["container.component.ts:56",{"_index":2128,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["container/resizable",{"_index":2212,"title":{},"body":{"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["container?.classlist.add('active",{"_index":965,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["containerheight",{"_index":135,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["content",{"_index":118,"title":{},"body":{"components/BannerComponent.html":{},"components/ComponentPreviewComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["controlvalueaccessor",{"_index":387,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["copy",{"_index":1017,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["copystyle",{"_index":578,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["copytext",{"_index":579,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["core",{"_index":1246,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["correct",{"_index":1197,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["cours",{"_index":1540,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":2173,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":273,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["createlinks",{"_index":260,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["critical",{"_index":95,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cta",{"_index":122,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["cta.text",{"_index":161,"title":{},"body":{"components/BannerComponent.html":{}}}],["ctas",{"_index":140,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["ctatype",{"_index":101,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["currcharcount",{"_index":1649,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["current",{"_index":832,"title":{},"body":{"components/FlyoutComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["currentcharacterstatusaria",{"_index":1639,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["currentlang",{"_index":2073,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["currently",{"_index":823,"title":{},"body":{"components/FlyoutComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["currentyear",{"_index":1116,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["cursor",{"_index":610,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/resizableContainerComponent.html":{}}}],["custom",{"_index":67,"title":{},"body":{"components/BannerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["customerrortext",{"_index":485,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["customicon",{"_index":1577,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["d'information",{"_index":1402,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":194,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["date().getfullyear",{"_index":1117,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_day_control_id_extension",{"_index":1073,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_labels_en",{"_index":1079,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_labels_en[0",{"_index":1184,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_en[1",{"_index":1186,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_en[2",{"_index":1188,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_fr",{"_index":1083,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_labels_fr[0",{"_index":1192,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_fr[1",{"_index":1193,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_labels_fr[2",{"_index":1194,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["date_picker_month_control_id_extension",{"_index":1075,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_months_en",{"_index":1048,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_months_fr",{"_index":1060,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_day_en",{"_index":1093,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_day_fr",{"_index":1095,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_month_en",{"_index":1091,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_month_fr",{"_index":1092,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_year_en",{"_index":1087,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_placeholder_year_fr",{"_index":1089,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_unkown_en",{"_index":1097,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_unkown_fr",{"_index":1099,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date_picker_year_control_id_extension",{"_index":1077,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datepickercomponent",{"_index":193,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["datepickerstate",{"_index":1224,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["datepickertouchedorinvalid",{"_index":1223,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["day",{"_index":1080,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["day.tostring",{"_index":1205,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["days",{"_index":1108,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dayselect",{"_index":1114,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dayunknown",{"_index":1101,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dd",{"_index":1094,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["december",{"_index":1059,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":1794,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["decoration",{"_index":2113,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["decorators",{"_index":752,"title":{},"body":{"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/resizableContainerComponent.html":{}}}],["default",{"_index":42,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["delete",{"_index":313,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["demo",{"_index":1736,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo'},{'name",{"_index":223,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["demo.component.html",{"_index":1738,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.scss",{"_index":1737,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts",{"_index":1735,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["demo.component.ts:15",{"_index":1750,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts:25",{"_index":1741,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts:27",{"_index":1746,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts:32",{"_index":1740,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo.component.ts:36",{"_index":1742,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo/interactive",{"_index":1734,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["demo_component.accordion_closed",{"_index":1745,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["demo_component.accordion_open",{"_index":1744,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["dependencies",{"_index":1786,"title":{"dependencies.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":486,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["description",{"_index":1247,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/RadioInputComponent.html":{},"components/SpinnerComponent.html":{}}}],["determines",{"_index":646,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["device",{"_index":2137,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["device.in",{"_index":2142,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["differ",{"_index":1444,"title":{},"body":{"interfaces/IOption.html":{}}}],["different",{"_index":495,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["differs",{"_index":1445,"title":{},"body":{"interfaces/IOption.html":{}}}],["direction",{"_index":2298,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["directive",{"_index":165,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["directives",{"_index":252,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["disable",{"_index":1379,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["disabled",{"_index":337,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["disableerror",{"_index":1111,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["disablefocus",{"_index":477,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["dismissible",{"_index":121,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["display",{"_index":585,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["div",{"_index":1341,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["divider",{"_index":1765,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["docheck",{"_index":1416,"title":{},"body":{"interfaces/IOption.html":{}}}],["document",{"_index":2289,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["document.getelementbyid('hidden",{"_index":962,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["document.getelementbyid(id",{"_index":953,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["document.getelementbyid(this.config?.id",{"_index":127,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["document.getelementbyid(this.config?.selected",{"_index":1623,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["document.getelementbyid(this.textid)?.offsetheight",{"_index":136,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["document.getelementsbyclassname('hidden",{"_index":964,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["document.queryselector('.page",{"_index":1626,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["document.queryselector(`#${this.config?.id",{"_index":138,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["document:keydown.arrowdown",{"_index":727,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.arrowdown(event",{"_index":739,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.arrowup",{"_index":728,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.arrowup(event",{"_index":742,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.enter",{"_index":729,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["document:keydown.enter(event",{"_index":744,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["documentation",{"_index":2174,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1422,"title":{},"body":{"interfaces/IOption.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["don't",{"_index":1358,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["dot",{"_index":1301,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["down",{"_index":1749,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["down.component",{"_index":1814,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["down.component.html",{"_index":616,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["down.component.ts",{"_index":613,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"coverage.html":{}}}],["down.component.ts:22",{"_index":626,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:26",{"_index":628,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:27",{"_index":631,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:28",{"_index":629,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:29",{"_index":630,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:30",{"_index":627,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:31",{"_index":624,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:33",{"_index":662,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:34",{"_index":661,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:36",{"_index":660,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:43",{"_index":635,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:66",{"_index":638,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:84",{"_index":642,"title":{},"body":{"components/DropdownComponent.html":{}}}],["down.component.ts:95",{"_index":632,"title":{},"body":{"components/DropdownComponent.html":{}}}],["draglistener",{"_index":2255,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["drop",{"_index":615,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["dropdown",{"_index":614,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["dropdown'},{'name",{"_index":197,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["dropdown/drop",{"_index":1813,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["dropdowncomponent",{"_index":196,"title":{"components/DropdownComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDropdownConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["dropdownconfigs",{"_index":1110,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["dropdowns",{"_index":1133,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["ds",{"_index":975,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["dsfullsizes",{"_index":1269,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/SpinnerComponent.html":{}}}],["dsorientations",{"_index":1602,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["dssizes",{"_index":280,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["dssizes.large",{"_index":420,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["du",{"_index":879,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["décembre",{"_index":1072,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":639,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["e.tostring",{"_index":677,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["e?.relatedtarget",{"_index":684,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["each",{"_index":1181,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["eindicatorstatus",{"_index":1326,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["el",{"_index":137,"title":{},"body":{"components/BannerComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el.style.display",{"_index":143,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["el?.focus",{"_index":956,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el?.scrollintoview",{"_index":954,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el?.setattribute('tabindex",{"_index":955,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["el_id",{"_index":749,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["element",{"_index":164,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["element.id",{"_index":1032,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["element.value",{"_index":1503,"title":{},"body":{"interfaces/IOption.html":{}}}],["elementref",{"_index":767,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/resizableContainerComponent.html":{}}}],["emitevent",{"_index":1261,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["emits",{"_index":800,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["emitvalue",{"_index":57,"title":{},"body":{"components/BannerComponent.html":{}}}],["empty",{"_index":659,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["emptyresults",{"_index":1443,"title":{},"body":{"interfaces/IOption.html":{}}}],["en",{"_index":528,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["en.svg",{"_index":918,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":818,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/accordionContainerComponent.html":{}}}],["english",{"_index":907,"title":{},"body":{"components/HeaderComponent.html":{},"components/LanguageSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["english_banner_url",{"_index":915,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":793,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["enter",{"_index":959,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["enum",{"_index":92,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["enumerations",{"_index":2231,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["erreur",{"_index":1397,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/LabelComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":426,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":199,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["error.component.html",{"_index":692,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["error/error.component",{"_index":1633,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/TextareaComponent.html":{}}}],["error_text_stub_en",{"_index":471,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_text_stub_fr",{"_index":472,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["erroraria",{"_index":396,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["errorcomponent",{"_index":198,"title":{"components/ErrorComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["erroricon",{"_index":1632,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["errorids",{"_index":397,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["errorlov",{"_index":694,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["errormessages",{"_index":487,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["errors",{"_index":1254,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["errorstubtext",{"_index":398,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["event",{"_index":637,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"components/LanguageSwitchComponent.html":{},"components/SelectComponent.html":{},"components/resizableContainerComponent.html":{}}}],["event.key",{"_index":943,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["event.keycode",{"_index":1489,"title":{},"body":{"interfaces/IOption.html":{}}}],["event.lang",{"_index":2097,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["event.movementy",{"_index":2293,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["event.preventdefault",{"_index":783,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["event.stoppropagation",{"_index":1450,"title":{},"body":{"interfaces/IOption.html":{}}}],["event.target",{"_index":1460,"title":{},"body":{"interfaces/IOption.html":{}}}],["eventemitter",{"_index":50,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/SearchInputComponent.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["eventhandler",{"_index":28,"title":{},"body":{"components/BannerComponent.html":{}}}],["eventhandler(emitvalue",{"_index":52,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["everywhere",{"_index":481,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["exceeds",{"_index":1333,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["expand",{"_index":984,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["export",{"_index":91,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["exports",{"_index":1795,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["extra",{"_index":2144,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["f05a",{"_index":1695,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["fa",{"_index":70,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["fa_keywords",{"_index":1285,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"components/InfoTextSmallComponent.html":{}}}],["fall",{"_index":794,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["false",{"_index":457,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["family",{"_index":2115,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["feature",{"_index":839,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["feb",{"_index":1210,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["february",{"_index":1050,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1172,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["fields",{"_index":1234,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["filteredoptions.slice(0",{"_index":1479,"title":{},"body":{"interfaces/IOption.html":{}}}],["filterlist(filtervalue",{"_index":1476,"title":{},"body":{"interfaces/IOption.html":{}}}],["filtervalue.length",{"_index":1477,"title":{},"body":{"interfaces/IOption.html":{}}}],["flex",{"_index":590,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["flip",{"_index":1771,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["flyout",{"_index":203,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["flyout'},{'name",{"_index":201,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["flyout.component.html",{"_index":714,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["flyout/flyout.component",{"_index":664,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["flyoutcomponent",{"_index":200,"title":{"components/FlyoutComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["flyoutconfig",{"_index":617,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["flyoutoptioncomponent",{"_index":202,"title":{"components/FlyoutOptionComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["fn",{"_index":439,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focus",{"_index":680,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["focusevent",{"_index":641,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["focusinput",{"_index":1698,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focusinput(focusvalue",{"_index":1383,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focusstate",{"_index":1368,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["focusvalue",{"_index":1385,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["font",{"_index":2105,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["fontawesome",{"_index":705,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["footer",{"_index":859,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":206,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["footer.component.html",{"_index":860,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.module.ts",{"_index":1841,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/footer.component",{"_index":1843,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["footer/footer/footer.component.ts",{"_index":858,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/footer/footer.component.ts:18",{"_index":864,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:20",{"_index":868,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:21",{"_index":867,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:22",{"_index":863,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:26",{"_index":865,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer/footer.component.ts:33",{"_index":866,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/header/header.component.ts",{"_index":889,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/header/header.component.ts:25",{"_index":895,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:26",{"_index":914,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:27",{"_index":912,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:28",{"_index":913,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:29",{"_index":894,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:36",{"_index":898,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/header/header.component.ts:47",{"_index":904,"title":{},"body":{"components/HeaderComponent.html":{}}}],["footer/hidden",{"_index":932,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["footer/ircc",{"_index":1840,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footer/language",{"_index":1887,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["footercomponent",{"_index":205,"title":{"components/FooterComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["foreach((option",{"_index":792,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["form",{"_index":1380,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":399,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{}}}],["formgroup",{"_index":415,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["formgroupempty",{"_index":400,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["formsmodule",{"_index":1831,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["formvalue",{"_index":1562,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["forwardref",{"_index":392,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["foundclickable",{"_index":784,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["fr",{"_index":884,"title":{},"body":{"components/FooterComponent.html":{},"components/LanguageSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["fr.svg",{"_index":920,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["français",{"_index":1926,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["french",{"_index":910,"title":{},"body":{"components/HeaderComponent.html":{}}}],["french_banner_url",{"_index":919,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":643,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"components/resizableContainerComponent.html":{}}}],["future",{"_index":837,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["février",{"_index":1062,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":1781,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["general",{"_index":1104,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["generates",{"_index":1245,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["generic",{"_index":94,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"miscellaneous/enumerations.html":{}}}],["get(this.config.id",{"_index":1163,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getariaerrortext",{"_index":407,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["getariaoverride(haserror",{"_index":1236,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getdisabled",{"_index":1958,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["getdisabled(index",{"_index":1571,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["geterroraria",{"_index":1255,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["geterrorstate",{"_index":408,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["getgeterrorstate",{"_index":1731,"title":{},"body":{"components/InputComponent.html":{}}}],["getheight",{"_index":2147,"title":{},"body":{"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["getheight(height",{"_index":1034,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["getlabelcore",{"_index":1249,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getnumdaysinmonth(month",{"_index":1206,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["getopen",{"_index":981,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["getselected",{"_index":1006,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["getselectedtab",{"_index":2148,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["getselectedtab(selected",{"_index":1031,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["gouvernement",{"_index":880,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_alt_text_en",{"_index":881,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_alt_text_fr",{"_index":883,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_aria_label_english",{"_index":873,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_aria_label_french",{"_index":877,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gov_logo_footer",{"_index":869,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["govcanadaalt",{"_index":892,"title":{},"body":{"components/HeaderComponent.html":{}}}],["govcanadalink",{"_index":893,"title":{},"body":{"components/HeaderComponent.html":{}}}],["government",{"_index":875,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["green",{"_index":1315,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["grey",{"_index":1313,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["grid",{"_index":1777,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["grip",{"_index":2272,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["h2",{"_index":2104,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["handlekeydown",{"_index":937,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["handlekeydown(event",{"_index":1449,"title":{},"body":{"interfaces/IOption.html":{}}}],["handlekeydown(key",{"_index":946,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["handleresize",{"_index":1898,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["handleresize(e",{"_index":1914,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["haserror",{"_index":1235,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["hasn't",{"_index":797,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["header",{"_index":890,"title":{},"body":{"components/HeaderComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":208,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["header.component.html",{"_index":891,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1842,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["header_img_link_en",{"_index":921,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_img_link_fr",{"_index":923,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_link_alt_fr",{"_index":927,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_link_atl_en",{"_index":925,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headercomponent",{"_index":207,"title":{"components/HeaderComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["heading",{"_index":852,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["height",{"_index":601,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["help_icon_alt_en",{"_index":1398,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["help_icon_alt_fr",{"_index":1400,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["helptext",{"_index":484,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["here",{"_index":1159,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["hidden",{"_index":210,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["hiddennavcomponent",{"_index":209,"title":{"components/HiddenNavComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["hide",{"_index":1767,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["hidedropdown",{"_index":1439,"title":{},"body":{"interfaces/IOption.html":{}}}],["hideshow",{"_index":1387,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["highlightindex",{"_index":719,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["highlightindex(el_id",{"_index":747,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hint",{"_index":1040,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["hinttext",{"_index":1432,"title":{},"body":{"interfaces/IOption.html":{}}}],["horizontal",{"_index":1525,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["host",{"_index":584,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["hostlistener",{"_index":765,"title":{},"body":{"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IOption.html":{},"interfaces/ISkipLinkConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["hostlistener('click",{"_index":1457,"title":{},"body":{"interfaces/IOption.html":{}}}],["hostlistener('document:click",{"_index":1466,"title":{},"body":{"interfaces/IOption.html":{}}}],["hostlistener('document:keydown.arrowdown",{"_index":753,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hostlistener('document:keydown.arrowup",{"_index":755,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hostlistener('document:keydown.enter",{"_index":757,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["hostlistener('keydown",{"_index":947,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["hostlistener('window:keydown.escape",{"_index":1448,"title":{},"body":{"interfaces/IOption.html":{}}}],["hostlistener('window:resize",{"_index":1915,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["hostlisteners",{"_index":726,"title":{},"body":{"components/FlyoutComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["href",{"_index":270,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"miscellaneous/enumerations.html":{}}}],["html",{"_index":163,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["htmlelement",{"_index":685,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["htmlinputelement",{"_index":1459,"title":{},"body":{"interfaces/IOption.html":{}}}],["https://www.canada.ca/en.html",{"_index":922,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["https://www.canada.ca/etc/designs/canada/wet",{"_index":870,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["https://www.canada.ca/fr.html",{"_index":924,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["i.active",{"_index":689,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["iaccordioncontainerconfig",{"_index":967,"title":{"interfaces/IAccordionContainerConfig.html":{}},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["ibannerconfig",{"_index":47,"title":{"interfaces/IBannerConfig.html":{}},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{}}}],["ibreadcrumbconfig",{"_index":268,"title":{"interfaces/IBreadcrumbConfig.html":{}},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"coverage.html":{}}}],["ibuttonconfig",{"_index":89,"title":{"interfaces/IButtonConfig.html":{}},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["icheckboxcomponentconfig",{"_index":418,"title":{"interfaces/ICheckBoxComponentConfig.html":{}},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"coverage.html":{}}}],["icodeviewerconfig",{"_index":996,"title":{"interfaces/ICodeViewerConfig.html":{}},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["icon",{"_index":68,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["icon'},{'name",{"_index":214,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["icon.component.html",{"_index":1287,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["icon/icon.component",{"_index":1812,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["iconbutton",{"_index":1391,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["iconbuttoncategories",{"_index":1270,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["iconbuttoncategories.custom",{"_index":1279,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["iconbuttoncategories.primary",{"_index":1275,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["iconbuttonclick",{"_index":1410,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["iconbuttoncomponent",{"_index":212,"title":{"components/IconButtonComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["iconclass",{"_index":1395,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["iconclickevent",{"_index":543,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["iconcomponent",{"_index":213,"title":{"components/IconComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["iconconfig",{"_index":24,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"components/InteractiveDemoComponent.html":{}}}],["iconconfigs",{"_index":1278,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["icondirection",{"_index":338,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"components/accordionContainerComponent.html":{}}}],["icons",{"_index":1277,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["iconspan",{"_index":1289,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["ictaconfig",{"_index":105,"title":{"interfaces/ICTAConfig.html":{}},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"coverage.html":{}}}],["id",{"_index":36,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["idatepickerconfig",{"_index":1036,"title":{"interfaces/IDatePickerConfig.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["idatepickerdropdownconfigs",{"_index":1105,"title":{"interfaces/IDatePickerDropDownConfigs.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["idatepickererrormessages",{"_index":1044,"title":{"interfaces/IDatePickerErrorMessages.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["idatepickerunknowndatetoggleconfig",{"_index":1045,"title":{"interfaces/IDatePickerUnknownDateToggleConfig.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{}}}],["ideally",{"_index":1421,"title":{},"body":{"interfaces/IOption.html":{}}}],["identifier",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":480,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["idropdownconfig",{"_index":625,"title":{"interfaces/IDropdownConfig.html":{}},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"coverage.html":{}}}],["ids",{"_index":1132,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["ierrorcomponentconfig",{"_index":696,"title":{"interfaces/IErrorComponentConfig.html":{}},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"coverage.html":{}}}],["ierroriconconfig",{"_index":699,"title":{"interfaces/IErrorIconConfig.html":{}},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ierrorids",{"_index":452,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ierrorpairs",{"_index":468,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["if(!target?.id.includes(this.config.id",{"_index":686,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["if((this.config.type",{"_index":854,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["if(e",{"_index":676,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["if(el_id",{"_index":811,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(option.id",{"_index":813,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(option.selected",{"_index":826,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.config.flyout",{"_index":671,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["if(this.config.options",{"_index":833,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.config.type",{"_index":772,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["if(this.disabled",{"_index":777,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.id",{"_index":773,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["if(this.options",{"_index":774,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.selection",{"_index":778,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["if(this.type",{"_index":781,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["iflyoutconfig",{"_index":656,"title":{"interfaces/IFlyoutConfig.html":{}},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"coverage.html":{}}}],["iflyoutoptionconfig",{"_index":733,"title":{"interfaces/IFlyoutOptionConfig.html":{}},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"coverage.html":{}}}],["iflyoutoptiontype",{"_index":851,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"miscellaneous/enumerations.html":{}}}],["iflyoutselecttypes",{"_index":770,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"miscellaneous/enumerations.html":{}}}],["ihiddennavconfig",{"_index":941,"title":{"interfaces/IHiddenNavConfig.html":{}},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["iiconbuttoncomponentconfig",{"_index":64,"title":{"interfaces/IIconButtonComponentConfig.html":{}},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["iiconbuttoniconconfig",{"_index":85,"title":{"interfaces/IIconButtonIconConfig.html":{}},"body":{"components/BannerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"coverage.html":{}}}],["iiconconfig",{"_index":1283,"title":{"interfaces/IIconConfig.html":{}},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"components/InfoTextSmallComponent.html":{},"coverage.html":{}}}],["iindicatorconfig",{"_index":1295,"title":{"interfaces/IIndicatorConfig.html":{}},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"coverage.html":{}}}],["iinputcomponentconfig",{"_index":1350,"title":{"interfaces/IInputComponentConfig.html":{}},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"coverage.html":{}}}],["ilabelconfig",{"_index":459,"title":{"interfaces/ILabelConfig.html":{}},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ilabeliconconfig",{"_index":473,"title":{"interfaces/ILabelIconConfig.html":{}},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["ilinkcomponentconfig",{"_index":283,"title":{"interfaces/ILinkComponentConfig.html":{}},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"coverage.html":{}}}],["ilinkconfig",{"_index":111,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["imageurl",{"_index":862,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["import",{"_index":81,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["important",{"_index":2114,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["imports",{"_index":1804,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["include",{"_index":1359,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["inconnu",{"_index":1100,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":822,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["indicator",{"_index":1321,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{}}}],["indicator'},{'name",{"_index":216,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["indicator.component",{"_index":1816,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["indicator.component.html",{"_index":1322,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":1511,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicator.component.ts:30",{"_index":1938,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:36",{"_index":1939,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:38",{"_index":1943,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:42",{"_index":1944,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:47",{"_index":1937,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:51",{"_index":1940,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:63",{"_index":1942,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator.component.ts:67",{"_index":1941,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["indicator/indicator.component",{"_index":1819,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["indicator/progress",{"_index":1510,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicatorcomponent",{"_index":215,"title":{"components/IndicatorComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["indicatorpalette",{"_index":1309,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatorpurpose",{"_index":1305,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatorpurpose.status",{"_index":1324,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["indicatorstatus",{"_index":1306,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatortreatment",{"_index":1302,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indicatortreatment.weak",{"_index":1323,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["indicatortype",{"_index":1300,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["individual",{"_index":1120,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["information",{"_index":1307,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/IndicatorComponent.html":{},"components/LabelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["infotextsmallcomponent",{"_index":217,"title":{"components/InfoTextSmallComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["initial",{"_index":706,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["inject",{"_index":1923,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["inject(platform_id",{"_index":1930,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["injectable",{"_index":1860,"title":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{},"coverage.html":{}}}],["injectables",{"_index":1861,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{},"index.html":{}}}],["inline",{"_index":589,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["inlinelabel",{"_index":478,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["inlinelabelbold",{"_index":479,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["input'},{'name",{"_index":220,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["input.component",{"_index":1829,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["input.component.html",{"_index":1357,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{}}}],["input.component.ts",{"_index":1555,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:103",{"_index":1967,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:137",{"_index":1966,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:153",{"_index":1963,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:167",{"_index":1968,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:172",{"_index":1971,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:186",{"_index":1964,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:20",{"_index":1984,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:21",{"_index":1985,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:23",{"_index":1983,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:26",{"_index":1986,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:60",{"_index":1976,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:61",{"_index":1981,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:62",{"_index":1973,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:63",{"_index":1975,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:65",{"_index":1960,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:69",{"_index":1962,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:70",{"_index":1961,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:72",{"_index":1977,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:76",{"_index":1974,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:77",{"_index":1959,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:80",{"_index":1980,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:84",{"_index":1978,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:85",{"_index":1979,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:86",{"_index":1972,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:89",{"_index":1969,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:92",{"_index":1970,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input.component.ts:96",{"_index":1965,"title":{},"body":{"components/RadioInputComponent.html":{}}}],["input/input.component",{"_index":1828,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["input/radio",{"_index":1554,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["input/search",{"_index":1575,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["inputcomponent",{"_index":219,"title":{"components/InputComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":33,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["inputtypes",{"_index":1355,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inputtypes.password",{"_index":1367,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["inputtypes.text",{"_index":1371,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["inputvalue",{"_index":1438,"title":{},"body":{"interfaces/IOption.html":{}}}],["instead",{"_index":1365,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["interacted",{"_index":653,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["interactive",{"_index":222,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["interactivedemocomponent",{"_index":221,"title":{"components/InteractiveDemoComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["interactivedemocomponentacccordion",{"_index":1743,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["interface",{"_index":104,"title":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"interfaces/slugTitleURLConfig.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["interfaces",{"_index":968,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"index.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["invalid",{"_index":431,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["ioption",{"_index":1414,"title":{"interfaces/IOption.html":{}},"body":{"interfaces/IOption.html":{},"coverage.html":{}}}],["iprogressindicatorconfig",{"_index":1508,"title":{"interfaces/IProgressIndicatorConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{}}}],["iprogresstagsconfig",{"_index":1515,"title":{"interfaces/IProgressTagsConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{}}}],["iradioinputcomponentconfig",{"_index":1552,"title":{"interfaces/IRadioInputComponentConfig.html":{}},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["iradioinputoption",{"_index":1557,"title":{"interfaces/IRadioInputOption.html":{}},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{},"coverage.html":{}}}],["ircc",{"_index":16,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["irccdsangularbannermodule",{"_index":1784,"title":{"modules/IrccDsAngularBannerModule.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularcomponentssharedmodule",{"_index":1798,"title":{"modules/IrccDsAngularComponentsSharedModule.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularformcomponents",{"_index":1835,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["irccdsangularformcomponentsmodule",{"_index":1822,"title":{"modules/IrccDsAngularFormComponentsModule.html":{}},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularheaderfootermodule",{"_index":1836,"title":{"modules/IrccDsAngularHeaderFooterModule.html":{}},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsangularlegacyoldmodule",{"_index":1848,"title":{"modules/IrccDsAngularLegacyOldModule.html":{}},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{},"modules.html":{}}}],["irccdsheaderfootercomponents",{"_index":1847,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["irccdslegacyoldcomponents",{"_index":1859,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["irccdssharedcomponents",{"_index":1821,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iscomponentclicked",{"_index":1441,"title":{},"body":{"interfaces/IOption.html":{}}}],["isdisabled",{"_index":401,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["isdragging",{"_index":2256,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["isearchinputbuttonconfig",{"_index":1573,"title":{"interfaces/ISearchInputButtonConfig.html":{}},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["isearchinputconfig",{"_index":1576,"title":{"interfaces/ISearchInputConfig.html":{}},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["iselectconfig",{"_index":1046,"title":{"interfaces/ISelectConfig.html":{}},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["iselectoptionsconfig",{"_index":1583,"title":{"interfaces/ISelectOptionsConfig.html":{}},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["isfocusinsidecomponent",{"_index":1440,"title":{},"body":{"interfaces/IOption.html":{}}}],["iskiplinkconfig",{"_index":951,"title":{"interfaces/ISkipLinkConfig.html":{}},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["isleapyear(year",{"_index":1221,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["ismobile",{"_index":1897,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["ispinnerconfig",{"_index":1600,"title":{"interfaces/ISpinnerConfig.html":{}},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["isplatformbrowser",{"_index":1922,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["isselected",{"_index":725,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["istepconfig",{"_index":1514,"title":{"interfaces/IStepConfig.html":{}},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{}}}],["it's",{"_index":674,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["itabconfig",{"_index":1000,"title":{"interfaces/ITabConfig.html":{}},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["itabnavconfig",{"_index":1001,"title":{"interfaces/ITabNavConfig.html":{}},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["item",{"_index":538,"title":{},"body":{"components/ChipItemComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["item'},{'name",{"_index":185,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["item.arialabel",{"_index":152,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["item.btnconfig",{"_index":153,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["item.btnconfig.arialabel",{"_index":154,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["item.component",{"_index":1425,"title":{},"body":{"interfaces/IOption.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["item.component.html",{"_index":539,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts",{"_index":537,"title":{},"body":{"components/ChipItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:13",{"_index":547,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts:17",{"_index":546,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts:8",{"_index":545,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.component.ts:9",{"_index":544,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["item.key",{"_index":1472,"title":{},"body":{"interfaces/IOption.html":{}}}],["item/chip",{"_index":536,"title":{},"body":{"components/ChipItemComponent.html":{},"interfaces/IOption.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{}}}],["items",{"_index":593,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["itextareacomponentconfig",{"_index":1629,"title":{"interfaces/ITextareaComponentConfig.html":{}},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["january",{"_index":1049,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["janvier",{"_index":1061,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["jds",{"_index":603,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["jj",{"_index":1096,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["jour",{"_index":1084,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["juillet",{"_index":1067,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["juin",{"_index":1066,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["july",{"_index":1054,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["june",{"_index":1053,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":595,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["key",{"_index":292,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/IconButtonComponent.html":{}}}],["keyboardevent",{"_index":740,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{}}}],["keydown",{"_index":940,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["keydown(key",{"_index":944,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["keyof",{"_index":106,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["keys",{"_index":1291,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["keyvaluediffer",{"_index":1418,"title":{},"body":{"interfaces/IOption.html":{}}}],["keyvaluediffers",{"_index":1417,"title":{},"body":{"interfaces/IOption.html":{}}}],["know",{"_index":802,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{}}}],["label",{"_index":427,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{}}}],["label'},{'name",{"_index":225,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["label.component.html",{"_index":1403,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["label/label.component",{"_index":1815,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["labelbutton",{"_index":1405,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["labelbuttonclickobs",{"_index":1864,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["labelbuttonclicksubj",{"_index":1865,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["labelbuttonservice",{"_index":1393,"title":{"injectables/LabelButtonService.html":{}},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"coverage.html":{}}}],["labelcomponent",{"_index":224,"title":{"components/LabelComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["labelconfig",{"_index":402,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["labelcore",{"_index":1250,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["labeliconconfig",{"_index":488,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["labelicontext",{"_index":1404,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["labels",{"_index":1180,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["lang",{"_index":449,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["langauge",{"_index":1173,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["langchangeevent",{"_index":2089,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["langtoggle",{"_index":1903,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["language",{"_index":227,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["language_switch_text_english",{"_index":1925,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language_switch_text_english_mobile",{"_index":1927,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language_switch_text_french",{"_index":1928,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language_switch_text_french_mobile",{"_index":1929,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["languageclickobs",{"_index":1889,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["languageclicksub",{"_index":1890,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["languageswitchbuttonservice",{"_index":1886,"title":{"injectables/LanguageSwitchButtonService.html":{}},"body":{"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["languageswitchcomponent",{"_index":226,"title":{"components/LanguageSwitchComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["languagetoggleclick",{"_index":1891,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["large",{"_index":99,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lato",{"_index":2116,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["layer",{"_index":296,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["layout",{"_index":2135,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["lead",{"_index":302,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["leap",{"_index":1220,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["left",{"_index":364,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["legacy",{"_index":1853,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":162,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["less",{"_index":1598,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["lets",{"_index":801,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["letter",{"_index":2117,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["lib",{"_index":18,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["lib/src/lib/banner",{"_index":10,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"modules/IrccDsAngularBannerModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/form",{"_index":385,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/header",{"_index":857,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/legacy",{"_index":534,"title":{},"body":{"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"interfaces/IOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts",{"_index":256,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:33",{"_index":271,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:38",{"_index":267,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:44",{"_index":279,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:48",{"_index":277,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:66",{"_index":272,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/link/link.component.ts",{"_index":328,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{},"interfaces/ILinkComponentConfig.html":{},"coverage.html":{}}}],["lib/src/lib/shared/breadcrumb/link/link.component.ts:15",{"_index":331,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{}}}],["lib/src/lib/shared/breadcrumb/link/link.component.ts:17",{"_index":330,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts",{"_index":334,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/button/button.component.ts:47",{"_index":344,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:50",{"_index":348,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:51",{"_index":342,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:52",{"_index":349,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:53",{"_index":343,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:54",{"_index":341,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:55",{"_index":345,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:56",{"_index":346,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:57",{"_index":347,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:58",{"_index":351,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:60",{"_index":352,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:62",{"_index":355,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/button/button.component.ts:81",{"_index":354,"title":{},"body":{"components/ButtonComponent.html":{}}}],["lib/src/lib/shared/dropdown/drop",{"_index":612,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"coverage.html":{}}}],["lib/src/lib/shared/flyout",{"_index":844,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts",{"_index":713,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:111",{"_index":746,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:118",{"_index":759,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:22",{"_index":763,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:24",{"_index":730,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:27",{"_index":732,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:28",{"_index":734,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:29",{"_index":731,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:30",{"_index":735,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:31",{"_index":736,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:34",{"_index":737,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:36",{"_index":764,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:37",{"_index":760,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:39",{"_index":750,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:49",{"_index":741,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:64",{"_index":743,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:84",{"_index":745,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/flyout/flyout.component.ts:91",{"_index":748,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["lib/src/lib/shared/icon",{"_index":1267,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts",{"_index":1284,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{},"coverage.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:20",{"_index":1675,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:21",{"_index":1672,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:22",{"_index":1671,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:23",{"_index":1673,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/icon/icon.component.ts:25",{"_index":1674,"title":{},"body":{"components/IconComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts",{"_index":1296,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:103",{"_index":1678,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:110",{"_index":1677,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:66",{"_index":1676,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:71",{"_index":1685,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:72",{"_index":1684,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:73",{"_index":1686,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:74",{"_index":1683,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:76",{"_index":1682,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:81",{"_index":1680,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:85",{"_index":1681,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/indicator/indicator.component.ts:92",{"_index":1679,"title":{},"body":{"components/IndicatorComponent.html":{}}}],["lib/src/lib/shared/ircc",{"_index":1808,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/label/label",{"_index":1862,"title":{},"body":{"injectables/LabelButtonService.html":{},"coverage.html":{}}}],["lib/src/lib/shared/label/label.component.ts",{"_index":1390,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/label/label.component.ts:38",{"_index":1878,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:42",{"_index":1877,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:46",{"_index":1883,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:50",{"_index":1880,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:57",{"_index":1882,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:71",{"_index":1879,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/label/label.component.ts:75",{"_index":1881,"title":{},"body":{"components/LabelComponent.html":{}}}],["lib/src/lib/shared/progress",{"_index":1509,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts",{"_index":1601,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:29",{"_index":2030,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:31",{"_index":2020,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:34",{"_index":2021,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:35",{"_index":2025,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:36",{"_index":2024,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:37",{"_index":2023,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:38",{"_index":2022,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:39",{"_index":2019,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:43",{"_index":2027,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:59",{"_index":2026,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:63",{"_index":2029,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/spinner/spinner.component.ts:74",{"_index":2028,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts",{"_index":1614,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{},"coverage.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:21",{"_index":2032,"title":{},"body":{"components/TabsComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:25",{"_index":2033,"title":{},"body":{"components/TabsComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:27",{"_index":2034,"title":{},"body":{"components/TabsComponent.html":{}}}],["lib/src/lib/shared/tabs/tabs.component.ts:34",{"_index":2035,"title":{},"body":{"components/TabsComponent.html":{}}}],["library",{"_index":977,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["library/.../banner.component.ts",{"_index":2232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../breadcrumb.component.ts",{"_index":2240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../button.component.ts",{"_index":2233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../date",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../flyout",{"_index":2236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../flyout.component.ts",{"_index":2237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../footer.component.ts",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../header.component.ts",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../icon",{"_index":2235,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/.../indicator.component.ts",{"_index":2238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../input.component.ts",{"_index":2239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../interactive",{"_index":2234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../ircc",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../label.component.ts",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../language",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/.../progress",{"_index":2241,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/.../spinner.component.ts",{"_index":2244,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/.../textarea.component.ts",{"_index":2242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/.../title",{"_index":2243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["library/component",{"_index":9,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["library/layout/layout",{"_index":2134,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["library/src/app/components/accordion",{"_index":969,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{},"coverage.html":{}}}],["library/src/app/components/code",{"_index":997,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["library/src/app/components/component",{"_index":571,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"coverage.html":{}}}],["library/src/app/components/info",{"_index":1688,"title":{},"body":{"components/InfoTextSmallComponent.html":{},"coverage.html":{}}}],["library/src/app/components/interactive",{"_index":1733,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["library/src/app/components/resizable",{"_index":2211,"title":{},"body":{"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["library/src/app/components/title",{"_index":2066,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["library/tokens/sizes",{"_index":1757,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{}}}],["library/tokens/template",{"_index":2132,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["library/util/device",{"_index":2136,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["library/util/size",{"_index":1758,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["library/util/theme",{"_index":2164,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["light",{"_index":1747,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["limit",{"_index":1433,"title":{},"body":{"interfaces/IOption.html":{}}}],["line",{"_index":139,"title":{},"body":{"components/BannerComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lines",{"_index":2273,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["linevisible",{"_index":25,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["link",{"_index":102,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{}}}],["link'},{'name",{"_index":178,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["link.component.html",{"_index":329,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{},"interfaces/ILinkComponentConfig.html":{}}}],["link.href",{"_index":314,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.linkkey",{"_index":325,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.routerlink",{"_index":315,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link.text",{"_index":327,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["link.title",{"_index":966,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["link/link.component",{"_index":284,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["link[this.config.type",{"_index":324,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["linkconfig",{"_index":108,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["linkkey",{"_index":332,"title":{},"body":{"components/BreadcrumbLinkComponent.html":{},"interfaces/ILinkComponentConfig.html":{}}}],["links",{"_index":299,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["linktype",{"_index":289,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"miscellaneous/enumerations.html":{}}}],["list",{"_index":551,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list'},{'name",{"_index":187,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["list.component",{"_index":1856,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{}}}],["list.component.html",{"_index":552,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts",{"_index":550,"title":{},"body":{"components/ChipListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":558,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:13",{"_index":561,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:15",{"_index":564,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:20",{"_index":562,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:8",{"_index":559,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list.component.ts:9",{"_index":560,"title":{},"body":{"components/ChipListComponent.html":{}}}],["list/chip",{"_index":549,"title":{},"body":{"components/ChipListComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{}}}],["listens",{"_index":1909,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["literal",{"_index":1669,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["live",{"_index":1584,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["loading",{"_index":1604,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["locked",{"_index":1537,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":926,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["looks",{"_index":650,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["lov",{"_index":1200,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["mai",{"_index":1065,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":1366,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["makes",{"_index":1363,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["many",{"_index":494,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["mapping",{"_index":1276,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["march",{"_index":1051,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":606,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{}}}],["markastouched",{"_index":1567,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["mars",{"_index":1063,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":255,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["math.max(this.selectedindex",{"_index":796,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["max",{"_index":598,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{}}}],["maxlimit",{"_index":1651,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["maxyear",{"_index":1041,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["mid",{"_index":295,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["mime",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["min",{"_index":600,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/resizableContainerComponent.html":{}}}],["minheight",{"_index":2260,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["minheightresizecontainer",{"_index":1014,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["minyear",{"_index":1042,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["miscellaneous",{"_index":2230,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":483,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["mixed",{"_index":476,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["mixin",{"_index":2138,"title":{},"body":{"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["mobile",{"_index":1912,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["module",{"_index":1783,"title":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}},"body":{}}],["modules",{"_index":1785,"title":{"modules.html":{}},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{},"modules.html":{}}}],["mois",{"_index":1085,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["month",{"_index":1081,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["monthnum",{"_index":1207,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["months",{"_index":1109,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["monthselect",{"_index":1113,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["monthunknown",{"_index":1102,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["more",{"_index":1399,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"miscellaneous/variables.html":{}}}],["mostly",{"_index":1585,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["mousedown",{"_index":2287,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["mouseevent",{"_index":2291,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["mousemove",{"_index":2290,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["mouseup",{"_index":2296,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["multi",{"_index":393,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["nav",{"_index":935,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{}}}],["nav'},{'name",{"_index":211,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["nav.component",{"_index":1846,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["nav.component.html",{"_index":936,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["nav.component.ts",{"_index":934,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"coverage.html":{}}}],["nav.component.ts:19",{"_index":942,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.component.ts:23",{"_index":949,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.component.ts:33",{"_index":945,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.component.ts:38",{"_index":950,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["nav.scrollleft",{"_index":1627,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["nav/hidden",{"_index":933,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"coverage.html":{}}}],["navigation",{"_index":297,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["navy",{"_index":1317,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["need",{"_index":1423,"title":{},"body":{"interfaces/IOption.html":{}}}],["needs",{"_index":906,"title":{},"body":{"components/HeaderComponent.html":{}}}],["nested",{"_index":1586,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["neutral",{"_index":1308,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["never",{"_index":482,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["new",{"_index":124,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["ng_value_accessor",{"_index":390,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ngaftercontentinit",{"_index":2076,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["ngafterviewchecked",{"_index":29,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["ngafterviewinit",{"_index":30,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/resizableContainerComponent.html":{}}}],["ngdocheck",{"_index":1469,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["ngmodule",{"_index":1796,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["ngonchange",{"_index":1595,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["ngonchanges",{"_index":261,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/codeViewerComponent.html":{}}}],["ngonchanges(changes",{"_index":275,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/codeViewerComponent.html":{}}}],["ngoninit",{"_index":31,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["ngx",{"_index":285,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["none",{"_index":145,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nothing",{"_index":803,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["notstarted",{"_index":1546,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["november",{"_index":1058,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["novembre",{"_index":1071,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["now",{"_index":112,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["null",{"_index":707,"title":{},"body":{"components/ErrorComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["number",{"_index":350,"title":{},"body":{"components/ButtonComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/IStepConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["number(this.config?.charlimit",{"_index":1654,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["numdays",{"_index":1160,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["obj",{"_index":1259,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["object",{"_index":1902,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["object.keys(change",{"_index":1292,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["october",{"_index":1057,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["octobre",{"_index":1070,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["old.module.ts",{"_index":1854,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["old/autocomplete/autocomplete.component.ts",{"_index":1415,"title":{},"body":{"interfaces/IOption.html":{},"coverage.html":{}}}],["old/chips/chip",{"_index":535,"title":{},"body":{"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"coverage.html":{}}}],["old/chips/secondary",{"_index":1988,"title":{},"body":{"components/SecondaryChipsComponent.html":{},"coverage.html":{}}}],["old/ircc",{"_index":1852,"title":{},"body":{"modules/IrccDsAngularLegacyOldModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["old/search",{"_index":1574,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["onarrowdown",{"_index":720,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["onarrowdown(event",{"_index":751,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["onarrowup",{"_index":721,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["onarrowup(event",{"_index":754,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["onblur",{"_index":1594,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["onchange",{"_index":403,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["onchanges",{"_index":257,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/ProgressTagsComponent.html":{}}}],["onclicked",{"_index":1592,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["onenter",{"_index":722,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["onenter(event",{"_index":756,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["onenterkeypress",{"_index":540,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["oniconclick",{"_index":541,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["onmouseenter",{"_index":1468,"title":{},"body":{"interfaces/IOption.html":{}}}],["onsubmit",{"_index":554,"title":{},"body":{"components/ChipListComponent.html":{}}}],["ontouch",{"_index":404,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["ontouched",{"_index":1266,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["ontouchedlabel",{"_index":409,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["open",{"_index":974,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["openaccordion",{"_index":994,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["opens",{"_index":649,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["option",{"_index":808,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["option'},{'name",{"_index":204,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["option.active",{"_index":814,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option.clickable",{"_index":787,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option.component",{"_index":769,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["option.component.html",{"_index":846,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["option.component.ts",{"_index":845,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["option.component.ts:27",{"_index":849,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["option.component.ts:32",{"_index":847,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["option.component.ts:36",{"_index":850,"title":{},"body":{"components/FlyoutOptionComponent.html":{}}}],["option.selected",{"_index":830,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option.text",{"_index":1982,"title":{},"body":{"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["option.value",{"_index":820,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["option/flyout",{"_index":768,"title":{},"body":{"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["optional",{"_index":56,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["optioncontainers",{"_index":716,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["options",{"_index":658,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["optionselected",{"_index":723,"title":{},"body":{"components/FlyoutComponent.html":{}}}],["optionselected(i",{"_index":758,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["orange",{"_index":1311,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["orientation",{"_index":1512,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["orientations",{"_index":1524,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["originaloptions",{"_index":1437,"title":{},"body":{"interfaces/IOption.html":{}}}],["otherwise",{"_index":909,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["out",{"_index":1791,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["output",{"_index":83,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/SearchInputComponent.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["outputs",{"_index":37,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/FlyoutComponent.html":{},"components/IconButtonComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/SearchInputComponent.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["overflow",{"_index":2171,"title":{},"body":{"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["override",{"_index":708,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["overrride",{"_index":1752,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["overview",{"_index":2245,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":2215,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1344,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["page",{"_index":305,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["pages",{"_index":301,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["palette",{"_index":1297,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panel/accordion",{"_index":970,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["param",{"_index":500,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["parent",{"_index":446,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["parentid",{"_index":461,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["pas",{"_index":1543,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":1356,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["phone",{"_index":2143,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["picker",{"_index":1106,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["picker'},{'name",{"_index":195,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["picker.component",{"_index":1833,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["picker.component.html",{"_index":1107,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["picker.component.ts",{"_index":1039,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picker/date",{"_index":1038,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["placeholder",{"_index":1352,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["placeholdertext",{"_index":623,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["plain",{"_index":357,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["platform_id",{"_index":1924,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["platformid",{"_index":1905,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["plus",{"_index":1401,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{},"miscellaneous/variables.html":{}}}],["pointer",{"_index":611,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["populate",{"_index":1147,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["portinputvalues",{"_index":693,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["position",{"_index":2111,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["possible",{"_index":497,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["pre",{"_index":2170,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["present",{"_index":1121,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["press",{"_index":1407,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["pressed",{"_index":1408,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["prev",{"_index":322,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["preview",{"_index":574,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview'},{'name",{"_index":192,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["preview.component.html",{"_index":577,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview.component.scss",{"_index":576,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview.component.ts",{"_index":573,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:10",{"_index":580,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview.component.ts:9",{"_index":581,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["preview/component",{"_index":572,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"coverage.html":{}}}],["previous",{"_index":300,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["primary",{"_index":76,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/LabelComponent.html":{},"components/ProgressTagsComponent.html":{},"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["private",{"_index":306,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["progress",{"_index":230,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["progress_indicator_step_en",{"_index":1519,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["progress_indicator_step_fr",{"_index":1521,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["progressindicatorcomponent",{"_index":229,"title":{"components/ProgressIndicatorComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["progresstagscomponent",{"_index":231,"title":{"components/ProgressTagsComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IProgressTagsConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"properties.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["provide",{"_index":389,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["providedin",{"_index":1874,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["providers",{"_index":388,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["public",{"_index":405,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["pulled",{"_index":902,"title":{},"body":{"components/HeaderComponent.html":{}}}],["purple",{"_index":1316,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["purpose",{"_index":1298,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["push(this.config.options[i]);*/console.log('multi",{"_index":841,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["px",{"_index":2281,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["querylist",{"_index":761,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["radio",{"_index":234,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["radioinputcomponent",{"_index":233,"title":{"components/RadioInputComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["radius",{"_index":1760,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["rc.12",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":1832,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["really",{"_index":1362,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["receives",{"_index":644,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["red",{"_index":1312,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["registeronchange",{"_index":410,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(fn",{"_index":437,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(onchange",{"_index":1565,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["registerontouched",{"_index":411,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(fn",{"_index":440,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(ontouched",{"_index":1566,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["regular",{"_index":2271,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["relative",{"_index":2112,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["removeallchipitems",{"_index":1493,"title":{},"body":{"interfaces/IOption.html":{}}}],["removechipitem",{"_index":555,"title":{},"body":{"components/ChipListComponent.html":{}}}],["removechipitem(chipidx",{"_index":563,"title":{},"body":{"components/ChipListComponent.html":{}}}],["removechipitem(index",{"_index":1491,"title":{},"body":{"interfaces/IOption.html":{}}}],["removed",{"_index":1373,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["removevertical",{"_index":1613,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["renderer",{"_index":2265,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["renderer2",{"_index":2263,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["replace",{"_index":110,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["representing",{"_index":435,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["required",{"_index":475,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["reset",{"_index":362,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}],["resizable",{"_index":236,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["resizablecontainercomponent",{"_index":235,"title":{"components/resizableContainerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{}}}],["resizabletypes",{"_index":1634,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["resize",{"_index":2297,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resize_aria",{"_index":2270,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resize_button",{"_index":2269,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resizebar",{"_index":2257,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resizebuttonconfig",{"_index":2258,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resizecontainer",{"_index":2259,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["resizes",{"_index":1911,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["rest",{"_index":1756,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["result",{"_index":903,"title":{},"body":{"components/HeaderComponent.html":{}}}],["results",{"_index":254,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["retcontrol",{"_index":504,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["return",{"_index":429,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{}}}],["returnlabel",{"_index":1412,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["returnoptionstodefault",{"_index":1484,"title":{},"body":{"interfaces/IOption.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["reverse",{"_index":791,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["right",{"_index":365,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/accordionContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":1875,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["rotatechevron",{"_index":1589,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["rotatez(180deg",{"_index":1773,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["rounded",{"_index":119,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["routerlink",{"_index":290,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"miscellaneous/enumerations.html":{}}}],["routerlinks",{"_index":274,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["routermodule",{"_index":1810,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["row",{"_index":1780,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/resizableContainerComponent.html":{}}}],["rxjs",{"_index":1873,"title":{},"body":{"injectables/LabelButtonService.html":{},"injectables/LanguageSwitchButtonService.html":{}}}],["s3",{"_index":2220,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":1409,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["sass:map",{"_index":2166,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["savedselectedoptions",{"_index":1435,"title":{},"body":{"interfaces/IOption.html":{}}}],["screen",{"_index":1910,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["scrolling",{"_index":824,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["scrolltoanchor",{"_index":938,"title":{},"body":{"components/HiddenNavComponent.html":{}}}],["scrolltoanchor(id",{"_index":948,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["scss",{"_index":1754,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["sdk/client",{"_index":2219,"title":{},"body":{"dependencies.html":{}}}],["sdk/lib",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":238,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["searchbutton",{"_index":1578,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["searchevent",{"_index":1579,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["searchinputcomponent",{"_index":237,"title":{"components/SearchInputComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["searchinputcontrol",{"_index":1580,"title":{},"body":{"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"components/SearchInputComponent.html":{}}}],["secondary",{"_index":240,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IButtonConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["secondarychipscomponent",{"_index":239,"title":{"components/SecondaryChipsComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["segment",{"_index":294,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["select",{"_index":838,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["select'},{'name",{"_index":243,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["select.component.html",{"_index":1587,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["select/select.component",{"_index":1047,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"modules/IrccDsAngularFormComponentsModule.html":{}}}],["selectall",{"_index":1494,"title":{},"body":{"interfaces/IOption.html":{}}}],["selectcomponent",{"_index":242,"title":{"components/SelectComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":618,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["selectedid",{"_index":1621,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["selectedindex",{"_index":717,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selectedoption",{"_index":621,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IOption.html":{}}}],["selectedoption(e",{"_index":636,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["selectedoption.value",{"_index":1483,"title":{},"body":{"interfaces/IOption.html":{}}}],["selectedoptions",{"_index":1436,"title":{},"body":{"interfaces/IOption.html":{}}}],["selectedtab",{"_index":1010,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["selectindex(index",{"_index":1496,"title":{},"body":{"interfaces/IOption.html":{}}}],["selection",{"_index":724,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selections",{"_index":828,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["selectors",{"_index":2167,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["selectors}#{template",{"_index":2168,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["selects",{"_index":675,"title":{},"body":{"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["selectvaluechange",{"_index":1434,"title":{},"body":{"interfaces/IOption.html":{}}}],["self",{"_index":2300,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["sense",{"_index":1364,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["sentiment",{"_index":1319,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["september",{"_index":1056,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["septembre",{"_index":1069,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":65,"title":{},"body":{"components/BannerComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{}}}],["setdisabledstate",{"_index":412,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":442,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":501,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["setheight",{"_index":2261,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["setlabellanguage",{"_index":1182,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["setlang",{"_index":413,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["setlang(lang",{"_index":447,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["sets",{"_index":807,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"components/LanguageSwitchComponent.html":{}}}],["setselected",{"_index":2031,"title":{},"body":{"components/TabsComponent.html":{}}}],["setselected(selectedid",{"_index":1620,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["settext",{"_index":1899,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["settext(lang",{"_index":1917,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["settimeout(function",{"_index":129,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["setting",{"_index":829,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["settypetitle",{"_index":1550,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["setup",{"_index":836,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["setupcomponent",{"_index":1021,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["setyeardaylanguage",{"_index":1174,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["share/pipe",{"_index":2090,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["shared.module",{"_index":1800,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["shared.module.ts",{"_index":1809,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/button/button.component",{"_index":90,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["shared/constants/jl",{"_index":281,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["shared/functions/stand",{"_index":287,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["shared/icon",{"_index":86,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["shared/interfaces/component",{"_index":469,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["shared/ircc",{"_index":1799,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["shared/label/label.component",{"_index":474,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["show",{"_index":1768,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["showcontent",{"_index":1009,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["shownav",{"_index":939,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["showpassword",{"_index":1369,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["showplaceholder",{"_index":619,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["simplechanges",{"_index":276,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/codeViewerComponent.html":{}}}],["single",{"_index":771,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"miscellaneous/enumerations.html":{}}}],["size",{"_index":123,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["sizeoverride",{"_index":1559,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["sizes",{"_index":2133,"title":{},"body":{"components/accordionContainerComponent.html":{}}}],["sizes.$fixed",{"_index":1762,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["skiplinks",{"_index":952,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["slice(0",{"_index":790,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["slug",{"_index":251,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["sluganchortype",{"_index":2093,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["sluganchortype.primary",{"_index":2083,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugify.pipe",{"_index":2091,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugifypipe",{"_index":2070,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugtitleurlconfig",{"_index":2080,"title":{"interfaces/slugTitleURLConfig.html":{}},"body":{"components/TitleSlugUrlComponent.html":{},"coverage.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugtitleurltype",{"_index":2092,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["slugtitleurltype.primary",{"_index":2081,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["small",{"_index":100,"title":{},"body":{"components/BannerComponent.html":{},"components/ButtonComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["small'},{'name",{"_index":218,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["small.component.html",{"_index":1692,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["small.component.scss",{"_index":1691,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["small.component.ts",{"_index":1690,"title":{},"body":{"components/InfoTextSmallComponent.html":{},"coverage.html":{}}}],["small.component.ts:10",{"_index":1696,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["small.component.ts:13",{"_index":1694,"title":{},"body":{"components/InfoTextSmallComponent.html":{}}}],["small/info",{"_index":1689,"title":{},"body":{"components/InfoTextSmallComponent.html":{},"coverage.html":{}}}],["smooth",{"_index":817,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["solid",{"_index":71,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["something",{"_index":1597,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["space",{"_index":2172,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["spacing",{"_index":2118,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["spancontent",{"_index":1293,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["specifically",{"_index":1753,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["spinner",{"_index":1609,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":245,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["spinner.component.html",{"_index":1610,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["spinner/spinner.component",{"_index":1820,"title":{},"body":{"modules/IrccDsAngularComponentsSharedModule.html":{}}}],["spinner_labels_en",{"_index":1603,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spinner_labels_fr",{"_index":1605,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spinnercomponent",{"_index":244,"title":{"components/SpinnerComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["spinnertype",{"_index":1608,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["standalone",{"_index":265,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["standalonefunctions",{"_index":266,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["start",{"_index":1427,"title":{},"body":{"interfaces/IOption.html":{},"components/accordionContainerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["started",{"_index":1538,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":430,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["statement",{"_index":1158,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["statements",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1431,"title":{},"body":{"interfaces/IOption.html":{},"components/resizableContainerComponent.html":{}}}],["status",{"_index":654,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["step",{"_index":1520,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["steps",{"_index":1513,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["steptext",{"_index":1529,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["storage",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":41,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["string(year",{"_index":1209,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["strong",{"_index":1303,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["style",{"_index":1763,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["styles",{"_index":570,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["styleurls",{"_index":575,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"components/InfoTextSmallComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["styling",{"_index":810,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["submit",{"_index":361,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["subscribes",{"_index":900,"title":{},"body":{"components/HeaderComponent.html":{}}}],["success",{"_index":96,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["succès",{"_index":1607,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":2250,"title":{},"body":{"modules.html":{}}}],["surface1",{"_index":1766,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["surface2",{"_index":597,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{}}}],["svg",{"_index":2251,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1888,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["switch'},{'name",{"_index":228,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["switch.component",{"_index":1845,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{}}}],["switch.component.html",{"_index":1896,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts",{"_index":1895,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["switch.component.ts:24",{"_index":1906,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:26",{"_index":1920,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:28",{"_index":1921,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:29",{"_index":1904,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:41",{"_index":1908,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:48",{"_index":1916,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:57",{"_index":1919,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:61",{"_index":1918,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch/language",{"_index":1844,"title":{},"body":{"modules/IrccDsAngularHeaderFooterModule.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["symbol",{"_index":874,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["symbole",{"_index":878,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":957,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["tab.id",{"_index":1029,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["tab?.getboundingclientrect().left",{"_index":1625,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["tabclick",{"_index":1527,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabclickfn",{"_index":1936,"title":{},"body":{"components/ProgressIndicatorComponent.html":{}}}],["tabclickfn(selected",{"_index":1531,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabconfig",{"_index":1007,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/codeViewerComponent.html":{}}}],["tabindex",{"_index":339,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["table",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2213,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":1913,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["tabnavconfig",{"_index":1528,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabs",{"_index":1615,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["tabs'},{'name",{"_index":247,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["tabs.component.html",{"_index":1616,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":1518,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tabscomponent",{"_index":246,"title":{"components/TabsComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["tag",{"_index":1328,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["tag_labels_en",{"_index":1535,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag_labels_fr",{"_index":1539,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tagconfig",{"_index":1523,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tags",{"_index":1547,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{}}}],["tags'},{'name",{"_index":232,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["tags.component",{"_index":1517,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{}}}],["tags.component.html",{"_index":1548,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{}}}],["tags.component.ts",{"_index":1534,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tags.component.ts:37",{"_index":1952,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:39",{"_index":1946,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:42",{"_index":1947,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:43",{"_index":1948,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:44",{"_index":1945,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:48",{"_index":1950,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:58",{"_index":1949,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags.component.ts:62",{"_index":1951,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["tags/progress",{"_index":1516,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IStepConfig.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tagtype",{"_index":1545,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["take",{"_index":113,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["takes",{"_index":806,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["tap",{"_index":1522,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":683,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IOption.html":{}}}],["target.classlist.contains('select",{"_index":1464,"title":{},"body":{"interfaces/IOption.html":{}}}],["target.classlist.contains(`selected",{"_index":1465,"title":{},"body":{"interfaces/IOption.html":{}}}],["target.type",{"_index":1461,"title":{},"body":{"interfaces/IOption.html":{}}}],["teal",{"_index":1310,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IOption.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["test_component",{"_index":1764,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["text",{"_index":75,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{}}}],["text[0",{"_index":1957,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[1",{"_index":1953,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[2",{"_index":1954,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[3",{"_index":1955,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["text[4",{"_index":1956,"title":{},"body":{"components/ProgressTagsComponent.html":{}}}],["textarea",{"_index":1636,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textarea'},{'name",{"_index":249,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["textarea.component.html",{"_index":1637,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textarea/textarea.component",{"_index":1834,"title":{},"body":{"modules/IrccDsAngularFormComponentsModule.html":{}}}],["textarea_component.maxlimit",{"_index":1653,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textarea_component.warninglimit",{"_index":1657,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["textareacomponent",{"_index":248,"title":{"components/TextareaComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"index.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["textareainput.value.length",{"_index":2064,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textid",{"_index":26,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["theme",{"_index":2165,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["thin",{"_index":1272,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["this.a11ytext",{"_index":819,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.abbr",{"_index":1347,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.activiatedselect",{"_index":1591,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["this.addhover",{"_index":1463,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.altimage",{"_index":888,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.aria",{"_index":887,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["this.ariadissmissible",{"_index":157,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.arialabel",{"_index":374,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.ariatext",{"_index":1378,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.baseurl",{"_index":316,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.btnaction.emit(id",{"_index":384,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.btnevent?.emit(this.config.id",{"_index":133,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.buttontext",{"_index":990,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.buttontextclosed",{"_index":991,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.category",{"_index":368,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.charactercountstatus",{"_index":1644,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.charactercountstatus(change[this.config.id]?.length",{"_index":1646,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.charlimit",{"_index":1641,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.charlimitstatus",{"_index":1650,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.checkduplicated(index",{"_index":1499,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.checklabellength",{"_index":1332,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.checklabelrounded",{"_index":1330,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.checknumber",{"_index":1331,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.chipcontenttext",{"_index":568,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.chiplist?.push(this.chipcontenttext",{"_index":569,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.chiplist?.splice(chipidx",{"_index":566,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.chiplistchange.emit(this.chiplist",{"_index":567,"title":{},"body":{"components/ChipListComponent.html":{}}}],["this.clearflyoutfocus",{"_index":679,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.clearoptions",{"_index":840,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.clickevent.emit(id",{"_index":1282,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.color",{"_index":372,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config",{"_index":155,"title":{},"body":{"components/BannerComponent.html":{},"components/CheckboxComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.config.ariadissmissible",{"_index":156,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config.arialabel",{"_index":375,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.config.baseurlkey",{"_index":318,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config.buttontext",{"_index":986,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.config.buttontextclosed",{"_index":988,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.config.category",{"_index":369,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.config.charlimit",{"_index":1642,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config.clickable",{"_index":855,"title":{},"body":{"components/FlyoutOptionComponent.html":{},"interfaces/IFlyoutOptionConfig.html":{}}}],["this.config.color",{"_index":373,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config.desc",{"_index":514,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.disabled",{"_index":377,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/IconButtonComponent.html":{},"components/RadioInputComponent.html":{}}}],["this.config.errorlov",{"_index":711,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.config.errormessages",{"_index":512,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.errormessages.general",{"_index":1146,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.errormessages?.general",{"_index":1118,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.flyout",{"_index":673,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.flyout.options.foreach(i",{"_index":688,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.formgroup",{"_index":460,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.controls[this.config.id].value",{"_index":1643,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.controls[this.config.id].value.length",{"_index":1645,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.disable",{"_index":1264,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.enable",{"_index":1265,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get",{"_index":1165,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.config.id",{"_index":505,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.config.formgroup.get(this.config.id)?.invalid",{"_index":531,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.config.formgroup.get(this.config.id)?.statuschanges.subscribe",{"_index":522,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.config.formgroup.get(this.config.id)?.touched",{"_index":530,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.day.id)?.invalid",{"_index":1230,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.day.id)?.touched",{"_index":1229,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.month.id)?.invalid",{"_index":1228,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.month.id)?.touched",{"_index":1227,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.year.id)?.invalid",{"_index":1226,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.get(this.dropdownconfigs.year.id)?.touched",{"_index":1225,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.setvalue(obj",{"_index":1260,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup.valuechanges.subscribe((change",{"_index":1381,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.formgroup.valuechanges.subscribe(fn",{"_index":1262,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup?.invalid",{"_index":1233,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.formgroup?.touched",{"_index":1232,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.helptext",{"_index":515,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["this.config.hint",{"_index":1119,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.icon",{"_index":381,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{}}}],["this.config.icondirection",{"_index":382,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config.id",{"_index":367,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{}}}],["this.config.label",{"_index":513,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.label.length",{"_index":1340,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.config.label.trim().length",{"_index":669,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.labeliconconfig",{"_index":517,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.links",{"_index":319,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config.links.length",{"_index":320,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config.maxyear",{"_index":1127,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.minyear",{"_index":1129,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.open",{"_index":993,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.config.openaccordion",{"_index":1013,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.config.options",{"_index":775,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["this.config.options.slice(this.selectedindex",{"_index":785,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options?.foreach(option",{"_index":812,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options[i].clickable",{"_index":835,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options[i].selected",{"_index":834,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.options[index].disabled",{"_index":1572,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["this.config.orientation",{"_index":1530,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.config.placeholdertext",{"_index":667,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config.required",{"_index":516,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.config.selected",{"_index":1023,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["this.config.selection",{"_index":779,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config.size",{"_index":371,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.config.tab",{"_index":1025,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{},"components/codeViewerComponent.html":{}}}],["this.config.tab.find",{"_index":1028,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.config.tab[0",{"_index":1030,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.config.tab[0].id",{"_index":1618,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.config.tabindex",{"_index":379,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.config.toplabel",{"_index":1413,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/LabelComponent.html":{},"components/SelectComponent.html":{}}}],["this.config.type",{"_index":311,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.config.unknowndatetoggle",{"_index":1131,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.unknowndatetoggle?.dayunknown",{"_index":1166,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config.unknowndatetoggle?.yearunknown",{"_index":1156,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.config?.charlimit",{"_index":1648,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.config?.cta",{"_index":150,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config?.cta.foreach((item",{"_index":151,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config?.flyout?.options",{"_index":687,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.config?.id",{"_index":126,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.config?.label",{"_index":1336,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.config?.links",{"_index":308,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.links.foreach((link",{"_index":312,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.links.length",{"_index":309,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.config?.options?.foreach(option",{"_index":831,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.config?.selected",{"_index":1622,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.config?.size",{"_index":518,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["this.createlinks",{"_index":307,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.currentcharacterstatusaria",{"_index":1652,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["this.currentlang",{"_index":2094,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["this.days",{"_index":1202,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dayselect",{"_index":1243,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dayselect?.setattribute",{"_index":1244,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.desc",{"_index":1124,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.differ",{"_index":1446,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.differ.diff(this",{"_index":1470,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.differs.find({}).create",{"_index":1447,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.disabled",{"_index":376,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{}}}],["this.draglistener",{"_index":2284,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.dropdownconfigs.day.formgroup",{"_index":1137,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.id",{"_index":1134,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.label",{"_index":1183,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options",{"_index":1203,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.length",{"_index":1168,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.push",{"_index":1167,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.shift",{"_index":1175,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.options?.unshift",{"_index":1178,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.placeholder",{"_index":1189,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.size",{"_index":1140,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.day.toplabel",{"_index":1143,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.formgroup",{"_index":1138,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.id",{"_index":1135,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.label",{"_index":1185,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.options?.push",{"_index":1169,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.placeholder",{"_index":1190,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.size",{"_index":1141,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.month.toplabel",{"_index":1144,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.formgroup",{"_index":1139,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.id",{"_index":1136,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.label",{"_index":1187,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.options?.push",{"_index":1157,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.options?.shift",{"_index":1176,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.options?.unshift",{"_index":1179,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.placeholder",{"_index":1191,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.size",{"_index":1142,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.dropdownconfigs.year.toplabel",{"_index":1145,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.emptyresults",{"_index":1480,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.erroraria",{"_index":525,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.errorids",{"_index":520,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.errorids.foreach((error",{"_index":1256,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.errorlov",{"_index":710,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.errormessages",{"_index":1125,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.errorstubtext",{"_index":529,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.filterlist(event",{"_index":1475,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.flyoutconfig",{"_index":672,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.focusstate",{"_index":1384,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.form.get('formcontrol')?.setvalue(formvalue",{"_index":1564,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.formcontrol",{"_index":506,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.formcontrol?.markasdirty",{"_index":524,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.formgroup",{"_index":519,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.formgroupempty",{"_index":419,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/TextareaComponent.html":{}}}],["this.getariaerrortext",{"_index":523,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.getariaoverride",{"_index":1154,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getariaoverride(datepickerstate",{"_index":1231,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.geterroraria",{"_index":1240,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getheight.emit",{"_index":2294,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.getlabelcore",{"_index":1239,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getnumdaysinmonth(month",{"_index":1204,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.getopen.emit(this.config.open",{"_index":995,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.getselected.emit(selected",{"_index":1033,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.govcanadaalt",{"_index":931,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.govcanadalink",{"_index":930,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.height",{"_index":1035,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.hidedropdown",{"_index":1451,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.highlightindex(option.id",{"_index":789,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.hint",{"_index":1123,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.icon",{"_index":380,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.iconclickevent.emit",{"_index":548,"title":{},"body":{"components/ChipItemComponent.html":{}}}],["this.iconconfig.id",{"_index":146,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.iconconfigs[this.config.category",{"_index":1280,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{}}}],["this.icondirection",{"_index":383,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.iconspan.nativeelement.innerhtml",{"_index":1294,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["this.id",{"_index":366,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"components/accordionContainerComponent.html":{}}}],["this.imageurl",{"_index":886,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["this.inputcomponent?.clearvalue",{"_index":1453,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.inputcomponent?.focusinput(this.hidedropdown",{"_index":1487,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.iscomponentclicked",{"_index":1455,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.isdisabled",{"_index":502,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{}}}],["this.isdragging",{"_index":2288,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.isfocusinsidecomponent",{"_index":1456,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.isleapyear(year",{"_index":1212,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.ismobile",{"_index":1931,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["this.isselected.emit(null",{"_index":805,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.isselected.emit(this.config.options[i].value",{"_index":843,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.label",{"_index":665,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.label?.nativeelement?.offsetwidth",{"_index":1348,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.labelbutton.buttonpress(this.config.parentid",{"_index":1411,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["this.labelbuttonclicksubj.asobservable",{"_index":1869,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["this.labelbuttonclicksubj.next(id",{"_index":1876,"title":{},"body":{"injectables/LabelButtonService.html":{}}}],["this.labelconfig",{"_index":510,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.labelicontext",{"_index":1406,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/LabelComponent.html":{}}}],["this.langtoggle.languagetoggleclick",{"_index":1935,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["this.languageclicksub.asobservable",{"_index":1892,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["this.languageclicksub.next(true",{"_index":1894,"title":{},"body":{"injectables/LanguageSwitchButtonService.html":{}}}],["this.limit",{"_index":1497,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.maxyear",{"_index":1126,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.minheight",{"_index":2280,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.minyear",{"_index":1128,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.months",{"_index":1177,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.monthselect",{"_index":1241,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.monthselect?.setattribute",{"_index":1242,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.onchange",{"_index":498,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.ontouch",{"_index":499,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.ontouched",{"_index":1263,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.open",{"_index":992,"title":{},"body":{"interfaces/IAccordionContainerConfig.html":{},"components/accordionContainerComponent.html":{}}}],["this.openaccordion",{"_index":1022,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.optioncontainers.toarray()[this.selectedindex]?.nativeelement?.scrollintoview",{"_index":815,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.options",{"_index":776,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{}}}],["this.options.length",{"_index":1452,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.options.slice(0",{"_index":1506,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.options[index].value",{"_index":1504,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.optionselected(this.selectedindex",{"_index":804,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.orientation",{"_index":1611,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["this.originaloptions",{"_index":1505,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.originaloptions.slice(0",{"_index":1485,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.placeholdertext",{"_index":666,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.portinputvalues",{"_index":709,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{}}}],["this.removevertical",{"_index":1612,"title":{},"body":{"interfaces/ISpinnerConfig.html":{},"components/SpinnerComponent.html":{}}}],["this.renderer.listen",{"_index":2285,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.renderer.listen('document",{"_index":2295,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.renderer.setstyle",{"_index":2278,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.required",{"_index":1122,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.resizebar",{"_index":2283,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.resizebar?.nativeelement",{"_index":2286,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.resizecontainer",{"_index":2277,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.resizecontainer.nativeelement",{"_index":2279,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.resizecontainer.nativeelement.getboundingclientrect().height",{"_index":2292,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.returnoptionstodefault",{"_index":1454,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.rotatechevron",{"_index":1593,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["this.rounded",{"_index":1339,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["this.savedselectedoptions",{"_index":1507,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.scrolltoanchor(link",{"_index":960,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["this.selected",{"_index":678,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.selectedindex",{"_index":788,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.selectedoptions",{"_index":1482,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.length",{"_index":1498,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.push(option",{"_index":1495,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.push(this.options[index",{"_index":1500,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.some((element",{"_index":1502,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedoptions.splice(index",{"_index":1492,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.selectedtab",{"_index":1027,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.selection",{"_index":780,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["this.selectvaluechange.emit(this.selectedoptions",{"_index":1473,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.setheight",{"_index":2282,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["this.setlabellanguage",{"_index":1151,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.setlang(change.lang",{"_index":509,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.setlang(this.translate.currentlang",{"_index":507,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.setmonthslanguage",{"_index":1150,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.settext(newlang.lang",{"_index":1934,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["this.settypetitle",{"_index":1549,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.setupcomponent",{"_index":1018,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.setyeardaylanguage",{"_index":1153,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.shownav",{"_index":958,"title":{},"body":{"components/HiddenNavComponent.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/ISkipLinkConfig.html":{}}}],["this.showpassword",{"_index":1376,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.showplaceholder",{"_index":670,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.size",{"_index":370,"title":{},"body":{"components/ButtonComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"interfaces/IButtonConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/IconButtonComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.standalone.getbaseurl",{"_index":317,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.standalonefunctions.geterroraria",{"_index":526,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.standalonefunctions.geterrorids",{"_index":521,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.standalonefunctions.makelabelconfig",{"_index":511,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.steptext",{"_index":1533,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["this.tabclick.emit(selected",{"_index":1532,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IStepConfig.html":{},"components/ProgressIndicatorComponent.html":{}}}],["this.tabconfig.selected",{"_index":1024,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.tabconfig.tab",{"_index":1026,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["this.tabindex",{"_index":378,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IButtonConfig.html":{}}}],["this.text",{"_index":1551,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.textid",{"_index":148,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.toggledropdown",{"_index":1462,"title":{},"body":{"interfaces/IOption.html":{}}}],["this.toggleflyout(false",{"_index":682,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["this.toggleline",{"_index":158,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["this.touched",{"_index":527,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.translate.currentlang",{"_index":1155,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.translate.instant(error.errorlov",{"_index":1257,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.instant(link.linkkey",{"_index":326,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["this.translate.instant(this.config.desc",{"_index":1252,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.instant(this.config.hint",{"_index":1253,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.instant(this.config.label",{"_index":1251,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.translate.onlangchange.subscribe",{"_index":1152,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.translate.onlangchange.subscribe((change",{"_index":508,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["this.translator.onlangchange.subscribe((event",{"_index":2096,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["this.type",{"_index":782,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"components/InputComponent.html":{},"components/ProgressTagsComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.typecontrol",{"_index":1377,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["this.unknowndatetoggle",{"_index":1130,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.updatedaysarray",{"_index":1161,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.valuechange.emit(selectedid",{"_index":1628,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.valuechange.emit(this.config.selected",{"_index":1619,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["this.windoworigin",{"_index":2098,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["this.windowpathname",{"_index":2100,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["this.yearselect",{"_index":1237,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["this.yearselect?.setattribute",{"_index":1238,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["through",{"_index":798,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["title",{"_index":117,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["titleslugurlcomponent",{"_index":250,"title":{"components/TitleSlugUrlComponent.html":{}},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["todo",{"_index":489,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FlyoutComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["toggle",{"_index":1386,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["toggledropdown",{"_index":1486,"title":{},"body":{"interfaces/IOption.html":{}}}],["toggledropdownkey(event",{"_index":1488,"title":{},"body":{"interfaces/IOption.html":{}}}],["toggleflyout",{"_index":622,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggleflyout(status",{"_index":640,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["toggleline",{"_index":32,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{}}}],["toggles",{"_index":1774,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["token",{"_index":1396,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{}}}],["top",{"_index":607,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/codeViewerComponent.html":{}}}],["toplabel",{"_index":1392,"title":{},"body":{"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/LabelComponent.html":{},"components/SelectComponent.html":{}}}],["touched",{"_index":406,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["transform",{"_index":1772,"title":{},"body":{"components/InteractiveDemoComponent.html":{}}}],["translate",{"_index":160,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/CheckboxComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["translate/core",{"_index":286,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["translated",{"_index":1248,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["translatemodule",{"_index":1803,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{}}}],["translateservice",{"_index":264,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CheckboxComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"components/InputComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["translation",{"_index":291,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FlyoutComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IFlyoutConfig.html":{}}}],["translations",{"_index":908,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translator",{"_index":2079,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["translator.currentlang",{"_index":2095,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["trash",{"_index":1274,"title":{},"body":{"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["treatment",{"_index":1318,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["trigger",{"_index":436,"title":{},"body":{"components/CheckboxComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["triggered",{"_index":911,"title":{},"body":{"components/HeaderComponent.html":{}}}],["triggers",{"_index":809,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["true",{"_index":78,"title":{},"body":{"components/BannerComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/resizableContainerComponent.html":{}}}],["truncated",{"_index":1329,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["truthy",{"_index":645,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["turned",{"_index":1561,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["type",{"_index":39,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IHiddenNavConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/ILabelConfig.html":{},"interfaces/ILabelIconConfig.html":{},"interfaces/ILinkComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISkipLinkConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"coverage.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{},"miscellaneous/variables.html":{}}}],["typecontrol",{"_index":1370,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{}}}],["typeof",{"_index":107,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{}}}],["types",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":323,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/IButtonConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/ICodeViewerConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IProgressIndicatorConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/InputComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/RadioInputComponent.html":{},"components/TabsComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["under",{"_index":1568,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["unknown",{"_index":1098,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["unknowndatetoggle",{"_index":1043,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["unless",{"_index":1361,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["update",{"_index":1195,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["updated",{"_index":1596,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["updatedaysarray(month",{"_index":1201,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["updates",{"_index":821,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["url",{"_index":114,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/IBreadcrumbConfig.html":{},"interfaces/ICTAConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["url.component.html",{"_index":2072,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["url.component.scss",{"_index":2071,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["url.component.ts",{"_index":2068,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["url.component.ts:28",{"_index":2084,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:33",{"_index":2087,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:34",{"_index":2088,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:35",{"_index":2078,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:41",{"_index":2086,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url.component.ts:47",{"_index":2085,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["url/title",{"_index":2067,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["use",{"_index":1115,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/SelectComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{}}}],["used",{"_index":444,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/InteractiveDemoComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["useexisting",{"_index":391,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["users",{"_index":303,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadcrumbConfig.html":{}}}],["using",{"_index":492,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IOption.html":{}}}],["val.title",{"_index":2036,"title":{},"body":{"components/TabsComponent.html":{}}}],["validation",{"_index":1354,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["validatorfn",{"_index":1558,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["validators",{"_index":1556,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["value",{"_index":43,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IDropdownConfig.html":{},"interfaces/IFlyoutConfig.html":{},"interfaces/IFlyoutOptionConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"components/resizableContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["value.text.tolowercase().includes(filtervalue.tolowercase",{"_index":1478,"title":{},"body":{"interfaces/IOption.html":{}}}],["valuechange",{"_index":1617,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{}}}],["valuechange($event",{"_index":1590,"title":{},"body":{"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/SelectComponent.html":{}}}],["valuechange(event",{"_index":1474,"title":{},"body":{"interfaces/IOption.html":{}}}],["valuechanges.subscribe((year",{"_index":1164,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["values",{"_index":1360,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["var",{"_index":74,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["variable",{"_index":1751,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2302,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verrouill",{"_index":1542,"title":{},"body":{"interfaces/IProgressTagsConfig.html":{},"components/ProgressTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2253,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":1526,"title":{},"body":{"interfaces/IProgressIndicatorConfig.html":{},"interfaces/ISpinnerConfig.html":{},"interfaces/IStepConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/ProgressIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["viewchild",{"_index":1286,"title":{},"body":{"interfaces/IIconConfig.html":{},"interfaces/IIndicatorConfig.html":{},"interfaces/IOption.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/resizableContainerComponent.html":{}}}],["viewchild('iconspan",{"_index":1288,"title":{},"body":{"interfaces/IIconConfig.html":{},"components/IconComponent.html":{}}}],["viewchild('label",{"_index":1325,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["viewchild('resizebar",{"_index":2268,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["viewchild('resizecontainer",{"_index":2275,"title":{},"body":{"components/resizableContainerComponent.html":{}}}],["viewchild(inputcomponent",{"_index":1430,"title":{},"body":{"interfaces/IOption.html":{}}}],["viewchildren",{"_index":766,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["viewchildren('option",{"_index":762,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["viewer",{"_index":1003,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["viewer'},{'name",{"_index":190,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/BreadcrumbLinkComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/ComponentPreviewComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InfoTextSmallComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/LabelComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["viewer.component.html",{"_index":1004,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["viewer.component.scss",{"_index":1005,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{}}}],["viewer.component.ts",{"_index":999,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:106",{"_index":2151,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:30",{"_index":2149,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:33",{"_index":2150,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:35",{"_index":2162,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:39",{"_index":2161,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:43",{"_index":2156,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:48",{"_index":2160,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:49",{"_index":2159,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:50",{"_index":2158,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:52",{"_index":2157,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:59",{"_index":2154,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:63",{"_index":2153,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:70",{"_index":2155,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer.component.ts:96",{"_index":2152,"title":{},"body":{"components/codeViewerComponent.html":{}}}],["viewer/code",{"_index":998,"title":{},"body":{"interfaces/ICodeViewerConfig.html":{},"components/codeViewerComponent.html":{},"coverage.html":{}}}],["visible",{"_index":842,"title":{},"body":{"components/FlyoutComponent.html":{},"interfaces/IFlyoutConfig.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/BannerComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ChipItemComponent.html":{},"components/ChipListComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorComponent.html":{},"components/FlyoutComponent.html":{},"components/FlyoutOptionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HiddenNavComponent.html":{},"interfaces/IAccordionContainerConfig.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"interfaces/IErrorComponentConfig.html":{},"interfaces/IErrorIconConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"interfaces/IInputComponentConfig.html":{},"interfaces/IOption.html":{},"interfaces/IProgressTagsConfig.html":{},"interfaces/ISearchInputButtonConfig.html":{},"interfaces/ISearchInputConfig.html":{},"interfaces/ITextareaComponentConfig.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/IndicatorComponent.html":{},"components/InputComponent.html":{},"components/InteractiveDemoComponent.html":{},"injectables/LabelButtonService.html":{},"components/LabelComponent.html":{},"injectables/LanguageSwitchButtonService.html":{},"components/LanguageSwitchComponent.html":{},"components/ProgressIndicatorComponent.html":{},"components/ProgressTagsComponent.html":{},"components/RadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SecondaryChipsComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TextareaComponent.html":{},"components/TitleSlugUrlComponent.html":{},"components/accordionContainerComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["warning",{"_index":97,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warninglimit",{"_index":1656,"title":{},"body":{"interfaces/ITextareaComponentConfig.html":{},"components/TextareaComponent.html":{}}}],["weak",{"_index":1304,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["weight",{"_index":2106,"title":{},"body":{"components/TitleSlugUrlComponent.html":{}}}],["wether",{"_index":647,"title":{},"body":{"components/DropdownComponent.html":{},"interfaces/IDropdownConfig.html":{}}}],["white",{"_index":1755,"title":{},"body":{"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{}}}],["width",{"_index":587,"title":{},"body":{"components/ComponentPreviewComponent.html":{},"components/InteractiveDemoComponent.html":{},"components/codeViewerComponent.html":{},"components/resizableContainerComponent.html":{}}}],["window.innerwidth",{"_index":1932,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["window.location.origin",{"_index":2099,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["window.location.pathname",{"_index":2101,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["window:resize",{"_index":1900,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["window:resize(e",{"_index":1907,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["windoworigin",{"_index":2074,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["windowpathname",{"_index":2075,"title":{},"body":{"components/TitleSlugUrlComponent.html":{},"interfaces/slugTitleURLConfig.html":{}}}],["within",{"_index":897,"title":{},"body":{"components/HeaderComponent.html":{}}}],["wordmark",{"_index":882,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":1569,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"components/RadioInputComponent.html":{}}}],["wrap",{"_index":591,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["wrapper",{"_index":586,"title":{},"body":{"components/ComponentPreviewComponent.html":{}}}],["writevalue",{"_index":414,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/ICheckBoxComponentConfig.html":{},"components/InputComponent.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue(formvalue",{"_index":1563,"title":{},"body":{"interfaces/IRadioInputComponentConfig.html":{},"interfaces/IRadioInputOption.html":{},"interfaces/ISelectConfig.html":{},"interfaces/ISelectOptionsConfig.html":{},"components/RadioInputComponent.html":{},"components/SelectComponent.html":{}}}],["writevalue(obj",{"_index":1258,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["writevalue(value",{"_index":1389,"title":{},"body":{"interfaces/IInputComponentConfig.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["x",{"_index":1624,"title":{},"body":{"interfaces/ITabConfig.html":{},"interfaces/ITabNavConfig.html":{},"components/TabsComponent.html":{}}}],["x2",{"_index":1346,"title":{},"body":{"interfaces/IIndicatorConfig.html":{},"components/IndicatorComponent.html":{}}}],["xmark",{"_index":72,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/IBannerConfig.html":{},"interfaces/ICTAConfig.html":{},"interfaces/IIconButtonComponentConfig.html":{},"interfaces/IIconButtonIconConfig.html":{},"components/IconButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":1082,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["year/day",{"_index":1171,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["years",{"_index":1148,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["yearselect",{"_index":1112,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["yearunknown",{"_index":1103,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{}}}],["yes",{"_index":655,"title":{},"body":{"components/DropdownComponent.html":{},"components/HiddenNavComponent.html":{}}}],["yyyy",{"_index":1088,"title":{},"body":{"interfaces/IDatePickerConfig.html":{},"interfaces/IDatePickerDropDownConfigs.html":{},"interfaces/IDatePickerErrorMessages.html":{},"interfaces/IDatePickerUnknownDateToggleConfig.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":1790,"title":{},"body":{"modules/IrccDsAngularBannerModule.html":{},"modules/IrccDsAngularComponentsSharedModule.html":{},"modules/IrccDsAngularFormComponentsModule.html":{},"modules/IrccDsAngularHeaderFooterModule.html":{},"modules/IrccDsAngularLegacyOldModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-banner\n            \n\n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconConfig\n                            \n                            \n                                lineVisible\n                            \n                            \n                                textId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                eventHandler\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleLine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaDissmissible\n                            \n                            \n                                config\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaDissmissible\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'close'\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IBannerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:56\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:59\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        eventHandler\n                        \n                    \n                \n            \n            \n                \neventHandler(emitValue: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emitValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLine\n                        \n                    \n                \n            \n            \n                \ntoggleLine()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      \n    \n    \n      \n        \n          \n            {{ config?.title || '' | translate }}\n          \n          \n        \n      \n      \n        \n          {{ cta.text | translate }}\n          {{ cta.text | translate }}\n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            {{ config?.title || \\'\\' | translate }}                                                          {{ cta.text | translate }}          {{ cta.text | translate }}                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-breadcrumb\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLinks\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, standalone: StandAloneFunctions)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        standalone\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IBreadcrumbConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createLinks\n                        \n                    \n                \n            \n            \n                \ncreateLinks()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:66\n                \n            \n\n\n            \n                \n                    Create href or routerLinks\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ILinkComponentConfig } from './link/link.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\n\nexport enum LinkType {\n  href = 'href',\n  routerLink = 'routerLink'\n}\n\nexport interface IBreadcrumbConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof LinkType;\n  // Translation key of base url segment\n  baseUrlKey: string;\n  // The mid-layer navigation to the ancestor links, the previous pages that lead to users to the child page\n  links?: ILinkComponentConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n  @Input() config: IBreadcrumbConfig = {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  };\n  baseUrl = '';\n  constructor(\n    private translate: TranslateService,\n    private standalone: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.createLinks();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.config?.links && this.config?.links.length > 0) {\n      if (this.config.type == 'routerLink') {\n        this.config?.links.forEach((link) => {\n          delete link.href;\n        });\n      } else {\n        this.config?.links.forEach((link) => {\n          delete link.routerLink;\n        });\n      }\n    }\n    this.createLinks();\n  }\n\n  /**\n   * Create href or routerLinks\n   */\n  createLinks() {\n    this.baseUrl = this.standalone.getBaseUrl('', this.config.baseUrlKey);\n    if (this.config.links && this.config.links.length > 1) {\n      let prev: string | undefined;\n      this.config?.links.forEach((link, i) => {\n        if (i === 0) {\n          link[this.config.type] = this.baseUrl;\n          prev = link[this.config.type];\n        } else if (link.linkKey) {\n          link[this.config.type] =\n            prev + this.translate.instant(link.linkKey) + '/';\n          prev = link[this.config.type];\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n    \n    \n      \n      {{ link.text }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{ link.text }}      '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbLinkComponent.html":{"url":"components/BreadcrumbLinkComponent.html","title":"component - BreadcrumbLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-breadcrumb-link\n            \n\n\n\n\n            \n                templateUrl\n                ./link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ILinkComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    text: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport interface ILinkComponentConfig {\n  text: string;\n  linkKey?: string;\n  href?: string;\n  routerLink?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb-link',\n  templateUrl: './link.component.html'\n})\nexport class BreadcrumbLinkComponent {\n  @Input() config: ILinkComponentConfig = {\n    text: ''\n  };\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  {{ config.text | translate }}\n\n\n  {{\n    config.text | translate\n  }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config.text | translate }}  {{    config.text | translate  }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/button/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-button\n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                category\n                            \n                            \n                                color\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                iconDirection\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnAction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n}\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconDirection\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:60\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickEvent\n                        \n                    \n                \n            \n            \n                \nclickEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum ButtonCategories {\n  primary = 'primary',\n  secondary = 'secondary',\n  plain = 'plain'\n}\n\nexport enum ButtonSize {\n  small = 'small',\n  large = 'large'\n}\n\nexport enum ButtonColor {\n  critical = 'critical',\n  CTA = 'CTA'\n}\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n  left = 'left',\n  right = 'right'\n}\n\nexport interface IButtonConfig {\n    id: string;\n    category?: keyof typeof ButtonCategories;\n    size?: keyof typeof ButtonSize;\n    color?: keyof typeof ButtonColor;\n    ariaLabel?: string;\n    disabled?: boolean;\n    icon?: string;\n    iconDirection?: keyof typeof ButtonIconDirection;\n    tabIndex?: number;\n};\n\n@Component({\n  selector: 'ircc-cl-lib-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n@Input() config: IButtonConfig = {\n    id: '',\n};\n    @Input() id = '';\n    @Input() category?: keyof typeof ButtonCategories;\n    @Input() size?: keyof typeof ButtonSize;\n    @Input() color?: keyof typeof ButtonColor;\n    @Input() ariaLabel?: string;\n    @Input() disabled?: boolean;\n    @Input() icon?: string;\n    @Input() iconDirection?: keyof typeof ButtonIconDirection;\n    @Input() tabIndex?: number;\n\n  @Output() btnAction: EventEmitter = new EventEmitter();\n\n    ngOnInit() {\n        (this.id !== '') ? this.config.id = this.id : undefined;\n        (this.category === undefined) ? undefined : this.config.category = this.category;\n        (this.size === undefined) ? undefined : this.config.size = this.size;\n        (this.color === undefined) ? undefined : this.config.color = this.color;\n        (this.ariaLabel !== undefined) ? this.config.ariaLabel = this.ariaLabel : undefined;\n        (this.disabled !== undefined) ? this.config.disabled = this.disabled : undefined;\n        (this.tabIndex !== undefined) ? this.config.tabIndex = this.tabIndex : undefined;\n        if (this.icon || this.config.icon) {\n            this.config.icon = this.icon ? this.icon : this.config.icon;\n            this.config.iconDirection = this.iconDirection? this.iconDirection : this.config.iconDirection;\n            this.config.iconDirection = this.config.iconDirection ? this.config.iconDirection : 'left'\n        } else {\n            this.config.icon = undefined;\n            this.config.iconDirection = undefined;\n        }\n    }\n\n\n  clickEvent(id: string) {\n    this.btnAction.emit(id);\n  }\n}\n\n    \n\n    \n           \n        \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                           '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CheckboxComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                isDisabled\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                getErrorState\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ICheckBoxComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:160\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorState\n                        \n                    \n                \n            \n            \n                \ngetErrorState()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:191\n                \n            \n\n\n            \n                \n                    Return error state from FormGroup, must be touched & invalid\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:174\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:94\n                \n            \n\n\n            \n                \n                    This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  label?: string;\n  required?: boolean;\n  size?: keyof typeof DSSizes | DSSizes;\n  mixed?: true;\n  disableFocus?: boolean; //Default is true\n  inlineLabel?: string;\n  inlineLabelBold?: boolean;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  helpText?: string;\n  customErrorText?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  isDisabled = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorAria = '';\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {};\n  onChange = () => {};\n\n  writeValue(): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n    if (!this.config?.size) this.config.size = DSSizes.large;\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        \n      \n      {{ config.inlineLabel || '' | translate }}\n      \n    \n    \n      \n        {{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}\n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{ config.inlineLabel || \\'\\' | translate }}                            {{          errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'        }}                                                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipItemComponent.html":{"url":"components/ChipItemComponent.html","title":"component - ChipItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-chip-item\n            \n\n\n\n\n            \n                templateUrl\n                ./chip-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onEnterKeyPress\n                            \n                            \n                                onIconClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconClickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipContent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:8\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        iconClickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onEnterKeyPress\n                        \n                    \n                \n            \n            \n                \nonEnterKeyPress()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIconClick\n                        \n                    \n                \n            \n            \n                \nonIconClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-item',\n  templateUrl: './chip-item.component.html'\n})\nexport class ChipItemComponent {\n  @Input() chipContent?: string;\n  @Output() iconClickEvent = new EventEmitter();\n\n  constructor() {}\n\n  onIconClick() {\n    this.iconClickEvent.emit();\n  }\n\n  onEnterKeyPress() {\n    this.iconClickEvent.emit();\n  }\n}\n\n    \n\n    \n        \n  {{ chipContent || '' }}\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ chipContent || \\'\\' }}        '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChipItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipListComponent.html":{"url":"components/ChipListComponent.html","title":"component - ChipListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-chip-list\n            \n\n\n\n\n            \n                templateUrl\n                ./chip-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chipContentText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeChipItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipListChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:8\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chipListChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeChipItem\n                        \n                    \n                \n            \n            \n                \nremoveChipItem(chipIdx: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chipIdx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chipContentText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-list',\n  templateUrl: './chip-list.component.html'\n})\nexport class ChipListComponent implements OnInit {\n  @Input() chipList?: string[];\n  @Output() chipListChange = new EventEmitter>();\n  chipContentText?: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  removeChipItem(chipIdx: number) {\n    this.chipList?.splice(chipIdx, 1);\n    this.chipListChange.emit(this.chipList);\n  }\n\n  onSubmit() {\n    if (this.chipContentText) {\n      this.chipList?.push(this.chipContentText);\n      this.chipListChange.emit(this.chipList);\n      this.chipContentText = '';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChipListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentPreviewComponent.html":{"url":"components/ComponentPreviewComponent.html","title":"component - ComponentPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComponentPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/component-preview/component-preview.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-component-preview\n            \n\n            \n                styleUrls\n                ./component-preview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./component-preview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                copyStyle\n                            \n                            \n                                copyText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/component-preview/component-preview.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        copyStyle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/component-preview/component-preview.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        copyText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/component-preview/component-preview.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-component-preview',\n  templateUrl: './component-preview.component.html',\n  styleUrls: ['./component-preview.component.scss']\n})\nexport class ComponentPreviewComponent {\n  @Input() copyText?: string;\n  @Input() copyStyle?: string;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n  \n    {{ 'Buttons.CopyCode' | translate }}\n  \n  \n    {{ 'Buttons.CopyStyle' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./component-preview.component.scss\n                \n                :host {\n  display: block;\n\n  .preview-wrapper {\n    width: 100%;\n    display: inline-flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    background-color: var(--surface2);\n    max-width: 362px;\n    min-height: 170px;\n\n    jds-button.copy {\n      flex-basis: 100%;\n      text-align: center;\n      margin-top: -10px;\n      color: #2A4980;\n      cursor: pointer;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ \\'Buttons.CopyCode\\' | translate }}        {{ \\'Buttons.CopyStyle\\' | translate }}  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComponentPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-dropdown\n            \n\n\n\n\n            \n                templateUrl\n                ./drop-down.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                flyoutConfig\n                            \n                            \n                                selected\n                            \n                            \n                                showPlaceholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFlyoutFocus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectedOption\n                            \n                            \n                                toggleFlyout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                placeholderText\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IDropdownConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearFlyoutFocus\n                        \n                    \n                \n            \n            \n                \nclearFlyoutFocus()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:95\n                \n            \n\n\n            \n                \n                    Clear the flyout active state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOption\n                        \n                    \n                \n            \n            \n                \nselectedOption(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFlyout\n                        \n                    \n                \n            \n            \n                \ntoggleFlyout(status: boolean, e?: FocusEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:84\n                \n            \n\n\n            \n                \n                    function receives a truthy value which determines wether it closes or opens,\nbut also looks for FocusEvent to check if flyout is being interacted with\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n                                    \n                                            FocusEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        flyoutConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFlyoutConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from \"../../../shared/constants/jl-components.constants\";\nimport { ButtonCategories } from '../button/button.component';\nimport { IIconButtonIconConfig } from '../icon-button/icon-button.component';\nimport { IFlyoutConfig } from '../flyout/flyout.component';\nexport interface IDropdownConfig {\n    id: string;\n    label?: string;\n    size?: keyof typeof DSSizes;\n    category?: keyof typeof ButtonCategories;\n    placeholderText?: string;\n    disabled?: boolean;\n    icon?: IIconButtonIconConfig;\n    flyout?: IFlyoutConfig;\n}\n@Component({\n  selector: 'ircc-cl-lib-dropdown',\n  templateUrl: './drop-down.component.html'\n})\nexport class DropdownComponent implements OnInit {\n\n  @Input() config: IDropdownConfig = {\n    id: ''\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string = '';\n  @Input() placeholderText?: string = '';\n  @Input() disabled?: boolean;\n  @Input() category?: keyof typeof ButtonCategories;\n\n  showPlaceholder: boolean = false;\n  selected: boolean = false;\n\n  flyoutConfig : IFlyoutConfig = {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n\n  ngOnInit() {\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.placeholderText !== '')\n      this.config.placeholderText = this.placeholderText;\n    if (this.disabled !== undefined) this.config.disabled = this.disabled;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n\n    if (!this.config.category) this.config.category = ButtonCategories.primary;\n\n    if (!this.config.label || this.config.label.trim().length == 0) {\n      if (!this.config.placeholderText) {\n        this.config.placeholderText = 'Default';\n      }\n      this.showPlaceholder = true;\n    }\n\n    if(this.config.flyout) this.flyoutConfig = this.config.flyout;\n  }\n\n  selectedOption(e: Event) {\n    //if it receives it's event info it selects the index - if not closes flyout\n    if(e){\n      this.showPlaceholder = false;\n      this.config.label = e.toString();\n      this.selected = !this.selected;\n      this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }else{\n      this.toggleFlyout(false);\n    }\n  }\n\n  /**\n   * function receives a truthy value which determines wether it closes or opens, \n   * but also looks for FocusEvent to check if flyout is being interacted with\n   * @param status \n   * @param e \n   */\n  toggleFlyout(status: boolean, e?: FocusEvent) {\n    let target = e?.relatedTarget as HTMLElement;\n    if(!target?.id.includes(this.config.id) || !e){\n      this.selected = status;\n      !status && this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }\n  }\n\n  /**\n   * Clear the flyout active state\n   */\n  clearFlyoutFocus() {\n    if (this.config?.flyout?.options) {\n      this.config.flyout.options.forEach(i => {\n        i.active = false;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n        {{config.placeholderText}}\n        {{config.label}}\n      \n      \n        \n      \n      \n        \n      \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{config.placeholderText}}        {{config.label}}                                                  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/error/error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                portInputValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                errorLOV\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IErrorComponentConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLOV\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         IErrorIconConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        portInputValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    portInputValues()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    {{ config?.errorLOV || '' | translate }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ config?.errorLOV || \\'\\' | translate }}  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlyoutComponent.html":{"url":"components/FlyoutComponent.html","title":"component - FlyoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlyoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-flyout\n            \n\n\n\n\n            \n                templateUrl\n                ./flyout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                a11yText\n                            \n                            \n                                optionContainers\n                            \n                            \n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearOptions\n                            \n                            \n                                highlightIndex\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onArrowDown\n                            \n                            \n                                onArrowUp\n                            \n                            \n                                onEnter\n                            \n                            \n                                optionSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                id\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.arrowdown\n                            \n                            \n                                document:keydown.arrowup\n                            \n                            \n                                document:keydown.enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IFlyoutConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         IFlyoutOptionConfig[]\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :      | number\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown.arrowdown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.arrowdown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:49\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown.arrowup\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.arrowup(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:64\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown.enter\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.enter(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:84\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearOptions\n                        \n                    \n                \n            \n            \n                \nclearOptions()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlightIndex\n                        \n                    \n                \n            \n            \n                \nhighlightIndex(el_id: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el_id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onArrowDown\n                        \n                    \n                \n            \n            \n                \nonArrowDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.arrowdown', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onArrowUp\n                        \n                    \n                \n            \n            \n                \nonArrowUp(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.arrowup', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnter\n                        \n                    \n                \n            \n            \n                \nonEnter(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.enter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionSelected\n                        \n                    \n                \n            \n            \n                \noptionSelected(i: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        a11yText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionContainers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Default value : new QueryList\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren('option')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter, HostListener, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { IFlyoutOptionConfig } from '../flyout-option/flyout-option.component';\n\nexport enum IFlyoutSelectTypes {\n  single = 'single',\n  multi = 'multi'\n}\n\nexport interface IFlyoutConfig {\n  id: string,\n  options?: IFlyoutOptionConfig[],\n  disabled?: boolean\n  selection?: [] | number,\n  type?: keyof typeof IFlyoutSelectTypes\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout',\n  templateUrl: './flyout.component.html'\n})\nexport class FlyoutComponent implements OnInit {\n  @ViewChildren('option') optionContainers: QueryList = new QueryList;\n\n  @Input() config : IFlyoutConfig = {\n    id: ''\n  }\n  @Input() id? : string;\n  @Input() options?: IFlyoutOptionConfig[];\n  @Input() disabled?: boolean;\n  @Input() selection?: [] | number;\n  @Input() type?: keyof typeof IFlyoutSelectTypes;\n\n  //TODO: Must add the other config parameters\n  @Output() isSelected = new EventEmitter();\n\n  selectedIndex : number = -1;\n  a11yText : string = '';\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'single';\n    if(this.id) this.config.id = this.id;\n    if(this.options) this.config.options = this.options;\n    if(this.disabled) this.config.disabled = this.disabled;\n    if(this.selection) this.config.selection = this.selection;\n    if(this.type) this.config.type = this.type;\n  };\n\n  @HostListener('document:keydown.arrowdown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options.slice(this.selectedIndex + 1).forEach((option, index) => {\n        if (!foundClickable && option.clickable !== false) {\n          this.selectedIndex += index + 1;\n          this.highlightIndex(option.id);\n          foundClickable = true;\n        }\n      });\n    }\n  }\n\n  @HostListener('document:keydown.arrowup', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(0, this.selectedIndex)\n        .reverse()\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex -= index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n      // Ensure selectedIndex does not fall below 0\n      this.selectedIndex = Math.max(this.selectedIndex, 0);\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    event.preventDefault();\n    //if the index hasn't changes through arrow navigation, emits our event but lets the parent know nothing was selected\n    this.selectedIndex != -1 ? this.optionSelected(this.selectedIndex) : this.isSelected.emit(null);\n  }\n\n  //takes in the active index from HostListeners and sets the config option to active state which triggers styling\n  highlightIndex(el_id: any) {\n    if(el_id){\n      this.config.options?.forEach(option => {\n        if(option.id === el_id){\n          option.active = true;\n          this.optionContainers.toArray()[this.selectedIndex]?.nativeElement?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n          this.a11yText = option.value;\n          //updates a11yText to indicate currently selected item if scrolling through flyout again\n          if(option.selected) this.a11yText += ' currently selected'; //translation?\n        }else{\n          option.active = false;\n        }\n      });\n    }\n  }\n\n  //clears all selections by setting the option.selected to false\n  clearOptions(){\n    this.config?.options?.forEach(option => {\n      option.selected = false;\n    });\n  }\n\n  //function takes in index value of current active option and selects it\n  optionSelected(i: number){\n    if(this.config.options && !this.config.options[i].selected && this.config.options[i].clickable){\n      //setup for future multi select feature\n      this.config.type !== 'multi' ? this.clearOptions() : /*this.config.selection = [].push(this.config.options[i]);*/console.log('MULTI');\n      this.config.options[i].selected = true;\n      //emits the value of the selected index so it's visible to the parent\n      this.isSelected.emit(this.config.options[i].value);\n      }\n  }\n\n};\n\n    \n\n    \n        \n  \n    \n  \n\n{{ a11yText || '' | translate }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ a11yText || \\'\\' | translate }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlyoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlyoutOptionComponent.html":{"url":"components/FlyoutOptionComponent.html","title":"component - FlyoutOptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlyoutOptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-flyout-option\n            \n\n\n\n\n            \n                templateUrl\n                ./flyout-option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IFlyoutOptionConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    value: 'Blank label'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nexport enum IFlyoutOptionType {\n  text = 'text',\n  checkbox = 'checkbox',\n  dropdown = 'dropdown',\n  line = 'line',\n  heading = 'heading'\n}\n\nexport interface IFlyoutOptionConfig {\n  id?: string,\n  value: string,\n  selected?: boolean,\n  active?: boolean,\n  disabled?: boolean,\n  type?: keyof typeof IFlyoutOptionType,\n  clickable?: boolean\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout-option',\n  templateUrl: './flyout-option.component.html'\n})\nexport class FlyoutOptionComponent implements OnInit {\n\n  @Input() config : IFlyoutOptionConfig = {\n    id: '',\n    value: 'Blank label'\n  }\n\n  @Input() id? : string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'text';\n    if((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false) this.config.clickable = true;\n    if(this.id) this.config.id = this.id;\n  };\n\n};\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{ config.value || '' | translate }}\n        \n          \n        \n      \n    \n  \n  \n    \n      {{ config.value || '' | translate }}\n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ config.value || \\'\\' | translate }}                                                  {{ config.value || \\'\\' | translate }}                          '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlyoutOptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-footer\n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                altImage\n                            \n                            \n                                aria\n                            \n                            \n                                imageURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        altImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const GOV_LOGO_FOOTER =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/wmms-blk.svg';\n\nexport const GOV_LOGO_ARIA_LABEL_ENGLISH = 'Symbol of the Government of Canada';\nexport const GOV_LOGO_ARIA_LABEL_FRENCH = 'Symbole du gouvernement du Canada';\n\nexport const GOV_LOGO_ALT_TEXT_EN = 'Canada wordmark';\nexport const GOV_LOGO_ALT_TEXT_FR = 'FR Canada wordmark';\n\n@Component({\n  selector: 'ircc-cl-lib-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent {\n  @Input() id = '';\n\n  imageURL = '';\n  altImage = '';\n  aria = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.imageURL = GOV_LOGO_FOOTER;\n      this.aria = GOV_LOGO_ARIA_LABEL_ENGLISH;\n      this.altImage = GOV_LOGO_ALT_TEXT_EN;\n    } else {\n      this.imageURL = GOV_LOGO_FOOTER;\n      this.aria = GOV_LOGO_ARIA_LABEL_FRENCH;\n      this.altImage = GOV_LOGO_ALT_TEXT_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-header\n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aria\n                            \n                            \n                                govCanadaAlt\n                            \n                            \n                                govCanadaLink\n                            \n                            \n                                imageURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:25\n                            \n                        \n                \n                    \n                        This is the ID of the header component. Will be applied as the ID of the header Element within the custom element.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:36\n                \n            \n\n\n            \n                \n                    ngOnInit checks for current url Language and subscribes to changes. Appropriate translation will be pulled as a result.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:47\n                \n            \n\n\n            \n                \n                    setLang(lang: string) accepts and string value which currently needs to be 'en' or 'en-US' to trigger English translations otherwise\nfrench translations will be triggered.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        govCanadaAlt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        govCanadaLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const ENGLISH_BANNER_URL =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-en.svg';\nexport const FRENCH_BANNER_URL =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-fr.svg';\nexport const HEADER_IMG_LINK_EN = 'https://www.canada.ca/en.html';\nexport const HEADER_IMG_LINK_FR = 'https://www.canada.ca/fr.html';\nexport const HEADER_LINK_ATL_EN = 'Government of Canada logo';\nexport const HEADER_LINK_ALT_FR = 'Gouvernement du Canada logo';\nexport const CANADA_LOGO_ARIA_LABEL_ENGLISH =\n  'Symbol of the Government of Canada';\nexport const CANADA_LOGO_ARIA_LABEL_FRENCH =\n  'Symbole du gouvernement du Canada';\n\n@Component({\n  selector: 'ircc-cl-lib-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {\n  /**\n   * This is the ID of the header component. Will be applied as the ID of the header Element within the custom element.\n   */\n  @Input() id = '';\n  imageURL = '';\n  aria = '';\n  govCanadaLink = '';\n  govCanadaAlt = '';\n\n  constructor(private translate: TranslateService) {}\n\n  /**\n  * ngOnInit checks for current url Language and subscribes to changes. Appropriate translation will be pulled as a result.\n  */\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  /**\n  * setLang(lang: string) accepts and string value which currently needs to be 'en' or 'en-US' to trigger English translations otherwise\n  * french translations will be triggered.\n  */\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.imageURL = ENGLISH_BANNER_URL;\n      this.aria = CANADA_LOGO_ARIA_LABEL_ENGLISH;\n      this.govCanadaLink = HEADER_IMG_LINK_EN;\n      this.govCanadaAlt = HEADER_LINK_ATL_EN;\n    } else {\n      this.imageURL = FRENCH_BANNER_URL;\n      this.aria = CANADA_LOGO_ARIA_LABEL_FRENCH;\n      this.govCanadaLink = HEADER_IMG_LINK_FR;\n      this.govCanadaAlt = HEADER_LINK_ALT_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenNavComponent.html":{"url":"components/HiddenNavComponent.html","title":"component - HiddenNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HiddenNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-hidden-nav\n            \n\n\n\n\n            \n                templateUrl\n                ./hidden-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleKeyDown\n                            \n                            \n                                scrollToAnchor\n                            \n                            \n                                showNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IHiddenNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.key' \n                \n            \n            \n                \nkeydown(key: string, link?: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:33\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \nhandleKeyDown(key: string, link?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('keydown', ['$event.key'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToAnchor\n                        \n                    \n                \n            \n            \n                \nscrollToAnchor(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNav\n                        \n                    \n                \n            \n            \n                \nshowNav()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ link.title }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ link.title }}      '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccordionContainerConfig.html":{"url":"interfaces/IAccordionContainerConfig.html","title":"interface - IAccordionContainerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccordionContainerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/src/app/components/accordion-panel/accordion-container.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            buttonTextClosed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buttonTextClosed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonTextClosed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IButtonConfig } from 'ircc-ds-angular-component-library';\n\nexport interface IAccordionContainerConfig {\n  id: string;\n  buttonText?: string;\n  buttonTextClosed?: string;\n  open?: boolean;\n}\n\n@Component({\n  selector: 'app-accordian-container',\n  templateUrl: './accordion-container.component.html',\n  styleUrls: ['./accordion-container.component.scss']\n})\nexport class accordionContainerComponent implements OnInit {\n  @Input() config: IAccordionContainerConfig = {\n    id: ''\n  };\n  @Input() id: string = '';\n  @Input() buttonText: string = '';\n  @Input() buttonTextClosed: string = '';\n  @Input() open?: boolean | undefined;\n\n  @Output() getOpen = new EventEmitter();\n\n  buttonConfigAcccordion: IButtonConfig = {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to expand the accordion',\n    iconDirection: 'left'\n  };\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    console.log(this.config);\n    if (this.config.buttonText === '' || this.config.buttonText === undefined)\n      this.config.buttonText = 'Accordion.HideCode';\n\n    if (\n      this.config.buttonTextClosed === '' ||\n      this.config.buttonTextClosed === undefined\n    )\n      this.config.buttonTextClosed = 'Accordion.ShowCode';\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.buttonText !== '') this.config.buttonText = this.buttonText;\n    if (this.buttonTextClosed !== '')\n      this.config.buttonTextClosed = this.buttonTextClosed;\n    if (this.open !== undefined) this.config.open = this.open;\n  }\n\n  openAccordion() {\n    this.config.open = !this.config.open;\n    this.getOpen.emit(this.config.open);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBannerConfig.html":{"url":"interfaces/IBannerConfig.html","title":"interface - IBannerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBannerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaDissmissible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissible\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rounded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaDissmissible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaDissmissible:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cta:         ICTAConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICTAConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rounded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rounded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBreadcrumbConfig.html":{"url":"interfaces/IBreadcrumbConfig.html","title":"interface - IBreadcrumbConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBreadcrumbConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            baseUrlKey\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrlKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrlKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         ILinkComponentConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILinkComponentConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ILinkComponentConfig } from './link/link.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\n\nexport enum LinkType {\n  href = 'href',\n  routerLink = 'routerLink'\n}\n\nexport interface IBreadcrumbConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof LinkType;\n  // Translation key of base url segment\n  baseUrlKey: string;\n  // The mid-layer navigation to the ancestor links, the previous pages that lead to users to the child page\n  links?: ILinkComponentConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n  @Input() config: IBreadcrumbConfig = {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  };\n  baseUrl = '';\n  constructor(\n    private translate: TranslateService,\n    private standalone: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.createLinks();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.config?.links && this.config?.links.length > 0) {\n      if (this.config.type == 'routerLink') {\n        this.config?.links.forEach((link) => {\n          delete link.href;\n        });\n      } else {\n        this.config?.links.forEach((link) => {\n          delete link.routerLink;\n        });\n      }\n    }\n    this.createLinks();\n  }\n\n  /**\n   * Create href or routerLinks\n   */\n  createLinks() {\n    this.baseUrl = this.standalone.getBaseUrl('', this.config.baseUrlKey);\n    if (this.config.links && this.config.links.length > 1) {\n      let prev: string | undefined;\n      this.config?.links.forEach((link, i) => {\n        if (i === 0) {\n          link[this.config.type] = this.baseUrl;\n          prev = link[this.config.type];\n        } else if (link.linkKey) {\n          link[this.config.type] =\n            prev + this.translate.instant(link.linkKey) + '/';\n          prev = link[this.config.type];\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IButtonConfig.html":{"url":"interfaces/IButtonConfig.html","title":"interface - IButtonConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/button/button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconDirection\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tabIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconDirection:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tabIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tabIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum ButtonCategories {\n  primary = 'primary',\n  secondary = 'secondary',\n  plain = 'plain'\n}\n\nexport enum ButtonSize {\n  small = 'small',\n  large = 'large'\n}\n\nexport enum ButtonColor {\n  critical = 'critical',\n  CTA = 'CTA'\n}\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n  left = 'left',\n  right = 'right'\n}\n\nexport interface IButtonConfig {\n    id: string;\n    category?: keyof typeof ButtonCategories;\n    size?: keyof typeof ButtonSize;\n    color?: keyof typeof ButtonColor;\n    ariaLabel?: string;\n    disabled?: boolean;\n    icon?: string;\n    iconDirection?: keyof typeof ButtonIconDirection;\n    tabIndex?: number;\n};\n\n@Component({\n  selector: 'ircc-cl-lib-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n@Input() config: IButtonConfig = {\n    id: '',\n};\n    @Input() id = '';\n    @Input() category?: keyof typeof ButtonCategories;\n    @Input() size?: keyof typeof ButtonSize;\n    @Input() color?: keyof typeof ButtonColor;\n    @Input() ariaLabel?: string;\n    @Input() disabled?: boolean;\n    @Input() icon?: string;\n    @Input() iconDirection?: keyof typeof ButtonIconDirection;\n    @Input() tabIndex?: number;\n\n  @Output() btnAction: EventEmitter = new EventEmitter();\n\n    ngOnInit() {\n        (this.id !== '') ? this.config.id = this.id : undefined;\n        (this.category === undefined) ? undefined : this.config.category = this.category;\n        (this.size === undefined) ? undefined : this.config.size = this.size;\n        (this.color === undefined) ? undefined : this.config.color = this.color;\n        (this.ariaLabel !== undefined) ? this.config.ariaLabel = this.ariaLabel : undefined;\n        (this.disabled !== undefined) ? this.config.disabled = this.disabled : undefined;\n        (this.tabIndex !== undefined) ? this.config.tabIndex = this.tabIndex : undefined;\n        if (this.icon || this.config.icon) {\n            this.config.icon = this.icon ? this.icon : this.config.icon;\n            this.config.iconDirection = this.iconDirection? this.iconDirection : this.config.iconDirection;\n            this.config.iconDirection = this.config.iconDirection ? this.config.iconDirection : 'left'\n        } else {\n            this.config.icon = undefined;\n            this.config.iconDirection = undefined;\n        }\n    }\n\n\n  clickEvent(id: string) {\n    this.btnAction.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICTAConfig.html":{"url":"interfaces/ICTAConfig.html","title":"interface - ICTAConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICTAConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            btnConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linkConfig\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        btnConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        btnConfig:         IButtonConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IButtonConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICheckBoxComponentConfig.html":{"url":"interfaces/ICheckBoxComponentConfig.html","title":"interface - ICheckBoxComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICheckBoxComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customErrorText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFocus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            helpText\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inlineLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inlineLabelBold\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mixed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customErrorText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customErrorText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFocus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helpText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helpText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inlineLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineLabelBold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inlineLabelBold:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixed:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:      | DSSizes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | DSSizes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  label?: string;\n  required?: boolean;\n  size?: keyof typeof DSSizes | DSSizes;\n  mixed?: true;\n  disableFocus?: boolean; //Default is true\n  inlineLabel?: string;\n  inlineLabelBold?: boolean;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  helpText?: string;\n  customErrorText?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  isDisabled = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorAria = '';\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {};\n  onChange = () => {};\n\n  writeValue(): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n    if (!this.config?.size) this.config.size = DSSizes.large;\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICodeViewerConfig.html":{"url":"interfaces/ICodeViewerConfig.html","title":"interface - ICodeViewerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICodeViewerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/src/app/components/code-viewer/code-viewer.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            openAccordion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tab\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        openAccordion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        openAccordion:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ITabConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITabConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  IButtonConfig,\n  ITabNavConfig,\n  ITabConfig\n} from 'ircc-ds-angular-component-library';\n\nimport { IAccordionContainerConfig } from '../accordion-panel/accordion-container.component';\n\nexport interface ICodeViewerConfig {\n  id: string;\n  openAccordion?: boolean;\n  tab?: ITabConfig[];\n  selected?: string;\n}\n\n@Component({\n  selector: 'app-code-viewer',\n  templateUrl: './code-viewer.component.html',\n  styleUrls: ['./code-viewer.component.scss']\n})\nexport class codeViewerComponent implements OnInit {\n  @Input() config: ICodeViewerConfig = {\n    id: ''\n  };\n  @Output() getSelected = new EventEmitter();\n\n  tabConfig: ITabNavConfig = {\n    id: 'codeViewerTabs',\n    showContent: false\n  };\n  selectedTab: any = {\n    title: ''\n  };\n\n  accordionConfig: IAccordionContainerConfig = {\n    id: 'codeViewerTabsCccordion',\n    open: this.config.openAccordion\n  };\n\n  openAccordion: boolean = false;\n  minHeightResizeContainer = 150;\n  height: number = 150;\n\n  buttonConfigCopy: IButtonConfig = {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to copy the code'\n  };\n\n  ngOnInit() {\n    this.setupComponent();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config']) {\n      this.config = changes['config'].currentValue;\n      this.setupComponent();\n    }\n  }\n\n  setupComponent() {\n    if (this.config.openAccordion !== undefined) {\n      this.openAccordion = this.config.openAccordion;\n    }\n\n    if (this.config.selected) {\n      this.tabConfig.selected = this.config.selected;\n    }\n\n    if (this.config.tab) {\n      this.tabConfig.tab = this.config.tab;\n    } else {\n      this.tabConfig.tab = [];\n    }\n\n    if (this.config.tab && this.config.selected) {\n      this.selectedTab = this.config.tab.find(\n        (tab) => tab.id === this.config.selected\n      );\n    } else if (this.config.tab) {\n      this.selectedTab = this.config.tab[0];\n    } else {\n      this.selectedTab = {};\n    }\n  }\n\n  getSelectedTab(selected: any) {\n    if (this.config.tab) {\n      this.selectedTab = this.config.tab.find(\n        (element) => element.id === selected\n      );\n      this.config.selected = selected;\n      this.getSelected.emit(selected);\n    }\n  }\n\n  getHeight(height: number) {\n    this.height = height;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerConfig.html":{"url":"interfaces/IDatePickerConfig.html","title":"interface - IDatePickerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unknownDateToggle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:         IDatePickerErrorMessages\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatePickerErrorMessages\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unknownDateToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unknownDateToggle:         IDatePickerUnknownDateToggleConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatePickerUnknownDateToggleConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerDropDownConfigs.html":{"url":"interfaces/IDatePickerDropDownConfigs.html","title":"interface - IDatePickerDropDownConfigs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerDropDownConfigs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            day\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerErrorMessages.html":{"url":"interfaces/IDatePickerErrorMessages.html","title":"interface - IDatePickerErrorMessages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerErrorMessages\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            day\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            general\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            month\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        general\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        general:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatePickerUnknownDateToggleConfig.html":{"url":"interfaces/IDatePickerUnknownDateToggleConfig.html","title":"interface - IDatePickerUnknownDateToggleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerUnknownDateToggleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dayUnknown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            monthUnknown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            yearUnknown\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dayUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monthUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monthUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yearUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDropdownConfig.html":{"url":"interfaces/IDropdownConfig.html","title":"interface - IDropdownConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDropdownConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flyout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholderText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flyout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flyout:         IFlyoutConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFlyoutConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IIconButtonIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IIconButtonIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholderText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from \"../../../shared/constants/jl-components.constants\";\nimport { ButtonCategories } from '../button/button.component';\nimport { IIconButtonIconConfig } from '../icon-button/icon-button.component';\nimport { IFlyoutConfig } from '../flyout/flyout.component';\nexport interface IDropdownConfig {\n    id: string;\n    label?: string;\n    size?: keyof typeof DSSizes;\n    category?: keyof typeof ButtonCategories;\n    placeholderText?: string;\n    disabled?: boolean;\n    icon?: IIconButtonIconConfig;\n    flyout?: IFlyoutConfig;\n}\n@Component({\n  selector: 'ircc-cl-lib-dropdown',\n  templateUrl: './drop-down.component.html'\n})\nexport class DropdownComponent implements OnInit {\n\n  @Input() config: IDropdownConfig = {\n    id: ''\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string = '';\n  @Input() placeholderText?: string = '';\n  @Input() disabled?: boolean;\n  @Input() category?: keyof typeof ButtonCategories;\n\n  showPlaceholder: boolean = false;\n  selected: boolean = false;\n\n  flyoutConfig : IFlyoutConfig = {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n\n  ngOnInit() {\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.placeholderText !== '')\n      this.config.placeholderText = this.placeholderText;\n    if (this.disabled !== undefined) this.config.disabled = this.disabled;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n\n    if (!this.config.category) this.config.category = ButtonCategories.primary;\n\n    if (!this.config.label || this.config.label.trim().length == 0) {\n      if (!this.config.placeholderText) {\n        this.config.placeholderText = 'Default';\n      }\n      this.showPlaceholder = true;\n    }\n\n    if(this.config.flyout) this.flyoutConfig = this.config.flyout;\n  }\n\n  selectedOption(e: Event) {\n    //if it receives it's event info it selects the index - if not closes flyout\n    if(e){\n      this.showPlaceholder = false;\n      this.config.label = e.toString();\n      this.selected = !this.selected;\n      this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }else{\n      this.toggleFlyout(false);\n    }\n  }\n\n  /**\n   * function receives a truthy value which determines wether it closes or opens, \n   * but also looks for FocusEvent to check if flyout is being interacted with\n   * @param status \n   * @param e \n   */\n  toggleFlyout(status: boolean, e?: FocusEvent) {\n    let target = e?.relatedTarget as HTMLElement;\n    if(!target?.id.includes(this.config.id) || !e){\n      this.selected = status;\n      !status && this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }\n  }\n\n  /**\n   * Clear the flyout active state\n   */\n  clearFlyoutFocus() {\n    if (this.config?.flyout?.options) {\n      this.config.flyout.options.forEach(i => {\n        i.active = false;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorComponentConfig.html":{"url":"interfaces/IErrorComponentConfig.html","title":"interface - IErrorComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/error/error.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorLOV\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorLOV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorLOV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IErrorIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IErrorIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorIconConfig.html":{"url":"interfaces/IErrorIconConfig.html","title":"interface - IErrorIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/error/error.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlyoutConfig.html":{"url":"interfaces/IFlyoutConfig.html","title":"interface - IFlyoutConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlyoutConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         IFlyoutOptionConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFlyoutOptionConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selection:      | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter, HostListener, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { IFlyoutOptionConfig } from '../flyout-option/flyout-option.component';\n\nexport enum IFlyoutSelectTypes {\n  single = 'single',\n  multi = 'multi'\n}\n\nexport interface IFlyoutConfig {\n  id: string,\n  options?: IFlyoutOptionConfig[],\n  disabled?: boolean\n  selection?: [] | number,\n  type?: keyof typeof IFlyoutSelectTypes\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout',\n  templateUrl: './flyout.component.html'\n})\nexport class FlyoutComponent implements OnInit {\n  @ViewChildren('option') optionContainers: QueryList = new QueryList;\n\n  @Input() config : IFlyoutConfig = {\n    id: ''\n  }\n  @Input() id? : string;\n  @Input() options?: IFlyoutOptionConfig[];\n  @Input() disabled?: boolean;\n  @Input() selection?: [] | number;\n  @Input() type?: keyof typeof IFlyoutSelectTypes;\n\n  //TODO: Must add the other config parameters\n  @Output() isSelected = new EventEmitter();\n\n  selectedIndex : number = -1;\n  a11yText : string = '';\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'single';\n    if(this.id) this.config.id = this.id;\n    if(this.options) this.config.options = this.options;\n    if(this.disabled) this.config.disabled = this.disabled;\n    if(this.selection) this.config.selection = this.selection;\n    if(this.type) this.config.type = this.type;\n  };\n\n  @HostListener('document:keydown.arrowdown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options.slice(this.selectedIndex + 1).forEach((option, index) => {\n        if (!foundClickable && option.clickable !== false) {\n          this.selectedIndex += index + 1;\n          this.highlightIndex(option.id);\n          foundClickable = true;\n        }\n      });\n    }\n  }\n\n  @HostListener('document:keydown.arrowup', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(0, this.selectedIndex)\n        .reverse()\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex -= index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n      // Ensure selectedIndex does not fall below 0\n      this.selectedIndex = Math.max(this.selectedIndex, 0);\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    event.preventDefault();\n    //if the index hasn't changes through arrow navigation, emits our event but lets the parent know nothing was selected\n    this.selectedIndex != -1 ? this.optionSelected(this.selectedIndex) : this.isSelected.emit(null);\n  }\n\n  //takes in the active index from HostListeners and sets the config option to active state which triggers styling\n  highlightIndex(el_id: any) {\n    if(el_id){\n      this.config.options?.forEach(option => {\n        if(option.id === el_id){\n          option.active = true;\n          this.optionContainers.toArray()[this.selectedIndex]?.nativeElement?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n          this.a11yText = option.value;\n          //updates a11yText to indicate currently selected item if scrolling through flyout again\n          if(option.selected) this.a11yText += ' currently selected'; //translation?\n        }else{\n          option.active = false;\n        }\n      });\n    }\n  }\n\n  //clears all selections by setting the option.selected to false\n  clearOptions(){\n    this.config?.options?.forEach(option => {\n      option.selected = false;\n    });\n  }\n\n  //function takes in index value of current active option and selects it\n  optionSelected(i: number){\n    if(this.config.options && !this.config.options[i].selected && this.config.options[i].clickable){\n      //setup for future multi select feature\n      this.config.type !== 'multi' ? this.clearOptions() : /*this.config.selection = [].push(this.config.options[i]);*/console.log('MULTI');\n      this.config.options[i].selected = true;\n      //emits the value of the selected index so it's visible to the parent\n      this.isSelected.emit(this.config.options[i].value);\n      }\n  }\n\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlyoutOptionConfig.html":{"url":"interfaces/IFlyoutOptionConfig.html","title":"interface - IFlyoutOptionConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlyoutOptionConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nexport enum IFlyoutOptionType {\n  text = 'text',\n  checkbox = 'checkbox',\n  dropdown = 'dropdown',\n  line = 'line',\n  heading = 'heading'\n}\n\nexport interface IFlyoutOptionConfig {\n  id?: string,\n  value: string,\n  selected?: boolean,\n  active?: boolean,\n  disabled?: boolean,\n  type?: keyof typeof IFlyoutOptionType,\n  clickable?: boolean\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout-option',\n  templateUrl: './flyout-option.component.html'\n})\nexport class FlyoutOptionComponent implements OnInit {\n\n  @Input() config : IFlyoutOptionConfig = {\n    id: '',\n    value: 'Blank label'\n  }\n\n  @Input() id? : string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'text';\n    if((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false) this.config.clickable = true;\n    if(this.id) this.config.id = this.id;\n  };\n\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHiddenNavConfig.html":{"url":"interfaces/IHiddenNavConfig.html","title":"interface - IHiddenNavConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHiddenNavConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipLinks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipLinks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipLinks:         ISkipLinkConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISkipLinkConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIconButtonComponentConfig.html":{"url":"interfaces/IIconButtonComponentConfig.html","title":"interface - IIconButtonComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconButtonComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IIconButtonIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IIconButtonIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIconButtonIconConfig.html":{"url":"interfaces/IIconButtonIconConfig.html","title":"interface - IIconButtonIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconButtonIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIconConfig.html":{"url":"interfaces/IIconConfig.html","title":"interface - IIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon/icon.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FA_keywords\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FA_keywords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FA_keywords:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface IIconConfig {\n  ariaLabel?: string;\n  FA_keywords?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent implements OnChanges {\n  @ViewChild('iconSpan') iconSpan!: ElementRef;\n  @Input() config: IIconConfig = {};\n  @Input() ariaLabel?: string;\n  @Input() FA_keywords?: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config'] && !changes['config'].firstChange) {\n      const change = changes['config'].currentValue;\n      const keys = Object.keys(change);\n      let spanContent = ``;\n      this.iconSpan.nativeElement.innerHTML = spanContent;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIndicatorConfig.html":{"url":"interfaces/IIndicatorConfig.html","title":"interface - IIndicatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIndicatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            palette\n                                        \n                                \n                                \n                                        \n                                            purpose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        palette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        palette:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purpose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        purpose:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IndicatorType {\n  dot,\n  text,\n  number\n}\n\nexport enum IndicatorTreatment {\n  strong = 'strong',\n  weak = 'weak'\n}\n\nexport enum IndicatorPurpose {\n  status = 'status',\n  palette = 'palette'\n}\n\nexport enum IndicatorStatus {\n  information = 'information',\n  warning = 'warning',\n  critical = 'critical',\n  neutral = 'neutral',\n  primary = 'primary',\n  success = 'success'\n}\n\nexport enum IndicatorPalette {\n  teal,\n  orange,\n  red,\n  grey,\n  blue,\n  green,\n  purple,\n  navy\n}\n\nexport interface IIndicatorConfig {\n  label?: string | number;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof IndicatorType;\n  icon?: string;\n  category: keyof typeof IndicatorTreatment; // Treatment\n  purpose: keyof typeof IndicatorPurpose;\n  status?: keyof typeof IndicatorStatus; // Sentiment\n  palette?: keyof typeof IndicatorPalette; // Colour\n  ariaLabel?: string; // Aria label line of value\n}\n\n@Component({\n  selector: 'lib-indicator',\n  templateUrl: './indicator.component.html'\n})\nexport class IndicatorComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: IIndicatorConfig = {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  };\n  @ViewChild('label') label?: ElementRef;\n  EIndicatorStatus = IndicatorStatus;\n  rounded?: boolean;\n  abbr?: boolean; // Display abbr tag when text is truncated\n\n  ngOnInit() {\n    this.checkLabelRounded();\n    this.checkNumber();\n  }\n\n  ngAfterViewInit() {\n    this.checkLabelLength();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.checkNumber();\n    this.checkLabelRounded();\n    this.checkLabelLength();\n  }\n\n  // Check if number exceeds 99\n  private checkNumber() {\n    if (\n      this.config.type === 'number' &&\n      this.config?.label &&\n      this.config.label > 99\n    ) {\n      this.config.label = '99+';\n    }\n  }\n\n  // If label only have 1 character, it should be rounded\n  private checkLabelRounded() {\n    if (typeof this.config?.label === 'string') {\n      this.rounded = this.config.label.length == 1 && !this.config.icon;\n    }\n  }\n\n  // Check if div exceeds 200px\n  private checkLabelLength() {\n    // Max 200px - padding 8px x2\n    this.abbr = (\n      (this.label?.nativeElement?.offsetWidth &&\n        this.label?.nativeElement?.offsetWidth > 184)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInputComponentConfig.html":{"url":"interfaces/IInputComponentConfig.html","title":"interface - IInputComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInputComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/input/input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IInputComponentConfig {\n  label?: string;\n  hint?: string;\n  desc?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  type?: keyof typeof InputTypes;\n  id: string;\n  size?: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password'\n}\n@Component({\n  selector: 'ircc-cl-lib-input',\n  templateUrl: './input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: IInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() type: keyof typeof InputTypes = InputTypes.password;\n\n  disabled = false;\n  focusState = false;\n  showPassword?: boolean;\n  typeControl: keyof typeof InputTypes = InputTypes.text;\n  ariaText = 'Text Input';\n  errorIds: IErrorIDs[] = [];\n  errorAria = '';\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (!this.config.type) {\n      this.config.type = InputTypes.text;\n    } else if (this.config.type === InputTypes.password) {\n      this.showPassword = false;\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n\n    this.type === InputTypes.text\n      ? (this.showPassword = false)\n      : (this.showPassword = true);\n\n    //set disable to true when form is disabled\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      if (change[this.config.id] === undefined) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n\n    if (this.showPassword) {\n      this.typeControl = InputTypes.text;\n      this.ariaText = 'Text Input';\n    } else {\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n  }\n\n  public clearvalue() {}\n  writeValue(value: string): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelConfig.html":{"url":"interfaces/ILabelConfig.html","title":"interface - ILabelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILabelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconButton\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            parentID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            touched\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconButton:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touched\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        touched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelIconConfig.html":{"url":"interfaces/ILabelIconConfig.html","title":"interface - ILabelIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILabelIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ariaText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            colour\n                                        \n                                \n                                \n                                        \n                                            iconClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colour:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILinkComponentConfig.html":{"url":"interfaces/ILinkComponentConfig.html","title":"interface - ILinkComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILinkComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            href\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linkKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routerLink\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport interface ILinkComponentConfig {\n  text: string;\n  linkKey?: string;\n  href?: string;\n  routerLink?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb-link',\n  templateUrl: './link.component.html'\n})\nexport class BreadcrumbLinkComponent {\n  @Input() config: ILinkComponentConfig = {\n    text: ''\n  };\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOption.html":{"url":"interfaces/IOption.html","title":"interface - IOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewChild\n} from '@angular/core';\nimport { InputComponent } from '../../form-components/input/input.component';\n//TODO: This should be changed. Ideally the component doesn't need to know about these, and can just\n//add them in using the template.\nimport { ChipItemComponent } from '../chips/chip-item/chip-item.component';\n\ninterface IOption {\n  //Changed: Interfaces should ALWAYS start with 'I'.\n  text: string;\n  value: string;\n}\n\n@Component({\n  selector: 'lib-autocomplete',\n  templateUrl: './autocomplete.component.html'\n})\nexport class AutocompleteComponent implements OnInit, DoCheck {\n  @ViewChild(InputComponent, { static: true })\n  inputComponent?: InputComponent;\n\n  //TODO: Change this to a config\n  @Input() options: IOption[] = [];\n  @Input() title = `Title`;\n  @Input() hintText = `Hint Text`;\n  @Input() name = `Add Name`;\n  @Input() error = false;\n  @Input() limit = 0;\n  @Output() selectValueChange = new EventEmitter();\n  @Input() savedSelectedOptions: IOption[] = [];\n\n  selectedOptions: IOption[] = [];\n  originalOptions: IOption[] = [];\n  inputValue?: string;\n  hideDropdown = true;\n  isFocusInsideComponent = false;\n  isComponentClicked = false;\n  addHover = false;\n  emptyResults = false;\n\n  differ: KeyValueDiffer;\n  constructor(private differs: KeyValueDiffers) {\n    this.differ = this.differs.find({}).create();\n  }\n\n  @HostListener('window:keydown.escape', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (this.hideDropdown === false || this.options.length > 0) {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  clickInside(event: { target: HTMLInputElement }) {\n    const target = event.target;\n    if (\n      this.hideDropdown === true &&\n      target.type === `text` &&\n      this.options.length > 0\n    ) {\n      this.isFocusInsideComponent = true;\n      this.isComponentClicked = true;\n      this.toggleDropDown();\n      this.addHover = true;\n    } else if (\n      target.classList.contains('select-target') ||\n      target.classList.contains(`selected`)\n    ) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.toggleDropDown();\n    }\n  }\n\n  @HostListener('document:click')\n  clickout() {\n    if (!this.isFocusInsideComponent && this.isComponentClicked) {\n      this.toggleDropDown();\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n    }\n    this.isFocusInsideComponent = false;\n  }\n\n  onMouseEnter() {\n    this.addHover = false;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this);\n    if (change) {\n      change.forEachChangedItem((item) => {\n        if (item.key === `options`) {\n          this.selectValueChange.emit(this.selectedOptions);\n        }\n      });\n    }\n  }\n\n  valueChange(event: any) {\n    this.filterList(event);\n  }\n\n  filterList(filterValue: any) {\n    if (filterValue.length  {\n        return value.text.toLowerCase().includes(filterValue.toLowerCase());\n      });\n      this.options = filteredOptions.slice(0);\n      if (this.options.length === 0) {\n        this.emptyResults = true;\n      } else {\n        this.emptyResults = false;\n      }\n    }\n  }\n\n  public checkActive(value: string): boolean {\n    for (const selectedOption of this.selectedOptions) {\n      if (selectedOption.value === value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  returnOptionsToDefault() {\n    this.emptyResults = false;\n    this.options = this.originalOptions.slice(0);\n  }\n\n  public toggleDropDown() {\n    this.hideDropdown = !this.hideDropdown;\n    this.inputComponent?.focusInput(this.hideDropdown);\n  }\n\n  public toggleDropDownKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.toggleDropDown();\n    }\n  }\n\n  removeChipItem(index: number) {\n    this.selectedOptions.splice(index, 1);\n    this.returnOptionsToDefault();\n  }\n\n  public removeAllChipItems() {\n    this.selectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n\n  public selectAll() {\n    for (const option of this.options) {\n      this.selectedOptions.push(option);\n    }\n    this.returnOptionsToDefault();\n  }\n\n  public selectIndex(index: number) {\n    if (this.limit !== 0 && this.selectedOptions.length >= this.limit) {\n      return;\n    } else {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      if (this.checkDuplicated(index) === false) {\n        this.selectedOptions.push(this.options[index]);\n      }\n    }\n  }\n\n  checkDuplicated(index: number) {\n    return this.selectedOptions.some((element: { value: string }) => {\n      if (element.value === this.options[index].value) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedOptions = [];\n    this.originalOptions = this.options.slice(0);\n    this.selectedOptions = this.savedSelectedOptions;\n    this.savedSelectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProgressIndicatorConfig.html":{"url":"interfaces/IProgressIndicatorConfig.html","title":"interface - IProgressIndicatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProgressIndicatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orientation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            steps\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:         IStepConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IStepConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProgressTagsConfig.html":{"url":"interfaces/IProgressTagsConfig.html","title":"interface - IProgressTagsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProgressTagsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport const TAG_LABELS_EN = [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n];\nexport const TAG_LABELS_FR = [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n];\n\nexport enum TagType {\n  primary = 'primary',\n  success = 'success',\n  critical = 'critical',\n  locked = 'locked',\n  notStarted = 'notStarted'\n}\nexport interface IProgressTagsConfig {\n  id: string;\n  type?: keyof typeof TagType;\n  size?: keyof typeof DSSizes;\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-tags',\n  templateUrl: './progress-tags.component.html'\n})\nexport class ProgressTagsComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: IProgressTagsConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof TagType | TagType;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = TAG_LABELS_EN;\n    } else {\n      this.text = TAG_LABELS_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioInputComponentConfig.html":{"url":"interfaces/IRadioInputComponentConfig.html","title":"interface - IRadioInputComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRadioInputComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            helpText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helpText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helpText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         IRadioInputOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRadioInputOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:     ValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioInputOption.html":{"url":"interfaces/IRadioInputOption.html","title":"interface - IRadioInputOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRadioInputOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizeOverride\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeOverride\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeOverride:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchInputButtonConfig.html":{"url":"interfaces/ISearchInputButtonConfig.html","title":"interface - ISearchInputButtonConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchInputButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            colour\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colour:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchInputConfig.html":{"url":"interfaces/ISearchInputConfig.html","title":"interface - ISearchInputConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchInputConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholderText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchButton\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholderText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchButton:         ISearchInputButtonConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISearchInputButtonConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectConfig.html":{"url":"interfaces/ISelectConfig.html","title":"interface - ISelectConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISelectConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/select/select.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableError\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ISelectOptionsConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectOptionsConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectOptionsConfig.html":{"url":"interfaces/ISelectOptionsConfig.html","title":"interface - ISelectOptionsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISelectOptionsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/select/select.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISkipLinkConfig.html":{"url":"interfaces/ISkipLinkConfig.html","title":"interface - ISkipLinkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISkipLinkConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpinnerConfig.html":{"url":"interfaces/ISpinnerConfig.html","title":"interface - ISpinnerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISpinnerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orientation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  DSFullSizes,\n  DSOrientations\n} from '../../../shared/constants/jl-components.constants';\n\nexport const SPINNER_LABELS_EN = ['Loading', 'Success', 'Error'];\nexport const SPINNER_LABELS_FR = ['Chargement', 'Succès', 'Erreur'];\n\nexport enum SpinnerType {\n  active = 'active',\n  success = 'success',\n  critical = 'critical'\n}\nexport interface ISpinnerConfig {\n  id: string;\n  type?: keyof typeof SpinnerType;\n  size?: keyof typeof DSFullSizes;\n  orientation?: keyof typeof DSOrientations;\n  label?: string;\n  description?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-spinner',\n  templateUrl: './spinner.component.html'\n})\nexport class SpinnerComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: ISpinnerConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof SpinnerType | SpinnerType;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() orientation?: keyof typeof DSOrientations | DSOrientations;\n  @Input() label?: '';\n  @Input() description?: '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    if (!this.config.size) this.config.size = 'large';\n\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    this.removeVertical();\n\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = SPINNER_LABELS_EN;\n    } else {\n      this.text = SPINNER_LABELS_FR;\n    }\n  }\n\n  removeVertical() {\n    if (\n      this.config.size !== 'large' &&\n      this.config.orientation === 'vertical'\n    ) {\n      this.config.orientation = 'horizontal';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStepConfig.html":{"url":"interfaces/IStepConfig.html","title":"interface - IStepConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStepConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tagConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tagConfig:         IProgressTagsConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProgressTagsConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITabConfig.html":{"url":"interfaces/ITabConfig.html","title":"interface - ITabConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITabConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITabNavConfig.html":{"url":"interfaces/ITabNavConfig.html","title":"interface - ITabNavConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITabNavConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tab\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ITabConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITabConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITextareaComponentConfig.html":{"url":"interfaces/ITextareaComponentConfig.html","title":"interface - ITextareaComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITextareaComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            charLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resizable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorIcon:         IErrorIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IErrorIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizable:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorIconConfig } from '../error/error.component';\n\nexport interface ITextareaComponentConfig {\n  formGroup: FormGroup;\n  id: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  charLimit?: string;\n  resizable?: keyof typeof ResizableTypes;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  errorIcon?: IErrorIconConfig;\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum ResizableTypes {\n  vertical = 'vertical',\n  horizontal = 'password',\n  both = 'both',\n  none = 'none'\n}\n\n@Component({\n  selector: 'ircc-cl-lib-textarea',\n  templateUrl: './textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: ITextareaComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() charLimit = '';\n\n  disabled = false;\n  focusState = false;\n  errorIds: IErrorIDs[] = [];\n  charLimitStatus = '';\n  currentCharacterStatusAria = '';\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n\n  constructor(public standAloneFunctions: StandAloneFunctions) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit(): void {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.charLimit !== '') {\n      this.config.charLimit = this.charLimit;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.characterCountStatus(\n        this.config.formGroup.controls[this.config.id].value.length\n      );\n    }\n\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.characterCountStatus(change[this.config.id]?.length);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  characterCountStatus(currCharCount: any) {\n    if (this.config?.charLimit) {\n      if (this.config?.charLimit == currCharCount) {\n        this.charLimitStatus = 'maxLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.maxLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount == 15) {\n        this.charLimitStatus = 'warningLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.warningLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconButtonComponent.html":{"url":"components/IconButtonComponent.html","title":"component - IconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-icon-button\n            \n\n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                category\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :      | IconButtonCategories\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         IIconButtonIconConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSFullSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClick\n                        \n                    \n                \n            \n            \n                \nbuttonClick(id)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.config.id\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/icon/icon.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconSpan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                config\n                            \n                            \n                                FA_keywords\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIconConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FA_keywords\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconSpan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('iconSpan')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface IIconConfig {\n  ariaLabel?: string;\n  FA_keywords?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent implements OnChanges {\n  @ViewChild('iconSpan') iconSpan!: ElementRef;\n  @Input() config: IIconConfig = {};\n  @Input() ariaLabel?: string;\n  @Input() FA_keywords?: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config'] && !changes['config'].firstChange) {\n      const change = changes['config'].currentValue;\n      const keys = Object.keys(change);\n      let spanContent = ``;\n      this.iconSpan.nativeElement.innerHTML = spanContent;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndicatorComponent.html":{"url":"components/IndicatorComponent.html","title":"component - IndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-indicator\n            \n\n\n\n\n            \n                templateUrl\n                ./indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                abbr\n                            \n                            \n                                EIndicatorStatus\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLabelLength\n                            \n                            \n                                    Private\n                                checkLabelRounded\n                            \n                            \n                                    Private\n                                checkNumber\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIndicatorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:66\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkLabelLength\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkLabelLength()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkLabelRounded\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkLabelRounded()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkNumber()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        abbr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EIndicatorStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : IndicatorStatus\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('label')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rounded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IndicatorType {\n  dot,\n  text,\n  number\n}\n\nexport enum IndicatorTreatment {\n  strong = 'strong',\n  weak = 'weak'\n}\n\nexport enum IndicatorPurpose {\n  status = 'status',\n  palette = 'palette'\n}\n\nexport enum IndicatorStatus {\n  information = 'information',\n  warning = 'warning',\n  critical = 'critical',\n  neutral = 'neutral',\n  primary = 'primary',\n  success = 'success'\n}\n\nexport enum IndicatorPalette {\n  teal,\n  orange,\n  red,\n  grey,\n  blue,\n  green,\n  purple,\n  navy\n}\n\nexport interface IIndicatorConfig {\n  label?: string | number;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof IndicatorType;\n  icon?: string;\n  category: keyof typeof IndicatorTreatment; // Treatment\n  purpose: keyof typeof IndicatorPurpose;\n  status?: keyof typeof IndicatorStatus; // Sentiment\n  palette?: keyof typeof IndicatorPalette; // Colour\n  ariaLabel?: string; // Aria label line of value\n}\n\n@Component({\n  selector: 'lib-indicator',\n  templateUrl: './indicator.component.html'\n})\nexport class IndicatorComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: IIndicatorConfig = {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  };\n  @ViewChild('label') label?: ElementRef;\n  EIndicatorStatus = IndicatorStatus;\n  rounded?: boolean;\n  abbr?: boolean; // Display abbr tag when text is truncated\n\n  ngOnInit() {\n    this.checkLabelRounded();\n    this.checkNumber();\n  }\n\n  ngAfterViewInit() {\n    this.checkLabelLength();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.checkNumber();\n    this.checkLabelRounded();\n    this.checkLabelLength();\n  }\n\n  // Check if number exceeds 99\n  private checkNumber() {\n    if (\n      this.config.type === 'number' &&\n      this.config?.label &&\n      this.config.label > 99\n    ) {\n      this.config.label = '99+';\n    }\n  }\n\n  // If label only have 1 character, it should be rounded\n  private checkLabelRounded() {\n    if (typeof this.config?.label === 'string') {\n      this.rounded = this.config.label.length == 1 && !this.config.icon;\n    }\n  }\n\n  // Check if div exceeds 200px\n  private checkLabelLength() {\n    // Max 200px - padding 8px x2\n    this.abbr = (\n      (this.label?.nativeElement?.offsetWidth &&\n        this.label?.nativeElement?.offsetWidth > 184)\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ config?.label }}\n    \n    \n      {{ config?.label }}\n    \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ config?.label }}              {{ config?.label }}          '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoTextSmallComponent.html":{"url":"components/InfoTextSmallComponent.html","title":"component - InfoTextSmallComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoTextSmallComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/info-text-small/info-text-small.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-text-small\n            \n\n            \n                styleUrls\n                ./info-text-small.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-text-small.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                circleInfoIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/info-text-small/info-text-small.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        circleInfoIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    FA_keywords: 'f05a',\n    ariaLabel: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/info-text-small/info-text-small.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IIconConfig } from 'ircc-ds-angular-component-library';\n\n@Component({\n  selector: 'app-info-text-small',\n  templateUrl: './info-text-small.component.html',\n  styleUrls: ['./info-text-small.component.scss']\n})\nexport class InfoTextSmallComponent {\n  circleInfoIcon: IIconConfig = {\n    FA_keywords: 'f05a',\n    ariaLabel: ''\n  };\n\n  constructor() {}\n}\n\n    \n\n    \n         -->\n\n  \n\n\n    \n\n    \n                \n                    ./info-text-small.component.scss\n                \n                :host {\n  small {\n    margin-left: 6px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoTextSmallComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/input/input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-input\n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ariaText\n                            \n                            \n                                disabled\n                            \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                focusState\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                    Private\n                                    Optional\n                                onChange\n                            \n                            \n                                    Private\n                                    Optional\n                                onTouch\n                            \n                            \n                                    Optional\n                                showPassword\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                            \n                                typeControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearvalue\n                            \n                            \n                                    Public\n                                focusInput\n                            \n                            \n                                getAriaErrorText\n                            \n                            \n                                hideShow\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getErrorState\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IInputComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : InputTypes.password\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearvalue\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearvalue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        focusInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusInput(focusValue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focusValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:154\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideShow\n                        \n                    \n                \n            \n            \n                \nhideShow()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:202\n                \n            \n\n\n            \n                \n                    Toggle the password field\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:168\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ariaText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Text Input'\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : InputTypes.text\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:66\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getErrorState\n                    \n                \n\n                \n                    \n                        getgetErrorState()\n                    \n                \n                            \n                                \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:229\n                                \n                            \n                    \n                        \n                                Return error state from FormGroup, must be touched & invalid\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IInputComponentConfig {\n  label?: string;\n  hint?: string;\n  desc?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  type?: keyof typeof InputTypes;\n  id: string;\n  size?: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password'\n}\n@Component({\n  selector: 'ircc-cl-lib-input',\n  templateUrl: './input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: IInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() type: keyof typeof InputTypes = InputTypes.password;\n\n  disabled = false;\n  focusState = false;\n  showPassword?: boolean;\n  typeControl: keyof typeof InputTypes = InputTypes.text;\n  ariaText = 'Text Input';\n  errorIds: IErrorIDs[] = [];\n  errorAria = '';\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (!this.config.type) {\n      this.config.type = InputTypes.text;\n    } else if (this.config.type === InputTypes.password) {\n      this.showPassword = false;\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n\n    this.type === InputTypes.text\n      ? (this.showPassword = false)\n      : (this.showPassword = true);\n\n    //set disable to true when form is disabled\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      if (change[this.config.id] === undefined) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n\n    if (this.showPassword) {\n      this.typeControl = InputTypes.text;\n      this.ariaText = 'Text Input';\n    } else {\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n  }\n\n  public clearvalue() {}\n  writeValue(value: string): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n          \n\n          \n            \n              \n            \n            \n              \n            \n          \n        \n      \n      \n        \n          {{\n            errorStubText + ': ' + (config.label || '' | translate) + ': '\n          }}\n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                      {{            errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'          }}                                                                              '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InteractiveDemoComponent.html":{"url":"components/InteractiveDemoComponent.html","title":"component - InteractiveDemoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InteractiveDemoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/interactive-demo/interactive-demo.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-interactive-demo\n            \n\n            \n                styleUrls\n                ./interactive-demo.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./interactive-demo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordionConfig\n                            \n                            \n                                iconConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accordionConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAccordionContainerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'InteractiveDemoComponentAcccordion',\n    open: true,\n    buttonText: 'DEMO_COMPONENT.ACCORDION_OPEN',\n    buttonTextClosed: 'DEMO_COMPONENT.ACCORDION_CLOSED'\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonIconConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    class: 'fa-light fa-chevron-down'\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/interactive-demo/interactive-demo.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IIconButtonIconConfig } from 'ircc-ds-angular-component-library';\nimport { IAccordionContainerConfig } from '../accordion-panel/accordion-container.component';\n\nexport enum ComponentType {\n  banner = 'banner'\n}\n\n@Component({\n  selector: 'app-interactive-demo',\n  templateUrl: './interactive-demo.component.html',\n  styleUrls: ['./interactive-demo.component.scss']\n})\nexport class InteractiveDemoComponent implements OnInit {\n  iconConfig: IIconButtonIconConfig = {\n    class: 'fa-light fa-chevron-down'\n  };\n\n  /*\n   This variable is added to the class of component container,\n   it is being used to overrride background color for interactive\n   component specifically for Banner in the scss file, since \n   banner has a white background and rest have a grey background.\n  */\n  @Input() componentType?: keyof typeof ComponentType;\n\n  accordionConfig: IAccordionContainerConfig = {\n    id: 'InteractiveDemoComponentAcccordion',\n    open: true,\n    buttonText: 'DEMO_COMPONENT.ACCORDION_OPEN',\n    buttonTextClosed: 'DEMO_COMPONENT.ACCORDION_CLOSED'\n  };\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n  \n  \n    \n      \n        \n  \n\n\n    \n\n    \n                \n                    ./interactive-demo.component.scss\n                \n                @use '../../../../../core-library/tokens/sizes' as token-size;\n@use '../../../../../core-library/util/size' as size;\n@use '../../../../../core-library/tokens/sizes';\n\n.container {\n  border-radius: 5px;\n  border-width: sizes.$fixed-1;\n  border-color: var(--neutral-border);\n  border-style: solid;\n\n  .test_component {\n    background-color: var(--surface2);\n    display: flex;\n    justify-content: center;\n    border-top: sizes.$fixed-1 solid var(--divider);\n  }\n\n  .banner {\n    background-color: var(--surface1);\n  }\n\n  .hide-show-button {\n    width: 100%;\n    max-width: 100%;\n    display: flex;\n    align-items: center;\n    height: 48px;\n  }\n\n  .icon-container {\n    padding-right: 9px;\n  }\n\n  .flip-chevron {\n    .custom-chevron {\n      transform: rotateZ(180deg);\n    }\n  }\n\n  .toggles {\n    margin: 16px 28px 28px 28px;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    row-gap: 24px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InteractiveDemoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularBannerModule.html":{"url":"modules/IrccDsAngularBannerModule.html","title":"module - IrccDsAngularBannerModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularBannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularBannerModule\n\n\n\ncluster_IrccDsAngularBannerModule_exports\n\n\n\ncluster_IrccDsAngularBannerModule_declarations\n\n\n\n\nBannerComponent\n\nBannerComponent\n\n\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule -->\n\nBannerComponent->IrccDsAngularBannerModule\n\n\n\n\n\nBannerComponent \n\nBannerComponent \n\nBannerComponent  -->\n\nIrccDsAngularBannerModule->BannerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/ircc-ds-angular-banner.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BannerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BannerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BannerComponent } from './banner/banner.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [BannerComponent],\n  imports: [IrccDsAngularComponentsSharedModule, CommonModule, TranslateModule],\n  exports: [BannerComponent]\n})\nexport class IrccDsAngularBannerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularComponentsSharedModule.html":{"url":"modules/IrccDsAngularComponentsSharedModule.html","title":"module - IrccDsAngularComponentsSharedModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularComponentsSharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularComponentsSharedModule\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_exports\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_declarations\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\n\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbLinkComponent\n\nBreadcrumbLinkComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbLinkComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nDropdownComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutComponent\n\nFlyoutComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutOptionComponent\n\nFlyoutOptionComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutOptionComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIndicatorComponent\n\nIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nLabelComponent\n\nLabelComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nLabelComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressIndicatorComponent\n\nProgressIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressTagsComponent\n\nProgressTagsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressTagsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nSpinnerComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nTabsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbComponent \n\n\n\n\n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbLinkComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->ButtonComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nIrccDsAngularComponentsSharedModule->DropdownComponent \n\n\n\n\n\nFlyoutComponent \n\nFlyoutComponent \n\nFlyoutComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutComponent \n\n\n\n\n\nFlyoutOptionComponent \n\nFlyoutOptionComponent \n\nFlyoutOptionComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutOptionComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconComponent \n\n\n\n\n\nIndicatorComponent \n\nIndicatorComponent \n\nIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->IndicatorComponent \n\n\n\n\n\nLabelComponent \n\nLabelComponent \n\nLabelComponent  -->\n\nIrccDsAngularComponentsSharedModule->LabelComponent \n\n\n\n\n\nProgressIndicatorComponent \n\nProgressIndicatorComponent \n\nProgressIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressIndicatorComponent \n\n\n\n\n\nProgressTagsComponent \n\nProgressTagsComponent \n\nProgressTagsComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressTagsComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nIrccDsAngularComponentsSharedModule->SpinnerComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nIrccDsAngularComponentsSharedModule->TabsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            BreadcrumbLinkComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FlyoutComponent\n                        \n                        \n                            FlyoutOptionComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            IndicatorComponent\n                        \n                        \n                            LabelComponent\n                        \n                        \n                            ProgressIndicatorComponent\n                        \n                        \n                            ProgressTagsComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            BreadcrumbLinkComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FlyoutComponent\n                        \n                        \n                            FlyoutOptionComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            IndicatorComponent\n                        \n                        \n                            LabelComponent\n                        \n                        \n                            ProgressIndicatorComponent\n                        \n                        \n                            ProgressTagsComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonComponent } from './button/button.component';\nimport { IconComponent } from './icon/icon.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { ProgressTagsComponent } from './progress-tags/progress-tags.component';\nimport { DropdownComponent } from './dropdown/drop-down.component';\nimport { LabelComponent } from './label/label.component';\nimport { ProgressIndicatorComponent } from './progress-indicator/progress-indicator.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { BreadcrumbLinkComponent } from './breadcrumb/link/link.component';\nimport { IndicatorComponent } from './indicator/indicator.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { FlyoutComponent } from './flyout/flyout.component';\nimport { FlyoutOptionComponent } from './flyout-option/flyout-option.component';\n\nconst IrccDsSharedComponents = [\n  ButtonComponent,\n  BreadcrumbComponent,\n  BreadcrumbLinkComponent,\n  IconComponent,\n  IconButtonComponent,\n  IndicatorComponent,\n  TabsComponent,\n  ProgressTagsComponent,\n  DropdownComponent,\n  LabelComponent,\n  ProgressTagsComponent,\n  ProgressIndicatorComponent,\n  SpinnerComponent,\n  FlyoutComponent,\n  FlyoutOptionComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsSharedComponents],\n  imports: [CommonModule, TranslateModule, RouterModule],\n  exports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule,\n    ...IrccDsSharedComponents\n  ]\n})\nexport class IrccDsAngularComponentsSharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularFormComponentsModule.html":{"url":"modules/IrccDsAngularFormComponentsModule.html","title":"module - IrccDsAngularFormComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularFormComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularFormComponentsModule\n\n\n\ncluster_IrccDsAngularFormComponentsModule_exports\n\n\n\ncluster_IrccDsAngularFormComponentsModule_declarations\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule -->\n\nCheckboxComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nDatePickerComponent\n\nDatePickerComponent\n\nIrccDsAngularFormComponentsModule -->\n\nDatePickerComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nIrccDsAngularFormComponentsModule -->\n\nErrorComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nRadioInputComponent\n\nRadioInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nRadioInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nIrccDsAngularFormComponentsModule -->\n\nSelectComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\nIrccDsAngularFormComponentsModule -->\n\nTextareaComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nIrccDsAngularFormComponentsModule->CheckboxComponent \n\n\n\n\n\nDatePickerComponent \n\nDatePickerComponent \n\nDatePickerComponent  -->\n\nIrccDsAngularFormComponentsModule->DatePickerComponent \n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nIrccDsAngularFormComponentsModule->ErrorComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIrccDsAngularFormComponentsModule->InputComponent \n\n\n\n\n\nRadioInputComponent \n\nRadioInputComponent \n\nRadioInputComponent  -->\n\nIrccDsAngularFormComponentsModule->RadioInputComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nIrccDsAngularFormComponentsModule->SelectComponent \n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nIrccDsAngularFormComponentsModule->TextareaComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                        \n                            DatePickerComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioInputComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            TextareaComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                        \n                            DatePickerComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioInputComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            TextareaComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorComponent } from './error/error.component';\nimport { InputComponent } from './input/input.component';\nimport { RadioInputComponent } from './radio-input/radio-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TextareaComponent } from './textarea/textarea.component';\nimport { SelectComponent } from './select/select.component';\n\nconst IrccDsAngularFormComponents = [\n  CheckboxComponent,\n  ErrorComponent,\n  InputComponent,\n  RadioInputComponent,\n  DatePickerComponent,\n  TextareaComponent,\n  SelectComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsAngularFormComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsAngularFormComponents]\n})\nexport class IrccDsAngularFormComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularHeaderFooterModule.html":{"url":"modules/IrccDsAngularHeaderFooterModule.html","title":"module - IrccDsAngularHeaderFooterModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularHeaderFooterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularHeaderFooterModule\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_declarations\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule -->\n\nFooterComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHeaderComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHiddenNavComponent\n\nHiddenNavComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHiddenNavComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nLanguageSwitchComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nIrccDsAngularHeaderFooterModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nIrccDsAngularHeaderFooterModule->HeaderComponent \n\n\n\n\n\nHiddenNavComponent \n\nHiddenNavComponent \n\nHiddenNavComponent  -->\n\nIrccDsAngularHeaderFooterModule->HiddenNavComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nIrccDsAngularHeaderFooterModule->LanguageSwitchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HiddenNavComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HiddenNavComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LanguageSwitchComponent } from './language-switch/language-switch.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HiddenNavComponent } from './hidden-nav/hidden-nav.component';\n\nconst IrccDsHeaderFooterComponents = [\n  HeaderComponent,\n  FooterComponent,\n  LanguageSwitchComponent,\n  HiddenNavComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsHeaderFooterComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsHeaderFooterComponents]\n})\nexport class IrccDsAngularHeaderFooterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IrccDsAngularLegacyOldModule.html":{"url":"modules/IrccDsAngularLegacyOldModule.html","title":"module - IrccDsAngularLegacyOldModule","body":"\n                   \n\n\n\n\n    Modules\n    IrccDsAngularLegacyOldModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularLegacyOldModule\n\n\n\ncluster_IrccDsAngularLegacyOldModule_declarations\n\n\n\ncluster_IrccDsAngularLegacyOldModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule -->\n\nAutocompleteComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipItemComponent\n\nChipItemComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipItemComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipListComponent\n\nChipListComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipListComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSearchInputComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSecondaryChipsComponent\n\nSecondaryChipsComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSecondaryChipsComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nIrccDsAngularLegacyOldModule->AutocompleteComponent \n\n\n\n\n\nChipItemComponent \n\nChipItemComponent \n\nChipItemComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipItemComponent \n\n\n\n\n\nChipListComponent \n\nChipListComponent \n\nChipListComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipListComponent \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nIrccDsAngularLegacyOldModule->SearchInputComponent \n\n\n\n\n\nSecondaryChipsComponent \n\nSecondaryChipsComponent \n\nSecondaryChipsComponent  -->\n\nIrccDsAngularLegacyOldModule->SecondaryChipsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ChipItemComponent\n                        \n                        \n                            ChipListComponent\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            SecondaryChipsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ChipItemComponent\n                        \n                        \n                            ChipListComponent\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            SecondaryChipsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { ChipListComponent } from './chips/chip-list/chip-list.component';\nimport { SecondaryChipsComponent } from './chips/secondary-chips/secondary-chips.component';\nimport { ChipItemComponent } from './chips/chip-item/chip-item.component';\nimport { SearchInputComponent } from './search-input/search-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst IrccDsLegacyOldComponents = [\n  AutocompleteComponent,\n  ChipListComponent,\n  SecondaryChipsComponent,\n  ChipItemComponent,\n  SearchInputComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsLegacyOldComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsLegacyOldComponents]\n})\nexport class IrccDsAngularLegacyOldModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelButtonService.html":{"url":"injectables/LabelButtonService.html","title":"injectable - LabelButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labelButtonClickObs$\n                            \n                            \n                                    Private\n                                labelButtonClickSubj\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonPress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonPress\n                        \n                    \n                \n            \n            \n                \nbuttonPress(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labelButtonClickObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.labelButtonClickSubj.asObservable()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        labelButtonClickSubj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelButtonService {\n  private labelButtonClickSubj = new BehaviorSubject('');\n  labelButtonClickObs$ = this.labelButtonClickSubj.asObservable();\n\n  buttonPress(id: string) {\n    this.labelButtonClickSubj.next(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelComponent.html":{"url":"components/LabelComponent.html","title":"component - LabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/label/label.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-label\n            \n\n\n\n\n            \n                templateUrl\n                ./label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labelIconText\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                iconButtonClick\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnLabel\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, standAloneFunctions: StandAloneFunctions, labelButton: LabelButtonService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelButton\n                                                  \n                                                        \n                                                                        LabelButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        iconButtonClick\n                        \n                    \n                \n            \n            \n                \niconButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:71\n                \n            \n\n\n            \n                \n                    Output the button press\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnLabel\n                        \n                    \n                \n            \n            \n                \nreturnLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labelIconText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ config.label || '' | translate }}\n      \n      \n        {{ config.label || '' | translate }}\n      \n      \n        \n        \n      \n    \n  \n  \n    {{ config.desc || '' | translate }}\n  \n  \n    {{ config.hint | translate }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ config.label || \\'\\' | translate }}                    {{ config.label || \\'\\' | translate }}                                              {{ config.desc || \\'\\' | translate }}        {{ config.hint | translate }}  '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageSwitchButtonService.html":{"url":"injectables/LanguageSwitchButtonService.html","title":"injectable - LanguageSwitchButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageSwitchButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                languageClickObs$\n                            \n                            \n                                    Private\n                                languageClickSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                languageToggleClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        languageToggleClick\n                        \n                    \n                \n            \n            \n                \nlanguageToggleClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        languageClickObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languageClickSub.asObservable()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languageClickSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageSwitchButtonService {\n  private languageClickSub = new BehaviorSubject(false);\n  languageClickObs$ = this.languageClickSub.asObservable();\n\n  languageToggleClick() {\n    this.languageClickSub.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitchComponent.html":{"url":"components/LanguageSwitchComponent.html","title":"component - LanguageSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-language-switch\n            \n\n\n\n\n            \n                templateUrl\n                ./language-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aria\n                            \n                            \n                                isMobile\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setText\n                            \n                            \n                                switch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: object, langToggle: LanguageSwitchButtonService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        langToggle\n                                                  \n                                                        \n                                                                        LanguageSwitchButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(e: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:41\n                \n            \n\n\n            \n                \n                    Listens for screen resizes and sets mobile-tablet boolean\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleResize\n                        \n                    \n                \n            \n            \n                \nhandleResize(e: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:41\n                \n            \n\n\n            \n                \n                    Listens for screen resizes and sets mobile-tablet boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setText\n                        \n                    \n                \n            \n            \n                \nsetText(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switch\n                        \n                    \n                \n            \n            \n                \nswitch()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  PLATFORM_ID\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguageSwitchButtonService } from './language-switch-button.service';\n\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH = 'Français';\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE = 'FR';\n\nexport const LANGUAGE_SWITCH_TEXT_FRENCH = 'English';\nexport const LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE = 'EN';\n\n@Component({\n  selector: 'ircc-cl-lib-language-switch',\n  templateUrl: './language-switch.component.html'\n})\nexport class LanguageSwitchComponent implements OnInit {\n  @Input() id = '';\n\n  isMobile = false;\n\n  text = '';\n  aria = '';\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private langToggle: LanguageSwitchButtonService,\n    private translate: TranslateService\n  ) {\n    this.isMobile = window.innerWidth  {\n      console.log(newLang.lang, 'switch');\n      this.setText(newLang.lang);\n    });\n  }\n\n  switch() {\n    this.langToggle.languageToggleClick();\n  }\n\n  setText(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH);\n    } else {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_FRENCH);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ text }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ text }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressIndicatorComponent.html":{"url":"components/ProgressIndicatorComponent.html","title":"component - ProgressIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProgressIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-progress-indicator\n            \n\n\n\n\n            \n                templateUrl\n                ./progress-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepText\n                            \n                            \n                                tabConfig\n                            \n                            \n                                tabNavConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                            \n                                tabClickFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tabClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IProgressIndicatorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tabClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabClickFn\n                        \n                    \n                \n            \n            \n                \ntabClickFn(selected: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stepText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    title: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabNavConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ stepText + ' ' + (i + 1) }}\n          \n          \n            {{ stepText + ' ' + (i + 1) }}\n          \n          \n          \n            \n          \n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ stepText + \\' \\' + (i + 1) }}                                {{ stepText + \\' \\' + (i + 1) }}                                                                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressTagsComponent.html":{"url":"components/ProgressTagsComponent.html","title":"component - ProgressTagsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProgressTagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-progress-tags\n            \n\n\n\n\n            \n                templateUrl\n                ./progress-tags.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTypeTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IProgressTagsConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :          | TagType\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:43\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypeTitle\n                        \n                    \n                \n            \n            \n                \nsetTypeTitle()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport const TAG_LABELS_EN = [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n];\nexport const TAG_LABELS_FR = [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n];\n\nexport enum TagType {\n  primary = 'primary',\n  success = 'success',\n  critical = 'critical',\n  locked = 'locked',\n  notStarted = 'notStarted'\n}\nexport interface IProgressTagsConfig {\n  id: string;\n  type?: keyof typeof TagType;\n  size?: keyof typeof DSSizes;\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-tags',\n  templateUrl: './progress-tags.component.html'\n})\nexport class ProgressTagsComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: IProgressTagsConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof TagType | TagType;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = TAG_LABELS_EN;\n    } else {\n      this.text = TAG_LABELS_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          {{ text[1] }}\n        \n        \n          \n          {{ text[2] }}\n        \n        \n          \n          {{ text[3] }}\n        \n        \n          \n          {{ text[4] }}\n        \n        \n          \n          {{ text[0] }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ text[1] }}                                    {{ text[2] }}                                    {{ text[3] }}                                    {{ text[4] }}                                    {{ text[0] }}                    '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressTagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioInputComponent.html":{"url":"components/RadioInputComponent.html","title":"component - RadioInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RadioInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => RadioInputComponent)\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-radio-input\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                getDisabled\n                            \n                            \n                                markAsTouched\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IRadioInputComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: this.formGroupEmpty\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:69\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:153\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisabled\n                        \n                    \n                \n            \n            \n                \ngetDisabled(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:186\n                \n            \n\n\n            \n                \n                    used to disable individual fields (from the config under 'options')\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the option field to be disabled\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        null if value is undefined, empty string otherwise. This works with [attr.disabled].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsTouched\n                        \n                    \n                \n            \n            \n                \nmarkAsTouched()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:167\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(formValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      \n      {{ option.text || '' | translate }}\n    \n  \n  \n    \n      {{\n        errorStubText + ': ' + (config.label || '' | translate) + ': '\n      }}\n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ option.text || \\'\\' | translate }}                  {{        errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'      }}                                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadioInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchInputComponent.html":{"url":"components/SearchInputComponent.html","title":"component - SearchInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-search-input\n            \n\n\n\n\n            \n                templateUrl\n                ./search-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInputControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISearchInputConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        searchInputControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n    \n        \n\n\n  {{ config?.searchButton?.text }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config?.searchButton?.text }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SecondaryChipsComponent.html":{"url":"components/SecondaryChipsComponent.html","title":"component - SecondaryChipsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SecondaryChipsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-secondary-chips\n            \n\n\n\n\n            \n                templateUrl\n                ./secondary-chips.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipContent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:8\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipContent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-secondary-chips',\n  templateUrl: './secondary-chips.component.html'\n})\nexport class SecondaryChipsComponent implements OnInit {\n  @Input() chipContent?: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  {{ chipContent || '' | translate }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ chipContent || \\'\\' | translate }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecondaryChipsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/select/select.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => SelectComponent)\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-select\n            \n\n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activiatedSelect\n                            \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                rotateChevron\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                markAsTouched\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onClicked\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setLang\n                            \n                            \n                                valueChange\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISelectConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:159\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsTouched\n                        \n                    \n                \n            \n            \n                \nmarkAsTouched()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClicked\n                        \n                    \n                \n            \n            \n                \nonClicked()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:173\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueChange\n                        \n                    \n                \n            \n            \n                \nvalueChange($event: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(formValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activiatedSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotateChevron\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          {{ config.placeholder || '' | translate }}\n        \n        \n          {{ option.text | translate }}\n        \n      \n      \n        \n      \n    \n    \n      \n        {{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}\n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ config.placeholder || \\'\\' | translate }}                          {{ option.text | translate }}                                                        {{          errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'        }}                                                            '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-spinner\n            \n\n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeVertical\n                            \n                            \n                                setTypeTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                orientation\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISpinnerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        orientation\n                    \n                \n                \n                    \n                        Type :          | DSOrientations\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSFullSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :          | SpinnerType\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeVertical\n                        \n                    \n                \n            \n            \n                \nremoveVertical()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypeTitle\n                        \n                    \n                \n            \n            \n                \nsetTypeTitle()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  DSFullSizes,\n  DSOrientations\n} from '../../../shared/constants/jl-components.constants';\n\nexport const SPINNER_LABELS_EN = ['Loading', 'Success', 'Error'];\nexport const SPINNER_LABELS_FR = ['Chargement', 'Succès', 'Erreur'];\n\nexport enum SpinnerType {\n  active = 'active',\n  success = 'success',\n  critical = 'critical'\n}\nexport interface ISpinnerConfig {\n  id: string;\n  type?: keyof typeof SpinnerType;\n  size?: keyof typeof DSFullSizes;\n  orientation?: keyof typeof DSOrientations;\n  label?: string;\n  description?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-spinner',\n  templateUrl: './spinner.component.html'\n})\nexport class SpinnerComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: ISpinnerConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof SpinnerType | SpinnerType;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() orientation?: keyof typeof DSOrientations | DSOrientations;\n  @Input() label?: '';\n  @Input() description?: '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    if (!this.config.size) this.config.size = 'large';\n\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    this.removeVertical();\n\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = SPINNER_LABELS_EN;\n    } else {\n      this.text = SPINNER_LABELS_FR;\n    }\n  }\n\n  removeVertical() {\n    if (\n      this.config.size !== 'large' &&\n      this.config.orientation === 'vertical'\n    ) {\n      this.config.orientation = 'horizontal';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n          \n        \n      \n      \n        \n          \n        \n        \n          \n          \n        \n      \n      \n        \n          \n        \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    showContent: true\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelected\n                        \n                    \n                \n            \n            \n                \nsetSelected(selectedID: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ val.title }}\n      \n      \n        {{ val.title }}\n      \n    \n  \n  \n    \n    \n      \n        \n          \n            {{ cont.value }}\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ val.title }}                    {{ val.title }}                                                          {{ cont.value }}                              '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaComponent.html":{"url":"components/TextareaComponent.html","title":"component - TextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TextareaComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-textarea\n            \n\n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charLimitStatus\n                            \n                            \n                                currentCharacterStatusAria\n                            \n                            \n                                disabled\n                            \n                            \n                                errorIds\n                            \n                            \n                                focusState\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                    Private\n                                    Optional\n                                onChange\n                            \n                            \n                                    Private\n                                    Optional\n                                onTouch\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                characterCountStatus\n                            \n                            \n                                    Public\n                                clearvalue\n                            \n                            \n                                    Public\n                                focusInput\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                charLimit\n                            \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        charLimit\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ITextareaComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        characterCountStatus\n                        \n                    \n                \n            \n            \n                \ncharacterCountStatus(currCharCount: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currCharCount\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearvalue\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearvalue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        focusInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusInput(focusValue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focusValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        charLimitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCharacterStatusAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorIconConfig } from '../error/error.component';\n\nexport interface ITextareaComponentConfig {\n  formGroup: FormGroup;\n  id: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  charLimit?: string;\n  resizable?: keyof typeof ResizableTypes;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  errorIcon?: IErrorIconConfig;\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum ResizableTypes {\n  vertical = 'vertical',\n  horizontal = 'password',\n  both = 'both',\n  none = 'none'\n}\n\n@Component({\n  selector: 'ircc-cl-lib-textarea',\n  templateUrl: './textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: ITextareaComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() charLimit = '';\n\n  disabled = false;\n  focusState = false;\n  errorIds: IErrorIDs[] = [];\n  charLimitStatus = '';\n  currentCharacterStatusAria = '';\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n\n  constructor(public standAloneFunctions: StandAloneFunctions) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit(): void {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.charLimit !== '') {\n      this.config.charLimit = this.charLimit;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.characterCountStatus(\n        this.config.formGroup.controls[this.config.id].value.length\n      );\n    }\n\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.characterCountStatus(change[this.config.id]?.length);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  characterCountStatus(currCharCount: any) {\n    if (this.config?.charLimit) {\n      if (this.config?.charLimit == currCharCount) {\n        this.charLimitStatus = 'maxLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.maxLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount == 15) {\n        this.charLimitStatus = 'warningLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.warningLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount \n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n123\n          \n          \n            {{ textareaInput.value.length }}/{{ config.charLimit }}\n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      123                                {{ textareaInput.value.length }}/{{ config.charLimit }}                                                                                          '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleSlugUrlComponent.html":{"url":"components/TitleSlugUrlComponent.html","title":"component - TitleSlugUrlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleSlugUrlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            SlugifyPipe\n                \n            \n\n\n            \n                selector\n                app-title-slug-url\n            \n\n            \n                styleUrls\n                ./title-slug-url.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title-slug-url.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                windowOrigin\n                            \n                            \n                                windowPathname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translator: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         slugTitleURLConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: slugTitleURLType.primary,\n    title: '',\n    anchorType: slugAnchorType.primary\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        windowOrigin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        windowPathname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/title-slug-url/title-slug-url.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterContentInit, Component, Input } from '@angular/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { SlugifyPipe } from '../../share/pipe-slugify.pipe';\n\nexport enum slugTitleURLType {\n  'primary' = 'primary',\n  'secondary' = 'secondary'\n}\n\nexport enum slugAnchorType {\n  'primary' = 'primary',\n  'secondary' = 'secondary'\n}\nexport interface slugTitleURLConfig {\n  type: slugTitleURLType;\n  title: string;\n  anchorType: slugAnchorType;\n}\n\n@Component({\n  selector: 'app-title-slug-url',\n  templateUrl: './title-slug-url.component.html',\n  styleUrls: ['./title-slug-url.component.scss'],\n  providers: [SlugifyPipe]\n})\nexport class TitleSlugUrlComponent implements AfterContentInit {\n  @Input()\n  config: slugTitleURLConfig = {\n    type: slugTitleURLType.primary,\n    title: '',\n    anchorType: slugAnchorType.primary\n  };\n  currentLang = '';\n  windowPathname = '';\n  windowOrigin = '';\n\n  constructor(private translator: TranslateService) {\n    this.currentLang = translator.currentLang;\n  }\n\n  ngOnInit() {\n    this.translator.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLang = event.lang;\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.windowOrigin = window.location.origin;\n    this.windowPathname = window.location.pathname;\n  }\n}\n\n    \n\n    \n        \n  {{ config.title | translate }}\n\n\n  {{ 'Buttons.CopyURL' | translate }}\n\n\n    \n\n    \n                \n                    ./title-slug-url.component.scss\n                \n                :host {\n  display: block;\n\n  >h2 {\n    display: inline-block;\n    font-weight: 700;\n\n    &.primary {\n      font-size: 36px;\n      margin-top: 0px;\n      margin-bottom: 24px;\n    }\n\n    &.secondary {\n      font-size: 28px;\n      margin-top: 80px;\n      margin-bottom: 24px;\n    }\n  }\n\n  >a {\n    margin-left: 16px;\n    position: relative;\n    bottom: 5px;\n    text-decoration: none !important;\n    color: var(--link-text);\n\n    &.primary {\n      font-family: Lato;\n      font-size: 16px;\n      font-weight: 400;\n      line-height: 24px;\n      letter-spacing: 0em;\n      text-align: center;\n\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config.title | translate }}  {{ \\'Buttons.CopyURL\\' | translate }}'\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleSlugUrlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/accordionContainerComponent.html":{"url":"components/accordionContainerComponent.html","title":"component - accordionContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  accordionContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/accordion-panel/accordion-container.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-accordian-container\n            \n\n            \n                styleUrls\n                ./accordion-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonConfigAcccordion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openAccordion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                buttonTextClosed\n                            \n                            \n                                config\n                            \n                            \n                                id\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                getOpen\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonTextClosed\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IAccordionContainerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        getOpen\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAccordion\n                        \n                    \n                \n            \n            \n                \nopenAccordion()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonConfigAcccordion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to expand the accordion',\n    iconDirection: 'left'\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/accordion-panel/accordion-container.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IButtonConfig } from 'ircc-ds-angular-component-library';\n\nexport interface IAccordionContainerConfig {\n  id: string;\n  buttonText?: string;\n  buttonTextClosed?: string;\n  open?: boolean;\n}\n\n@Component({\n  selector: 'app-accordian-container',\n  templateUrl: './accordion-container.component.html',\n  styleUrls: ['./accordion-container.component.scss']\n})\nexport class accordionContainerComponent implements OnInit {\n  @Input() config: IAccordionContainerConfig = {\n    id: ''\n  };\n  @Input() id: string = '';\n  @Input() buttonText: string = '';\n  @Input() buttonTextClosed: string = '';\n  @Input() open?: boolean | undefined;\n\n  @Output() getOpen = new EventEmitter();\n\n  buttonConfigAcccordion: IButtonConfig = {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to expand the accordion',\n    iconDirection: 'left'\n  };\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    console.log(this.config);\n    if (this.config.buttonText === '' || this.config.buttonText === undefined)\n      this.config.buttonText = 'Accordion.HideCode';\n\n    if (\n      this.config.buttonTextClosed === '' ||\n      this.config.buttonTextClosed === undefined\n    )\n      this.config.buttonTextClosed = 'Accordion.ShowCode';\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.buttonText !== '') this.config.buttonText = this.buttonText;\n    if (this.buttonTextClosed !== '')\n      this.config.buttonTextClosed = this.buttonTextClosed;\n    if (this.open !== undefined) this.config.open = this.open;\n  }\n\n  openAccordion() {\n    this.config.open = !this.config.open;\n    this.getOpen.emit(this.config.open);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n    \n      \n        {{ config.buttonText || '' | translate }}\n      \n      \n        {{ config.buttonTextClosed || '' | translate }}\n      \n    \n\n    \n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./accordion-container.component.scss\n                \n                @use '../../../../../core-library/tokens/template-const' as template-const;\n@use '../../../../../core-library/tokens/sizes' as sizes;\n@use '../../../../../core-library/layout/layout-grid' as layout-grid;\n@use '../../../../../core-library/util/device' as device;\n\n@mixin selector {\n  app-accordian-container#{template-const.$escape} {\n    @content;\n  }\n}\n\n@mixin create {\n  @include selector() {\n    @include layout();\n  }\n}\n\n@mixin layout {\n  .accordion-nav {\n    display: grid;\n    grid-template-columns: 30% auto 30%;\n\n    @include device.in-phone-layout() {\n      grid-template-columns: auto 30% 30%;\n    }\n\n    .accordion-extra-left {\n      grid-column: 1;\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n\n      @include device.in-phone-layout() {\n        grid-column: 2;\n      }\n    }\n\n    .accordion-expand-button {\n      grid-column: 2;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      @include device.in-phone-layout() {\n        grid-column: 1;\n      }\n    }\n    .accordion-extra-right {\n      grid-column: 3;\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      @include device.in-phone-layout() {\n        grid-column: 3;\n      }\n    }\n  }\n\n  .accordion-content {\n    &.open {\n      height: auto;\n    }\n\n    &.close {\n      height: 0px;\n      padding-bottom: 0px;\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ config.buttonText || \\'\\' | translate }}                    {{ config.buttonTextClosed || \\'\\' | translate }}                                      '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'accordionContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/codeViewerComponent.html":{"url":"components/codeViewerComponent.html","title":"component - codeViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  codeViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/code-viewer/code-viewer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-viewer\n            \n\n            \n                styleUrls\n                ./code-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./code-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordionConfig\n                            \n                            \n                                buttonConfigCopy\n                            \n                            \n                                height\n                            \n                            \n                                minHeightResizeContainer\n                            \n                            \n                                openAccordion\n                            \n                            \n                                selectedTab\n                            \n                            \n                                tabConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeight\n                            \n                            \n                                getSelectedTab\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setupComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                getSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ICodeViewerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        getSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight(height: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedTab\n                        \n                    \n                \n            \n            \n                \ngetSelectedTab(selected: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupComponent\n                        \n                    \n                \n            \n            \n                \nsetupComponent()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accordionConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAccordionContainerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'codeViewerTabsCccordion',\n    open: this.config.openAccordion\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonConfigCopy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to copy the code'\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 150\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minHeightResizeContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 150\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAccordion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    title: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'codeViewerTabs',\n    showContent: false\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/code-viewer/code-viewer.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  IButtonConfig,\n  ITabNavConfig,\n  ITabConfig\n} from 'ircc-ds-angular-component-library';\n\nimport { IAccordionContainerConfig } from '../accordion-panel/accordion-container.component';\n\nexport interface ICodeViewerConfig {\n  id: string;\n  openAccordion?: boolean;\n  tab?: ITabConfig[];\n  selected?: string;\n}\n\n@Component({\n  selector: 'app-code-viewer',\n  templateUrl: './code-viewer.component.html',\n  styleUrls: ['./code-viewer.component.scss']\n})\nexport class codeViewerComponent implements OnInit {\n  @Input() config: ICodeViewerConfig = {\n    id: ''\n  };\n  @Output() getSelected = new EventEmitter();\n\n  tabConfig: ITabNavConfig = {\n    id: 'codeViewerTabs',\n    showContent: false\n  };\n  selectedTab: any = {\n    title: ''\n  };\n\n  accordionConfig: IAccordionContainerConfig = {\n    id: 'codeViewerTabsCccordion',\n    open: this.config.openAccordion\n  };\n\n  openAccordion: boolean = false;\n  minHeightResizeContainer = 150;\n  height: number = 150;\n\n  buttonConfigCopy: IButtonConfig = {\n    id: 'accordion-button',\n    category: 'plain',\n    size: 'small',\n    ariaLabel: 'Click to copy the code'\n  };\n\n  ngOnInit() {\n    this.setupComponent();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config']) {\n      this.config = changes['config'].currentValue;\n      this.setupComponent();\n    }\n  }\n\n  setupComponent() {\n    if (this.config.openAccordion !== undefined) {\n      this.openAccordion = this.config.openAccordion;\n    }\n\n    if (this.config.selected) {\n      this.tabConfig.selected = this.config.selected;\n    }\n\n    if (this.config.tab) {\n      this.tabConfig.tab = this.config.tab;\n    } else {\n      this.tabConfig.tab = [];\n    }\n\n    if (this.config.tab && this.config.selected) {\n      this.selectedTab = this.config.tab.find(\n        (tab) => tab.id === this.config.selected\n      );\n    } else if (this.config.tab) {\n      this.selectedTab = this.config.tab[0];\n    } else {\n      this.selectedTab = {};\n    }\n  }\n\n  getSelectedTab(selected: any) {\n    if (this.config.tab) {\n      this.selectedTab = this.config.tab.find(\n        (element) => element.id === selected\n      );\n      this.config.selected = selected;\n      this.getSelected.emit(selected);\n    }\n  }\n\n  getHeight(height: number) {\n    this.height = height;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{ 'Accordion.CopyCode' | translate }}\n    \n\n    \n       \n\n\n    \n\n    \n                \n                    ./code-viewer.component.scss\n                \n                @use '../../../../../core-library/util/theme' as theme;\n@use '../../../../../core-library/util/size' as size;\n@use '../../../../../core-library/tokens/template-const';\n\n@use 'sass:map';\n$selectors: 'app-code-viewer';\n\n@mixin selectors {\n  #{$selectors}#{template-const.$escape} {\n    @content;\n  }\n}\n\n@mixin create {\n  @include selectors() {\n    @include layout();\n  }\n}\n\n@mixin layout {\n  .code-viewer {\n    border: 1px solid var(--border);\n    border-radius: 8px;\n    width: 100%;\n\n    app-accordian-container {\n      border-top: 1px solid var(--divider);\n      display: block;\n    }\n    pre,\n    code {\n      overflow: auto;\n      width: 100%;\n      height: 100%;\n      white-space: pre;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ \\'Accordion.CopyCode\\' | translate }}               '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'codeViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            interface\n            IBannerConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            interface\n            ICTAConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                15 %\n                (4/26)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n            \n            interface\n            ICheckBoxComponentConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            component\n            DatePickerComponent\n            \n                20 %\n                (9/44)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerConfig\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerDropDownConfigs\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerErrorMessages\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerUnknownDateToggleConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_DAY_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTHS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTHS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_DAY_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_DAY_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_MONTH_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_MONTH_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_YEAR_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_YEAR_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_UNKOWN_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_UNKOWN_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_YEAR_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            interface\n            IErrorComponentConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            interface\n            IErrorIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/input/input.component.ts\n            \n            interface\n            IInputComponentConfig\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n            \n            variable\n            IrccDsAngularFormComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            component\n            RadioInputComponent\n            \n                12 %\n                (3/25)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            interface\n            IRadioInputComponentConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            interface\n            IRadioInputOption\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                7 %\n                (2/26)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            interface\n            ISelectConfig\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            interface\n            ISelectOptionsConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n            \n            component\n            TextareaComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n            \n            interface\n            ITextareaComponentConfig\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ALT_TEXT_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ALT_TEXT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ARIA_LABEL_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ARIA_LABEL_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_FOOTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            CANADA_LOGO_ARIA_LABEL_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            CANADA_LOGO_ARIA_LABEL_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            ENGLISH_BANNER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            FRENCH_BANNER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_IMG_LINK_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_IMG_LINK_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_LINK_ALT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_LINK_ATL_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            component\n            HiddenNavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            interface\n            IHiddenNavConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            interface\n            ISkipLinkConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n            \n            variable\n            IrccDsHeaderFooterComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts\n            \n            injectable\n            LanguageSwitchButtonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            component\n            LanguageSwitchComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n            \n            interface\n            IOption\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts\n            \n            component\n            ChipItemComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts\n            \n            component\n            ChipListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts\n            \n            component\n            SecondaryChipsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n            \n            variable\n            IrccDsLegacyOldComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            component\n            SearchInputComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            interface\n            ISearchInputButtonConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            interface\n            ISearchInputConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n            \n            interface\n            IBreadcrumbConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n            \n            component\n            BreadcrumbLinkComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n            \n            interface\n            ILinkComponentConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/button/button.component.ts\n            \n            interface\n            IButtonConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n            \n            component\n            DropdownComponent\n            \n                13 %\n                (2/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n            \n            interface\n            IDropdownConfig\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n            \n            component\n            FlyoutOptionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n            \n            interface\n            IFlyoutOptionConfig\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n            \n            component\n            FlyoutComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n            \n            interface\n            IFlyoutConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            component\n            IconButtonComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            interface\n            IIconButtonComponentConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            interface\n            IIconButtonIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            variable\n            CLASS_TRASHCAN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            variable\n            CLASS_X_MARK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon/icon.component.ts\n            \n            interface\n            IIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n            \n            component\n            IndicatorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n            \n            interface\n            IIndicatorConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n            \n            variable\n            IrccDsSharedComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label-button.service.ts\n            \n            injectable\n            LabelButtonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            component\n            LabelComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            interface\n            ILabelConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            interface\n            ILabelIconConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            ERROR_TEXT_STUB_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            ERROR_TEXT_STUB_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            HELP_ICON_ALT_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            HELP_ICON_ALT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            component\n            ProgressIndicatorComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            interface\n            IProgressIndicatorConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            interface\n            IStepConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            variable\n            PROGRESS_INDICATOR_STEP_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            variable\n            PROGRESS_INDICATOR_STEP_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            component\n            ProgressTagsComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            interface\n            IProgressTagsConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            variable\n            TAG_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            variable\n            TAG_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            interface\n            ISpinnerConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            variable\n            SPINNER_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            variable\n            SPINNER_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            interface\n            ITabConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            interface\n            ITabNavConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/src/app/components/accordion-panel/accordion-container.component.ts\n            \n            component\n            accordionContainerComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                component-library/src/app/components/accordion-panel/accordion-container.component.ts\n            \n            interface\n            IAccordionContainerConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/src/app/components/code-viewer/code-viewer.component.ts\n            \n            component\n            codeViewerComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/src/app/components/code-viewer/code-viewer.component.ts\n            \n            interface\n            ICodeViewerConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/src/app/components/component-preview/component-preview.component.ts\n            \n            component\n            ComponentPreviewComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/src/app/components/info-text-small/info-text-small.component.ts\n            \n            component\n            InfoTextSmallComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/src/app/components/interactive-demo/interactive-demo.component.ts\n            \n            component\n            InteractiveDemoComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/src/app/components/resizable-container/resizable-container.component.ts\n            \n            component\n            resizableContainerComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n            \n            component\n            TitleSlugUrlComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n            \n            interface\n            slugTitleURLConfig\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cli : ^14.2.11\n        \n            @aws-sdk/client-s3 : ^3.321.1\n        \n            @aws-sdk/lib-storage : ^3.321.1\n        \n            cheerio : ^1.0.0-rc.12\n        \n            mime-types : ^2.1.35\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BannerSize   (component-library/.../banner.component.ts)\n                        \n                        \n                            BannerType   (component-library/.../banner.component.ts)\n                        \n                        \n                            ButtonCategories   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonColor   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonIconDirection   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonSize   (component-library/.../button.component.ts)\n                        \n                        \n                            ComponentType   (component-library/.../interactive-demo.component.ts)\n                        \n                        \n                            CTAType   (component-library/.../banner.component.ts)\n                        \n                        \n                            IconButtonCategories   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            IFlyoutOptionType   (component-library/.../flyout-option.component.ts)\n                        \n                        \n                            IFlyoutSelectTypes   (component-library/.../flyout.component.ts)\n                        \n                        \n                            IndicatorPalette   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorPurpose   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorStatus   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorTreatment   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorType   (component-library/.../indicator.component.ts)\n                        \n                        \n                            InputTypes   (component-library/.../input.component.ts)\n                        \n                        \n                            LinkType   (component-library/.../breadcrumb.component.ts)\n                        \n                        \n                            Orientations   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            ResizableTypes   (component-library/.../textarea.component.ts)\n                        \n                        \n                            slugAnchorType   (component-library/.../title-slug-url.component.ts)\n                        \n                        \n                            slugTitleURLType   (component-library/.../title-slug-url.component.ts)\n                        \n                        \n                            SpinnerType   (component-library/.../spinner.component.ts)\n                        \n                        \n                            TagType   (component-library/.../progress-tags.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n    \n        \n            \n                \n                    \n                        \n                        BannerSize\n                    \n                \n                        \n                            \n                                 large\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        BannerType\n                    \n                \n                        \n                            \n                                 generic\n                            \n                        \n                        \n                            \n                                Value : generic\n                            \n                        \n                        \n                            \n                                 info\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CTAType\n                    \n                \n                        \n                            \n                                 link\n                            \n                        \n                        \n                            \n                                Value : link\n                            \n                        \n                        \n                            \n                                 button\n                            \n                        \n                        \n                            \n                                Value : button\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/button/button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ButtonCategories\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 secondary\n                            \n                        \n                        \n                            \n                                Value : secondary\n                            \n                        \n                        \n                            \n                                 plain\n                            \n                        \n                        \n                            \n                                Value : plain\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonColor\n                    \n                \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 CTA\n                            \n                        \n                        \n                            \n                                Value : CTA\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonIconDirection\n                    \n                \n                        \n                            \n                                 left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n                        \n                            \n                                 right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonSize\n                    \n                \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n                        \n                            \n                                 large\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n            \n        \n\n    component-library/src/app/components/interactive-demo/interactive-demo.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ComponentType\n                    \n                \n                        \n                            \n                                 banner\n                            \n                        \n                        \n                            \n                                Value : banner\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IconButtonCategories\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IFlyoutOptionType\n                    \n                \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 checkbox\n                            \n                        \n                        \n                            \n                                Value : checkbox\n                            \n                        \n                        \n                            \n                                 dropdown\n                            \n                        \n                        \n                            \n                                Value : dropdown\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n                        \n                            \n                                 heading\n                            \n                        \n                        \n                            \n                                Value : heading\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IFlyoutSelectTypes\n                    \n                \n                        \n                            \n                                 single\n                            \n                        \n                        \n                            \n                                Value : single\n                            \n                        \n                        \n                            \n                                 multi\n                            \n                        \n                        \n                            \n                                Value : multi\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IndicatorPalette\n                    \n                \n                        \n                            \n                                 teal\n                            \n                        \n                        \n                            \n                                 orange\n                            \n                        \n                        \n                            \n                                 red\n                            \n                        \n                        \n                            \n                                 grey\n                            \n                        \n                        \n                            \n                                 blue\n                            \n                        \n                        \n                            \n                                 green\n                            \n                        \n                        \n                            \n                                 purple\n                            \n                        \n                        \n                            \n                                 navy\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorPurpose\n                    \n                \n                        \n                            \n                                 status\n                            \n                        \n                        \n                            \n                                Value : status\n                            \n                        \n                        \n                            \n                                 palette\n                            \n                        \n                        \n                            \n                                Value : palette\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorStatus\n                    \n                \n                        \n                            \n                                 information\n                            \n                        \n                        \n                            \n                                Value : information\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 neutral\n                            \n                        \n                        \n                            \n                                Value : neutral\n                            \n                        \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorTreatment\n                    \n                \n                        \n                            \n                                 strong\n                            \n                        \n                        \n                            \n                                Value : strong\n                            \n                        \n                        \n                            \n                                 weak\n                            \n                        \n                        \n                            \n                                Value : weak\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorType\n                    \n                \n                        \n                            \n                                 dot\n                            \n                        \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/form-components/input/input.component.ts\n    \n        \n            \n                \n                    \n                        \n                        InputTypes\n                    \n                \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 password\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LinkType\n                    \n                \n                        \n                            \n                                 href\n                            \n                        \n                        \n                            \n                                Value : href\n                            \n                        \n                        \n                            \n                                 routerLink\n                            \n                        \n                        \n                            \n                                Value : routerLink\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Orientations\n                    \n                \n                        \n                            \n                                 horizontal\n                            \n                        \n                        \n                            \n                                Value : horizontal\n                            \n                        \n                        \n                            \n                                 vertical\n                            \n                        \n                        \n                            \n                                Value : vertical\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ResizableTypes\n                    \n                \n                        \n                            \n                                 vertical\n                            \n                        \n                        \n                            \n                                Value : vertical\n                            \n                        \n                        \n                            \n                                 horizontal\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n                        \n                            \n                                 both\n                            \n                        \n                        \n                            \n                                Value : both\n                            \n                        \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n    \n        \n            \n                \n                    \n                        \n                        slugAnchorType\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 secondary\n                            \n                        \n                        \n                            \n                                Value : secondary\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        slugTitleURLType\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 secondary\n                            \n                        \n                        \n                            \n                                Value : secondary\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n    \n        \n            \n                \n                    \n                        \n                        SpinnerType\n                    \n                \n                        \n                            \n                                 active\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TagType\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 locked\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 notStarted\n                            \n                        \n                        \n                            \n                                Value : notStarted\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularBannerModule\n\n\n\ncluster_IrccDsAngularBannerModule_declarations\n\n\n\ncluster_IrccDsAngularBannerModule_exports\n\n\n\ncluster_IrccDsAngularComponentsSharedModule\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_declarations\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_exports\n\n\n\ncluster_IrccDsAngularFormComponentsModule\n\n\n\ncluster_IrccDsAngularFormComponentsModule_declarations\n\n\n\ncluster_IrccDsAngularFormComponentsModule_exports\n\n\n\ncluster_IrccDsAngularHeaderFooterModule\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_declarations\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_exports\n\n\n\ncluster_IrccDsAngularLegacyOldModule\n\n\n\ncluster_IrccDsAngularLegacyOldModule_declarations\n\n\n\ncluster_IrccDsAngularLegacyOldModule_exports\n\n\n\n\nBannerComponent\n\nBannerComponent\n\n\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule -->\n\nBannerComponent->IrccDsAngularBannerModule\n\n\n\n\n\nBannerComponent \n\nBannerComponent \n\nBannerComponent  -->\n\nIrccDsAngularBannerModule->BannerComponent \n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\n\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbLinkComponent\n\nBreadcrumbLinkComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbLinkComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nDropdownComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutComponent\n\nFlyoutComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutOptionComponent\n\nFlyoutOptionComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutOptionComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIndicatorComponent\n\nIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nLabelComponent\n\nLabelComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nLabelComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressIndicatorComponent\n\nProgressIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressTagsComponent\n\nProgressTagsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressTagsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nSpinnerComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nTabsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbComponent \n\n\n\n\n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbLinkComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->ButtonComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nIrccDsAngularComponentsSharedModule->DropdownComponent \n\n\n\n\n\nFlyoutComponent \n\nFlyoutComponent \n\nFlyoutComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutComponent \n\n\n\n\n\nFlyoutOptionComponent \n\nFlyoutOptionComponent \n\nFlyoutOptionComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutOptionComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconComponent \n\n\n\n\n\nIndicatorComponent \n\nIndicatorComponent \n\nIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->IndicatorComponent \n\n\n\n\n\nLabelComponent \n\nLabelComponent \n\nLabelComponent  -->\n\nIrccDsAngularComponentsSharedModule->LabelComponent \n\n\n\n\n\nProgressIndicatorComponent \n\nProgressIndicatorComponent \n\nProgressIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressIndicatorComponent \n\n\n\n\n\nProgressTagsComponent \n\nProgressTagsComponent \n\nProgressTagsComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressTagsComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nIrccDsAngularComponentsSharedModule->SpinnerComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nIrccDsAngularComponentsSharedModule->TabsComponent \n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule -->\n\nCheckboxComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nDatePickerComponent\n\nDatePickerComponent\n\nIrccDsAngularFormComponentsModule -->\n\nDatePickerComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nIrccDsAngularFormComponentsModule -->\n\nErrorComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nRadioInputComponent\n\nRadioInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nRadioInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nIrccDsAngularFormComponentsModule -->\n\nSelectComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\nIrccDsAngularFormComponentsModule -->\n\nTextareaComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nIrccDsAngularFormComponentsModule->CheckboxComponent \n\n\n\n\n\nDatePickerComponent \n\nDatePickerComponent \n\nDatePickerComponent  -->\n\nIrccDsAngularFormComponentsModule->DatePickerComponent \n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nIrccDsAngularFormComponentsModule->ErrorComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIrccDsAngularFormComponentsModule->InputComponent \n\n\n\n\n\nRadioInputComponent \n\nRadioInputComponent \n\nRadioInputComponent  -->\n\nIrccDsAngularFormComponentsModule->RadioInputComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nIrccDsAngularFormComponentsModule->SelectComponent \n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nIrccDsAngularFormComponentsModule->TextareaComponent \n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule -->\n\nFooterComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHeaderComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHiddenNavComponent\n\nHiddenNavComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHiddenNavComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nLanguageSwitchComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nIrccDsAngularHeaderFooterModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nIrccDsAngularHeaderFooterModule->HeaderComponent \n\n\n\n\n\nHiddenNavComponent \n\nHiddenNavComponent \n\nHiddenNavComponent  -->\n\nIrccDsAngularHeaderFooterModule->HiddenNavComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nIrccDsAngularHeaderFooterModule->LanguageSwitchComponent \n\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule -->\n\nAutocompleteComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipItemComponent\n\nChipItemComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipItemComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipListComponent\n\nChipListComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipListComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSearchInputComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSecondaryChipsComponent\n\nSecondaryChipsComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSecondaryChipsComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nIrccDsAngularLegacyOldModule->AutocompleteComponent \n\n\n\n\n\nChipItemComponent \n\nChipItemComponent \n\nChipItemComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipItemComponent \n\n\n\n\n\nChipListComponent \n\nChipListComponent \n\nChipListComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipListComponent \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nIrccDsAngularLegacyOldModule->SearchInputComponent \n\n\n\n\n\nSecondaryChipsComponent \n\nSecondaryChipsComponent \n\nSecondaryChipsComponent  -->\n\nIrccDsAngularLegacyOldModule->SecondaryChipsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    41 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        IrccDsAngularBannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularComponentsSharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularFormComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularHeaderFooterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularLegacyOldModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/resizableContainerComponent.html":{"url":"components/resizableContainerComponent.html","title":"component - resizableContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  resizableContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/src/app/components/resizable-container/resizable-container.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resizable-container\n            \n\n            \n                styleUrls\n                ./resizable-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resizable-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dragListener\n                            \n                            \n                                isDragging\n                            \n                            \n                                resizeBar\n                            \n                            \n                                resizeButtonConfig\n                            \n                            \n                                resizeContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minHeight\n                            \n                            \n                                setHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                getHeight\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 150\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        setHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 150\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        getHeight\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dragListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Function | undefined\n\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDragging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('resizeBar', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeButtonConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'resize_button',\n    category: 'custom',\n    size: 'small',\n    ariaLabel: 'RESIZE_ARIA',\n    icon: {\n      class: 'fa-regular fa-grip-lines',\n      color: 'var(--text-primary)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('resizeContainer', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/src/app/components/resizable-container/resizable-container.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { IIconButtonComponentConfig } from 'ircc-ds-angular-component-library';\n\n@Component({\n  selector: 'app-resizable-container',\n  templateUrl: './resizable-container.component.html',\n  styleUrls: ['./resizable-container.component.scss']\n})\nexport class resizableContainerComponent {\n  @ViewChild('resizeBar', { static: false }) resizeBar: ElementRef | undefined;\n  @ViewChild('resizeContainer', { static: false }) resizeContainer:\n    | ElementRef\n    | undefined;\n\n  @Input() minHeight: number = 150;\n  @Input() setHeight: number = 150;\n\n  @Output() getHeight = new EventEmitter();\n\n  isDragging = false;\n  dragListener: Function | undefined;\n\n  resizeButtonConfig: IIconButtonComponentConfig = {\n    id: 'resize_button',\n    category: 'custom',\n    size: 'small',\n    ariaLabel: 'RESIZE_ARIA',\n    icon: {\n      class: 'fa-regular fa-grip-lines',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  constructor(private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    if (this.resizeContainer) {\n      this.renderer.setStyle(\n        this.resizeContainer.nativeElement,\n        'min-height',\n        this.minHeight + 'px'\n      );\n      this.renderer.setStyle(\n        this.resizeContainer.nativeElement,\n        'height',\n        this.setHeight + 'px'\n      );\n    }\n\n    if (this.resizeBar) {\n      this.dragListener = this.renderer.listen(\n        this.resizeBar?.nativeElement,\n        'mousedown',\n        () => {\n          this.isDragging = true;\n        }\n      );\n    }\n\n    this.dragListener = this.renderer.listen(\n      'document',\n      'mousemove',\n      (event: MouseEvent) => {\n        if (this.isDragging && this.resizeContainer) {\n          this.renderer.setStyle(\n            this.resizeContainer.nativeElement,\n            'height',\n            this.resizeContainer.nativeElement.getBoundingClientRect().height +\n              event.movementY +\n              'px'\n          );\n          this.getHeight.emit(\n            this.resizeContainer.nativeElement.getBoundingClientRect().height +\n              event.movementY\n          );\n        }\n      }\n    );\n\n    this.dragListener = this.renderer.listen('document', 'mouseup', () => {\n      this.isDragging = false;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./resizable-container.component.scss\n                \n                .resize-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .resize-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    flex: 1;\n    width: 100%;\n    overflow: auto;\n  }\n  .resize-bar {\n    align-self: center;\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    cursor: row-resize;\n    ircc-cl-lib-icon-button {\n      button {\n        padding: 10px 10px 4px 10px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'accordionContainerComponent', 'selector': 'app-accordian-container'},{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'codeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ComponentPreviewComponent', 'selector': 'app-component-preview'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'lib-indicator'},{'name': 'InfoTextSmallComponent', 'selector': 'app-info-text-small'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'InteractiveDemoComponent', 'selector': 'app-interactive-demo'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'resizableContainerComponent', 'selector': 'app-resizable-container'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'},{'name': 'TitleSlugUrlComponent', 'selector': 'app-title-slug-url'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'resizableContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/slugTitleURLConfig.html":{"url":"interfaces/slugTitleURLConfig.html","title":"interface - slugTitleURLConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  slugTitleURLConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/src/app/components/title-slug-url/title-slug-url.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anchorType\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anchorType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anchorType:         slugAnchorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         slugAnchorType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         slugTitleURLType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         slugTitleURLType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterContentInit, Component, Input } from '@angular/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { SlugifyPipe } from '../../share/pipe-slugify.pipe';\n\nexport enum slugTitleURLType {\n  'primary' = 'primary',\n  'secondary' = 'secondary'\n}\n\nexport enum slugAnchorType {\n  'primary' = 'primary',\n  'secondary' = 'secondary'\n}\nexport interface slugTitleURLConfig {\n  type: slugTitleURLType;\n  title: string;\n  anchorType: slugAnchorType;\n}\n\n@Component({\n  selector: 'app-title-slug-url',\n  templateUrl: './title-slug-url.component.html',\n  styleUrls: ['./title-slug-url.component.scss'],\n  providers: [SlugifyPipe]\n})\nexport class TitleSlugUrlComponent implements AfterContentInit {\n  @Input()\n  config: slugTitleURLConfig = {\n    type: slugTitleURLType.primary,\n    title: '',\n    anchorType: slugAnchorType.primary\n  };\n  currentLang = '';\n  windowPathname = '';\n  windowOrigin = '';\n\n  constructor(private translator: TranslateService) {\n    this.currentLang = translator.currentLang;\n  }\n\n  ngOnInit() {\n    this.translator.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLang = event.lang;\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.windowOrigin = window.location.origin;\n    this.windowPathname = window.location.pathname;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CANADA_LOGO_ARIA_LABEL_ENGLISH   (component-library/.../header.component.ts)\n                        \n                        \n                            CANADA_LOGO_ARIA_LABEL_FRENCH   (component-library/.../header.component.ts)\n                        \n                        \n                            CLASS_TRASHCAN   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            CLASS_X_MARK   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            DATE_PICKER_DAY_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_LABELS_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_LABELS_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTH_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTHS_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTHS_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_DAY_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_DAY_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_MONTH_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_MONTH_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_YEAR_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_YEAR_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_UNKOWN_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_UNKOWN_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_YEAR_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            ENGLISH_BANNER_URL   (component-library/.../header.component.ts)\n                        \n                        \n                            ERROR_TEXT_STUB_EN   (component-library/.../label.component.ts)\n                        \n                        \n                            ERROR_TEXT_STUB_FR   (component-library/.../label.component.ts)\n                        \n                        \n                            FRENCH_BANNER_URL   (component-library/.../header.component.ts)\n                        \n                        \n                            GOV_LOGO_ALT_TEXT_EN   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ALT_TEXT_FR   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ARIA_LABEL_ENGLISH   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ARIA_LABEL_FRENCH   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_FOOTER   (component-library/.../footer.component.ts)\n                        \n                        \n                            HEADER_IMG_LINK_EN   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_IMG_LINK_FR   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_LINK_ALT_FR   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_LINK_ATL_EN   (component-library/.../header.component.ts)\n                        \n                        \n                            HELP_ICON_ALT_EN   (component-library/.../label.component.ts)\n                        \n                        \n                            HELP_ICON_ALT_FR   (component-library/.../label.component.ts)\n                        \n                        \n                            IrccDsAngularFormComponents   (component-library/.../ircc-ds-angular-form-components.module.ts)\n                        \n                        \n                            IrccDsHeaderFooterComponents   (component-library/.../ircc-ds-angular-header-footer.module.ts)\n                        \n                        \n                            IrccDsLegacyOldComponents   (component-library/.../ircc-ds-angular-legacy-old.module.ts)\n                        \n                        \n                            IrccDsSharedComponents   (component-library/.../ircc-ds-angular-component-shared.module.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_ENGLISH   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_FRENCH   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            PROGRESS_INDICATOR_STEP_EN   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            PROGRESS_INDICATOR_STEP_FR   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            SPINNER_LABELS_EN   (component-library/.../spinner.component.ts)\n                        \n                        \n                            SPINNER_LABELS_FR   (component-library/.../spinner.component.ts)\n                        \n                        \n                            TAG_LABELS_EN   (component-library/.../progress-tags.component.ts)\n                        \n                        \n                            TAG_LABELS_FR   (component-library/.../progress-tags.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    component-library/component-lib/src/lib/header-footer/header/header.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CANADA_LOGO_ARIA_LABEL_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbol of the Government of Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CANADA_LOGO_ARIA_LABEL_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbole du gouvernement du Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENGLISH_BANNER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-en.svg'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FRENCH_BANNER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-fr.svg'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_IMG_LINK_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/en.html'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_IMG_LINK_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/fr.html'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_LINK_ALT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gouvernement du Canada logo'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_LINK_ATL_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Government of Canada logo'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CLASS_TRASHCAN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fa-solid fa-trash-can'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CLASS_X_MARK\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fa-thin fa-xmark'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_DAY_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_dayControl'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Day', 'Month', 'Year']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Jour', 'Mois', 'Année']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_monthControl'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTHS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTHS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_DAY_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DD'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_DAY_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JJ'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_MONTH_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Month'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_MONTH_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mois'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_YEAR_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'YYYY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_YEAR_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AAAA'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_UNKOWN_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Unknown'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_UNKOWN_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Inconnu'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_YEAR_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_yearControl'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/label/label.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_TEXT_STUB_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Error'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_TEXT_STUB_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Erreur'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HELP_ICON_ALT_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ', more information'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HELP_ICON_ALT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \", plus d'information\"\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ALT_TEXT_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Canada wordmark'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ALT_TEXT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR Canada wordmark'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ARIA_LABEL_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbol of the Government of Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ARIA_LABEL_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbole du gouvernement du Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_FOOTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/wmms-blk.svg'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsAngularFormComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CheckboxComponent,\n  ErrorComponent,\n  InputComponent,\n  RadioInputComponent,\n  DatePickerComponent,\n  TextareaComponent,\n  SelectComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsHeaderFooterComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  HeaderComponent,\n  FooterComponent,\n  LanguageSwitchComponent,\n  HiddenNavComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsLegacyOldComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  AutocompleteComponent,\n  ChipListComponent,\n  SecondaryChipsComponent,\n  ChipItemComponent,\n  SearchInputComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsSharedComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ButtonComponent,\n  BreadcrumbComponent,\n  BreadcrumbLinkComponent,\n  IconComponent,\n  IconButtonComponent,\n  IndicatorComponent,\n  TabsComponent,\n  ProgressTagsComponent,\n  DropdownComponent,\n  LabelComponent,\n  ProgressTagsComponent,\n  ProgressIndicatorComponent,\n  SpinnerComponent,\n  FlyoutComponent,\n  FlyoutOptionComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Français'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'English'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'EN'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PROGRESS_INDICATOR_STEP_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Step'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROGRESS_INDICATOR_STEP_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Étap'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SPINNER_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Loading', 'Success', 'Error']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPINNER_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Chargement', 'Succès', 'Erreur']\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TAG_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TAG_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
