var COMPODOC_SEARCH_INDEX = {
  index: {
    version: "2.3.9",
    fields: ["title", "body"],
    fieldVectors: [
      ["title/components/AutocompleteComponent.html", [0, 0.213, 1, 0.83]],
      [
        "body/components/AutocompleteComponent.html",
        [
          0, 0.438, 1, 1.09, 2, 0.92, 3, 0.049, 4, 0.057, 5, 0.891, 6, 0.606, 7,
          0.606, 8, 0.049, 9, 0.115, 10, 4.08, 11, 1.917, 12, 0.332, 13, 0.39,
          14, 4.104, 15, 0.606, 16, 0.391, 17, 0.391, 18, 3.327, 19, 0.182, 20,
          3.327, 21, 0.161, 22, 0.24, 23, 4.104, 24, 4.104, 25, 4.104, 26,
          4.104, 27, 0.525, 28, 1.27, 29, 4.104, 30, 4.104, 31, 4.104, 32,
          4.104, 33, 4.104, 34, 0.92, 35, 2.593, 36, 3.812, 37, 3.812, 38,
          3.812, 39, 4.647, 40, 3.812, 41, 3.327, 42, 3.601, 43, 0.42, 44,
          4.647, 45, 4.647, 46, 3.327, 47, 4.647, 48, 4.647, 49, 3.812, 50,
          4.647, 51, 3.812, 52, 2.578, 53, 0.92, 54, 1.294, 55, 4.104, 56,
          4.104, 57, 1.728, 58, 1.992, 59, 4.104, 60, 2.583, 61, 1.964, 62,
          4.104, 63, 2.419, 64, 3.812, 65, 4.703, 66, 3.812, 67, 0.435, 68,
          2.431, 69, 4.647, 70, 1.932, 71, 3.812, 72, 1.924, 73, 0.013, 74,
          0.298, 75, 3.327, 76, 0.704, 77, 1.573, 78, 1.031, 79, 2.042, 80,
          2.431, 81, 0.29, 82, 1.376, 83, 0.888, 84, 2.431, 85, 2.273, 86, 2.47,
          87, 2.431, 88, 2.044, 89, 2.431, 90, 4.961, 91, 2.431, 92, 2.431, 93,
          2.431, 94, 1.338, 95, 2.431, 96, 2.578, 97, 3.601, 98, 2.431, 99,
          4.104, 100, 3.812, 101, 3.812, 102, 2.431, 103, 4.66, 104, 3.812, 105,
          3.327, 106, 2.431, 107, 1.514, 108, 3.327, 109, 2.431, 110, 3.327,
          111, 3.189, 112, 3.327, 113, 1.095, 114, 3.327, 115, 3.327, 116,
          2.431, 117, 2.431, 118, 3.327, 119, 3.327, 120, 2.431, 121, 2.431,
          122, 2.431, 123, 2.431, 124, 3.327, 125, 2.431, 126, 2.431, 127,
          2.431, 128, 3.327, 129, 2.431, 130, 2.431, 131, 3.327, 132, 2.431,
          133, 3.327, 134, 2.431, 135, 2.431, 136, 4.104, 137, 2.431, 138,
          1.806, 139, 2.431, 140, 3.327, 141, 2.768, 142, 2.431, 143, 2.431,
          144, 2.431, 145, 2.431, 146, 2.431, 147, 2.431, 148, 0.111, 149,
          1.252, 150, 0.318, 151, 1.015, 152, 1.38, 153, 0.057, 154, 1.456, 155,
          2.121, 156, 1.725, 157, 3.327, 158, 2.121, 159, 2.121, 160, 2.121,
          161, 1.765, 162, 1.765, 163, 0.78, 164, 1.917, 165, 1.644, 166, 1.917,
          167, 0.101, 168, 0.435, 169, 2.121, 170, 2.121, 171, 0.057, 172,
          0.057, 173, 2.67, 174, 0.172, 175, 0.364, 176, 1.197, 177, 2.121, 178,
          2.121, 179, 2.121, 180, 5.048, 181, 4.104, 182, 4.104, 183, 5.6, 184,
          5.048, 185, 5.048, 186, 3.415, 187, 2.121, 188, 0.857, 189, 2.121,
          190, 2.121, 191, 4.647, 192, 3.327, 193, 2.121, 194, 2.121, 195,
          2.121, 196, 2.121, 197, 2.121, 198, 2.121, 199, 2.121, 200, 2.121,
          201, 2.4, 202, 2.121, 203, 3.415, 204, 2.121, 205, 4.104, 206, 1.917,
          207, 4.647, 208, 2.121, 209, 2.121, 210, 2.121, 211, 2.121, 212,
          1.917, 213, 2.121, 214, 0.943, 215, 1.313, 216, 2.121, 217, 3.327,
          218, 2.121, 219, 2.121, 220, 2.121, 221, 2.121, 222, 2.121, 223,
          2.121, 224, 2.121, 225, 2.121, 226, 3.327, 227, 3.812, 228, 1.256,
          229, 3.812, 230, 2.431, 231, 3.812, 232, 0.606, 233, 0.951, 234, 0.92,
          235, 0.587, 236, 1.127, 237, 0.606, 238, 2.431, 239, 0.606, 240,
          0.498, 241, 0.502, 242, 0.502, 243, 0.606, 244, 0.498, 245, 0.606,
          246, 0.498, 247, 0.568, 248, 0.606, 249, 0.498, 250, 0.951, 251,
          0.498, 252, 0.606, 253, 0.951, 254, 0.606, 255, 0.514, 256, 0.606,
          257, 0.465, 258, 0.481, 259, 0.606, 260, 0.498, 261, 0.606, 262,
          0.481, 263, 0.606, 264, 0.498, 265, 0.606, 266, 0.498, 267, 0.532,
          268, 0.606, 269, 0.514, 270, 0.606, 271, 0.514, 272, 0.606, 273,
          0.481, 274, 0.549, 275, 0.606, 276, 0.481, 277, 0.405, 278, 0.498,
          279, 0.606, 280, 0.498, 281, 0.951, 282, 1.173, 283, 0.481, 284,
          0.606, 285, 0.514, 286, 0.498, 287, 0.606, 288, 0.481, 289, 0.807,
          290, 0.498, 291, 0.606, 292, 0.481, 293, 0.549, 294, 0.481, 295,
          0.549, 296, 0.514, 297, 0.568, 298, 0.606, 299, 0.481, 300, 0.606,
          301, 0.498, 302, 0.606, 303, 0.481, 304, 0.606, 305, 0.498, 306,
          0.587, 307, 0.606, 308, 0.606, 309, 0.006, 310, 0.006,
        ],
      ],
      ["title/components/BannerComponent.html", [0, 0.213, 240, 0.83]],
      [
        "body/components/BannerComponent.html",
        [
          0, 0.423, 1, 0.684, 2, 1.17, 3, 0.116, 4, 0.079, 5, 0.781, 6, 0.834,
          7, 0.834, 8, 0.068, 9, 0.109, 12, 0.423, 13, 0.473, 15, 0.834, 16,
          0.402, 17, 0.402, 19, 0.232, 21, 0.101, 22, 0.305, 27, 0.236, 28,
          0.662, 34, 1.17, 43, 0.546, 53, 1.17, 57, 1.29, 60, 1.345, 61, 2.498,
          70, 1.814, 72, 0.92, 73, 0.013, 74, 0.282, 76, 0.726, 77, 1.325, 78,
          0.838, 81, 0.321, 83, 0.952, 94, 1.623, 107, 1.316, 113, 0.96, 138,
          1.209, 148, 0.135, 150, 0.299, 151, 1.291, 153, 0.079, 163, 0.684,
          167, 0.238, 171, 0.164, 172, 0.135, 174, 0.403, 175, 0.501, 228,
          1.419, 232, 0.834, 233, 1.209, 234, 1.17, 235, 0.807, 236, 1.467, 237,
          0.834, 239, 0.834, 240, 1.281, 241, 0.523, 242, 0.523, 243, 0.834,
          244, 0.684, 245, 0.834, 246, 0.684, 247, 0.781, 248, 0.834, 249,
          0.684, 250, 1.209, 251, 0.684, 252, 0.834, 253, 1.209, 254, 0.834,
          255, 0.707, 256, 0.834, 257, 0.64, 258, 0.662, 259, 0.834, 260, 0.684,
          261, 0.834, 262, 0.662, 263, 0.834, 264, 0.684, 265, 0.834, 266,
          0.684, 267, 0.731, 268, 0.834, 269, 0.707, 270, 0.834, 271, 0.707,
          272, 0.834, 273, 0.662, 274, 0.755, 275, 0.834, 276, 0.662, 277,
          0.952, 278, 0.684, 279, 0.834, 280, 0.684, 281, 1.209, 282, 1.423,
          283, 0.662, 284, 0.834, 285, 0.707, 286, 0.684, 287, 0.834, 288,
          0.662, 289, 1.026, 290, 0.684, 291, 0.834, 292, 0.662, 293, 0.755,
          294, 0.662, 295, 0.755, 296, 0.707, 297, 0.781, 298, 0.834, 299,
          0.662, 300, 0.834, 301, 0.684, 302, 0.834, 303, 0.662, 304, 0.834,
          305, 0.684, 306, 0.807, 307, 0.834, 308, 0.834, 309, 0.007, 310,
          0.007, 311, 4.975, 312, 2.26, 313, 5.243, 314, 3.825, 315, 4.501, 316,
          4.501, 317, 4.501, 318, 4.848, 319, 4.938, 320, 3.749, 321, 4.938,
          322, 4.938, 323, 0.735, 324, 4.501, 325, 3.825, 326, 3.342, 327,
          3.859, 328, 3.342, 329, 3.342, 330, 3.342, 331, 3.825, 332, 3.342,
          333, 3.342, 334, 3.342, 335, 3.342, 336, 3.342, 337, 3.342, 338, 2.48,
          339, 1.689, 340, 2.108, 341, 2.618, 342, 3.381, 343, 2.618, 344,
          2.904, 345, 2.194, 346, 1.813, 347, 3.342, 348, 3.342, 349, 3.342,
          350, 1.721, 351, 2.002, 352, 1.25, 353, 1.576, 354, 2.904, 355, 2.636,
          356, 1.571, 357, 3.521, 358, 3.521, 359, 2.027, 360, 2.388, 361,
          3.077, 362, 3.521, 363, 2.287, 364, 3.077, 365, 3.521, 366, 2.81, 367,
          2.287, 368, 3.279, 369, 0.793, 370, 0.793, 371, 2.636, 372, 2.636,
          373, 2.121, 374, 2.636, 375, 2.636, 376, 2.636, 377, 2.26, 378, 2.636,
          379, 1.397, 380, 2.636, 381, 2.26, 382, 2.636, 383, 2.121, 384, 0.538,
          385, 2.636, 386, 4.501, 387, 2.636, 388, 2.636, 389, 2.636, 390,
          2.636, 391, 2.636, 392, 2.636, 393, 2.636, 394, 2.636, 395, 5.243,
          396, 2.636, 397, 3.973, 398, 3.825, 399, 1.721, 400, 4.501, 401,
          2.636, 402, 2.636, 403, 3.825, 404, 2.26, 405, 2.121, 406, 2.636, 407,
          2.636, 408, 2.636, 409, 2.636, 410, 2.636, 411, 2.636, 412, 3.825,
          413, 2.636, 414, 2.636, 415, 1.897, 416, 3.825, 417, 2.636, 418,
          3.825, 419, 4.848, 420, 6.26,
        ],
      ],
      ["title/components/BreadcrumbComponent.html", [0, 0.213, 244, 0.83]],
      [
        "body/components/BreadcrumbComponent.html",
        [
          0, 0.427, 1, 0.562, 2, 1.011, 3, 0.056, 4, 0.065, 5, 0.642, 6, 0.685,
          7, 0.685, 8, 0.056, 9, 0.111, 12, 0.365, 13, 0.421, 15, 0.685, 16,
          0.396, 17, 0.396, 19, 0.2, 21, 0.083, 22, 0.263, 27, 0.527, 28, 0.544,
          34, 1.011, 43, 0.448, 53, 1.011, 57, 1.458, 60, 1.105, 63, 2.659, 67,
          0.749, 70, 1.866, 72, 1.564, 73, 0.013, 74, 0.29, 76, 0.851, 77,
          1.365, 78, 0.863, 79, 1.826, 81, 0.273, 83, 0.948, 85, 1.848, 86,
          2.852, 96, 1.857, 97, 3.562, 107, 1.403, 111, 3.042, 113, 0.968, 141,
          4.127, 148, 0.152, 149, 1.415, 150, 0.2, 152, 1.559, 153, 0.065, 163,
          0.562, 167, 0.115, 171, 0.12, 172, 0.12, 174, 0.359, 188, 1.038, 201,
          1.567, 214, 1.625, 228, 0.857, 232, 0.685, 233, 1.045, 234, 1.226,
          235, 0.663, 236, 1.365, 237, 0.685, 239, 0.685, 240, 0.562, 241,
          0.513, 242, 0.513, 243, 0.685, 244, 1.163, 245, 0.685, 246, 0.562,
          247, 1.327, 248, 0.685, 249, 0.562, 250, 1.045, 251, 0.562, 252,
          0.685, 253, 1.045, 254, 0.685, 255, 0.581, 256, 0.685, 257, 0.526,
          258, 0.544, 259, 0.685, 260, 0.562, 261, 0.685, 262, 0.544, 263,
          0.685, 264, 0.562, 265, 0.685, 266, 0.562, 267, 0.601, 268, 0.685,
          269, 0.581, 270, 0.685, 271, 0.581, 272, 0.685, 273, 0.544, 274,
          0.621, 275, 0.685, 276, 0.544, 277, 1.02, 278, 0.562, 279, 0.685, 280,
          0.562, 281, 1.045, 282, 1.267, 283, 0.544, 284, 0.685, 285, 0.581,
          286, 0.562, 287, 0.685, 288, 0.544, 289, 0.886, 290, 0.562, 291,
          0.685, 292, 0.544, 293, 0.621, 294, 0.544, 295, 0.621, 296, 0.581,
          297, 0.642, 298, 0.685, 299, 0.544, 300, 0.685, 301, 0.562, 302,
          0.685, 303, 0.544, 304, 0.685, 305, 0.562, 306, 0.663, 307, 0.685,
          308, 0.685, 309, 0.006, 310, 0.006, 320, 3.404, 323, 0.614, 338,
          2.208, 340, 1.821, 341, 2.262, 342, 3.069, 343, 2.262, 345, 1.896,
          346, 1.567, 352, 1.027, 353, 1.295, 356, 0.756, 366, 2.063, 369,
          0.583, 370, 0.583, 377, 1.857, 384, 0.985, 399, 1.415, 421, 1.994,
          422, 2.501, 423, 3.689, 424, 3.656, 425, 4.432, 426, 4.432, 427,
          4.432, 428, 4.432, 429, 4.432, 430, 1.729, 431, 5.34, 432, 4.432, 433,
          4.432, 434, 4.432, 435, 4.959, 436, 4.959, 437, 4.189, 438, 4.959,
          439, 4.959, 440, 1.625, 441, 4.189, 442, 3.656, 443, 1.645, 444,
          1.465, 445, 4.432, 446, 1.912, 447, 4.432, 448, 4.959, 449, 4.432,
          450, 4.959, 451, 4.189, 452, 3.689, 453, 4.432, 454, 3.661, 455,
          2.746, 456, 2.746, 457, 4.189, 458, 2.746, 459, 3.656, 460, 3.656,
          461, 2.746, 462, 3.656, 463, 2.746, 464, 2.746, 465, 2.746, 466,
          2.746, 467, 2.746, 468, 2.262, 469, 3.069, 470, 2.746, 471, 1.194,
          472, 2.746, 473, 3.656, 474, 3.305, 475, 2.746, 476, 3.474, 477,
          3.656, 478, 2.746, 479, 2.746, 480, 3.656, 481, 2.746, 482, 2.746,
          483, 4.092, 484, 2.746, 485, 2.746, 486, 3.656, 487, 3.042, 488,
          3.656, 489, 2.746, 490, 0.947, 491, 0.526, 492, 0.526, 493, 2.396,
          494, 0.601, 495, 0.601, 496, 0.924, 497, 0.924, 498, 3.305, 499,
          3.435, 500, 1.994, 501, 1.415, 502, 2.396, 503, 2.396, 504, 2.396,
          505, 2.396, 506, 1.994, 507, 2.396, 508, 4.959, 509, 2.396, 510,
          2.396, 511, 2.396, 512, 2.396, 513, 3.689, 514, 3.042, 515, 3.042,
          516, 3.042, 517, 3.656, 518, 2.396, 519, 4.432, 520, 3.656, 521,
          1.362, 522, 3.656, 523, 3.656, 524, 2.396, 525, 2.396, 526, 2.396,
          527, 2.396, 528, 3.656, 529, 3.656, 530, 3.656, 531, 2.396, 532,
          2.396, 533, 3.656, 534, 1.743, 535, 3.042, 536, 2.396, 537, 2.396,
          538, 2.396, 539, 2.396, 540, 2.396, 541, 2.396, 542, 2.396, 543,
          1.194, 544, 4.432, 545, 3.656, 546, 2.396, 547, 2.396, 548, 3.656,
          549, 2.396, 550, 2.396, 551, 2.396, 552, 3.656, 553, 4.959, 554,
          0.756, 555, 4.959, 556, 2.396, 557, 2.396, 558, 5.34, 559, 3.656, 560,
          4.432, 561, 4.432, 562, 2.396, 563, 3.656, 564, 2.396, 565, 4.432,
          566, 2.396, 567, 2.396, 568, 2.396, 569, 2.396, 570, 2.396, 571,
          2.396, 572, 2.396, 573, 2.396, 574, 1.743, 575, 2.396, 576, 2.396,
          577, 1.994, 578, 2.396, 579, 2.396, 580, 2.396, 581, 2.396, 582,
          2.396, 583, 3.656, 584, 1.243, 585, 2.396, 586, 2.396, 587, 2.396,
          588, 2.396, 589, 5.682,
        ],
      ],
      ["title/components/BreadcrumbLinkComponent.html", [0, 0.213, 246, 0.83]],
      [
        "body/components/BreadcrumbLinkComponent.html",
        [
          0, 0.404, 1, 0.95, 2, 1.469, 3, 0.094, 4, 0.11, 5, 1.084, 6, 1.158, 7,
          1.158, 8, 0.094, 9, 0.094, 15, 1.158, 16, 0.411, 17, 0.411, 19, 0.291,
          21, 0.141, 28, 0.919, 53, 1.469, 57, 1.376, 67, 1.214, 70, 1.421, 73,
          0.013, 74, 0.172, 76, 0.695, 77, 0.982, 78, 0.621, 79, 1.568, 81,
          0.293, 83, 1.132, 148, 0.11, 150, 0.291, 153, 0.11, 163, 0.95, 167,
          0.194, 171, 0.144, 172, 0.11, 174, 0.48, 228, 1.475, 232, 1.158, 233,
          1.518, 234, 1.469, 235, 1.121, 236, 1.525, 237, 1.158, 239, 1.158,
          240, 0.95, 241, 0.537, 242, 0.537, 243, 1.158, 244, 0.95, 245, 1.158,
          246, 1.475, 247, 1.586, 248, 1.158, 249, 0.95, 250, 1.518, 251, 0.95,
          252, 1.158, 253, 1.518, 254, 1.158, 255, 0.982, 256, 1.158, 257,
          0.888, 258, 0.919, 259, 1.158, 260, 0.95, 261, 1.158, 262, 0.919, 263,
          1.158, 264, 0.95, 265, 1.158, 266, 0.95, 267, 1.015, 268, 1.158, 269,
          0.982, 270, 1.158, 271, 0.982, 272, 1.158, 273, 0.919, 274, 1.049,
          275, 1.158, 276, 0.919, 277, 0.774, 278, 0.95, 279, 1.158, 280, 0.95,
          281, 1.518, 282, 1.693, 283, 0.919, 284, 1.158, 285, 0.982, 286, 0.95,
          287, 1.158, 288, 0.919, 289, 1.288, 290, 0.95, 291, 1.158, 292, 0.919,
          293, 1.049, 294, 0.919, 295, 1.049, 296, 0.982, 297, 1.084, 298,
          1.158, 299, 0.919, 300, 1.158, 301, 0.95, 302, 1.158, 303, 0.919, 304,
          1.158, 305, 0.95, 306, 1.121, 307, 1.158, 308, 1.158, 309, 0.009, 310,
          0.009, 366, 2.997, 454, 2.636, 483, 4.308, 499, 3.139, 515, 4.93, 590,
          3.662, 591, 5.31, 592, 4.642, 593, 4.642, 594, 4.051, 595, 7.204,
        ],
      ],
      ["title/components/ButtonComponent.html", [0, 0.213, 249, 0.83]],
      [
        "body/components/ButtonComponent.html",
        [
          0, 0.428, 1, 0.733, 2, 1.23, 3, 0.073, 4, 0.084, 5, 0.836, 6, 0.893,
          7, 0.893, 8, 0.073, 9, 0.111, 15, 0.893, 16, 0.404, 17, 0.404, 19,
          0.244, 21, 0.108, 27, 0.253, 28, 0.709, 34, 1.23, 43, 0.509, 53, 1.23,
          57, 1.341, 61, 2.624, 70, 1.854, 72, 0.985, 73, 0.013, 74, 0.277, 76,
          0.888, 77, 1.078, 78, 0.682, 81, 0.317, 85, 1.929, 94, 1.838, 107,
          1.009, 113, 0.735, 148, 0.084, 150, 0.373, 151, 1.357, 153, 0.084,
          163, 0.733, 167, 0.149, 171, 0.172, 172, 0.084, 174, 0.419, 175,
          0.536, 232, 0.893, 233, 1.271, 234, 1.23, 235, 0.864, 236, 1.367, 237,
          0.893, 239, 0.893, 240, 0.733, 241, 0.526, 242, 0.526, 243, 0.893,
          244, 0.733, 245, 0.893, 246, 0.733, 247, 0.836, 248, 0.893, 249,
          1.323, 250, 1.271, 251, 0.733, 252, 0.893, 253, 1.271, 254, 0.893,
          255, 0.758, 256, 0.893, 257, 0.685, 258, 0.709, 259, 0.893, 260,
          0.733, 261, 0.893, 262, 0.709, 263, 0.893, 264, 0.733, 265, 0.893,
          266, 0.733, 267, 0.783, 268, 0.893, 269, 0.758, 270, 0.893, 271,
          0.758, 272, 0.893, 273, 0.709, 274, 0.809, 275, 0.893, 276, 0.709,
          277, 1.139, 278, 0.733, 279, 0.893, 280, 0.733, 281, 1.271, 282,
          1.479, 283, 0.709, 284, 0.893, 285, 0.758, 286, 0.733, 287, 0.893,
          288, 0.709, 289, 1.078, 290, 0.733, 291, 0.893, 292, 0.709, 293,
          0.809, 294, 0.709, 295, 0.809, 296, 0.758, 297, 1.386, 298, 0.893,
          299, 0.709, 300, 0.893, 301, 0.733, 302, 0.893, 303, 0.709, 304,
          0.893, 305, 0.733, 306, 0.864, 307, 0.893, 308, 0.893, 309, 0.008,
          310, 0.008, 323, 0.732, 340, 2.809, 345, 2.924, 346, 1.905, 354,
          3.552, 356, 1.879, 359, 2.13, 363, 2.403, 364, 3.233, 367, 3.048, 369,
          1.038, 370, 1.038, 379, 2.701, 383, 3.233, 384, 1.04, 521, 1.164, 554,
          2.214, 596, 2.6, 597, 3.445, 598, 3.7, 599, 2.251, 600, 5.639, 601,
          5.639, 602, 5.176, 603, 3.58, 604, 3.58, 605, 3.58, 606, 3.58, 607,
          3.58, 608, 3.58, 609, 3.58, 610, 3.58, 611, 3.58, 612, 3.58, 613,
          3.58, 614, 4.446, 615, 3.58, 616, 3.58, 617, 4.011, 618, 4.019, 619,
          4.679, 620, 4.679, 621, 3.124, 622, 4.446, 623, 2.893, 624, 4.679,
          625, 4.679, 626, 4.019, 627, 1.23, 628, 0.783, 629, 3.051, 630, 2.144,
          631, 1.905, 632, 4.446, 633, 3.124, 634, 3.445, 635, 2.421, 636,
          2.305, 637, 1.556, 638, 4.446, 639, 3.124, 640, 3.367, 641, 3.328,
          642, 6.192, 643, 4.446, 644, 3.124,
        ],
      ],
      ["title/components/CheckboxComponent.html", [0, 0.213, 251, 0.83]],
      [
        "body/components/CheckboxComponent.html",
        [
          0, 0.431, 1, 0.544, 2, 0.987, 3, 0.054, 4, 0.063, 5, 1.163, 6, 0.663,
          7, 0.663, 8, 0.054, 9, 0.113, 12, 0.356, 13, 0.413, 15, 0.663, 16,
          0.395, 17, 0.395, 19, 0.196, 21, 0.081, 22, 0.257, 27, 0.496, 28,
          0.526, 34, 0.987, 35, 1.676, 43, 0.44, 53, 0.987, 54, 1.66, 57, 1.499,
          67, 0.731, 70, 1.888, 72, 1.66, 73, 0.013, 74, 0.284, 76, 1.073, 77,
          1.585, 78, 1.003, 79, 1.554, 81, 0.301, 83, 0.83, 88, 1.156, 107,
          1.419, 113, 1.068, 138, 1.654, 148, 0.156, 150, 0.267, 151, 1.089,
          153, 0.063, 156, 1.203, 162, 1.931, 163, 0.544, 167, 0.111, 171,
          0.096, 172, 0.063, 174, 0.352, 175, 0.612, 188, 0.428, 201, 1.862,
          228, 1.357, 232, 0.663, 233, 1.02, 234, 0.987, 235, 0.642, 236, 1.182,
          237, 0.663, 239, 0.663, 240, 0.544, 241, 0.511, 242, 0.511, 243,
          0.663, 244, 0.544, 245, 0.663, 246, 0.544, 247, 0.621, 248, 0.663,
          249, 0.544, 250, 1.02, 251, 1.303, 252, 0.663, 253, 1.02, 254, 0.663,
          255, 0.563, 256, 0.663, 257, 0.509, 258, 0.526, 259, 0.663, 260,
          0.544, 261, 0.663, 262, 0.526, 263, 0.663, 264, 0.544, 265, 0.663,
          266, 0.544, 267, 0.582, 268, 0.663, 269, 0.563, 270, 0.663, 271,
          0.563, 272, 0.663, 273, 0.526, 274, 0.601, 275, 0.663, 276, 0.526,
          277, 0.443, 278, 0.544, 279, 0.663, 280, 0.544, 281, 1.02, 282, 1.242,
          283, 0.526, 284, 0.663, 285, 0.563, 286, 0.544, 287, 0.663, 288,
          0.526, 289, 0.865, 290, 0.544, 291, 0.663, 292, 0.526, 293, 0.601,
          294, 0.526, 295, 0.601, 296, 0.563, 297, 0.621, 298, 0.663, 299,
          0.526, 300, 0.663, 301, 0.544, 302, 0.663, 303, 0.526, 304, 0.663,
          305, 0.544, 306, 0.642, 307, 0.663, 308, 0.663, 309, 0.006, 310,
          0.006, 323, 0.638, 339, 1.947, 369, 0.37, 370, 0.37, 384, 0.801, 415,
          1.51, 430, 0.685, 440, 2.167, 444, 1.44, 446, 2.363, 471, 1.156, 487,
          1.931, 490, 1.125, 491, 0.509, 492, 0.509, 494, 0.582, 495, 0.582,
          496, 0.895, 497, 0.895, 521, 0.865, 554, 0.732, 599, 1.424, 627,
          0.987, 628, 1.319, 636, 1.203, 637, 1.156, 645, 2.549, 646, 2.098,
          647, 2.348, 648, 1.645, 649, 1.645, 650, 2.004, 651, 1.645, 652,
          2.004, 653, 1.475, 654, 2.764, 655, 3.567, 656, 2.565, 657, 2.004,
          658, 2.622, 659, 3.001, 660, 2.689, 661, 3.696, 662, 2.004, 663,
          2.348, 664, 3.159, 665, 2.572, 666, 3.28, 667, 4.058, 668, 2.878, 669,
          2.764, 670, 2.764, 671, 3.224, 672, 2.207, 673, 3.546, 674, 2.804,
          675, 1.798, 676, 4.087, 677, 3.616, 678, 3.257, 679, 4.345, 680,
          2.659, 681, 2.659, 682, 2.659, 683, 2.659, 684, 1.475, 685, 1.66, 686,
          2.659, 687, 2.429, 688, 2.968, 689, 2.659, 690, 2.659, 691, 2.659,
          692, 1.777, 693, 2.105, 694, 2.207, 695, 2.659, 696, 3.018, 697,
          2.207, 698, 2.659, 699, 1.931, 700, 2.659, 701, 2.622, 702, 3.567,
          703, 2.968, 704, 1.529, 705, 2.659, 706, 1.797, 707, 2.659, 708,
          2.659, 709, 2.004, 710, 2.659, 711, 2.565, 712, 2.659, 713, 2.659,
          714, 2.659, 715, 1.676, 716, 2.669, 717, 1.475, 718, 2.659, 719,
          2.659, 720, 2.659, 721, 2.659, 722, 2.659, 723, 0.782, 724, 1.475,
          725, 0.96, 726, 0.96, 727, 1.475, 728, 1.475, 729, 1.376, 730, 1.07,
          731, 0.96, 732, 2.321, 733, 2.321, 734, 2.321, 735, 2.321, 736, 2.321,
          737, 2.321, 738, 2.321, 739, 2.321, 740, 1.798, 741, 2.321, 742, 0.96,
          743, 0.96, 744, 1.07, 745, 2.321, 746, 2.321, 747, 2.321, 748, 1.931,
          749, 2.321, 750, 2.321, 751, 1.37, 752, 1.931, 753, 1.156, 754, 1.687,
          755, 2.321, 756, 2.565, 757, 1.156, 758, 1.37, 759, 0.994, 760, 0.994,
          761, 0.994, 762, 1.645, 763, 1.645, 764, 2.563, 765, 1.285, 766,
          1.645, 767, 3.567, 768, 1.645, 769, 1.645, 770, 1.85, 771, 1.07, 772,
          1.07, 773, 1.931, 774, 2.565, 775, 1.37, 776, 1.37, 777, 1.37, 778,
          1.156, 779, 1.089, 780, 1.585, 781, 1.931, 782, 1.931, 783, 4.087,
          784, 2.594,
        ],
      ],
      ["title/components/ChipItemComponent.html", [0, 0.213, 163, 0.83]],
      [
        "body/components/ChipItemComponent.html",
        [
          0, 0.42, 1, 0.929, 2, 1.447, 3, 0.092, 4, 0.107, 5, 1.06, 6, 1.132, 7,
          1.132, 8, 0.092, 9, 0.106, 10, 3.756, 15, 1.132, 16, 0.411, 17, 0.411,
          19, 0.287, 21, 0.137, 28, 0.898, 34, 1.447, 53, 1.447, 57, 1.355, 61,
          3.088, 67, 1.2, 70, 1.735, 73, 0.013, 74, 0.223, 81, 0.244, 94, 1.91,
          107, 1.187, 113, 0.865, 148, 0.107, 150, 0.287, 151, 1.597, 153,
          0.107, 163, 1.462, 165, 5.158, 171, 0.107, 172, 0.107, 175, 0.68, 232,
          1.132, 233, 1.495, 234, 1.447, 235, 1.095, 236, 1.511, 237, 1.132,
          239, 1.132, 240, 0.929, 241, 0.535, 242, 0.535, 243, 1.132, 244,
          0.929, 245, 1.132, 246, 0.929, 247, 1.06, 248, 1.132, 249, 0.929, 250,
          1.495, 251, 0.929, 252, 1.132, 253, 1.903, 254, 1.132, 255, 0.96, 256,
          1.132, 257, 0.869, 258, 0.898, 259, 1.132, 260, 0.929, 261, 1.132,
          262, 0.898, 263, 1.132, 264, 0.929, 265, 1.132, 266, 0.929, 267,
          0.993, 268, 1.132, 269, 0.96, 270, 1.132, 271, 0.96, 272, 1.132, 273,
          0.898, 274, 1.026, 275, 1.132, 276, 0.898, 277, 0.757, 278, 0.929,
          279, 1.132, 280, 0.929, 281, 1.495, 282, 1.675, 283, 0.898, 284,
          1.132, 285, 0.96, 286, 0.929, 287, 1.132, 288, 0.898, 289, 1.269, 290,
          0.929, 291, 1.132, 292, 0.898, 293, 1.026, 294, 0.898, 295, 1.026,
          296, 0.96, 297, 1.06, 298, 1.132, 299, 0.898, 300, 1.132, 301, 0.929,
          302, 1.132, 303, 0.898, 304, 1.132, 305, 0.929, 306, 1.095, 307,
          1.132, 308, 1.132, 309, 0.009, 310, 0.009, 785, 6.017, 786, 3.96, 787,
          4.729, 788, 5.995, 789, 7.141, 790, 7.141, 791, 6.48, 792, 6.713, 793,
          5.995, 794, 4.538, 795, 4.538, 796, 4.538, 797, 5.995,
        ],
      ],
      ["title/components/ChipListComponent.html", [0, 0.213, 255, 0.858]],
      [
        "body/components/ChipListComponent.html",
        [
          0, 0.425, 1, 0.89, 2, 1.406, 3, 0.088, 4, 0.103, 5, 1.016, 6, 1.084,
          7, 1.084, 8, 0.088, 9, 0.109, 10, 3.852, 12, 0.508, 13, 0.545, 15,
          1.084, 16, 0.41, 17, 0.41, 19, 0.279, 21, 0.132, 22, 0.366, 27, 0.464,
          28, 0.861, 34, 1.406, 43, 0.553, 46, 5.085, 53, 1.406, 57, 1.486, 61,
          3.001, 67, 1.175, 70, 1.798, 72, 1.197, 73, 0.013, 74, 0.261, 81,
          0.286, 85, 2.137, 94, 1.869, 107, 1.301, 113, 1.013, 148, 0.103, 150,
          0.279, 151, 1.552, 153, 0.103, 163, 0.89, 171, 0.103, 172, 0.103, 175,
          0.651, 214, 1.686, 232, 1.084, 233, 1.453, 234, 1.406, 235, 1.049,
          236, 1.486, 237, 1.084, 239, 1.084, 240, 0.89, 241, 0.533, 242, 0.533,
          243, 1.084, 244, 0.89, 245, 1.084, 246, 0.89, 247, 1.016, 248, 1.084,
          249, 0.89, 250, 1.453, 251, 0.89, 252, 1.084, 253, 1.879, 254, 1.084,
          255, 1.486, 256, 1.084, 257, 0.832, 258, 0.861, 259, 1.084, 260, 0.89,
          261, 1.084, 262, 0.861, 263, 1.084, 264, 0.89, 265, 1.084, 266, 0.89,
          267, 0.951, 268, 1.084, 269, 0.92, 270, 1.084, 271, 0.92, 272, 1.084,
          273, 0.861, 274, 0.983, 275, 1.084, 276, 0.861, 277, 0.725, 278, 0.89,
          279, 1.084, 280, 0.89, 281, 1.453, 282, 1.639, 283, 0.861, 284, 1.084,
          285, 0.92, 286, 0.89, 287, 1.084, 288, 0.861, 289, 1.233, 290, 0.89,
          291, 1.084, 292, 0.861, 293, 0.983, 294, 0.861, 295, 0.983, 296, 0.92,
          297, 1.016, 298, 1.084, 299, 0.861, 300, 1.084, 301, 0.89, 302, 1.084,
          303, 0.861, 304, 1.084, 305, 0.89, 306, 1.049, 307, 1.084, 308, 1.084,
          309, 0.009, 310, 0.009, 785, 6.17, 798, 6.17, 799, 3.794, 800, 5.826,
          801, 5.826, 802, 6.571, 803, 7.02, 804, 6.571, 805, 6.571, 806, 5.826,
          807, 4.347, 808, 4.347, 809, 4.347, 810, 4.347, 811, 5.826, 812,
          4.347, 813, 4.347, 814, 4.347, 815, 5.826, 816, 5.826, 817, 4.347,
        ],
      ],
      ["title/components/DropdownComponent.html", [0, 0.213, 260, 0.83]],
      [
        "body/components/DropdownComponent.html",
        [
          0, 0.425, 1, 0.672, 2, 1.155, 3, 0.097, 4, 0.077, 5, 0.767, 6, 0.819,
          7, 0.819, 8, 0.067, 9, 0.11, 12, 0.417, 13, 0.468, 15, 0.819, 16,
          0.402, 17, 0.402, 19, 0.229, 21, 0.145, 22, 0.301, 27, 0.338, 28,
          0.65, 34, 1.155, 43, 0.489, 53, 1.155, 57, 1.403, 58, 2.322, 70,
          1.841, 72, 1.317, 73, 0.013, 74, 0.281, 76, 1.131, 77, 1.543, 78,
          1.025, 79, 1.776, 81, 0.302, 86, 1.322, 97, 3.198, 107, 1.229, 113,
          0.896, 138, 0.819, 148, 0.156, 150, 0.349, 153, 0.077, 163, 0.672,
          167, 0.137, 171, 0.113, 172, 0.077, 174, 0.399, 186, 2.384, 206,
          3.776, 232, 0.819, 233, 1.194, 234, 1.155, 235, 0.793, 236, 1.314,
          237, 0.819, 239, 0.819, 240, 0.672, 241, 0.522, 242, 0.522, 243,
          0.819, 244, 0.672, 245, 0.819, 246, 0.672, 247, 0.767, 248, 0.819,
          249, 0.672, 250, 1.194, 251, 0.672, 252, 0.819, 253, 1.194, 254,
          0.819, 255, 0.695, 256, 0.819, 257, 0.628, 258, 0.65, 259, 0.819, 260,
          1.271, 261, 0.819, 262, 0.65, 263, 0.819, 264, 0.672, 265, 0.819, 266,
          0.672, 267, 1.674, 268, 0.819, 269, 0.695, 270, 0.819, 271, 0.695,
          272, 0.819, 273, 0.65, 274, 0.742, 275, 0.819, 276, 0.65, 277, 0.942,
          278, 0.672, 279, 0.819, 280, 0.672, 281, 1.194, 282, 1.409, 283, 0.65,
          284, 0.819, 285, 0.695, 286, 0.672, 287, 0.819, 288, 0.65, 289, 1.013,
          290, 0.672, 291, 0.819, 292, 0.65, 293, 0.742, 294, 0.65, 295, 0.742,
          296, 0.695, 297, 0.767, 298, 0.819, 299, 0.65, 300, 0.819, 301, 0.672,
          302, 0.819, 303, 0.65, 304, 0.819, 305, 0.672, 306, 0.793, 307, 0.819,
          308, 0.819, 309, 0.007, 310, 0.007, 323, 0.731, 340, 2.699, 350,
          2.466, 352, 1.228, 353, 1.549, 369, 0.863, 370, 0.863, 384, 0.999,
          490, 1.277, 491, 0.628, 492, 0.628, 521, 1.068, 554, 1.555, 584,
          2.166, 599, 2.163, 617, 3.82, 627, 1.155, 628, 1.236, 629, 2.867, 630,
          3.383, 631, 1.79, 636, 2.166, 637, 1.427, 685, 1.709, 687, 2.081, 753,
          2.081, 765, 1.776, 784, 3.038, 818, 6.26, 819, 2.59, 820, 2.585, 821,
          4.177, 822, 4.177, 823, 4.93, 824, 2.274, 825, 4.93, 826, 5.418, 827,
          4.786, 828, 4.198, 829, 3.283, 830, 4.102, 831, 3.283, 832, 3.283,
          833, 3.283, 834, 3.283, 835, 3.283, 836, 3.283, 837, 3.283, 838,
          5.418, 839, 2.585, 840, 3.283, 841, 4.177, 842, 3.283, 843, 5.435,
          844, 4.177, 845, 5.76, 846, 3.283, 847, 3.038, 848, 4.93, 849, 4.177,
          850, 4.177, 851, 4.177, 852, 4.93, 853, 4.177, 854, 4.177, 855, 3.237,
          856, 4.177, 857, 3.718, 858, 2.865, 859, 3.94, 860, 4.177, 861, 2.585,
          862, 3.283, 863, 3.283, 864, 3.283, 865, 2.59, 866, 2.59, 867, 3.038,
          868, 4.177, 869, 4.93, 870, 2.865, 871, 2.865, 872, 4.177, 873, 2.865,
          874, 2.865, 875, 2.865, 876, 2.084, 877, 2.384, 878, 2.865, 879,
          2.865, 880, 4.93, 881, 4.177, 882, 3.476, 883, 4.177, 884, 2.865, 885,
          2.865, 886, 2.865, 887, 2.865, 888, 2.865, 889, 2.865, 890, 2.865,
          891, 4.786,
        ],
      ],
      ["title/components/ErrorComponent.html", [0, 0.213, 262, 0.802]],
      [
        "body/components/ErrorComponent.html",
        [
          0, 0.426, 1, 0.829, 2, 1.341, 3, 0.082, 4, 0.096, 5, 0.946, 6, 1.01,
          7, 1.01, 8, 0.082, 9, 0.11, 12, 0.484, 13, 0.526, 15, 1.01, 16, 0.408,
          17, 0.408, 19, 0.266, 21, 0.123, 27, 0.286, 28, 0.802, 34, 1.341, 43,
          0.537, 53, 1.341, 54, 1.529, 57, 1.433, 67, 1.133, 70, 1.824, 72,
          1.115, 73, 0.013, 74, 0.265, 81, 0.313, 107, 1.255, 113, 0.984, 148,
          0.131, 150, 0.353, 153, 0.096, 163, 0.829, 167, 0.232, 171, 0.15, 172,
          0.15, 174, 0.448, 228, 1.137, 232, 1.01, 233, 1.385, 234, 1.341, 235,
          0.978, 236, 1.443, 237, 1.01, 239, 1.01, 240, 0.829, 241, 0.532, 242,
          0.532, 243, 1.01, 244, 0.829, 245, 1.01, 246, 0.829, 247, 0.946, 248,
          1.01, 249, 0.829, 250, 1.385, 251, 0.829, 252, 1.01, 253, 1.385, 254,
          1.01, 255, 0.857, 256, 1.01, 257, 0.775, 258, 0.802, 259, 1.01, 260,
          0.829, 261, 1.01, 262, 1.35, 263, 1.01, 264, 0.829, 265, 1.01, 266,
          0.829, 267, 0.886, 268, 1.01, 269, 0.857, 270, 1.01, 271, 0.857, 272,
          1.01, 273, 0.802, 274, 0.916, 275, 1.01, 276, 0.802, 277, 1.26, 278,
          0.829, 279, 1.01, 280, 0.829, 281, 1.385, 282, 1.581, 283, 0.802, 284,
          1.01, 285, 0.857, 286, 0.829, 287, 1.01, 288, 0.802, 289, 1.175, 290,
          0.829, 291, 1.01, 292, 0.802, 293, 0.916, 294, 0.802, 295, 0.916, 296,
          0.857, 297, 0.946, 298, 1.01, 299, 0.802, 300, 1.01, 301, 0.829, 302,
          1.01, 303, 0.802, 304, 1.01, 305, 0.829, 306, 0.978, 307, 1.01, 308,
          1.01, 309, 0.008, 310, 0.008, 323, 0.716, 345, 2.513, 369, 0.772, 370,
          0.772, 384, 1.098, 415, 3.598, 422, 3.121, 430, 1.633, 440, 2.154,
          468, 2.999, 469, 3.683, 471, 1.761, 490, 1.433, 491, 0.775, 492,
          0.775, 521, 1.317, 584, 1.833, 627, 1.341, 628, 0.886, 631, 2.077,
          640, 3.153, 641, 2.087, 645, 2.483, 892, 2.942, 893, 4.381, 894,
          5.379, 895, 5.636, 896, 5.554, 897, 4.286, 898, 4.051, 899, 4.051,
          900, 4.084, 901, 4.051, 902, 4.051, 903, 4.051, 904, 4.051, 905,
          4.051, 906, 2.571, 907, 3.196, 908, 1.631, 909, 2.426, 910, 4.381,
          911, 4.381, 912, 3.196, 913, 5.554,
        ],
      ],
      ["title/components/FlyoutComponent.html", [0, 0.213, 264, 0.83]],
      [
        "body/components/FlyoutComponent.html",
        [
          0, 0.43, 1, 0.617, 2, 1.085, 3, 0.061, 4, 0.071, 5, 0.704, 6, 0.752,
          7, 0.752, 8, 0.061, 9, 0.112, 12, 0.392, 13, 0.446, 15, 0.752, 16,
          0.399, 17, 0.399, 19, 0.215, 21, 0.22, 22, 0.282, 27, 0.45, 28, 0.597,
          34, 1.085, 43, 0.469, 53, 1.085, 57, 1.565, 58, 2.228, 61, 2.315, 63,
          3.411, 70, 1.881, 72, 1.839, 73, 0.013, 74, 0.296, 76, 0.805, 77,
          1.261, 78, 0.894, 79, 1.784, 81, 0.259, 85, 2.314, 86, 1.809, 88,
          1.311, 94, 1.529, 96, 3.634, 97, 3.961, 103, 5.524, 107, 1.37, 111,
          3.568, 113, 0.999, 138, 1.486, 148, 0.106, 149, 1.553, 150, 0.331,
          151, 1.197, 153, 0.071, 156, 1.364, 161, 2.189, 163, 0.617, 167,
          0.126, 171, 0.127, 172, 0.071, 174, 0.45, 175, 0.805, 203, 2.189, 214,
          2.471, 215, 2.427, 228, 0.92, 232, 0.752, 233, 1.121, 234, 1.085, 235,
          0.728, 236, 1.261, 237, 0.752, 239, 0.752, 240, 0.617, 241, 0.518,
          242, 0.518, 243, 0.752, 244, 0.617, 245, 0.752, 246, 0.617, 247,
          0.704, 248, 0.752, 249, 0.617, 250, 1.121, 251, 0.617, 252, 0.752,
          253, 1.121, 254, 0.752, 255, 0.638, 256, 0.752, 257, 0.577, 258,
          0.597, 259, 0.752, 260, 0.617, 261, 0.752, 262, 0.597, 263, 0.752,
          264, 1.219, 265, 0.752, 266, 0.617, 267, 1.394, 268, 0.752, 269,
          0.638, 270, 0.752, 271, 0.638, 272, 0.752, 273, 0.597, 274, 0.682,
          275, 0.752, 276, 0.597, 277, 0.503, 278, 0.617, 279, 0.752, 280,
          0.617, 281, 1.121, 282, 1.341, 283, 0.597, 284, 0.752, 285, 0.638,
          286, 0.617, 287, 0.752, 288, 0.597, 289, 0.951, 290, 0.617, 291,
          0.752, 292, 0.597, 293, 0.682, 294, 0.597, 295, 0.682, 296, 0.638,
          297, 0.704, 298, 0.752, 299, 0.597, 300, 0.752, 301, 0.617, 302,
          0.752, 303, 0.597, 304, 0.752, 305, 0.617, 306, 0.728, 307, 0.752,
          308, 0.752, 309, 0.007, 310, 0.007, 323, 0.67, 356, 0.83, 369, 0.625,
          370, 0.625, 404, 2.039, 471, 1.311, 476, 1.712, 500, 2.189, 506,
          2.189, 543, 2.336, 554, 0.83, 599, 2.076, 627, 0.728, 628, 0.659, 636,
          1.364, 637, 1.311, 653, 2.15, 687, 1.311, 703, 3.264, 787, 2.378, 824,
          2.398, 839, 2.902, 847, 1.913, 859, 3.411, 876, 1.913, 877, 2.189,
          914, 2.189, 915, 3.923, 916, 5.831, 917, 4.69, 918, 5.199, 919, 5.199,
          920, 4.495, 921, 4.495, 922, 4.495, 923, 4.495, 924, 4.495, 925,
          5.199, 926, 4.69, 927, 4.495, 928, 4.495, 929, 4.495, 930, 3.015, 931,
          3.015, 932, 3.015, 933, 3.78, 934, 3.015, 935, 3.015, 936, 3.015, 937,
          3.015, 938, 3.015, 939, 4.495, 940, 3.015, 941, 4.495, 942, 3.015,
          943, 4.495, 944, 3.015, 945, 3.923, 946, 3.015, 947, 3.923, 948,
          3.015, 949, 3.923, 950, 3.923, 951, 3.923, 952, 3.923, 953, 3.923,
          954, 3.923, 955, 3.923, 956, 3.015, 957, 3.015, 958, 5.561, 959,
          3.923, 960, 3.015, 961, 3.015, 962, 2.631, 963, 1.806, 964, 2.378,
          965, 4.24, 966, 4.24, 967, 2.189, 968, 2.189, 969, 2.631, 970, 4.028,
          971, 2.631, 972, 2.631, 973, 3.923, 974, 2.631, 975, 2.631, 976,
          1.712, 977, 4.69, 978, 5.831, 979, 2.631, 980, 2.631, 981, 3.923, 982,
          5.561, 983, 3.923, 984, 2.631, 985, 2.631, 986, 2.631, 987, 2.631,
          988, 2.631, 989, 2.631, 990, 2.631, 991, 2.631, 992, 3.923, 993,
          2.631, 994, 3.923, 995, 2.631, 996, 2.631, 997, 2.631, 998, 2.631,
          999, 3.923, 1000, 2.378, 1001, 2.631, 1002, 1.913, 1003, 2.631, 1004,
          2.631, 1005, 2.631, 1006, 3.923, 1007, 2.631, 1008, 2.631, 1009,
          2.631, 1010, 2.631, 1011, 3.923, 1012, 2.631, 1013, 2.631, 1014,
          2.631, 1015, 3.923, 1016, 2.631, 1017, 1.712, 1018, 2.631, 1019,
          2.631, 1020, 2.631, 1021, 2.631, 1022, 3.923, 1023, 2.631, 1024,
          1.913, 1025, 2.631, 1026, 3.923, 1027, 2.631, 1028, 2.631, 1029,
          2.631, 1030, 1.628, 1031, 2.631, 1032, 2.631, 1033, 2.631, 1034,
          2.631, 1035, 2.631,
        ],
      ],
      ["title/components/FlyoutOptionComponent.html", [0, 0.213, 266, 0.83]],
      [
        "body/components/FlyoutOptionComponent.html",
        [
          0, 0.408, 1, 0.861, 2, 1.376, 3, 0.086, 4, 0.099, 5, 0.983, 6, 1.05,
          7, 1.05, 8, 0.086, 9, 0.101, 12, 0.497, 13, 0.536, 15, 1.05, 16,
          0.409, 17, 0.409, 19, 0.273, 21, 0.127, 28, 0.833, 34, 1.376, 43,
          0.546, 53, 1.376, 57, 1.289, 67, 1.156, 70, 1.618, 73, 0.013, 74,
          0.24, 76, 1.038, 77, 0.891, 78, 0.927, 79, 1.085, 81, 0.282, 83,
          1.155, 107, 0.833, 113, 0.608, 138, 1.05, 148, 0.099, 150, 0.309, 153,
          0.099, 163, 0.861, 167, 0.176, 171, 0.153, 172, 0.099, 174, 0.457,
          215, 3.078, 228, 1.418, 232, 1.05, 233, 1.422, 234, 1.376, 235, 1.016,
          236, 1.466, 237, 1.05, 239, 1.05, 240, 0.861, 241, 0.533, 242, 0.533,
          243, 1.05, 244, 0.861, 245, 1.05, 246, 0.861, 247, 0.983, 248, 1.05,
          249, 0.861, 250, 1.422, 251, 0.861, 252, 1.05, 253, 1.422, 254, 1.05,
          255, 0.891, 256, 1.05, 257, 0.805, 258, 0.833, 259, 1.05, 260, 0.861,
          261, 1.05, 262, 0.833, 263, 1.05, 264, 0.861, 265, 1.05, 266, 1.418,
          267, 1.584, 268, 1.05, 269, 0.891, 270, 1.05, 271, 0.891, 272, 1.05,
          273, 0.833, 274, 0.951, 275, 1.05, 276, 0.833, 277, 0.702, 278, 0.861,
          279, 1.05, 280, 0.861, 281, 1.422, 282, 1.612, 283, 0.833, 284, 1.05,
          285, 0.891, 286, 0.861, 287, 1.05, 288, 0.833, 289, 1.206, 290, 0.861,
          291, 1.05, 292, 0.833, 293, 0.951, 294, 0.833, 295, 0.951, 296, 0.891,
          297, 0.983, 298, 1.05, 299, 0.833, 300, 1.05, 301, 0.861, 302, 1.05,
          303, 0.833, 304, 1.05, 305, 0.861, 306, 1.016, 307, 1.05, 308, 1.05,
          309, 0.009, 310, 0.009, 323, 0.748, 356, 1.158, 369, 0.585, 370,
          0.585, 399, 2.936, 543, 1.829, 554, 1.158, 599, 1.466, 627, 1.016,
          628, 0.921, 654, 4.371, 685, 1.569, 820, 3.491, 824, 1.694, 839,
          2.273, 933, 4.102, 963, 4.336, 967, 3.056, 968, 3.056, 1036, 5.258,
          1037, 3.056, 1038, 4.974, 1039, 5.7, 1040, 4.974, 1041, 4.208, 1042,
          4.208, 1043, 4.497, 1044, 4.497, 1045, 3.673, 1046, 3.673, 1047,
          4.974, 1048, 6.928,
        ],
      ],
      ["title/components/FooterComponent.html", [0, 0.213, 269, 0.858]],
      [
        "body/components/FooterComponent.html",
        [
          0, 0.421, 1, 0.842, 2, 1.355, 3, 0.084, 4, 0.097, 5, 0.961, 6, 1.026,
          7, 1.026, 8, 0.084, 9, 0.107, 15, 1.026, 16, 0.408, 17, 0.408, 19,
          0.268, 21, 0.125, 22, 0.353, 27, 0.397, 28, 0.814, 34, 1.355, 43,
          0.541, 53, 1.355, 57, 1.551, 67, 0.735, 70, 1.772, 72, 1.544, 73,
          0.013, 74, 0.275, 77, 1.452, 78, 0.919, 81, 0.309, 107, 1.111, 113,
          0.81, 148, 0.132, 150, 0.268, 153, 0.097, 163, 0.842, 171, 0.175, 172,
          0.097, 176, 2.025, 188, 1.156, 228, 1.149, 232, 1.026, 233, 1.4, 234,
          1.355, 235, 0.993, 236, 1.452, 237, 1.026, 239, 1.026, 240, 0.842,
          241, 0.532, 242, 0.532, 243, 1.026, 244, 0.842, 245, 1.026, 246,
          0.842, 247, 0.961, 248, 1.026, 249, 0.842, 250, 1.4, 251, 0.842, 252,
          1.026, 253, 1.4, 254, 1.026, 255, 0.87, 256, 1.026, 257, 0.787, 258,
          0.814, 259, 1.026, 260, 0.842, 261, 1.026, 262, 0.814, 263, 1.026,
          264, 0.842, 265, 1.026, 266, 0.842, 267, 0.9, 268, 1.026, 269, 1.452,
          270, 1.026, 271, 0.87, 272, 1.026, 273, 0.814, 274, 0.93, 275, 1.026,
          276, 0.814, 277, 0.686, 278, 0.842, 279, 1.026, 280, 0.842, 281, 1.4,
          282, 1.593, 283, 0.814, 284, 1.026, 285, 0.87, 286, 0.842, 287, 1.026,
          288, 0.814, 289, 1.187, 290, 0.842, 291, 1.026, 292, 0.814, 293, 0.93,
          294, 0.814, 295, 0.93, 296, 0.87, 297, 0.961, 298, 1.026, 299, 0.814,
          300, 1.026, 301, 0.842, 302, 1.026, 303, 0.814, 304, 1.026, 305,
          0.842, 306, 0.993, 307, 1.026, 308, 1.026, 309, 0.008, 310, 0.008,
          323, 0.641, 443, 2.463, 444, 1.769, 494, 0.9, 495, 0.9, 672, 3.031,
          684, 2.305, 704, 2.099, 706, 2.305, 759, 1.538, 760, 1.538, 761,
          1.538, 779, 1.495, 1049, 3.978, 1050, 3.244, 1051, 5.611, 1052, 5.611,
          1053, 6.387, 1054, 5.574, 1055, 5.611, 1056, 4.112, 1057, 4.112, 1058,
          4.112, 1059, 4.112, 1060, 4.112, 1061, 5.039, 1062, 3.244, 1063,
          3.589, 1064, 3.589, 1065, 4.427, 1066, 3.244, 1067, 3.244, 1068,
          5.413, 1069, 4.427, 1070, 3.244, 1071, 4.427, 1072, 3.244, 1073,
          4.427, 1074, 4.897, 1075, 4.427, 1076, 3.244, 1077, 4.897, 1078,
          4.897, 1079, 5.611,
        ],
      ],
      ["title/components/HeaderComponent.html", [0, 0.213, 271, 0.858]],
      [
        "body/components/HeaderComponent.html",
        [
          0, 0.421, 1, 0.812, 2, 1.321, 3, 0.081, 4, 0.094, 5, 0.926, 6, 0.989,
          7, 0.989, 8, 0.081, 9, 0.108, 15, 0.989, 16, 0.407, 17, 0.407, 19,
          0.262, 21, 0.12, 22, 0.344, 27, 0.387, 28, 0.785, 34, 1.321, 43,
          0.532, 53, 1.321, 57, 1.528, 67, 0.709, 70, 1.788, 72, 1.506, 73,
          0.013, 74, 0.279, 77, 1.5, 78, 0.949, 81, 0.311, 107, 1.083, 113,
          0.79, 148, 0.129, 150, 0.262, 153, 0.094, 163, 0.812, 171, 0.183, 172,
          0.094, 176, 1.953, 188, 1.232, 228, 1.12, 232, 0.989, 233, 1.365, 234,
          1.321, 235, 0.957, 236, 1.43, 237, 0.989, 239, 0.989, 240, 0.812, 241,
          0.531, 242, 0.531, 243, 0.989, 244, 0.812, 245, 0.989, 246, 0.812,
          247, 0.926, 248, 0.989, 249, 0.812, 250, 1.365, 251, 0.812, 252,
          0.989, 253, 1.365, 254, 0.989, 255, 0.839, 256, 0.989, 257, 0.759,
          258, 0.785, 259, 0.989, 260, 0.812, 261, 0.989, 262, 0.785, 263,
          0.989, 264, 0.812, 265, 0.989, 266, 0.812, 267, 0.867, 268, 0.989,
          269, 0.839, 270, 0.989, 271, 1.43, 272, 0.989, 273, 0.785, 274, 0.896,
          275, 0.989, 276, 0.785, 277, 0.661, 278, 0.812, 279, 0.989, 280,
          0.812, 281, 1.365, 282, 1.563, 283, 0.785, 284, 0.989, 285, 0.839,
          286, 0.812, 287, 0.989, 288, 0.785, 289, 1.158, 290, 0.812, 291,
          0.989, 292, 0.785, 293, 0.896, 294, 0.785, 295, 0.896, 296, 0.839,
          297, 0.926, 298, 0.989, 299, 0.785, 300, 0.989, 301, 0.812, 302,
          0.989, 303, 0.785, 304, 0.989, 305, 0.812, 306, 0.957, 307, 0.989,
          308, 0.989, 309, 0.008, 310, 0.008, 323, 0.628, 443, 2.375, 444,
          1.742, 494, 0.867, 495, 0.867, 672, 2.956, 684, 2.262, 704, 2.047,
          706, 2.262, 759, 1.483, 760, 1.483, 761, 1.483, 779, 1.458, 1049,
          4.003, 1054, 5.469, 1062, 4.317, 1066, 3.128, 1067, 4.317, 1068, 5.33,
          1070, 3.128, 1071, 4.944, 1072, 4.317, 1077, 4.776, 1078, 4.776, 1080,
          3.128, 1081, 3.974, 1082, 5.472, 1083, 6.267, 1084, 6.267, 1085,
          5.472, 1086, 3.965, 1087, 3.965, 1088, 3.965, 1089, 3.965, 1090,
          3.965, 1091, 3.965, 1092, 4.317, 1093, 4.776, 1094, 4.776, 1095, 3.46,
          1096, 4.317, 1097, 3.46, 1098, 4.317, 1099, 3.46, 1100, 4.317, 1101,
          3.46, 1102, 4.317, 1103, 4.776, 1104, 4.317, 1105, 4.317, 1106, 4.317,
          1107, 5.472, 1108, 5.472,
        ],
      ],
      ["title/components/HiddenNavComponent.html", [0, 0.213, 273, 0.802]],
      [
        "body/components/HiddenNavComponent.html",
        [
          0, 0.412, 1, 0.845, 2, 1.358, 3, 0.084, 4, 0.097, 5, 0.965, 6, 1.03,
          7, 1.03, 8, 0.084, 9, 0.103, 13, 0.343, 15, 1.03, 16, 0.408, 17,
          0.408, 19, 0.269, 21, 0.125, 27, 0.398, 28, 0.818, 34, 1.358, 41,
          4.911, 53, 1.358, 57, 1.554, 60, 1.662, 63, 3.571, 70, 1.68, 72,
          1.549, 73, 0.013, 74, 0.238, 77, 0.874, 78, 0.553, 81, 0.334, 96,
          2.793, 107, 1.267, 111, 2.474, 113, 0.924, 148, 0.097, 149, 2.127,
          150, 0.269, 153, 0.097, 163, 0.845, 167, 0.235, 171, 0.151, 172,
          0.097, 174, 0.452, 188, 1.03, 214, 1.602, 232, 1.03, 233, 1.404, 234,
          1.358, 235, 0.997, 236, 1.455, 237, 1.03, 239, 1.03, 240, 0.845, 241,
          0.532, 242, 0.532, 243, 1.03, 244, 0.845, 245, 1.03, 246, 0.845, 247,
          0.965, 248, 1.03, 249, 0.845, 250, 1.404, 251, 0.845, 252, 1.03, 253,
          1.404, 254, 1.03, 255, 0.874, 256, 1.03, 257, 0.79, 258, 0.818, 259,
          1.03, 260, 0.845, 261, 1.03, 262, 0.818, 263, 1.03, 264, 0.845, 265,
          1.03, 266, 0.845, 267, 0.903, 268, 1.03, 269, 0.874, 270, 1.03, 271,
          0.874, 272, 1.03, 273, 1.361, 274, 1.626, 275, 1.03, 276, 0.818, 277,
          0.689, 278, 0.845, 279, 1.03, 280, 0.845, 281, 1.404, 282, 1.597, 283,
          0.818, 284, 1.03, 285, 0.874, 286, 0.845, 287, 1.03, 288, 0.818, 289,
          1.191, 290, 0.845, 291, 1.03, 292, 0.818, 293, 0.934, 294, 0.818, 295,
          0.934, 296, 0.874, 297, 0.965, 298, 1.03, 299, 0.818, 300, 1.03, 301,
          0.845, 302, 1.03, 303, 0.818, 304, 1.03, 305, 0.845, 306, 0.997, 307,
          1.03, 308, 1.03, 309, 0.008, 310, 0.008, 323, 0.721, 366, 3.542, 379,
          1.727, 397, 2.621, 454, 2.345, 501, 3.298, 858, 3.604, 908, 2.265,
          1049, 3.823, 1109, 5.39, 1110, 5.019, 1111, 2.999, 1112, 4.362, 1113,
          4.439, 1114, 5.627, 1115, 5.423, 1116, 5.627, 1117, 4.329, 1118, 4.13,
          1119, 5.05, 1120, 4.13, 1121, 5.627, 1122, 4.439, 1123, 4.439, 1124,
          4.439, 1125, 4.13, 1126, 4.13, 1127, 3.806, 1128, 3.258, 1129, 3.258,
          1130, 3.258, 1131, 3.258, 1132, 3.258, 1133, 2.23, 1134, 3.258, 1135,
          3.258, 1136, 3.258, 1137, 4.439, 1138, 3.258, 1139, 4.439, 1140,
          3.258, 1141, 3.258, 1142, 5.627,
        ],
      ],
      ["title/interfaces/IBannerConfig.html", [167, 0.169, 327, 2.741]],
      [
        "body/interfaces/IBannerConfig.html",
        [
          0, 0.372, 3, 0.135, 4, 0.105, 8, 0.09, 9, 0.062, 12, 0.387, 13, 0.49,
          16, 0.212, 17, 0.212, 19, 0.212, 21, 0.134, 22, 0.371, 27, 0.588, 43,
          0.465, 60, 2.849, 73, 0.013, 74, 0.305, 76, 1.135, 81, 0.339, 83,
          0.985, 94, 1.681, 138, 1.107, 148, 0.157, 150, 0.339, 151, 1.573, 153,
          0.105, 167, 0.277, 168, 0.794, 171, 0.179, 172, 0.139, 174, 0.314,
          175, 0.665, 236, 0.939, 240, 0.909, 241, 0.279, 242, 0.279, 277, 0.74,
          309, 0.009, 310, 0.009, 311, 2.817, 312, 3.002, 313, 5.584, 314,
          3.501, 315, 3.501, 316, 3.501, 317, 3.501, 319, 3.501, 320, 2.659,
          321, 3.501, 322, 5.815, 323, 0.776, 324, 3.501, 325, 3.501, 327, 4.49,
          331, 3.501, 338, 2.568, 339, 1.547, 340, 1.93, 341, 2.397, 342, 3.19,
          343, 2.397, 344, 2.659, 345, 2.009, 346, 1.66, 350, 2.286, 351, 2.659,
          352, 1.66, 353, 2.094, 354, 3.538, 355, 3.501, 356, 1.828, 357, 4.29,
          358, 4.29, 359, 2.47, 360, 2.909, 361, 3.749, 362, 4.29, 363, 2.787,
          364, 3.749, 365, 4.29, 366, 3.27, 367, 2.787, 368, 4.787, 369, 0.923,
          370, 0.923, 371, 3.501, 372, 3.501, 373, 2.817, 374, 3.501, 375,
          3.501, 376, 3.501, 377, 3.002, 378, 3.501, 379, 1.856, 380, 5.584,
          381, 4.787, 382, 5.584, 383, 4.492, 384, 1.14, 385, 3.501, 386, 5.238,
          387, 3.501, 388, 3.501, 389, 3.501, 390, 3.501, 391, 3.501, 392,
          3.501, 393, 3.501, 394, 3.501, 395, 5.815, 396, 3.501, 397, 4.492,
          398, 4.66, 399, 2.286, 400, 5.238, 401, 3.501, 402, 3.501, 403, 4.66,
          404, 3.002, 405, 2.817, 406, 3.501, 407, 3.501, 408, 3.501, 409,
          3.501, 410, 3.501, 411, 3.501, 412, 4.66, 413, 3.501, 414, 3.501, 415,
          2.52, 416, 4.66, 417, 3.501, 418, 4.66,
        ],
      ],
      ["title/interfaces/IBreadcrumbConfig.html", [167, 0.169, 452, 2.943]],
      [
        "body/interfaces/IBreadcrumbConfig.html",
        [
          0, 0.328, 3, 0.08, 4, 0.093, 8, 0.08, 9, 0.055, 12, 0.343, 13, 0.451,
          16, 0.188, 17, 0.188, 19, 0.188, 21, 0.119, 22, 0.342, 27, 0.476, 43,
          0.31, 60, 1.583, 67, 0.703, 73, 0.013, 74, 0.288, 76, 0.815, 79,
          1.822, 81, 0.311, 83, 1.041, 85, 1.77, 86, 2.71, 97, 2.803, 141,
          3.952, 148, 0.173, 149, 2.026, 150, 0.26, 152, 2.233, 153, 0.093, 167,
          0.164, 168, 0.703, 171, 0.147, 172, 0.128, 174, 0.278, 188, 1.177,
          201, 2.035, 214, 2.111, 228, 0.805, 234, 0.949, 236, 0.832, 241,
          0.247, 242, 0.247, 244, 0.805, 247, 1.271, 277, 1.041, 309, 0.008,
          310, 0.008, 320, 2.356, 323, 0.733, 338, 2.366, 340, 1.71, 341, 2.124,
          342, 2.939, 343, 2.124, 345, 1.78, 346, 1.471, 352, 1.471, 353, 1.855,
          356, 1.083, 366, 2.68, 369, 0.757, 370, 0.757, 377, 2.66, 384, 1.207,
          399, 2.026, 421, 2.856, 422, 2.68, 423, 3.952, 424, 3.432, 425, 3.432,
          426, 3.432, 427, 3.432, 428, 3.432, 429, 3.432, 430, 1.822, 431,
          5.446, 432, 3.432, 433, 3.432, 434, 3.432, 435, 3.432, 436, 3.432,
          438, 3.432, 439, 3.432, 444, 1.403, 445, 3.432, 446, 1.832, 447,
          3.432, 448, 4.749, 449, 3.432, 450, 4.749, 452, 4.532, 453, 6.169,
          454, 3.823, 459, 3.432, 460, 3.432, 462, 3.432, 468, 2.124, 469,
          2.939, 473, 3.432, 474, 3.103, 476, 3.543, 477, 3.432, 480, 3.432,
          483, 4.641, 486, 3.432, 487, 2.856, 488, 3.432, 490, 1.23, 491, 0.753,
          492, 0.753, 493, 3.432, 494, 0.86, 495, 0.86, 496, 1.324, 497, 1.324,
          498, 4.293, 499, 4.22, 500, 2.856, 501, 2.026, 502, 3.432, 503, 3.432,
          504, 3.432, 505, 3.432, 506, 2.856, 507, 3.432, 508, 6.542, 509,
          3.432, 510, 3.432, 511, 3.432, 512, 3.432, 513, 4.532, 514, 3.952,
          515, 3.952, 516, 3.952, 517, 4.749, 518, 3.432, 519, 5.446, 520,
          4.749, 521, 1.77, 522, 4.749, 523, 4.749, 524, 3.432, 525, 3.432, 526,
          3.432, 527, 3.432, 528, 4.749, 529, 4.749, 530, 4.749, 531, 3.432,
          532, 3.432, 533, 4.749, 534, 2.496, 535, 3.952, 536, 3.432, 537,
          3.432, 538, 3.432, 539, 3.432, 540, 3.432, 541, 3.432, 542, 3.432,
          543, 1.71, 544, 5.446, 545, 4.749, 546, 3.432, 547, 3.432, 548, 4.749,
          549, 3.432, 550, 3.432, 551, 3.432, 552, 4.749, 553, 5.877, 554,
          1.083, 555, 5.877, 556, 3.432, 557, 3.432, 558, 6.169, 559, 4.749,
          560, 5.446, 561, 5.446, 562, 3.432, 563, 4.749, 564, 3.432, 565,
          5.446, 566, 3.432, 567, 3.432, 568, 3.432, 569, 3.432, 570, 3.432,
          571, 3.432, 572, 3.432, 573, 3.432, 574, 2.496, 575, 3.432, 576,
          3.432, 577, 2.856, 578, 3.432, 579, 3.432, 580, 3.432, 581, 3.432,
          582, 3.432, 583, 4.749, 584, 1.78, 585, 3.432, 586, 3.432, 587, 3.432,
          588, 3.432,
        ],
      ],
      ["title/interfaces/IButtonConfig.html", [167, 0.169, 354, 2.428]],
      [
        "body/interfaces/IButtonConfig.html",
        [
          0, 0.354, 3, 0.092, 4, 0.107, 8, 0.092, 9, 0.063, 16, 0.218, 17,
          0.218, 19, 0.218, 21, 0.138, 22, 0.377, 27, 0.589, 43, 0.359, 73,
          0.013, 74, 0.276, 76, 1.071, 81, 0.333, 85, 2.325, 94, 1.912, 148,
          0.107, 150, 0.389, 151, 1.6, 153, 0.107, 167, 0.19, 168, 0.814, 171,
          0.184, 172, 0.107, 174, 0.322, 175, 0.682, 241, 0.286, 242, 0.286,
          249, 0.931, 277, 1.239, 297, 1.403, 309, 0.009, 310, 0.009, 323,
          0.765, 340, 3.231, 345, 3.363, 346, 2.246, 354, 4.027, 356, 2.046,
          359, 2.511, 363, 2.833, 364, 3.812, 367, 3.171, 369, 1.099, 370,
          1.099, 379, 3.107, 383, 3.812, 384, 1.196, 521, 1.48, 554, 2.287, 596,
          3.305, 597, 3.077, 599, 2.59, 600, 6.486, 601, 6.486, 602, 3.971, 614,
          3.971, 617, 4.546, 618, 4.738, 619, 5.303, 620, 5.303, 621, 3.971,
          622, 5.241, 623, 3.41, 624, 5.303, 625, 5.303, 626, 4.738, 627, 1.45,
          628, 0.995, 629, 3.597, 630, 2.726, 631, 2.246, 632, 5.241, 633,
          3.971, 634, 4.062, 635, 3.077, 636, 2.718, 637, 1.978, 638, 5.241,
          639, 3.971, 640, 3.817, 641, 3.683, 642, 6.662, 643, 5.241, 644,
          3.971,
        ],
      ],
      ["title/interfaces/ICTAConfig.html", [167, 0.169, 368, 2.741]],
      [
        "body/interfaces/ICTAConfig.html",
        [
          0, 0.377, 3, 0.137, 4, 0.108, 8, 0.093, 9, 0.064, 12, 0.4, 13, 0.501,
          16, 0.22, 17, 0.22, 19, 0.22, 21, 0.139, 22, 0.379, 27, 0.541, 43,
          0.476, 60, 1.847, 73, 0.013, 74, 0.3, 76, 0.905, 81, 0.335, 83, 1.243,
          94, 1.718, 138, 1.145, 148, 0.159, 150, 0.343, 151, 1.609, 153, 0.108,
          167, 0.282, 168, 0.82, 171, 0.181, 172, 0.143, 174, 0.324, 175, 0.687,
          236, 0.971, 240, 0.939, 241, 0.288, 242, 0.288, 277, 0.765, 309,
          0.009, 310, 0.009, 311, 2.912, 312, 3.103, 313, 5.658, 314, 3.62, 315,
          3.62, 316, 3.62, 317, 3.62, 319, 3.62, 320, 2.749, 321, 3.62, 322,
          4.764, 323, 0.719, 324, 3.62, 325, 3.62, 327, 4.084, 331, 3.62, 338,
          2.625, 339, 1.599, 340, 1.995, 341, 2.479, 342, 3.262, 343, 2.479,
          344, 2.749, 345, 2.077, 346, 1.716, 350, 2.364, 351, 2.749, 352,
          1.716, 353, 2.165, 354, 4.296, 355, 3.62, 356, 1.858, 357, 4.386, 358,
          4.386, 359, 2.525, 360, 2.974, 361, 3.833, 362, 4.386, 363, 2.849,
          364, 3.833, 365, 4.386, 366, 3.324, 367, 2.849, 368, 4.565, 369,
          0.939, 370, 0.939, 371, 5.658, 372, 3.62, 373, 2.912, 374, 3.62, 375,
          3.62, 376, 3.62, 377, 3.103, 378, 5.658, 379, 2.999, 380, 3.62, 381,
          3.103, 382, 3.62, 383, 2.912, 384, 0.739, 385, 3.62, 386, 5.325, 387,
          3.62, 388, 3.62, 389, 3.62, 390, 3.62, 391, 3.62, 392, 3.62, 393,
          3.62, 394, 3.62, 395, 5.879, 396, 3.62, 397, 4.552, 398, 4.764, 399,
          2.364, 400, 5.325, 401, 3.62, 402, 3.62, 403, 4.764, 404, 3.103, 405,
          2.912, 406, 3.62, 407, 3.62, 408, 3.62, 409, 3.62, 410, 3.62, 411,
          3.62, 412, 4.764, 413, 3.62, 414, 3.62, 415, 2.606, 416, 4.764, 417,
          3.62, 418, 4.764,
        ],
      ],
      [
        "title/interfaces/ICheckBoxComponentConfig.html",
        [167, 0.169, 677, 2.943],
      ],
      [
        "body/interfaces/ICheckBoxComponentConfig.html",
        [
          0, 0.349, 3, 0.077, 4, 0.09, 5, 0.887, 8, 0.077, 9, 0.053, 12, 0.331,
          13, 0.441, 16, 0.182, 17, 0.182, 19, 0.182, 21, 0.115, 22, 0.334, 27,
          0.591, 35, 1.278, 43, 0.299, 54, 1.686, 67, 0.679, 73, 0.013, 74,
          0.298, 76, 1.191, 77, 0.804, 78, 0.508, 79, 1.579, 81, 0.336, 83,
          0.886, 88, 1.651, 113, 0.884, 138, 1.741, 148, 0.175, 150, 0.317, 151,
          1.415, 153, 0.09, 156, 1.719, 162, 2.758, 167, 0.158, 168, 0.679, 171,
          0.125, 172, 0.09, 174, 0.268, 175, 0.569, 188, 0.611, 201, 1.986, 228,
          0.777, 241, 0.239, 242, 0.239, 251, 1.087, 309, 0.008, 310, 0.008,
          323, 0.725, 339, 1.851, 369, 0.528, 370, 0.528, 384, 1.124, 415,
          2.156, 430, 0.979, 440, 1.473, 444, 1.369, 446, 2.061, 471, 1.651,
          487, 2.758, 490, 1.578, 491, 0.727, 492, 0.727, 494, 0.831, 495,
          0.831, 496, 1.278, 497, 1.278, 521, 1.235, 554, 1.045, 599, 1.323,
          627, 1.282, 628, 1.527, 636, 1.719, 637, 1.651, 645, 1.194, 646,
          2.996, 647, 2.505, 648, 1.529, 649, 1.529, 650, 2.138, 651, 1.529,
          652, 2.138, 653, 1.371, 654, 2.568, 655, 3.314, 656, 1.956, 657,
          1.529, 658, 1.651, 659, 3.001, 660, 2.051, 661, 3.77, 662, 1.529, 663,
          1.791, 664, 2.41, 665, 2.376, 666, 2.736, 667, 2.758, 668, 1.956, 673,
          2.41, 674, 2.911, 677, 4.448, 678, 3.308, 679, 4.635, 684, 1.371, 685,
          1.991, 687, 2.309, 688, 2.758, 692, 1.651, 693, 1.956, 694, 2.051,
          696, 2.868, 697, 2.051, 701, 2.663, 702, 3.314, 703, 2.758, 704, 1.42,
          706, 1.917, 709, 2.138, 711, 2.736, 715, 1.788, 716, 2.911, 717,
          1.371, 723, 1.117, 724, 2.394, 725, 1.371, 726, 1.371, 727, 1.917,
          728, 1.917, 729, 2.232, 730, 1.529, 731, 2.394, 732, 5.788, 733,
          5.788, 734, 5.788, 735, 5.788, 736, 3.314, 737, 3.314, 738, 3.314,
          739, 3.314, 740, 4.485, 741, 5.788, 742, 2.394, 743, 2.394, 744, 2.67,
          745, 3.314, 746, 3.314, 747, 3.314, 748, 2.758, 749, 3.314, 750,
          3.314, 751, 1.956, 752, 2.758, 753, 1.651, 754, 2.41, 755, 3.314, 756,
          3.155, 757, 1.651, 758, 1.956, 759, 1.42, 760, 1.42, 761, 1.42, 762,
          2.138, 763, 2.138, 764, 2.911, 765, 1.67, 766, 2.138, 767, 4.635, 768,
          2.138, 769, 2.138, 770, 2.403, 771, 1.529, 772, 1.529, 773, 2.758,
          774, 3.155, 775, 1.956, 776, 1.956, 777, 1.956, 778, 1.651, 779,
          1.415, 780, 2.06, 781, 2.758, 782, 2.758,
        ],
      ],
      ["title/interfaces/IDatePickerConfig.html", [167, 0.169, 1143, 2.572]],
      [
        "body/interfaces/IDatePickerConfig.html",
        [
          0, 0.239, 3, 0.047, 4, 0.055, 8, 0.047, 9, 0.032, 12, 0.201, 13,
          0.304, 16, 0.11, 17, 0.11, 19, 0.11, 21, 0.111, 22, 0.23, 27, 0.547,
          35, 0.777, 43, 0.182, 54, 1.008, 58, 1.936, 67, 0.413, 73, 0.013, 74,
          0.261, 76, 1.071, 78, 0.941, 79, 1.622, 81, 0.323, 82, 2.167, 83,
          1.225, 85, 2.517, 86, 2.272, 88, 1.004, 107, 1.025, 113, 0.867, 138,
          1.498, 148, 0.159, 150, 0.347, 153, 0.055, 156, 1.045, 167, 0.216,
          168, 0.413, 171, 0.183, 172, 0.055, 173, 1.311, 174, 0.259, 175,
          0.548, 188, 1.238, 201, 2.673, 214, 1.764, 228, 0.473, 241, 0.145,
          242, 0.145, 257, 0.701, 258, 1.025, 286, 0.749, 309, 0.006, 310,
          0.006, 323, 0.674, 338, 1.004, 339, 1.804, 351, 1.383, 352, 0.864,
          353, 1.089, 363, 2.146, 369, 0.509, 370, 0.509, 384, 1.051, 430,
          1.548, 444, 0.944, 446, 1.531, 471, 1.004, 490, 1.028, 491, 0.442,
          492, 0.442, 494, 0.505, 495, 0.505, 496, 0.777, 497, 0.777, 521,
          1.684, 534, 1.466, 554, 0.636, 574, 2.324, 584, 1.045, 627, 0.884,
          628, 1.376, 631, 1.369, 645, 0.726, 648, 0.93, 649, 0.93, 650, 1.474,
          651, 0.93, 652, 1.474, 653, 0.834, 657, 0.93, 658, 1.004, 661, 1.247,
          662, 0.93, 665, 0.896, 674, 2.709, 684, 2.426, 685, 2.084, 692, 1.592,
          694, 1.247, 696, 1.247, 697, 1.247, 701, 1.004, 709, 1.474, 715,
          1.232, 716, 2.828, 717, 0.834, 723, 0.679, 724, 2.037, 725, 0.834,
          726, 0.834, 727, 1.321, 728, 1.321, 729, 1.742, 730, 0.93, 731, 2.037,
          742, 2.037, 743, 2.037, 744, 2.084, 753, 2.61, 754, 1.466, 757, 1.004,
          762, 0.93, 763, 0.93, 764, 0.93, 765, 1.888, 766, 1.831, 768, 1.474,
          769, 0.93, 770, 1.657, 771, 0.93, 772, 0.93, 778, 1.004, 779, 1.738,
          780, 1.42, 820, 1.977, 824, 2.084, 861, 1.247, 867, 2.324, 909, 1.383,
          1024, 1.466, 1030, 1.247, 1143, 2.887, 1144, 1.466, 1145, 1.383, 1146,
          1.466, 1147, 4.098, 1148, 4.098, 1149, 4.098, 1150, 3.581, 1151,
          3.581, 1152, 2.796, 1153, 1.562, 1154, 2.324, 1155, 1.562, 1156,
          1.562, 1157, 1.562, 1158, 1.562, 1159, 1.562, 1160, 1.562, 1161,
          1.562, 1162, 1.562, 1163, 1.562, 1164, 1.562, 1165, 1.562, 1166,
          2.324, 1167, 1.562, 1168, 1.562, 1169, 1.562, 1170, 1.562, 1171,
          1.562, 1172, 1.562, 1173, 1.562, 1174, 1.562, 1175, 1.562, 1176,
          1.562, 1177, 1.562, 1178, 1.562, 1179, 2.324, 1180, 1.562, 1181,
          2.887, 1182, 1.562, 1183, 3.285, 1184, 1.562, 1185, 1.466, 1186, 3.5,
          1187, 5.121, 1188, 5.365, 1189, 1.466, 1190, 1.562, 1191, 2.476, 1192,
          1.562, 1193, 2.324, 1194, 1.562, 1195, 2.324, 1196, 1.562, 1197,
          2.324, 1198, 2.324, 1199, 2.324, 1200, 1.562, 1201, 2.324, 1202,
          1.562, 1203, 3.581, 1204, 3.076, 1205, 3.581, 1206, 1.562, 1207,
          1.677, 1208, 1.677, 1209, 1.677, 1210, 1.677, 1211, 2.324, 1212,
          2.725, 1213, 1.677, 1214, 4.098, 1215, 2.659, 1216, 1.677, 1217,
          2.725, 1218, 1.677, 1219, 1.677, 1220, 1.677, 1221, 1.383, 1222,
          1.677, 1223, 1.677, 1224, 2.659, 1225, 1.977, 1226, 1.383, 1227,
          1.677, 1228, 2.659, 1229, 2.659, 1230, 2.659, 1231, 2.659, 1232,
          2.659, 1233, 3.304, 1234, 2.659, 1235, 3.759, 1236, 2.659, 1237,
          1.677, 1238, 1.677, 1239, 1.677, 1240, 1.677, 1241, 1.677, 1242,
          1.677, 1243, 1.677, 1244, 1.677, 1245, 1.677, 1246, 1.677, 1247,
          1.677, 1248, 1.677, 1249, 1.677, 1250, 1.677, 1251, 1.677, 1252,
          1.677, 1253, 1.677, 1254, 1.677, 1255, 1.677, 1256, 2.659, 1257,
          2.659, 1258, 1.311, 1259, 1.677, 1260, 1.677, 1261, 3.706, 1262,
          3.759, 1263, 2.659, 1264, 1.677, 1265, 1.383, 1266, 3.304, 1267,
          2.659, 1268, 1.677, 1269, 1.677, 1270, 1.677, 1271, 1.677, 1272,
          4.361, 1273, 3.304, 1274, 2.659, 1275, 1.677, 1276, 1.677, 1277,
          1.677, 1278, 1.803, 1279, 1.677, 1280, 1.677, 1281, 1.677, 1282,
          1.677, 1283, 2.659, 1284, 2.659, 1285, 2.659, 1286, 2.324, 1287,
          2.324, 1288, 1.677, 1289, 3.759, 1290, 1.677, 1291, 3.759, 1292,
          1.677, 1293, 3.759, 1294, 1.677, 1295, 2.659, 1296, 2.659, 1297,
          2.659, 1298, 1.677, 1299, 1.677, 1300, 1.677, 1301, 1.677, 1302,
          1.466, 1303, 1.677, 1304, 1.677, 1305, 1.677, 1306, 1.677, 1307,
          1.677, 1308, 1.677, 1309, 1.677, 1310, 2.659, 1311, 1.383, 1312,
          1.677, 1313, 1.677, 1314, 3.304, 1315, 1.677, 1316, 1.677, 1317,
          2.476, 1318, 1.677, 1319, 1.677, 1320, 1.677, 1321, 1.677, 1322,
          1.562, 1323, 2.659, 1324, 1.383, 1325, 1.677, 1326, 1.677, 1327,
          1.677, 1328, 1.677, 1329, 3.759, 1330, 2.659, 1331, 2.659, 1332,
          2.659, 1333, 2.659, 1334, 2.659, 1335, 2.659, 1336, 1.677, 1337,
          1.677, 1338, 1.677, 1339, 1.383, 1340, 3.759, 1341, 1.677, 1342,
          1.677, 1343, 2.659, 1344, 4.361, 1345, 3.304, 1346, 1.677, 1347,
          2.659, 1348, 1.677, 1349, 2.659, 1350, 2.659, 1351, 2.659, 1352,
          1.383, 1353, 3.304, 1354, 1.677, 1355, 4.098, 1356, 1.677, 1357,
          1.677, 1358, 1.677, 1359, 3.285, 1360, 1.677, 1361, 1.677, 1362,
          1.677, 1363, 1.677, 1364, 1.677, 1365, 1.677, 1366, 1.677, 1367,
          1.677, 1368, 1.19, 1369, 1.677, 1370, 1.677, 1371, 1.19,
        ],
      ],
      [
        "title/interfaces/IDatePickerDropDownConfigs.html",
        [167, 0.169, 1211, 2.572],
      ],
      [
        "body/interfaces/IDatePickerDropDownConfigs.html",
        [
          0, 0.245, 3, 0.049, 4, 0.057, 8, 0.049, 9, 0.033, 12, 0.209, 13,
          0.313, 16, 0.115, 17, 0.115, 19, 0.115, 21, 0.114, 22, 0.237, 35,
          0.808, 43, 0.189, 54, 1.039, 58, 1.978, 67, 0.429, 73, 0.013, 74,
          0.173, 76, 1.043, 78, 0.95, 79, 1.646, 81, 0.31, 82, 1.683, 83, 1.236,
          85, 2.46, 86, 2.314, 88, 1.043, 107, 1.047, 113, 0.881, 138, 1.522,
          148, 0.161, 150, 0.35, 153, 0.057, 156, 1.086, 167, 0.221, 168, 0.429,
          171, 0.184, 172, 0.057, 173, 1.362, 174, 0.267, 175, 0.565, 188,
          1.246, 201, 2.7, 214, 1.809, 228, 0.491, 241, 0.151, 242, 0.151, 257,
          0.722, 258, 1.047, 286, 0.772, 309, 0.006, 310, 0.006, 323, 0.612,
          338, 1.043, 339, 1.842, 351, 1.437, 352, 0.897, 353, 1.132, 363, 2.2,
          369, 0.525, 370, 0.525, 384, 0.925, 430, 1.573, 444, 0.973, 446, 1.57,
          471, 1.043, 490, 1.054, 491, 0.459, 492, 0.459, 494, 0.525, 495,
          0.525, 496, 0.808, 497, 0.808, 521, 1.72, 534, 1.523, 554, 0.66, 574,
          2.395, 584, 1.086, 627, 0.911, 628, 1.397, 631, 1.411, 645, 0.754,
          648, 0.966, 649, 0.966, 650, 1.519, 651, 0.966, 652, 1.519, 653,
          0.866, 657, 0.966, 658, 1.043, 661, 1.296, 662, 0.966, 665, 0.931,
          674, 2.562, 684, 2.455, 685, 2.04, 692, 1.64, 694, 1.296, 696, 1.296,
          697, 1.296, 701, 1.043, 709, 1.519, 715, 1.27, 716, 2.858, 717, 0.866,
          723, 0.706, 724, 2.075, 725, 0.866, 726, 0.866, 727, 1.362, 728,
          1.362, 729, 1.27, 730, 0.966, 731, 1.362, 742, 1.362, 743, 1.362, 744,
          0.966, 753, 2.653, 754, 1.523, 757, 1.043, 762, 0.966, 763, 0.966,
          764, 0.966, 765, 1.919, 766, 1.877, 768, 1.519, 769, 0.966, 770,
          1.708, 771, 0.966, 772, 0.966, 778, 1.043, 779, 1.762, 780, 1.464,
          820, 2.038, 824, 2.128, 861, 1.296, 867, 2.395, 909, 1.437, 1024,
          1.523, 1030, 1.296, 1143, 2.395, 1144, 1.523, 1145, 1.437, 1146,
          1.523, 1147, 2.741, 1148, 2.741, 1149, 2.741, 1150, 2.96, 1151, 2.96,
          1152, 3.761, 1153, 1.623, 1154, 2.395, 1155, 1.623, 1156, 1.623, 1157,
          1.623, 1158, 1.623, 1159, 1.623, 1160, 1.623, 1161, 1.623, 1162,
          1.623, 1163, 1.623, 1164, 1.623, 1165, 1.623, 1166, 2.395, 1167,
          1.623, 1168, 1.623, 1169, 1.623, 1170, 1.623, 1171, 1.623, 1172,
          1.623, 1173, 1.623, 1174, 1.623, 1175, 1.623, 1176, 1.623, 1177,
          1.623, 1178, 1.623, 1179, 2.395, 1180, 1.623, 1181, 2.96, 1182, 1.623,
          1183, 3.355, 1184, 1.623, 1185, 1.523, 1186, 4.318, 1187, 5.265, 1188,
          5.449, 1189, 1.523, 1190, 1.623, 1191, 2.552, 1192, 1.623, 1193,
          2.395, 1194, 1.623, 1195, 2.395, 1196, 1.623, 1197, 2.395, 1198,
          2.395, 1199, 2.395, 1200, 1.623, 1201, 2.395, 1202, 1.623, 1203,
          3.648, 1204, 3.154, 1205, 3.648, 1206, 1.623, 1207, 1.743, 1208,
          1.743, 1209, 1.743, 1210, 1.743, 1211, 2.96, 1212, 2.793, 1213, 1.743,
          1214, 4.175, 1215, 2.741, 1216, 1.743, 1217, 2.793, 1218, 1.743, 1219,
          1.743, 1220, 1.743, 1221, 1.437, 1222, 1.743, 1223, 1.743, 1224,
          2.741, 1225, 2.027, 1226, 1.437, 1227, 1.743, 1228, 2.741, 1229,
          2.741, 1230, 2.741, 1231, 2.741, 1232, 2.741, 1233, 3.387, 1234,
          2.741, 1235, 3.84, 1236, 2.741, 1237, 1.743, 1238, 1.743, 1239, 1.743,
          1240, 1.743, 1241, 1.743, 1242, 1.743, 1243, 1.743, 1244, 1.743, 1245,
          1.743, 1246, 1.743, 1247, 1.743, 1248, 1.743, 1249, 1.743, 1250,
          1.743, 1251, 1.743, 1252, 1.743, 1253, 1.743, 1254, 1.743, 1255,
          1.743, 1256, 2.741, 1257, 2.741, 1258, 1.362, 1259, 1.743, 1260,
          1.743, 1261, 3.755, 1262, 3.84, 1263, 2.741, 1264, 1.743, 1265, 1.437,
          1266, 3.387, 1267, 2.741, 1268, 1.743, 1269, 1.743, 1270, 1.743, 1271,
          1.743, 1272, 4.433, 1273, 3.387, 1274, 2.741, 1275, 1.743, 1276,
          1.743, 1277, 1.743, 1278, 1.858, 1279, 1.743, 1280, 1.743, 1281,
          1.743, 1282, 1.743, 1283, 2.741, 1284, 2.741, 1285, 2.741, 1286,
          2.395, 1287, 2.395, 1288, 1.743, 1289, 3.84, 1290, 1.743, 1291, 3.84,
          1292, 1.743, 1293, 3.84, 1294, 1.743, 1295, 2.741, 1296, 2.741, 1297,
          2.741, 1298, 1.743, 1299, 1.743, 1300, 1.743, 1301, 1.743, 1302,
          1.523, 1303, 1.743, 1304, 1.743, 1305, 1.743, 1306, 1.743, 1307,
          1.743, 1308, 1.743, 1309, 1.743, 1310, 2.741, 1311, 1.437, 1312,
          1.743, 1313, 1.743, 1314, 3.387, 1315, 1.743, 1316, 1.743, 1317,
          2.552, 1318, 1.743, 1319, 1.743, 1320, 1.743, 1321, 1.743, 1322,
          1.623, 1323, 2.741, 1324, 1.437, 1325, 1.743, 1326, 1.743, 1327,
          1.743, 1328, 1.743, 1329, 3.84, 1330, 2.741, 1331, 2.741, 1332, 2.741,
          1333, 2.741, 1334, 2.741, 1335, 2.741, 1336, 1.743, 1337, 1.743, 1338,
          1.743, 1339, 1.437, 1340, 3.84, 1341, 1.743, 1342, 1.743, 1343, 2.741,
          1344, 4.433, 1345, 3.387, 1346, 1.743, 1347, 2.741, 1348, 1.743, 1349,
          2.741, 1350, 2.741, 1351, 2.741, 1352, 1.437, 1353, 3.387, 1354,
          1.743, 1355, 4.175, 1356, 1.743, 1357, 1.743, 1358, 1.743, 1359,
          3.355, 1360, 1.743, 1361, 1.743, 1362, 1.743, 1363, 1.743, 1364,
          1.743, 1365, 1.743, 1366, 1.743, 1367, 1.743, 1368, 1.236, 1369,
          1.743, 1370, 1.743, 1371, 1.236,
        ],
      ],
      [
        "title/interfaces/IDatePickerErrorMessages.html",
        [167, 0.169, 1150, 2.572],
      ],
      [
        "body/interfaces/IDatePickerErrorMessages.html",
        [
          0, 0.244, 3, 0.048, 4, 0.056, 8, 0.048, 9, 0.033, 12, 0.208, 13,
          0.311, 16, 0.114, 17, 0.114, 19, 0.114, 21, 0.114, 22, 0.236, 27,
          0.466, 35, 0.802, 43, 0.188, 54, 1.033, 58, 1.97, 67, 0.426, 73,
          0.013, 74, 0.196, 76, 1.041, 78, 0.949, 79, 1.641, 81, 0.31, 82,
          1.675, 83, 1.234, 85, 2.456, 86, 2.306, 88, 1.035, 107, 1.042, 113,
          0.878, 138, 1.518, 148, 0.16, 150, 0.35, 153, 0.056, 156, 1.078, 167,
          0.22, 168, 0.426, 171, 0.184, 172, 0.056, 173, 1.352, 174, 0.265, 175,
          0.562, 188, 1.244, 201, 2.695, 214, 1.8, 228, 0.488, 241, 0.15, 242,
          0.15, 257, 0.718, 258, 1.042, 286, 0.768, 309, 0.006, 310, 0.006, 323,
          0.61, 338, 1.035, 339, 1.835, 351, 1.427, 352, 0.891, 353, 1.124, 363,
          2.189, 369, 0.522, 370, 0.522, 384, 0.922, 430, 1.568, 444, 0.967,
          446, 1.562, 471, 1.035, 490, 1.049, 491, 0.456, 492, 0.456, 494,
          0.521, 495, 0.521, 496, 0.802, 497, 0.802, 521, 1.713, 534, 1.512,
          554, 0.656, 574, 2.381, 584, 1.078, 627, 0.906, 628, 1.393, 631,
          1.403, 645, 0.749, 648, 0.959, 649, 0.959, 650, 1.51, 651, 0.959, 652,
          1.51, 653, 0.86, 657, 0.959, 658, 1.035, 661, 1.286, 662, 0.959, 665,
          0.924, 674, 2.557, 684, 2.45, 685, 2.036, 692, 1.631, 694, 1.286, 696,
          1.286, 697, 1.286, 701, 1.035, 709, 1.51, 715, 1.263, 716, 2.852, 717,
          0.86, 723, 0.7, 724, 2.637, 725, 0.86, 726, 0.86, 727, 1.354, 728,
          1.354, 729, 1.263, 730, 0.959, 731, 1.354, 742, 1.354, 743, 1.354,
          744, 0.959, 753, 2.645, 754, 1.512, 757, 1.035, 762, 0.959, 763,
          0.959, 764, 0.959, 765, 1.913, 766, 1.868, 768, 1.51, 769, 0.959, 770,
          1.698, 771, 0.959, 772, 0.959, 778, 1.035, 779, 1.757, 780, 1.455,
          820, 2.026, 824, 2.12, 861, 1.286, 867, 2.381, 909, 1.427, 1024,
          1.512, 1030, 1.286, 1143, 2.381, 1144, 1.512, 1145, 1.427, 1146,
          1.512, 1147, 2.725, 1148, 2.725, 1149, 2.725, 1150, 3.342, 1151,
          2.946, 1152, 2.844, 1153, 1.611, 1154, 2.381, 1155, 1.611, 1156,
          1.611, 1157, 1.611, 1158, 1.611, 1159, 1.611, 1160, 1.611, 1161,
          1.611, 1162, 1.611, 1163, 1.611, 1164, 1.611, 1165, 1.611, 1166,
          2.381, 1167, 1.611, 1168, 1.611, 1169, 1.611, 1170, 1.611, 1171,
          1.611, 1172, 1.611, 1173, 1.611, 1174, 1.611, 1175, 1.611, 1176,
          1.611, 1177, 1.611, 1178, 1.611, 1179, 2.381, 1180, 1.611, 1181,
          2.946, 1182, 1.611, 1183, 3.342, 1184, 1.611, 1185, 1.512, 1186,
          4.306, 1187, 5.259, 1188, 5.445, 1189, 1.512, 1190, 1.611, 1191,
          2.537, 1192, 1.611, 1193, 2.381, 1194, 1.611, 1195, 2.381, 1196,
          1.611, 1197, 2.381, 1198, 2.381, 1199, 2.381, 1200, 1.611, 1201,
          2.381, 1202, 1.611, 1203, 3.635, 1204, 3.139, 1205, 3.635, 1206,
          1.611, 1207, 1.73, 1208, 1.73, 1209, 1.73, 1210, 3.824, 1211, 2.381,
          1212, 2.78, 1213, 1.73, 1214, 4.16, 1215, 2.725, 1216, 1.73, 1217,
          2.78, 1218, 1.73, 1219, 1.73, 1220, 1.73, 1221, 1.427, 1222, 1.73,
          1223, 1.73, 1224, 2.725, 1225, 2.018, 1226, 1.427, 1227, 1.73, 1228,
          2.725, 1229, 2.725, 1230, 2.725, 1231, 2.725, 1232, 2.725, 1233,
          3.371, 1234, 2.725, 1235, 3.824, 1236, 2.725, 1237, 1.73, 1238, 1.73,
          1239, 1.73, 1240, 1.73, 1241, 1.73, 1242, 1.73, 1243, 1.73, 1244,
          1.73, 1245, 1.73, 1246, 1.73, 1247, 1.73, 1248, 1.73, 1249, 1.73,
          1250, 1.73, 1251, 1.73, 1252, 1.73, 1253, 1.73, 1254, 1.73, 1255,
          1.73, 1256, 2.725, 1257, 2.725, 1258, 1.352, 1259, 1.73, 1260, 1.73,
          1261, 3.746, 1262, 3.824, 1263, 2.725, 1264, 1.73, 1265, 1.427, 1266,
          3.371, 1267, 2.725, 1268, 1.73, 1269, 1.73, 1270, 1.73, 1271, 1.73,
          1272, 4.419, 1273, 3.371, 1274, 2.725, 1275, 1.73, 1276, 1.73, 1277,
          1.73, 1278, 1.848, 1279, 1.73, 1280, 1.73, 1281, 1.73, 1282, 1.73,
          1283, 2.725, 1284, 2.725, 1285, 2.725, 1286, 2.381, 1287, 2.381, 1288,
          1.73, 1289, 3.824, 1290, 1.73, 1291, 3.824, 1292, 1.73, 1293, 3.824,
          1294, 1.73, 1295, 2.725, 1296, 2.725, 1297, 2.725, 1298, 1.73, 1299,
          1.73, 1300, 1.73, 1301, 1.73, 1302, 1.512, 1303, 1.73, 1304, 1.73,
          1305, 1.73, 1306, 1.73, 1307, 1.73, 1308, 1.73, 1309, 1.73, 1310,
          2.725, 1311, 1.427, 1312, 1.73, 1313, 1.73, 1314, 3.371, 1315, 1.73,
          1316, 1.73, 1317, 2.537, 1318, 1.73, 1319, 1.73, 1320, 1.73, 1321,
          1.73, 1322, 1.611, 1323, 2.725, 1324, 1.427, 1325, 1.73, 1326, 1.73,
          1327, 1.73, 1328, 1.73, 1329, 3.824, 1330, 2.725, 1331, 2.725, 1332,
          2.725, 1333, 2.725, 1334, 2.725, 1335, 2.725, 1336, 1.73, 1337, 1.73,
          1338, 1.73, 1339, 1.427, 1340, 3.824, 1341, 1.73, 1342, 1.73, 1343,
          2.725, 1344, 4.419, 1345, 3.371, 1346, 1.73, 1347, 2.725, 1348, 1.73,
          1349, 2.725, 1350, 2.725, 1351, 2.725, 1352, 1.427, 1353, 3.371, 1354,
          1.73, 1355, 4.16, 1356, 1.73, 1357, 1.73, 1358, 1.73, 1359, 3.342,
          1360, 1.73, 1361, 1.73, 1362, 1.73, 1363, 1.73, 1364, 1.73, 1365,
          1.73, 1366, 1.73, 1367, 1.73, 1368, 1.227, 1369, 1.73, 1370, 1.73,
          1371, 1.227,
        ],
      ],
      [
        "title/interfaces/IDatePickerUnknownDateToggleConfig.html",
        [167, 0.169, 1151, 2.572],
      ],
      [
        "body/interfaces/IDatePickerUnknownDateToggleConfig.html",
        [
          0, 0.245, 3, 0.049, 4, 0.056, 8, 0.049, 9, 0.033, 12, 0.209, 13,
          0.312, 16, 0.114, 17, 0.114, 19, 0.114, 21, 0.114, 22, 0.237, 27,
          0.431, 35, 0.805, 43, 0.188, 54, 1.036, 58, 1.974, 67, 0.428, 73,
          0.013, 74, 0.173, 76, 1.132, 78, 0.95, 79, 1.644, 81, 0.31, 82, 1.68,
          83, 1.235, 85, 2.458, 86, 2.311, 88, 1.04, 107, 1.045, 113, 0.88, 138,
          1.521, 148, 0.16, 150, 0.35, 153, 0.056, 156, 1.083, 167, 0.22, 168,
          0.428, 171, 0.184, 172, 0.056, 173, 1.358, 174, 0.266, 175, 0.564,
          188, 1.245, 201, 2.698, 214, 1.805, 228, 0.49, 241, 0.15, 242, 0.15,
          257, 0.721, 258, 1.045, 286, 0.771, 309, 0.006, 310, 0.006, 323,
          0.611, 338, 1.04, 339, 1.839, 351, 1.433, 352, 0.895, 353, 1.128, 363,
          2.196, 369, 0.524, 370, 0.524, 384, 0.924, 430, 1.571, 444, 0.97, 446,
          1.567, 471, 1.04, 490, 1.052, 491, 0.458, 492, 0.458, 494, 0.523, 495,
          0.523, 496, 0.805, 497, 0.805, 521, 1.717, 534, 1.518, 554, 0.658,
          574, 2.389, 584, 1.083, 627, 0.909, 628, 1.395, 631, 1.408, 645,
          0.752, 648, 0.963, 649, 0.963, 650, 1.515, 651, 0.963, 652, 1.515,
          653, 0.863, 657, 0.963, 658, 1.04, 661, 1.292, 662, 0.963, 665, 0.928,
          674, 2.56, 684, 2.453, 685, 2.038, 692, 1.637, 694, 1.292, 696, 1.292,
          697, 1.292, 701, 1.04, 709, 1.515, 715, 1.267, 716, 2.856, 717, 0.863,
          723, 0.703, 724, 2.072, 725, 0.863, 726, 0.863, 727, 1.359, 728,
          1.359, 729, 1.267, 730, 0.963, 731, 1.359, 742, 1.359, 743, 1.359,
          744, 0.963, 753, 2.65, 754, 1.518, 757, 1.04, 762, 0.963, 763, 0.963,
          764, 0.963, 765, 1.917, 766, 1.874, 768, 1.515, 769, 0.963, 770,
          1.704, 771, 0.963, 772, 0.963, 778, 1.04, 779, 1.76, 780, 1.46, 820,
          2.033, 824, 2.125, 861, 1.292, 867, 2.389, 909, 1.433, 1024, 1.518,
          1030, 1.292, 1143, 2.389, 1144, 1.518, 1145, 1.433, 1146, 1.518, 1147,
          2.734, 1148, 2.734, 1149, 2.734, 1150, 2.954, 1151, 3.35, 1152, 2.851,
          1153, 1.618, 1154, 2.389, 1155, 1.618, 1156, 1.618, 1157, 1.618, 1158,
          1.618, 1159, 1.618, 1160, 1.618, 1161, 1.618, 1162, 1.618, 1163,
          1.618, 1164, 1.618, 1165, 1.618, 1166, 2.389, 1167, 1.618, 1168,
          1.618, 1169, 1.618, 1170, 1.618, 1171, 1.618, 1172, 1.618, 1173,
          1.618, 1174, 1.618, 1175, 1.618, 1176, 1.618, 1177, 1.618, 1178,
          1.618, 1179, 2.389, 1180, 1.618, 1181, 2.954, 1182, 1.618, 1183, 3.35,
          1184, 1.618, 1185, 1.518, 1186, 3.57, 1187, 5.155, 1188, 5.391, 1189,
          1.518, 1190, 1.618, 1191, 2.546, 1192, 1.618, 1193, 2.389, 1194,
          1.618, 1195, 2.389, 1196, 1.618, 1197, 2.389, 1198, 2.389, 1199,
          2.389, 1200, 1.618, 1201, 2.389, 1202, 1.618, 1203, 3.643, 1204,
          3.148, 1205, 3.643, 1206, 1.618, 1207, 3.834, 1208, 3.834, 1209,
          3.834, 1210, 1.737, 1211, 2.389, 1212, 2.788, 1213, 1.737, 1214,
          4.169, 1215, 2.734, 1216, 1.737, 1217, 2.788, 1218, 1.737, 1219,
          1.737, 1220, 1.737, 1221, 1.433, 1222, 1.737, 1223, 1.737, 1224,
          2.734, 1225, 2.023, 1226, 1.433, 1227, 1.737, 1228, 2.734, 1229,
          2.734, 1230, 2.734, 1231, 2.734, 1232, 2.734, 1233, 3.381, 1234,
          2.734, 1235, 3.834, 1236, 2.734, 1237, 1.737, 1238, 1.737, 1239,
          1.737, 1240, 1.737, 1241, 1.737, 1242, 1.737, 1243, 1.737, 1244,
          1.737, 1245, 1.737, 1246, 1.737, 1247, 1.737, 1248, 1.737, 1249,
          1.737, 1250, 1.737, 1251, 1.737, 1252, 1.737, 1253, 1.737, 1254,
          1.737, 1255, 1.737, 1256, 2.734, 1257, 2.734, 1258, 1.358, 1259,
          1.737, 1260, 1.737, 1261, 3.752, 1262, 3.834, 1263, 2.734, 1264,
          1.737, 1265, 1.433, 1266, 3.381, 1267, 2.734, 1268, 1.737, 1269,
          1.737, 1270, 1.737, 1271, 1.737, 1272, 4.427, 1273, 3.381, 1274,
          2.734, 1275, 1.737, 1276, 1.737, 1277, 1.737, 1278, 1.854, 1279,
          1.737, 1280, 1.737, 1281, 1.737, 1282, 1.737, 1283, 2.734, 1284,
          2.734, 1285, 2.734, 1286, 2.389, 1287, 2.389, 1288, 1.737, 1289,
          3.834, 1290, 1.737, 1291, 3.834, 1292, 1.737, 1293, 3.834, 1294,
          1.737, 1295, 2.734, 1296, 2.734, 1297, 2.734, 1298, 1.737, 1299,
          1.737, 1300, 1.737, 1301, 1.737, 1302, 1.518, 1303, 1.737, 1304,
          1.737, 1305, 1.737, 1306, 1.737, 1307, 1.737, 1308, 1.737, 1309,
          1.737, 1310, 2.734, 1311, 1.433, 1312, 1.737, 1313, 1.737, 1314,
          3.381, 1315, 1.737, 1316, 1.737, 1317, 2.546, 1318, 1.737, 1319,
          1.737, 1320, 1.737, 1321, 1.737, 1322, 1.618, 1323, 2.734, 1324,
          1.433, 1325, 1.737, 1326, 1.737, 1327, 1.737, 1328, 1.737, 1329,
          3.834, 1330, 2.734, 1331, 2.734, 1332, 2.734, 1333, 2.734, 1334,
          2.734, 1335, 2.734, 1336, 1.737, 1337, 1.737, 1338, 1.737, 1339,
          1.433, 1340, 3.834, 1341, 1.737, 1342, 1.737, 1343, 2.734, 1344,
          4.427, 1345, 3.381, 1346, 1.737, 1347, 2.734, 1348, 1.737, 1349,
          2.734, 1350, 2.734, 1351, 2.734, 1352, 1.433, 1353, 3.381, 1354,
          1.737, 1355, 4.169, 1356, 1.737, 1357, 1.737, 1358, 1.737, 1359, 3.35,
          1360, 1.737, 1361, 1.737, 1362, 1.737, 1363, 1.737, 1364, 1.737, 1365,
          1.737, 1366, 1.737, 1367, 1.737, 1368, 1.232, 1369, 1.737, 1370,
          1.737, 1371, 1.232,
        ],
      ],
      ["title/interfaces/IDropdownConfig.html", [167, 0.169, 830, 2.943]],
      [
        "body/interfaces/IDropdownConfig.html",
        [
          0, 0.35, 3, 0.12, 4, 0.105, 8, 0.091, 9, 0.062, 12, 0.389, 13, 0.491,
          16, 0.213, 17, 0.213, 19, 0.213, 21, 0.179, 22, 0.372, 27, 0.583, 43,
          0.351, 58, 2.216, 73, 0.013, 74, 0.282, 76, 1.16, 77, 0.944, 78,
          0.793, 79, 1.828, 81, 0.332, 86, 1.795, 97, 3.052, 138, 1.112, 148,
          0.174, 150, 0.376, 153, 0.105, 167, 0.186, 168, 0.797, 171, 0.14, 172,
          0.105, 174, 0.315, 186, 3.238, 241, 0.28, 242, 0.28, 260, 0.913, 267,
          1.773, 277, 1.231, 309, 0.009, 310, 0.009, 323, 0.777, 340, 3.209,
          350, 3.653, 352, 1.668, 353, 2.103, 369, 0.986, 370, 0.986, 384,
          1.188, 490, 1.504, 491, 0.853, 492, 0.853, 521, 1.45, 554, 1.832, 584,
          2.018, 599, 2.572, 617, 4.501, 627, 1.43, 628, 1.296, 629, 3.549, 630,
          3.986, 631, 2.216, 636, 2.681, 637, 1.938, 685, 2.032, 687, 1.938,
          753, 2.576, 765, 2.092, 818, 3.518, 819, 3.518, 820, 2.408, 821,
          3.891, 822, 3.891, 823, 3.891, 824, 1.795, 825, 3.891, 826, 3.891,
          828, 4.992, 830, 4.833, 838, 5.808, 839, 2.408, 841, 3.891, 843, 5.25,
          844, 3.891, 845, 5.171, 847, 2.83, 848, 5.171, 849, 3.891, 850, 3.891,
          851, 3.891, 852, 5.171, 853, 3.891, 854, 3.891, 855, 3.015, 856,
          3.891, 857, 3.986, 859, 4.685, 860, 3.891, 861, 2.408, 865, 3.518,
          866, 3.518, 867, 3.76, 868, 5.171, 869, 5.808, 870, 3.891, 871, 3.891,
          872, 5.171, 873, 3.891, 874, 3.891, 875, 3.891, 876, 2.83, 877, 3.238,
          878, 3.891, 879, 3.891, 880, 5.808, 881, 5.171, 882, 4.303, 883,
          5.171, 884, 3.891, 885, 3.891, 886, 3.891, 887, 3.891, 888, 3.891,
          889, 3.891, 890, 3.891,
        ],
      ],
      ["title/interfaces/IErrorComponentConfig.html", [167, 0.169, 897, 2.741]],
      [
        "body/interfaces/IErrorComponentConfig.html",
        [
          0, 0.385, 3, 0.111, 4, 0.129, 8, 0.111, 9, 0.076, 12, 0.476, 13, 0.56,
          16, 0.261, 17, 0.261, 19, 0.261, 21, 0.166, 22, 0.424, 27, 0.541, 43,
          0.431, 54, 1.504, 67, 0.977, 73, 0.013, 74, 0.272, 81, 0.338, 113,
          0.789, 148, 0.159, 150, 0.383, 153, 0.129, 167, 0.282, 168, 0.977,
          171, 0.173, 172, 0.173, 174, 0.386, 241, 0.343, 242, 0.343, 262,
          1.082, 277, 1.354, 309, 0.01, 310, 0.01, 323, 0.803, 345, 3.055, 369,
          0.939, 370, 0.939, 384, 1.266, 415, 4.16, 422, 3.325, 430, 1.409, 468,
          2.952, 469, 3.646, 490, 1.656, 491, 1.046, 492, 1.046, 521, 1.777,
          584, 2.473, 627, 1.63, 628, 1.195, 631, 2.525, 640, 3.833, 641, 2.815,
          645, 1.718, 892, 3.969, 893, 4.311, 894, 4.311, 895, 6.317, 897,
          4.954, 900, 4.709, 906, 3.468, 907, 4.311, 908, 2.2, 909, 3.273, 910,
          5.326, 911, 5.326, 912, 4.311,
        ],
      ],
      ["title/interfaces/IErrorIconConfig.html", [167, 0.169, 900, 2.428]],
      [
        "body/interfaces/IErrorIconConfig.html",
        [
          0, 0.388, 3, 0.113, 4, 0.131, 8, 0.113, 9, 0.077, 12, 0.483, 13,
          0.565, 16, 0.265, 17, 0.265, 19, 0.265, 21, 0.168, 22, 0.428, 27,
          0.481, 43, 0.436, 54, 1.525, 67, 0.99, 73, 0.013, 74, 0.253, 81,
          0.339, 113, 0.8, 148, 0.161, 150, 0.384, 153, 0.131, 167, 0.284, 168,
          0.99, 171, 0.174, 172, 0.19, 174, 0.392, 241, 0.348, 242, 0.348, 262,
          1.097, 277, 1.282, 309, 0.01, 310, 0.01, 323, 0.739, 345, 3.571, 369,
          0.947, 370, 0.947, 384, 1.096, 415, 4.185, 422, 3.353, 430, 1.428,
          468, 2.992, 469, 3.677, 490, 1.666, 491, 1.06, 492, 1.06, 521, 1.802,
          584, 2.507, 627, 1.643, 628, 1.212, 631, 2.546, 640, 3.866, 641,
          2.854, 645, 1.742, 892, 4.023, 893, 4.37, 894, 4.37, 895, 5.814, 897,
          4.604, 900, 4.605, 906, 3.516, 907, 4.37, 908, 2.23, 909, 3.318, 910,
          5.371, 911, 5.371, 912, 4.37,
        ],
      ],
      ["title/interfaces/IFlyoutConfig.html", [167, 0.169, 859, 2.572]],
      [
        "body/interfaces/IFlyoutConfig.html",
        [
          0, 0.341, 3, 0.086, 4, 0.1, 8, 0.086, 9, 0.059, 12, 0.37, 13, 0.476,
          16, 0.203, 17, 0.203, 19, 0.203, 21, 0.239, 22, 0.36, 27, 0.55, 43,
          0.334, 58, 2.716, 63, 2.694, 72, 1.168, 73, 0.013, 74, 0.293, 76,
          1.041, 78, 0.768, 79, 1.972, 81, 0.295, 85, 2.434, 86, 2.308, 88,
          1.845, 94, 1.631, 97, 3.581, 103, 4.715, 138, 1.734, 148, 0.135, 149,
          2.187, 150, 0.366, 151, 1.527, 153, 0.1, 156, 1.921, 161, 3.083, 167,
          0.177, 168, 0.759, 171, 0.153, 172, 0.1, 174, 0.459, 175, 0.859, 203,
          3.083, 214, 2.697, 215, 3.097, 241, 0.267, 242, 0.267, 264, 0.869,
          267, 1.42, 309, 0.009, 310, 0.009, 323, 0.75, 356, 1.168, 369, 0.797,
          370, 0.797, 404, 2.871, 471, 1.845, 476, 2.41, 500, 3.083, 506, 3.083,
          543, 2.822, 554, 1.168, 599, 2.53, 627, 1.025, 628, 0.929, 636, 1.921,
          637, 1.845, 653, 2.509, 687, 1.845, 703, 4.164, 787, 3.349, 824,
          2.798, 839, 3.506, 847, 2.694, 859, 4.12, 876, 2.694, 877, 3.083, 914,
          3.083, 915, 3.705, 916, 5.004, 917, 3.705, 918, 5.004, 919, 3.705,
          925, 6.337, 926, 3.705, 933, 4.608, 945, 3.705, 947, 3.705, 949,
          3.705, 950, 3.705, 951, 3.705, 952, 3.705, 953, 3.705, 954, 3.705,
          955, 3.705, 958, 5.666, 959, 3.705, 962, 3.705, 963, 2.543, 964,
          3.349, 965, 5.122, 966, 5.122, 967, 3.083, 968, 3.083, 969, 3.705,
          970, 4.702, 971, 3.705, 972, 3.705, 973, 5.004, 974, 3.705, 975,
          3.705, 976, 2.41, 977, 5.666, 978, 6.53, 979, 3.705, 980, 3.705, 981,
          5.004, 982, 6.337, 983, 5.004, 984, 3.705, 985, 3.705, 986, 3.705,
          987, 3.705, 988, 3.705, 989, 3.705, 990, 3.705, 991, 3.705, 992,
          5.004, 993, 3.705, 994, 5.004, 995, 3.705, 996, 3.705, 997, 3.705,
          998, 3.705, 999, 5.004, 1000, 3.349, 1001, 3.705, 1002, 2.694, 1003,
          3.705, 1004, 3.705, 1005, 3.705, 1006, 5.004, 1007, 3.705, 1008,
          3.705, 1009, 3.705, 1010, 3.705, 1011, 5.004, 1012, 3.705, 1013,
          3.705, 1014, 3.705, 1015, 5.004, 1016, 3.705, 1017, 2.41, 1018, 3.705,
          1019, 3.705, 1020, 3.705, 1021, 3.705, 1022, 5.004, 1023, 3.705, 1024,
          2.694, 1025, 3.705, 1026, 5.004, 1027, 3.705, 1028, 3.705, 1029,
          3.705, 1030, 2.293, 1031, 3.705, 1032, 3.705, 1033, 3.705, 1034,
          3.705, 1035, 3.705,
        ],
      ],
      ["title/interfaces/IFlyoutOptionConfig.html", [167, 0.169, 933, 2.572]],
      [
        "body/interfaces/IFlyoutOptionConfig.html",
        [
          0, 0.383, 3, 0.109, 4, 0.127, 8, 0.109, 9, 0.075, 12, 0.469, 13,
          0.555, 16, 0.257, 17, 0.257, 19, 0.257, 21, 0.163, 22, 0.42, 27,
          0.592, 43, 0.424, 67, 0.962, 73, 0.013, 74, 0.308, 76, 1.255, 78,
          1.048, 79, 1.387, 81, 0.329, 83, 1.269, 138, 1.342, 148, 0.127, 150,
          0.348, 153, 0.127, 167, 0.224, 168, 0.962, 171, 0.172, 172, 0.127,
          174, 0.38, 215, 2.906, 241, 0.338, 242, 0.338, 266, 1.101, 267, 1.463,
          309, 0.01, 310, 0.01, 323, 0.8, 356, 1.481, 369, 0.748, 370, 0.748,
          399, 3.444, 543, 2.339, 554, 1.481, 599, 2.652, 627, 1.299, 628,
          1.177, 654, 4.92, 685, 1.481, 820, 3.929, 824, 3.063, 839, 4.11, 933,
          4.617, 963, 3.223, 967, 3.908, 968, 3.908, 1036, 3.908, 1037, 3.908,
          1038, 4.696, 1040, 4.696, 1043, 5.275, 1044, 5.275, 1045, 6.641, 1046,
          4.696, 1047, 5.835,
        ],
      ],
      ["title/interfaces/IHiddenNavConfig.html", [167, 0.169, 1117, 2.741]],
      [
        "body/interfaces/IHiddenNavConfig.html",
        [
          0, 0.391, 3, 0.115, 4, 0.133, 8, 0.115, 9, 0.079, 13, 0.469, 16,
          0.271, 17, 0.271, 19, 0.271, 21, 0.171, 22, 0.433, 27, 0.487, 60,
          2.276, 73, 0.013, 74, 0.256, 81, 0.338, 148, 0.133, 149, 2.913, 150,
          0.33, 153, 0.133, 167, 0.288, 168, 1.011, 171, 0.176, 172, 0.133, 174,
          0.4, 188, 1.197, 214, 2.194, 241, 0.355, 242, 0.355, 273, 1.12, 274,
          1.559, 309, 0.01, 310, 0.01, 323, 0.81, 366, 3.396, 379, 2.365, 397,
          3.589, 454, 3.211, 501, 3.552, 908, 2.775, 1049, 2.913, 1109, 4.107,
          1110, 3.825, 1111, 4.107, 1112, 4.72, 1113, 4.462, 1115, 4.462, 1117,
          5.03, 1119, 4.462, 1122, 4.462, 1123, 4.462, 1124, 4.462, 1127, 5.236,
          1128, 6.108, 1129, 4.462, 1130, 4.462, 1131, 4.462, 1132, 4.462, 1133,
          3.054, 1134, 4.462, 1135, 4.462, 1136, 4.462, 1137, 5.439, 1138,
          4.462, 1139, 5.439, 1140, 4.462, 1141, 4.462,
        ],
      ],
      [
        "title/interfaces/IIconButtonComponentConfig.html",
        [167, 0.169, 338, 1.762],
      ],
      [
        "body/interfaces/IIconButtonComponentConfig.html",
        [
          0, 0.364, 3, 0.098, 4, 0.114, 8, 0.098, 9, 0.067, 12, 0.421, 13,
          0.518, 16, 0.231, 17, 0.231, 19, 0.231, 21, 0.146, 22, 0.392, 27,
          0.566, 43, 0.381, 73, 0.013, 74, 0.272, 76, 1.096, 81, 0.332, 83,
          1.041, 94, 1.776, 113, 0.697, 148, 0.147, 150, 0.383, 151, 1.663, 153,
          0.114, 167, 0.261, 168, 0.864, 171, 0.183, 172, 0.179, 174, 0.341,
          175, 0.724, 188, 1.005, 236, 1.321, 241, 0.304, 242, 0.304, 276,
          0.956, 277, 1.349, 309, 0.009, 310, 0.009, 323, 0.778, 338, 3.008,
          340, 3.432, 341, 3.373, 342, 3.951, 343, 2.609, 344, 2.893, 345, 3.31,
          346, 2.736, 350, 3.997, 352, 1.807, 356, 1.33, 359, 3.059, 367, 2.279,
          369, 1.017, 370, 1.017, 379, 3.244, 384, 1.219, 491, 0.925, 492,
          0.925, 501, 2.488, 521, 1.571, 597, 3.267, 598, 3.508, 599, 2.64, 627,
          1.508, 628, 1.366, 629, 3.74, 630, 4.145, 631, 2.336, 634, 4.223, 635,
          3.267, 636, 2.826, 637, 2.1, 640, 3.929, 641, 3.902, 906, 3.066, 1372,
          3.066, 1373, 3.066, 1374, 4.947, 1375, 5.313, 1376, 4.223, 1377,
          3.508, 1378, 4.223, 1379, 3.508, 1380, 3.811, 1381, 3.811, 1382,
          3.811, 1383, 3.811, 1384, 4.926, 1385, 5.459, 1386, 3.811, 1387,
          3.811,
        ],
      ],
      ["title/interfaces/IIconButtonIconConfig.html", [167, 0.169, 350, 2.088]],
      [
        "body/interfaces/IIconButtonIconConfig.html",
        [
          0, 0.369, 3, 0.101, 4, 0.117, 8, 0.101, 9, 0.069, 12, 0.432, 13,
          0.527, 16, 0.237, 17, 0.237, 19, 0.237, 21, 0.15, 22, 0.399, 27,
          0.449, 43, 0.391, 73, 0.013, 74, 0.236, 76, 0.951, 81, 0.333, 83,
          1.059, 94, 1.807, 113, 0.716, 148, 0.15, 150, 0.385, 151, 1.691, 153,
          0.117, 167, 0.265, 168, 0.887, 171, 0.184, 172, 0.19, 174, 0.35, 175,
          0.743, 188, 1.022, 236, 1.344, 241, 0.312, 242, 0.312, 276, 0.982,
          277, 1.303, 309, 0.01, 310, 0.01, 323, 0.703, 338, 2.761, 340, 3.212,
          341, 3.43, 342, 3.99, 343, 2.678, 344, 2.97, 345, 3.595, 346, 2.763,
          350, 3.934, 352, 1.855, 356, 1.365, 359, 3.089, 367, 2.339, 369,
          1.027, 370, 1.027, 379, 2.929, 384, 1.022, 491, 0.949, 492, 0.949,
          501, 2.554, 521, 1.613, 597, 3.353, 598, 3.601, 599, 2.213, 627,
          1.533, 628, 1.389, 629, 3.804, 630, 4.197, 631, 2.375, 634, 4.295,
          635, 3.353, 636, 2.874, 637, 2.156, 640, 3.978, 641, 3.934, 906,
          3.147, 1372, 3.147, 1373, 3.147, 1374, 4.996, 1375, 5.365, 1376,
          4.295, 1377, 3.601, 1378, 4.295, 1379, 3.601, 1380, 3.912, 1381,
          3.912, 1382, 3.912, 1383, 3.912, 1384, 5.01, 1385, 5.527, 1386, 3.912,
          1387, 3.912,
        ],
      ],
      ["title/interfaces/IIconConfig.html", [167, 0.169, 1388, 2.943]],
      [
        "body/interfaces/IIconConfig.html",
        [
          0, 0.399, 3, 0.12, 4, 0.139, 8, 0.12, 9, 0.082, 12, 0.515, 16, 0.283,
          17, 0.283, 19, 0.283, 21, 0.179, 22, 0.445, 27, 0.555, 73, 0.013, 74,
          0.263, 81, 0.338, 148, 0.139, 150, 0.376, 152, 3.355, 153, 0.139, 167,
          0.247, 168, 1.057, 171, 0.167, 172, 0.139, 173, 3.355, 174, 0.418,
          188, 1.14, 241, 0.371, 242, 0.371, 277, 0.986, 278, 1.21, 309, 0.011,
          310, 0.011, 379, 3.36, 422, 3.487, 468, 3.192, 469, 3.824, 476, 4.02,
          535, 4.292, 1388, 5.506, 1389, 4.662, 1390, 7.013, 1391, 5.157, 1392,
          5.157, 1393, 5.157, 1394, 5.157, 1395, 5.157, 1396, 5.157, 1397,
          5.157, 1398, 6.179, 1399, 5.157,
        ],
      ],
      ["title/interfaces/IIndicatorConfig.html", [167, 0.169, 1400, 2.943]],
      [
        "body/interfaces/IIndicatorConfig.html",
        [
          0, 0.357, 3, 0.094, 4, 0.109, 8, 0.094, 9, 0.064, 12, 0.403, 13,
          0.504, 16, 0.221, 17, 0.221, 19, 0.221, 21, 0.14, 22, 0.382, 27, 0.58,
          43, 0.365, 73, 0.013, 74, 0.295, 76, 0.91, 78, 0.62, 81, 0.329, 83,
          1.131, 85, 2.494, 148, 0.143, 150, 0.291, 152, 2.628, 153, 0.109, 167,
          0.193, 168, 0.828, 171, 0.184, 172, 0.109, 174, 0.327, 214, 2.356,
          277, 1.2, 280, 0.947, 309, 0.009, 310, 0.009, 320, 2.772, 340, 3.249,
          346, 2.272, 356, 2.057, 359, 2.539, 360, 2.991, 361, 3.854, 369,
          1.067, 370, 1.087, 379, 3.009, 381, 4.107, 384, 1.159, 399, 2.384,
          422, 2.991, 423, 4.411, 430, 1.747, 468, 2.5, 469, 3.28, 476, 3.448,
          490, 1.373, 491, 0.886, 492, 0.886, 516, 3.361, 543, 2.012, 577,
          3.361, 584, 2.748, 641, 2.384, 684, 1.67, 685, 2.151, 765, 1.909, 857,
          4.594, 1400, 4.923, 1401, 3.361, 1402, 6.05, 1403, 6.522, 1404, 4.791,
          1405, 3.651, 1406, 4.791, 1407, 4.791, 1408, 4.791, 1409, 4.791, 1410,
          5.348, 1411, 3.638, 1412, 4.791, 1413, 4.791, 1414, 3.651, 1415,
          3.651, 1416, 3.651, 1417, 3.651, 1418, 3.651, 1419, 3.651, 1420,
          3.651, 1421, 3.651, 1422, 4.039, 1423, 4.039, 1424, 2.628, 1425, 3.13,
          1426, 3.13, 1427, 4.039, 1428, 4.039, 1429, 4.039, 1430, 4.039, 1431,
          5.3, 1432, 4.039, 1433, 4.039, 1434, 5.3, 1435, 5.3, 1436, 5.3, 1437,
          5.3, 1438, 5.916, 1439, 4.039, 1440, 5.3, 1441, 4.039, 1442, 4.039,
          1443, 4.039, 1444, 4.039, 1445, 4.039, 1446, 5.3, 1447, 4.039, 1448,
          4.039, 1449, 4.039, 1450, 4.039, 1451, 4.039, 1452, 5.3, 1453, 4.039,
        ],
      ],
      [
        "title/interfaces/IInputComponentConfig.html",
        [167, 0.169, 1454, 2.943],
      ],
      [
        "body/interfaces/IInputComponentConfig.html",
        [
          0, 0.344, 3, 0.065, 4, 0.076, 8, 0.065, 9, 0.044, 12, 0.279, 13, 0.39,
          16, 0.153, 17, 0.153, 19, 0.153, 21, 0.097, 22, 0.386, 27, 0.571, 28,
          0.931, 35, 1.874, 43, 0.252, 53, 0.773, 54, 1.689, 57, 0.724, 58,
          1.198, 67, 0.573, 73, 0.013, 74, 0.296, 76, 1.084, 77, 0.678, 78,
          0.821, 79, 1.819, 81, 0.325, 82, 2.214, 83, 1.253, 88, 1.392, 113,
          0.986, 138, 1.704, 148, 0.167, 150, 0.381, 153, 0.076, 154, 3.336,
          167, 0.196, 168, 0.573, 171, 0.131, 172, 0.076, 174, 0.394, 175,
          0.704, 188, 0.516, 201, 1.758, 228, 0.656, 235, 0.773, 241, 0.201,
          242, 0.201, 286, 0.962, 309, 0.007, 310, 0.007, 323, 0.726, 339,
          1.638, 356, 0.882, 369, 0.853, 370, 0.853, 384, 0.988, 430, 1.435,
          440, 1.242, 444, 1.212, 446, 1.874, 471, 2.969, 490, 1.063, 491,
          0.613, 492, 0.613, 494, 0.701, 495, 0.701, 496, 1.078, 497, 1.078,
          501, 1.65, 513, 2.326, 514, 2.326, 543, 2.421, 554, 0.882, 599, 1.94,
          627, 1.135, 628, 1.429, 636, 2.52, 645, 1.007, 647, 2.217, 648, 1.289,
          649, 1.289, 650, 1.892, 651, 1.289, 652, 1.892, 653, 1.156, 656, 1.65,
          657, 1.289, 658, 1.392, 659, 2.52, 660, 1.73, 661, 1.73, 662, 1.289,
          663, 2.217, 664, 2.033, 665, 2.16, 666, 2.422, 667, 2.326, 668, 1.65,
          672, 2.539, 674, 2.871, 678, 2.539, 684, 1.697, 685, 1.88, 687, 2.667,
          688, 4.044, 692, 1.392, 693, 1.65, 694, 1.73, 696, 2.539, 697, 1.73,
          699, 2.326, 701, 1.392, 704, 1.198, 706, 1.697, 709, 1.892, 711,
          2.422, 715, 1.582, 716, 2.749, 717, 1.156, 723, 0.942, 724, 2.214,
          725, 1.156, 726, 1.156, 727, 1.697, 728, 1.697, 729, 2.065, 730,
          1.289, 731, 2.214, 742, 2.214, 743, 2.214, 744, 2.47, 748, 2.326, 751,
          1.65, 752, 2.326, 756, 2.869, 757, 1.392, 758, 1.65, 759, 1.198, 760,
          1.198, 761, 1.198, 762, 1.892, 763, 1.892, 764, 2.749, 765, 1.478,
          766, 1.892, 768, 1.892, 769, 1.892, 770, 2.127, 771, 1.289, 772,
          1.289, 773, 2.326, 774, 2.869, 775, 1.65, 776, 1.65, 777, 1.65, 778,
          1.392, 779, 1.252, 780, 1.823, 781, 2.326, 782, 2.326, 857, 2.816,
          876, 2.033, 882, 2.326, 908, 1.289, 976, 1.819, 1002, 2.033, 1225,
          2.044, 1278, 3.021, 1286, 2.983, 1287, 2.983, 1302, 2.983, 1311,
          1.919, 1359, 2.983, 1454, 4.456, 1455, 2.326, 1456, 3.675, 1457,
          2.326, 1458, 2.326, 1459, 4.84, 1460, 4.896, 1461, 1.819, 1462, 2.795,
          1463, 4.103, 1464, 2.795, 1465, 2.795, 1466, 2.795, 1467, 2.795, 1468,
          2.326, 1469, 2.326, 1470, 4.044, 1471, 2.326, 1472, 2.326, 1473,
          2.326, 1474, 2.326, 1475, 1.919, 1476, 2.326, 1477, 2.795, 1478,
          2.795, 1479, 2.795, 1480, 2.795, 1481, 2.795, 1482, 2.795, 1483, 4.86,
          1484, 2.795, 1485, 2.795, 1486, 2.795, 1487, 2.795, 1488, 2.795, 1489,
          2.795, 1490, 4.103, 1491, 2.527, 1492, 2.795, 1493, 2.795, 1494,
          2.795, 1495, 2.795, 1496, 2.795, 1497, 4.103, 1498, 2.795, 1499,
          2.795, 1500, 2.795, 1501, 2.795, 1502, 2.795, 1503, 5.354, 1504,
          2.326, 1505, 2.795, 1506, 2.795, 1507, 5.354, 1508, 2.166, 1509,
          2.326, 1510, 2.326, 1511, 2.326, 1512, 2.795, 1513, 2.795, 1514,
          2.795, 1515, 4.103, 1516, 4.86, 1517, 4.103, 1518, 5.961, 1519, 4.86,
          1520, 4.86, 1521, 1.819, 1522, 2.326, 1523, 2.795, 1524, 2.795, 1525,
          2.795, 1526, 2.795, 1527, 2.795, 1528, 2.795, 1529, 2.795, 1530,
          4.103, 1531, 2.326, 1532, 2.326, 1533, 2.326, 1534, 2.795, 1535,
          2.527, 1536, 2.527,
        ],
      ],
      ["title/interfaces/ILabelConfig.html", [167, 0.169, 715, 1.364]],
      [
        "body/interfaces/ILabelConfig.html",
        [
          0, 0.382, 3, 0.096, 4, 0.112, 8, 0.096, 9, 0.066, 12, 0.412, 13,
          0.511, 16, 0.226, 17, 0.226, 19, 0.226, 21, 0.143, 22, 0.387, 27,
          0.592, 35, 1.591, 43, 0.372, 54, 1.301, 67, 0.845, 73, 0.013, 74,
          0.302, 76, 1.155, 77, 1, 81, 0.343, 82, 2.618, 83, 0.788, 94, 1.345,
          148, 0.182, 150, 0.295, 151, 1.64, 153, 0.112, 167, 0.257, 168, 0.845,
          171, 0.185, 172, 0.112, 174, 0.334, 175, 0.708, 188, 1.168, 201,
          1.768, 228, 0.968, 241, 0.297, 242, 0.297, 283, 0.936, 309, 0.009,
          310, 0.009, 323, 0.617, 346, 1.768, 367, 2.905, 430, 1.587, 444,
          1.587, 446, 2.305, 494, 1.034, 495, 1.034, 496, 1.591, 497, 1.591,
          665, 2.814, 674, 2.932, 685, 2.123, 704, 1.768, 706, 2.222, 715,
          2.305, 717, 2.715, 723, 1.39, 724, 2.618, 725, 1.706, 726, 1.706, 727,
          2.222, 728, 2.222, 729, 2.442, 731, 2.618, 742, 2.618, 743, 2.618,
          753, 2.055, 759, 1.768, 760, 1.768, 761, 1.768, 765, 1.486, 779, 1.64,
          780, 2.388, 855, 3.197, 1411, 2.832, 1424, 2.684, 1508, 3.197, 1537,
          3.197, 1538, 5.724, 1539, 4.605, 1540, 3.908, 1541, 3.433, 1542,
          3.729, 1543, 3.729, 1544, 2.684, 1545, 4.164, 1546, 3.433, 1547,
          4.164, 1548, 3.433, 1549, 3.433, 1550, 3.729, 1551, 3.729, 1552,
          3.729, 1553, 4.858, 1554, 3.729, 1555, 3.729, 1556, 3.729, 1557,
          3.729, 1558, 3.729, 1559, 3.729, 1560, 3.908,
        ],
      ],
      ["title/interfaces/ILabelIconConfig.html", [167, 0.169, 729, 1.364]],
      [
        "body/interfaces/ILabelIconConfig.html",
        [
          0, 0.391, 3, 0.102, 4, 0.119, 8, 0.102, 9, 0.07, 12, 0.439, 13, 0.532,
          16, 0.241, 17, 0.241, 19, 0.241, 21, 0.153, 22, 0.403, 27, 0.453, 35,
          1.695, 43, 0.397, 54, 1.386, 67, 0.9, 73, 0.013, 74, 0.262, 76, 0.961,
          77, 1.066, 81, 0.342, 82, 1.817, 83, 0.84, 94, 1.432, 148, 0.185, 150,
          0.307, 151, 1.708, 153, 0.119, 167, 0.268, 168, 0.9, 171, 0.188, 172,
          0.119, 174, 0.356, 175, 0.754, 188, 1.196, 201, 1.883, 228, 1.031,
          241, 0.316, 242, 0.316, 283, 0.997, 309, 0.01, 310, 0.01, 323, 0.643,
          346, 1.883, 367, 3.025, 430, 1.653, 444, 1.653, 446, 2.375, 494,
          1.101, 495, 1.101, 496, 1.695, 497, 1.695, 665, 1.953, 674, 2.769,
          685, 1.942, 704, 1.883, 706, 2.315, 715, 2.159, 717, 2.315, 723,
          1.481, 724, 2.315, 725, 1.817, 726, 1.817, 727, 2.315, 728, 2.315,
          729, 2.375, 731, 1.817, 742, 1.817, 743, 1.817, 753, 2.189, 759,
          1.883, 760, 1.883, 761, 1.883, 765, 1.583, 779, 1.708, 780, 2.487,
          855, 3.405, 1411, 3.016, 1424, 4.219, 1508, 5.025, 1537, 3.405, 1538,
          3.972, 1539, 3.196, 1540, 4.07, 1541, 3.657, 1542, 5.861, 1543, 3.972,
          1544, 2.859, 1545, 4.337, 1546, 3.657, 1547, 4.337, 1548, 3.657, 1549,
          3.657, 1550, 3.972, 1551, 3.972, 1552, 3.972, 1553, 5.059, 1554,
          3.972, 1555, 3.972, 1556, 3.972, 1557, 3.972, 1558, 3.972, 1559,
          3.972, 1560, 4.07,
        ],
      ],
      ["title/interfaces/ILinkComponentConfig.html", [167, 0.169, 483, 2.572]],
      [
        "body/interfaces/ILinkComponentConfig.html",
        [
          0, 0.399, 3, 0.12, 4, 0.139, 8, 0.12, 9, 0.082, 16, 0.282, 17, 0.282,
          19, 0.282, 21, 0.179, 22, 0.445, 27, 0.588, 67, 1.055, 73, 0.013, 74,
          0.299, 76, 1.135, 79, 1.521, 81, 0.345, 83, 1.34, 148, 0.139, 150,
          0.338, 153, 0.139, 167, 0.246, 168, 1.055, 171, 0.167, 172, 0.139,
          174, 0.417, 241, 0.371, 242, 0.371, 246, 1.208, 247, 1.379, 309,
          0.011, 310, 0.011, 366, 2.907, 454, 4.46, 483, 4.809, 499, 5.312, 515,
          5.834, 590, 4.656, 591, 5.151, 594, 6.856,
        ],
      ],
      ["title/interfaces/IOption.html", [90, 2.943, 167, 0.169]],
      [
        "body/interfaces/IOption.html",
        [
          0, 0.361, 1, 0.84, 3, 0.083, 4, 0.097, 5, 0.959, 8, 0.083, 9, 0.057,
          10, 2.022, 11, 3.239, 12, 0.358, 13, 0.465, 14, 4.891, 16, 0.196, 17,
          0.196, 18, 3.583, 19, 0.196, 20, 3.583, 21, 0.124, 22, 0.352, 23,
          3.583, 24, 3.583, 25, 3.583, 26, 3.583, 28, 1.263, 29, 3.583, 30,
          3.583, 31, 3.583, 32, 3.583, 33, 3.583, 35, 2.494, 39, 3.583, 42,
          2.776, 43, 0.323, 44, 3.583, 45, 3.583, 47, 3.583, 48, 3.583, 50,
          3.583, 54, 1.13, 55, 3.583, 56, 3.583, 57, 1.267, 58, 2.096, 59,
          3.583, 60, 2.256, 62, 3.583, 69, 4.891, 73, 0.013, 74, 0.208, 75,
          3.583, 76, 0.615, 78, 0.992, 79, 2.139, 81, 0.318, 82, 1.482, 83,
          1.236, 85, 2.076, 86, 2.889, 88, 2.436, 90, 5.381, 94, 1.594, 97,
          2.887, 103, 4.071, 105, 3.583, 108, 3.583, 110, 3.583, 112, 3.583,
          113, 0.593, 114, 3.583, 115, 3.583, 118, 3.583, 119, 3.583, 124,
          3.583, 128, 3.583, 131, 3.583, 133, 3.583, 136, 4.891, 138, 1.975,
          140, 3.583, 141, 2.982, 148, 0.151, 149, 2.115, 150, 0.369, 151,
          1.493, 152, 2.331, 153, 0.097, 154, 2.459, 155, 3.583, 156, 2.536,
          157, 4.891, 158, 3.583, 159, 3.583, 160, 3.583, 161, 2.982, 162,
          2.982, 163, 0.84, 164, 3.239, 165, 2.776, 166, 3.239, 167, 0.171, 168,
          1.002, 169, 3.583, 170, 3.583, 171, 0.097, 172, 0.097, 173, 3.623,
          174, 0.29, 175, 0.615, 176, 2.022, 177, 3.583, 178, 3.583, 179, 3.583,
          180, 6.264, 181, 5.569, 182, 5.569, 183, 6.618, 184, 6.264, 185,
          6.264, 186, 4.635, 187, 3.583, 188, 1.104, 189, 3.583, 190, 3.583,
          191, 5.984, 192, 4.891, 193, 3.583, 194, 3.583, 195, 3.583, 196,
          3.583, 197, 3.583, 198, 3.583, 199, 3.583, 200, 3.583, 201, 2.836,
          202, 3.583, 203, 4.635, 204, 3.583, 205, 5.569, 206, 3.239, 207,
          5.984, 208, 3.583, 209, 3.583, 210, 3.583, 211, 3.583, 212, 3.239,
          213, 3.583, 214, 1.592, 215, 2.217, 216, 3.583, 217, 4.891, 218,
          3.583, 219, 3.583, 220, 3.583, 221, 3.583, 222, 3.583, 223, 3.583,
          224, 3.583, 225, 3.583, 226, 4.891, 309, 0.008, 310, 0.008,
        ],
      ],
      [
        "title/interfaces/IProgressIndicatorConfig.html",
        [167, 0.169, 1561, 2.741],
      ],
      [
        "body/interfaces/IProgressIndicatorConfig.html",
        [
          0, 0.37, 3, 0.102, 4, 0.118, 8, 0.102, 9, 0.07, 12, 0.436, 13, 0.53,
          16, 0.239, 17, 0.239, 19, 0.239, 21, 0.152, 22, 0.401, 27, 0.57, 43,
          0.394, 60, 2.832, 73, 0.013, 74, 0.261, 81, 0.311, 85, 2.411, 86,
          2.014, 94, 2.002, 148, 0.181, 150, 0.306, 151, 1.701, 153, 0.118, 167,
          0.267, 168, 0.895, 171, 0.185, 172, 0.118, 174, 0.354, 175, 0.75, 176,
          2.465, 188, 1.028, 228, 1.024, 241, 0.314, 242, 0.314, 288, 0.991,
          289, 1.489, 309, 0.01, 310, 0.01, 323, 0.816, 356, 1.377, 369, 0.888,
          370, 0.888, 384, 1.193, 444, 1.647, 490, 1.444, 491, 0.958, 492,
          0.958, 494, 1.095, 495, 1.095, 554, 1.377, 704, 1.872, 706, 2.305,
          759, 1.872, 760, 1.872, 761, 1.872, 779, 1.701, 824, 2.984, 1133,
          2.703, 1425, 3.384, 1426, 3.384, 1561, 4.759, 1562, 2.841, 1563,
          2.998, 1564, 3.176, 1565, 5.179, 1566, 6.042, 1567, 5.013, 1568,
          3.826, 1569, 2.703, 1570, 3.634, 1571, 3.627, 1572, 3.627, 1573,
          3.634, 1574, 4.32, 1575, 3.634, 1576, 4.32, 1577, 3.634, 1578, 5.039,
          1579, 4.639, 1580, 4.209, 1581, 3.627, 1582, 3.948, 1583, 3.948, 1584,
          3.948, 1585, 3.948, 1586, 4.32, 1587, 4.054, 1588, 3.948, 1589, 3.948,
          1590, 5.039,
        ],
      ],
      ["title/interfaces/IProgressTagsConfig.html", [167, 0.169, 1568, 2.428]],
      [
        "body/interfaces/IProgressTagsConfig.html",
        [
          0, 0.378, 3, 0.106, 4, 0.123, 8, 0.106, 9, 0.073, 12, 0.455, 13,
          0.544, 16, 0.25, 17, 0.25, 19, 0.25, 21, 0.158, 22, 0.412, 27, 0.532,
          43, 0.412, 54, 1.438, 73, 0.013, 74, 0.294, 81, 0.306, 83, 0.871, 113,
          0.754, 148, 0.169, 150, 0.371, 153, 0.123, 167, 0.218, 168, 0.934,
          171, 0.183, 172, 0.123, 174, 0.369, 176, 2.573, 188, 1.057, 228,
          1.069, 241, 0.328, 242, 0.328, 289, 1.519, 290, 1.069, 309, 0.01, 310,
          0.01, 323, 0.794, 346, 2.455, 356, 1.438, 359, 2.745, 360, 3.233, 369,
          1.047, 370, 1.047, 384, 1.249, 422, 2.573, 440, 2.026, 444, 1.692,
          490, 1.702, 491, 1, 492, 1, 494, 1.143, 495, 1.143, 521, 1.699, 543,
          2.271, 627, 1.585, 628, 1.143, 631, 2.455, 779, 1.912, 976, 3.727,
          1258, 2.966, 1261, 3.727, 1544, 2.966, 1562, 2.966, 1568, 4.3, 1569,
          2.822, 1591, 3.533, 1592, 4.768, 1593, 4.122, 1594, 5.213, 1595,
          4.122, 1596, 4.768, 1597, 4.122, 1598, 4.122, 1599, 4.122, 1600,
          4.122, 1601, 4.122, 1602, 5.941, 1603, 5.179, 1604, 4.56, 1605, 4.56,
          1606, 5.213, 1607, 3.794, 1608, 4.439,
        ],
      ],
      [
        "title/interfaces/IRadioInputComponentConfig.html",
        [167, 0.169, 1609, 2.741],
      ],
      [
        "body/interfaces/IRadioInputComponentConfig.html",
        [
          0, 0.325, 3, 0.079, 4, 0.091, 8, 0.079, 9, 0.054, 12, 0.337, 13,
          0.446, 16, 0.185, 17, 0.185, 19, 0.185, 21, 0.163, 22, 0.338, 27,
          0.592, 35, 1.303, 43, 0.305, 54, 2.054, 58, 2.629, 67, 0.692, 73,
          0.013, 74, 0.296, 76, 1.118, 78, 0.72, 79, 0.998, 81, 0.337, 82,
          2.413, 83, 0.898, 85, 1.259, 107, 0.766, 138, 1.862, 148, 0.176, 150,
          0.336, 153, 0.091, 167, 0.225, 168, 0.692, 171, 0.146, 172, 0.091,
          174, 0.38, 175, 0.58, 188, 0.623, 201, 2.013, 215, 2.09, 228, 0.792,
          241, 0.243, 242, 0.243, 292, 1.065, 293, 1.217, 309, 0.008, 310,
          0.008, 323, 0.73, 339, 1.349, 369, 0.748, 370, 0.748, 384, 1.077, 430,
          0.998, 440, 1.501, 444, 1.387, 446, 2.082, 490, 1.399, 491, 0.741,
          492, 0.741, 494, 0.847, 495, 0.847, 496, 1.303, 497, 1.303, 554,
          1.481, 599, 2.535, 627, 1.299, 628, 1.537, 637, 1.683, 645, 1.217,
          647, 2.539, 648, 1.558, 649, 1.558, 650, 2.166, 651, 1.558, 652,
          2.166, 653, 1.397, 656, 1.994, 657, 1.558, 658, 1.683, 659, 1.751,
          660, 2.09, 662, 1.558, 663, 2.539, 665, 2.087, 666, 2.772, 668, 1.994,
          674, 2.879, 678, 3.341, 684, 1.397, 685, 1.935, 687, 2.34, 692, 1.683,
          693, 1.994, 701, 1.683, 704, 1.448, 706, 1.942, 709, 2.166, 711,
          2.772, 715, 1.811, 716, 2.929, 717, 1.397, 723, 1.138, 724, 2.413,
          725, 1.397, 726, 1.397, 727, 1.942, 728, 1.942, 729, 2.251, 730,
          1.558, 731, 2.413, 740, 4.522, 742, 2.413, 743, 2.413, 744, 2.692,
          751, 1.994, 753, 1.683, 756, 3.187, 757, 1.683, 758, 1.994, 759,
          1.448, 760, 1.448, 761, 1.448, 762, 2.166, 763, 2.166, 764, 2.929,
          765, 1.692, 766, 2.166, 768, 2.166, 769, 2.166, 770, 2.435, 771,
          1.558, 772, 1.558, 774, 2.772, 775, 1.994, 776, 1.994, 777, 1.994,
          778, 2.69, 779, 1.433, 780, 2.087, 861, 2.09, 908, 2.166, 970, 2.617,
          1017, 2.198, 1225, 2.34, 1226, 2.318, 1278, 1.906, 1324, 2.318, 1339,
          2.318, 1368, 2.772, 1371, 2.772, 1461, 2.198, 1521, 2.198, 1609,
          4.184, 1610, 2.811, 1611, 2.617, 1612, 2.318, 1613, 5.276, 1614,
          4.522, 1615, 5.276, 1616, 3.053, 1617, 2.456, 1618, 2.456, 1619,
          2.456, 1620, 2.456, 1621, 2.456, 1622, 2.456, 1623, 2.456, 1624,
          2.456, 1625, 3.053, 1626, 3.053, 1627, 3.053, 1628, 3.053, 1629,
          3.053,
        ],
      ],
      ["title/interfaces/IRadioInputOption.html", [167, 0.169, 1614, 2.741]],
      [
        "body/interfaces/IRadioInputOption.html",
        [
          0, 0.337, 3, 0.084, 4, 0.098, 8, 0.084, 9, 0.058, 12, 0.361, 13,
          0.468, 16, 0.198, 17, 0.198, 19, 0.198, 21, 0.171, 22, 0.354, 27,
          0.547, 35, 1.395, 43, 0.326, 54, 2.092, 58, 2.11, 67, 0.741, 73,
          0.013, 74, 0.21, 76, 0.96, 78, 0.964, 79, 1.068, 81, 0.332, 82, 1.496,
          83, 1.201, 85, 1.348, 107, 0.82, 138, 1.896, 148, 0.179, 150, 0.345,
          153, 0.098, 167, 0.235, 168, 0.741, 171, 0.151, 172, 0.098, 174,
          0.399, 175, 0.621, 188, 0.667, 201, 2.11, 215, 2.238, 228, 0.848, 241,
          0.26, 242, 0.26, 292, 1.117, 293, 1.275, 309, 0.008, 310, 0.008, 323,
          0.643, 339, 1.444, 369, 0.784, 370, 0.784, 384, 0.667, 430, 1.068,
          440, 1.607, 444, 1.454, 446, 2.158, 490, 1.45, 491, 0.793, 492, 0.793,
          494, 0.906, 495, 0.906, 496, 1.395, 497, 1.395, 554, 1.553, 599,
          2.589, 627, 1.362, 628, 1.575, 637, 1.801, 645, 1.303, 647, 2.661,
          648, 1.668, 649, 1.668, 650, 2.27, 651, 1.668, 652, 2.27, 653, 1.496,
          656, 2.135, 657, 1.668, 658, 1.801, 659, 1.875, 660, 2.238, 662,
          1.668, 663, 2.661, 665, 2.188, 666, 2.906, 668, 2.135, 674, 2.743,
          678, 3.463, 684, 1.496, 685, 1.553, 687, 2.452, 692, 1.801, 693,
          2.135, 701, 1.801, 704, 1.55, 706, 2.036, 709, 2.27, 711, 2.906, 715,
          1.898, 716, 2.99, 717, 1.496, 723, 1.219, 724, 2.036, 725, 1.496, 726,
          1.496, 727, 2.036, 728, 2.036, 729, 1.898, 730, 1.668, 731, 1.496,
          740, 2.802, 742, 1.496, 743, 1.496, 744, 1.668, 751, 2.135, 753,
          1.801, 756, 3.303, 757, 1.801, 758, 2.135, 759, 1.55, 760, 1.55, 761,
          1.55, 762, 2.27, 763, 2.27, 764, 2.99, 765, 1.773, 766, 2.27, 768,
          2.27, 769, 2.27, 770, 2.552, 771, 1.668, 772, 1.668, 774, 2.906, 775,
          2.135, 776, 2.135, 777, 2.135, 778, 2.788, 779, 1.502, 780, 2.188,
          861, 2.238, 908, 2.27, 970, 2.802, 1017, 2.353, 1225, 2.452, 1226,
          2.482, 1278, 2.041, 1324, 2.482, 1339, 2.482, 1368, 2.906, 1371,
          2.906, 1461, 2.353, 1521, 2.353, 1609, 3.814, 1610, 3.01, 1611, 2.802,
          1612, 2.482, 1613, 3.269, 1614, 4.337, 1615, 4.45, 1616, 5.43, 1617,
          2.63, 1618, 2.63, 1619, 2.63, 1620, 2.63, 1621, 2.63, 1622, 2.63,
          1623, 2.63, 1624, 2.63, 1625, 3.269, 1626, 3.269, 1627, 3.269, 1628,
          3.269, 1629, 3.269,
        ],
      ],
      [
        "title/interfaces/ISearchInputButtonConfig.html",
        [167, 0.169, 1630, 2.741],
      ],
      [
        "body/interfaces/ISearchInputButtonConfig.html",
        [
          0, 0.399, 3, 0.12, 4, 0.139, 8, 0.12, 9, 0.082, 10, 2.907, 12, 0.514,
          13, 0.587, 16, 0.282, 17, 0.282, 19, 0.282, 21, 0.179, 22, 0.445, 27,
          0.555, 43, 0.465, 67, 1.055, 73, 0.013, 74, 0.263, 81, 0.338, 83,
          1.31, 94, 2.155, 113, 0.852, 148, 0.167, 150, 0.362, 151, 1.884, 153,
          0.139, 167, 0.295, 168, 1.055, 171, 0.179, 172, 0.139, 174, 0.417,
          175, 1.06, 294, 1.168, 295, 1.599, 309, 0.011, 310, 0.011, 659, 3.202,
          723, 1.736, 828, 3.992, 1424, 4.46, 1461, 3.351, 1612, 3.535, 1630,
          5.124, 1631, 4.287, 1632, 3.992, 1633, 4.785, 1634, 4.656, 1635,
          4.656, 1636, 4.656, 1637, 4.656, 1638, 4.656,
        ],
      ],
      ["title/interfaces/ISearchInputConfig.html", [167, 0.169, 1633, 2.741]],
      [
        "body/interfaces/ISearchInputConfig.html",
        [
          0, 0.397, 3, 0.119, 4, 0.138, 8, 0.119, 9, 0.081, 10, 2.875, 12,
          0.509, 13, 0.583, 16, 0.279, 17, 0.279, 19, 0.279, 21, 0.177, 22,
          0.442, 27, 0.575, 43, 0.46, 67, 1.044, 73, 0.013, 74, 0.28, 81, 0.337,
          83, 0.974, 94, 2.145, 113, 0.843, 148, 0.166, 150, 0.361, 151, 1.872,
          153, 0.138, 167, 0.293, 168, 1.044, 171, 0.178, 172, 0.138, 174,
          0.413, 175, 1.053, 294, 1.156, 295, 1.589, 309, 0.011, 310, 0.011,
          659, 3.181, 723, 1.717, 828, 5.293, 1424, 3.315, 1461, 3.315, 1612,
          3.497, 1630, 5.293, 1631, 4.24, 1632, 3.949, 1633, 5.1, 1634, 6.175,
          1635, 6.175, 1636, 4.606, 1637, 4.606, 1638, 4.606,
        ],
      ],
      ["title/interfaces/ISelectConfig.html", [167, 0.169, 1152, 2.189]],
      [
        "body/interfaces/ISelectConfig.html",
        [
          0, 0.33, 3, 0.081, 4, 0.094, 8, 0.081, 9, 0.055, 12, 0.346, 13, 0.454,
          16, 0.19, 17, 0.19, 19, 0.19, 21, 0.12, 22, 0.344, 27, 0.591, 35,
          1.336, 42, 2.684, 43, 0.313, 54, 1.726, 58, 2.528, 67, 0.709, 73,
          0.013, 74, 0.298, 76, 1.164, 78, 0.531, 79, 1.742, 81, 0.34, 82,
          2.439, 83, 0.913, 138, 1.829, 148, 0.177, 150, 0.262, 153, 0.094, 156,
          1.796, 167, 0.228, 168, 0.709, 171, 0.148, 172, 0.094, 174, 0.387,
          175, 0.594, 188, 0.639, 228, 0.812, 241, 0.249, 242, 0.249, 258,
          1.084, 299, 1.084, 309, 0.008, 310, 0.008, 323, 0.711, 339, 1.383,
          369, 0.552, 370, 0.552, 373, 2.518, 384, 1.088, 430, 1.023, 444,
          1.411, 446, 2.11, 490, 1.238, 491, 0.76, 492, 0.76, 494, 0.868, 495,
          0.868, 496, 1.336, 497, 1.336, 628, 1.479, 645, 1.248, 647, 2.583,
          648, 1.597, 649, 1.597, 650, 2.204, 651, 1.597, 652, 2.204, 653,
          1.432, 656, 2.044, 657, 1.597, 658, 1.725, 659, 1.796, 662, 1.597,
          663, 2.583, 665, 2.124, 666, 2.821, 668, 2.044, 674, 2.867, 684,
          1.976, 685, 1.952, 687, 2.38, 692, 1.725, 693, 2.044, 701, 2.38, 704,
          1.484, 706, 1.976, 709, 2.204, 711, 2.821, 715, 1.843, 716, 2.855,
          717, 1.432, 723, 1.167, 724, 2.439, 725, 1.432, 726, 1.432, 727,
          1.976, 728, 1.976, 729, 2.275, 730, 1.597, 731, 2.439, 742, 2.439,
          743, 2.439, 744, 2.721, 751, 2.044, 756, 3.23, 757, 1.725, 758, 2.044,
          759, 1.484, 760, 1.484, 761, 1.484, 762, 2.204, 763, 2.204, 764,
          2.951, 765, 1.722, 766, 2.204, 768, 2.204, 769, 2.204, 771, 1.597,
          772, 1.597, 774, 2.821, 775, 2.044, 776, 2.044, 777, 2.044, 778,
          2.938, 779, 1.458, 780, 2.124, 1017, 2.253, 1030, 2.143, 1152, 3.386,
          1212, 3.28, 1217, 4.049, 1221, 2.377, 1225, 2.38, 1265, 2.377, 1368,
          2.821, 1371, 2.821, 1456, 4.049, 1475, 2.377, 1521, 2.253, 1539, 4.29,
          1560, 3.475, 1617, 3.475, 1618, 2.518, 1619, 2.518, 1620, 2.518, 1621,
          2.518, 1622, 2.518, 1623, 2.518, 1624, 2.518, 1639, 2.882, 1640,
          4.571, 1641, 3.13, 1642, 3.13, 1643, 3.13, 1644, 3.13, 1645, 3.13,
          1646, 3.13, 1647, 3.13, 1648, 3.13, 1649, 3.13, 1650, 4.946, 1651,
          3.13, 1652, 3.13, 1653, 3.13, 1654, 3.13, 1655, 3.13, 1656, 3.13,
        ],
      ],
      ["title/interfaces/ISelectOptionsConfig.html", [167, 0.169, 1640, 2.741]],
      [
        "body/interfaces/ISelectOptionsConfig.html",
        [
          0, 0.343, 3, 0.087, 4, 0.101, 8, 0.087, 9, 0.06, 12, 0.374, 13, 0.479,
          16, 0.205, 17, 0.205, 19, 0.205, 21, 0.13, 22, 0.363, 27, 0.408, 35,
          1.445, 42, 2.904, 43, 0.338, 54, 1.797, 58, 1.606, 67, 0.768, 73,
          0.013, 74, 0.215, 76, 1.092, 78, 0.935, 79, 1.8, 81, 0.334, 82, 1.55,
          83, 1.216, 138, 1.873, 148, 0.181, 150, 0.276, 153, 0.101, 156, 1.943,
          167, 0.241, 168, 0.768, 171, 0.154, 172, 0.101, 174, 0.408, 175,
          0.643, 188, 0.691, 228, 0.879, 241, 0.27, 242, 0.27, 258, 1.144, 299,
          1.144, 309, 0.009, 310, 0.009, 323, 0.579, 339, 1.496, 369, 0.597,
          370, 0.597, 373, 2.725, 384, 0.691, 430, 1.107, 444, 1.489, 446,
          2.198, 490, 1.306, 491, 0.822, 492, 0.822, 494, 0.939, 495, 0.939,
          496, 1.445, 497, 1.445, 628, 1.528, 645, 1.35, 647, 2.725, 648, 1.728,
          649, 1.728, 650, 2.326, 651, 1.728, 652, 2.326, 653, 1.55, 656, 2.212,
          657, 1.728, 658, 1.867, 659, 1.943, 662, 1.728, 663, 2.725, 665,
          2.241, 666, 2.976, 668, 2.212, 674, 2.709, 684, 2.085, 685, 1.59, 687,
          2.512, 692, 1.867, 693, 2.212, 701, 2.512, 704, 1.606, 706, 2.085,
          709, 2.326, 711, 2.976, 715, 1.945, 716, 2.934, 717, 1.55, 723, 1.263,
          724, 2.085, 725, 1.55, 726, 1.55, 727, 2.085, 728, 2.085, 729, 1.945,
          730, 1.728, 731, 1.55, 742, 1.55, 743, 1.55, 744, 1.728, 751, 2.212,
          756, 3.364, 757, 1.867, 758, 2.212, 759, 1.606, 760, 1.606, 761,
          1.606, 762, 2.326, 763, 2.326, 764, 3.022, 765, 1.817, 766, 2.326,
          768, 2.326, 769, 2.326, 771, 1.728, 772, 1.728, 774, 2.976, 775,
          2.212, 776, 2.212, 777, 2.212, 778, 3.036, 779, 1.539, 780, 2.241,
          1017, 2.438, 1030, 2.319, 1152, 3.12, 1212, 3.461, 1217, 2.572, 1221,
          2.572, 1225, 2.512, 1265, 2.572, 1368, 2.976, 1371, 2.976, 1456,
          2.572, 1475, 2.572, 1521, 2.438, 1539, 2.725, 1560, 3.667, 1617,
          3.667, 1618, 2.725, 1619, 2.725, 1620, 2.725, 1621, 2.725, 1622,
          2.725, 1623, 2.725, 1624, 2.725, 1639, 3.118, 1640, 4.416, 1641,
          3.387, 1642, 3.387, 1643, 3.387, 1644, 3.387, 1645, 3.387, 1646,
          3.387, 1647, 3.387, 1648, 3.387, 1649, 3.387, 1650, 5.151, 1651,
          3.387, 1652, 3.387, 1653, 3.387, 1654, 3.387, 1655, 3.387, 1656,
          3.387,
        ],
      ],
      ["title/interfaces/ISkipLinkConfig.html", [167, 0.169, 1127, 2.741]],
      [
        "body/interfaces/ISkipLinkConfig.html",
        [
          0, 0.39, 3, 0.114, 4, 0.132, 8, 0.114, 9, 0.078, 13, 0.465, 16, 0.268,
          17, 0.268, 19, 0.268, 21, 0.17, 22, 0.431, 27, 0.485, 60, 3.108, 73,
          0.013, 74, 0.275, 81, 0.344, 148, 0.132, 149, 2.89, 150, 0.328, 153,
          0.132, 167, 0.286, 168, 1.003, 171, 0.175, 172, 0.132, 174, 0.397,
          188, 1.193, 214, 2.176, 241, 0.352, 242, 0.352, 273, 1.111, 274,
          1.551, 309, 0.01, 310, 0.01, 323, 0.743, 366, 3.379, 379, 3.228, 397,
          3.56, 454, 4.384, 501, 3.534, 908, 2.762, 1049, 2.89, 1109, 4.074,
          1110, 3.794, 1111, 4.074, 1112, 4.704, 1113, 4.426, 1115, 4.426, 1117,
          4.64, 1119, 4.426, 1122, 4.426, 1123, 4.426, 1124, 4.426, 1127, 5.012,
          1128, 4.426, 1129, 4.426, 1130, 4.426, 1131, 4.426, 1132, 4.426, 1133,
          3.03, 1134, 4.426, 1135, 4.426, 1136, 4.426, 1137, 5.412, 1138, 4.426,
          1139, 5.412, 1140, 4.426, 1141, 4.426,
        ],
      ],
      ["title/interfaces/ISpinnerConfig.html", [167, 0.169, 1657, 2.943]],
      [
        "body/interfaces/ISpinnerConfig.html",
        [
          0, 0.368, 3, 0.1, 4, 0.117, 8, 0.1, 9, 0.069, 12, 0.431, 13, 0.526,
          16, 0.236, 17, 0.236, 19, 0.236, 21, 0.15, 22, 0.398, 27, 0.579, 43,
          0.389, 54, 1.361, 73, 0.013, 74, 0.299, 81, 0.333, 83, 0.824, 148,
          0.165, 150, 0.385, 153, 0.117, 167, 0.206, 168, 0.884, 171, 0.18, 172,
          0.117, 174, 0.349, 176, 2.434, 188, 1.02, 228, 1.012, 241, 0.311, 242,
          0.311, 301, 1.012, 309, 0.01, 310, 0.01, 323, 0.783, 356, 1.361, 359,
          2.65, 360, 3.445, 363, 2.99, 369, 1.086, 370, 1.086, 384, 1.228, 440,
          1.917, 444, 1.634, 491, 0.946, 492, 0.946, 494, 1.081, 495, 1.081,
          521, 2.4, 543, 2.149, 627, 1.53, 628, 1.081, 631, 2.371, 685, 2.1,
          779, 1.688, 839, 3.423, 976, 3.599, 1258, 2.807, 1261, 3.599, 1352,
          4.57, 1374, 4.99, 1544, 2.807, 1565, 5.16, 1580, 3.599, 1581, 2.807,
          1586, 5.16, 1606, 5.081, 1607, 3.59, 1608, 4.286, 1657, 5.081, 1658,
          3.343, 1659, 6.44, 1660, 4.603, 1661, 3.9, 1662, 4.603, 1663, 3.9,
          1664, 3.9, 1665, 5.821, 1666, 4.314, 1667, 4.314, 1668, 5.531, 1669,
          4.314, 1670, 4.314,
        ],
      ],
      ["title/interfaces/IStepConfig.html", [167, 0.169, 1567, 2.741]],
      [
        "body/interfaces/IStepConfig.html",
        [
          0, 0.374, 3, 0.104, 4, 0.12, 8, 0.104, 9, 0.071, 12, 0.445, 13, 0.537,
          16, 0.244, 17, 0.244, 19, 0.244, 21, 0.155, 22, 0.406, 27, 0.457, 43,
          0.402, 60, 3.169, 73, 0.013, 74, 0.24, 81, 0.313, 85, 2.104, 86,
          2.055, 94, 2.02, 148, 0.182, 150, 0.309, 151, 1.723, 153, 0.12, 167,
          0.27, 168, 0.913, 171, 0.186, 172, 0.12, 174, 0.361, 175, 0.764, 176,
          2.514, 188, 1.041, 228, 1.045, 241, 0.321, 242, 0.321, 288, 1.01, 289,
          1.503, 309, 0.01, 310, 0.01, 323, 0.789, 356, 1.405, 369, 0.9, 370,
          0.9, 384, 0.822, 444, 1.667, 490, 1.462, 491, 0.977, 492, 0.977, 494,
          1.116, 495, 1.116, 554, 1.405, 704, 1.909, 706, 2.335, 759, 1.909,
          760, 1.909, 761, 1.909, 779, 1.723, 824, 2.055, 1133, 2.757, 1425,
          3.452, 1426, 3.452, 1561, 4.375, 1562, 2.898, 1563, 3.057, 1564,
          3.239, 1565, 4.375, 1566, 5.103, 1567, 4.803, 1568, 4.473, 1569,
          2.757, 1570, 3.707, 1571, 3.673, 1572, 3.673, 1573, 3.707, 1574,
          4.375, 1575, 3.707, 1576, 4.375, 1577, 3.707, 1578, 6.078, 1579,
          4.698, 1580, 4.24, 1581, 3.673, 1582, 4.027, 1583, 4.027, 1584, 4.027,
          1585, 4.027, 1586, 4.375, 1587, 4.105, 1588, 4.027, 1589, 4.027, 1590,
          5.103,
        ],
      ],
      ["title/interfaces/ITabConfig.html", [167, 0.169, 1571, 2.301]],
      [
        "body/interfaces/ITabConfig.html",
        [
          0, 0.386, 3, 0.111, 4, 0.129, 8, 0.111, 9, 0.076, 12, 0.478, 13,
          0.561, 16, 0.262, 17, 0.262, 19, 0.262, 21, 0.166, 22, 0.425, 27,
          0.541, 43, 0.432, 52, 3.708, 60, 3.084, 73, 0.013, 74, 0.273, 76,
          0.821, 78, 1.026, 81, 0.34, 94, 1.925, 138, 1.368, 148, 0.173, 150,
          0.324, 151, 1.802, 153, 0.16, 167, 0.282, 168, 0.98, 171, 0.173, 172,
          0.129, 174, 0.388, 175, 0.821, 241, 0.345, 242, 0.345, 303, 1.086,
          309, 0.01, 310, 0.01, 323, 0.804, 339, 1.911, 369, 0.763, 370, 0.763,
          384, 0.883, 490, 1.529, 491, 1.05, 492, 1.05, 554, 1.509, 824, 2.723,
          908, 2.207, 1112, 4.862, 1133, 3.963, 1571, 4.166, 1572, 3.841, 1587,
          4.656, 1671, 3.982, 1672, 5.337, 1673, 4.326, 1674, 4.326, 1675,
          4.326, 1676, 4.326, 1677, 4.326, 1678, 4.326, 1679, 5.337, 1680,
          4.326, 1681, 4.326, 1682, 5.788, 1683, 4.326, 1684, 5.337, 1685,
          4.326, 1686, 4.326,
        ],
      ],
      ["title/interfaces/ITabNavConfig.html", [167, 0.169, 1572, 2.301]],
      [
        "body/interfaces/ITabNavConfig.html",
        [
          0, 0.383, 3, 0.11, 4, 0.127, 8, 0.11, 9, 0.075, 12, 0.471, 13, 0.556,
          16, 0.258, 17, 0.258, 19, 0.258, 21, 0.164, 22, 0.421, 27, 0.578, 43,
          0.425, 52, 3.651, 60, 2.173, 73, 0.013, 74, 0.283, 76, 1.091, 78,
          0.723, 81, 0.335, 94, 1.906, 138, 1.347, 148, 0.172, 150, 0.321, 151,
          1.785, 153, 0.158, 167, 0.28, 168, 0.965, 171, 0.172, 172, 0.127, 174,
          0.382, 175, 0.809, 241, 0.339, 242, 0.339, 303, 1.069, 309, 0.01, 310,
          0.01, 323, 0.801, 339, 1.881, 369, 0.751, 370, 0.751, 384, 1.226, 490,
          1.515, 491, 1.033, 492, 1.033, 554, 1.486, 824, 3.153, 908, 2.173,
          1112, 4.835, 1133, 4.312, 1571, 4.326, 1572, 4.137, 1587, 4.624, 1671,
          3.921, 1672, 6.18, 1673, 4.259, 1674, 4.259, 1675, 4.259, 1676, 4.259,
          1677, 4.259, 1678, 4.259, 1679, 5.286, 1680, 4.259, 1681, 4.259, 1682,
          5.748, 1683, 4.259, 1684, 5.286, 1685, 4.259, 1686, 4.259,
        ],
      ],
      [
        "title/interfaces/ITextareaComponentConfig.html",
        [167, 0.169, 1687, 2.943],
      ],
      [
        "body/interfaces/ITextareaComponentConfig.html",
        [
          0, 0.337, 3, 0.084, 4, 0.098, 8, 0.084, 9, 0.058, 12, 0.361, 13,
          0.468, 16, 0.198, 17, 0.198, 19, 0.198, 21, 0.126, 22, 0.355, 27,
          0.595, 35, 1.396, 43, 0.327, 73, 0.013, 74, 0.298, 76, 1.031, 77,
          0.878, 78, 0.555, 79, 1.455, 81, 0.338, 82, 2.485, 88, 1.803, 113,
          0.994, 138, 1.035, 148, 0.179, 150, 0.356, 153, 0.098, 167, 0.173,
          168, 0.741, 171, 0.151, 172, 0.098, 174, 0.293, 175, 0.845, 241,
          0.261, 242, 0.261, 305, 1.155, 306, 1.001, 309, 0.008, 310, 0.008,
          323, 0.745, 356, 1.142, 369, 0.785, 370, 0.785, 384, 1.109, 405,
          3.582, 430, 1.455, 440, 1.609, 446, 2.159, 490, 1.276, 491, 0.794,
          492, 0.794, 496, 1.396, 497, 1.396, 599, 1.445, 627, 1.362, 628,
          1.506, 645, 1.304, 647, 2.662, 648, 1.669, 649, 1.669, 650, 2.272,
          651, 1.669, 652, 2.272, 653, 1.497, 657, 1.669, 660, 2.24, 662, 1.669,
          663, 2.662, 664, 2.632, 674, 2.949, 678, 3.048, 685, 1.983, 709,
          2.272, 715, 1.9, 716, 2.899, 717, 1.497, 723, 1.22, 724, 2.485, 725,
          1.497, 726, 1.497, 729, 2.318, 730, 1.669, 731, 2.485, 742, 2.485,
          743, 2.485, 744, 2.772, 762, 2.272, 763, 2.272, 764, 2.772, 765,
          1.774, 766, 2.272, 768, 2.272, 769, 2.272, 770, 2.554, 771, 1.669,
          772, 1.669, 900, 4.125, 908, 1.669, 1002, 2.632, 1225, 2.453, 1278,
          2.779, 1456, 4.125, 1457, 3.012, 1458, 3.012, 1460, 2.805, 1468,
          3.012, 1469, 3.012, 1470, 3.012, 1471, 3.012, 1472, 3.012, 1473,
          3.012, 1474, 3.012, 1475, 2.484, 1476, 3.012, 1504, 3.012, 1509,
          3.012, 1510, 3.012, 1511, 3.012, 1522, 3.012, 1531, 3.012, 1532,
          3.012, 1533, 3.012, 1580, 2.355, 1581, 3.204, 1687, 4.659, 1688,
          3.012, 1689, 6.286, 1690, 6.01, 1691, 6.01, 1692, 3.272, 1693, 4.452,
          1694, 4.452, 1695, 3.619, 1696, 3.619, 1697, 3.619, 1698, 3.619, 1699,
          4.925, 1700, 3.619, 1701, 3.619, 1702, 3.619, 1703, 3.619, 1704,
          3.619, 1705, 3.619, 1706, 4.925, 1707, 5.599, 1708, 4.925, 1709,
          3.619, 1710, 4.925, 1711, 3.619, 1712, 4.925, 1713, 3.272, 1714,
          3.619, 1715, 3.619,
        ],
      ],
      ["title/components/IconButtonComponent.html", [0, 0.213, 276, 0.802]],
      [
        "body/components/IconButtonComponent.html",
        [
          0, 0.423, 1, 0.727, 2, 1.223, 3, 0.072, 4, 0.084, 5, 0.83, 6, 0.886,
          7, 0.886, 8, 0.072, 9, 0.109, 12, 0.441, 13, 0.49, 15, 0.886, 16,
          0.404, 17, 0.404, 19, 0.242, 21, 0.108, 22, 0.318, 27, 0.251, 28,
          0.703, 34, 1.223, 43, 0.507, 53, 1.223, 57, 1.335, 61, 2.609, 70,
          1.817, 72, 0.977, 73, 0.013, 74, 0.286, 76, 0.884, 77, 1.362, 78,
          0.862, 81, 0.303, 83, 1.074, 94, 1.68, 99, 3.099, 107, 1.003, 113,
          0.852, 148, 0.12, 150, 0.356, 151, 1.349, 153, 0.084, 163, 0.727, 167,
          0.211, 171, 0.167, 172, 0.172, 174, 0.417, 175, 0.532, 188, 0.815,
          232, 0.886, 233, 1.264, 234, 1.223, 235, 0.857, 236, 1.576, 237,
          0.886, 239, 0.886, 240, 0.727, 241, 0.526, 242, 0.526, 243, 0.886,
          244, 0.727, 245, 0.886, 246, 0.727, 247, 0.83, 248, 0.886, 249, 0.727,
          250, 1.264, 251, 0.727, 252, 0.886, 253, 1.264, 254, 0.886, 255,
          0.752, 256, 0.886, 257, 0.68, 258, 0.703, 259, 0.886, 260, 0.727, 261,
          0.886, 262, 0.703, 263, 0.886, 264, 0.727, 265, 0.886, 266, 0.727,
          267, 0.777, 268, 0.886, 269, 0.752, 270, 0.886, 271, 0.752, 272,
          0.886, 273, 0.703, 274, 0.803, 275, 0.886, 276, 1.274, 277, 1.297,
          278, 0.727, 279, 0.886, 280, 0.727, 281, 1.264, 282, 1.473, 283,
          0.703, 284, 0.886, 285, 0.752, 286, 0.727, 287, 0.886, 288, 0.703,
          289, 1.072, 290, 0.727, 291, 0.886, 292, 0.703, 293, 0.803, 294,
          0.703, 295, 0.803, 296, 0.752, 297, 0.83, 298, 0.886, 299, 0.703, 300,
          0.886, 301, 0.727, 302, 0.886, 303, 0.703, 304, 0.886, 305, 0.727,
          306, 0.857, 307, 0.886, 308, 0.886, 309, 0.008, 310, 0.008, 323, 0.73,
          338, 2.567, 340, 3.166, 341, 2.736, 342, 3.477, 343, 1.918, 344,
          2.127, 345, 3.202, 346, 2.647, 350, 3.506, 352, 2.938, 356, 0.977,
          359, 2.959, 367, 2.389, 369, 0.895, 370, 0.895, 379, 2.959, 384,
          1.036, 491, 0.68, 492, 0.68, 501, 1.829, 521, 1.155, 597, 3.425, 598,
          4.288, 599, 2.243, 627, 1.223, 628, 1.292, 629, 3.034, 630, 3.537,
          631, 1.894, 634, 3.425, 635, 2.402, 636, 2.292, 637, 1.544, 640,
          3.352, 641, 3.506, 906, 2.254, 1372, 4.986, 1373, 2.254, 1374, 4.603,
          1375, 4.943, 1376, 3.993, 1377, 2.579, 1378, 3.993, 1379, 2.579, 1380,
          3.996, 1381, 2.802, 1382, 2.802, 1383, 4.658, 1384, 3.996, 1385,
          4.658, 1386, 3.996, 1387, 2.802, 1716, 5.065, 1717, 3.551, 1718,
          3.551, 1719, 3.551, 1720, 3.551, 1721, 3.551, 1722, 3.551, 1723,
          3.551, 1724, 3.551, 1725, 3.551, 1726, 3.551, 1727, 3.551,
        ],
      ],
      ["title/components/IconComponent.html", [0, 0.213, 278, 0.83]],
      [
        "body/components/IconComponent.html",
        [
          0, 0.418, 1, 0.909, 2, 1.427, 3, 0.09, 4, 0.105, 5, 1.038, 6, 1.108,
          7, 1.108, 8, 0.09, 9, 0.105, 12, 0.515, 15, 1.108, 16, 0.41, 17, 0.41,
          19, 0.283, 21, 0.135, 22, 0.371, 27, 0.314, 28, 0.879, 34, 1.427, 53,
          1.427, 57, 1.502, 70, 1.723, 72, 1.223, 73, 0.013, 74, 0.274, 77,
          0.94, 78, 0.595, 81, 0.308, 107, 0.879, 111, 2.661, 113, 0.641, 148,
          0.105, 150, 0.339, 152, 2.522, 153, 0.105, 163, 0.909, 167, 0.185,
          171, 0.139, 172, 0.105, 173, 2.522, 174, 0.47, 188, 0.952, 232, 1.108,
          233, 1.474, 234, 1.427, 235, 1.072, 236, 1.499, 237, 1.108, 239,
          1.108, 240, 0.909, 241, 0.535, 242, 0.535, 243, 1.108, 244, 0.909,
          245, 1.108, 246, 0.909, 247, 1.038, 248, 1.108, 249, 0.909, 250,
          1.474, 251, 0.909, 252, 1.108, 253, 1.474, 254, 1.108, 255, 0.94, 256,
          1.108, 257, 0.85, 258, 0.879, 259, 1.108, 260, 0.909, 261, 1.108, 262,
          0.879, 263, 1.108, 264, 0.909, 265, 1.108, 266, 0.909, 267, 0.972,
          268, 1.108, 269, 0.94, 270, 1.108, 271, 0.94, 272, 1.108, 273, 0.879,
          274, 1.004, 275, 1.108, 276, 0.879, 277, 1.108, 278, 1.45, 279, 1.108,
          280, 0.909, 281, 1.474, 282, 1.657, 283, 0.879, 284, 1.108, 285, 0.94,
          286, 0.909, 287, 1.108, 288, 0.879, 289, 1.251, 290, 0.909, 291,
          1.108, 292, 0.879, 293, 1.004, 294, 0.879, 295, 1.004, 296, 0.94, 297,
          1.038, 298, 1.108, 299, 0.879, 300, 1.108, 301, 0.909, 302, 1.108,
          303, 0.879, 304, 1.108, 305, 0.909, 306, 1.072, 307, 1.108, 308,
          1.108, 309, 0.009, 310, 0.009, 379, 2.961, 422, 3.271, 440, 2.293,
          468, 3.192, 469, 3.824, 471, 1.931, 476, 3.772, 535, 3.226, 1388,
          4.824, 1389, 3.505, 1390, 6.18, 1391, 5.159, 1392, 5.159, 1393, 5.797,
          1394, 3.877, 1395, 3.877, 1396, 3.877, 1397, 3.877, 1398, 5.159, 1399,
          3.877, 1728, 4.443, 1729, 4.443, 1730, 4.443, 1731, 4.443, 1732,
          4.443,
        ],
      ],
      ["title/components/IndicatorComponent.html", [0, 0.213, 280, 0.83]],
      [
        "body/components/IndicatorComponent.html",
        [
          0, 0.422, 1, 0.723, 2, 1.218, 3, 0.072, 4, 0.083, 5, 0.825, 6, 0.881,
          7, 0.881, 8, 0.072, 9, 0.109, 12, 0.44, 13, 0.488, 15, 0.881, 16,
          0.404, 17, 0.404, 19, 0.241, 21, 0.107, 22, 0.317, 27, 0.514, 28,
          0.699, 34, 1.218, 43, 0.506, 53, 1.218, 57, 1.331, 70, 1.815, 72,
          0.973, 73, 0.013, 74, 0.276, 76, 0.962, 77, 1.068, 78, 0.788, 81,
          0.261, 83, 1.071, 85, 2.089, 107, 1.399, 111, 2.116, 113, 1.02, 148,
          0.119, 150, 0.241, 152, 2.006, 153, 0.083, 163, 0.723, 167, 0.147,
          171, 0.172, 172, 0.083, 174, 0.416, 214, 1.958, 232, 0.881, 233,
          1.259, 234, 1.218, 235, 0.853, 236, 1.359, 237, 0.881, 239, 0.881,
          240, 0.723, 241, 0.523, 242, 0.523, 243, 0.881, 244, 0.723, 245,
          0.881, 246, 0.723, 247, 0.825, 248, 0.881, 249, 0.723, 250, 1.259,
          251, 0.723, 252, 0.881, 253, 1.259, 254, 0.881, 255, 0.748, 256,
          0.881, 257, 0.676, 258, 0.699, 259, 0.881, 260, 0.723, 261, 0.881,
          262, 0.699, 263, 0.881, 264, 0.723, 265, 0.881, 266, 0.723, 267,
          0.773, 268, 0.881, 269, 0.748, 270, 0.881, 271, 0.748, 272, 0.881,
          273, 0.699, 274, 0.799, 275, 0.881, 276, 0.699, 277, 0.842, 278,
          0.723, 279, 0.881, 280, 1.315, 281, 1.259, 282, 1.469, 283, 0.699,
          284, 0.881, 285, 0.748, 286, 0.723, 287, 0.881, 288, 0.699, 289,
          1.068, 290, 0.723, 291, 0.881, 292, 0.699, 293, 0.799, 294, 0.699,
          295, 0.799, 296, 0.748, 297, 0.825, 298, 0.881, 299, 0.699, 300,
          0.881, 301, 0.723, 302, 0.881, 303, 0.699, 304, 0.881, 305, 0.723,
          306, 0.853, 307, 0.881, 308, 0.881, 309, 0.008, 310, 0.008, 320,
          3.847, 340, 2.559, 346, 1.888, 356, 1.87, 359, 2.11, 360, 2.485, 361,
          3.203, 369, 0.982, 370, 1.011, 379, 1.477, 381, 4.343, 384, 0.569,
          399, 1.82, 422, 2.9, 423, 4.276, 430, 1.951, 440, 1.958, 468, 2.726,
          469, 3.469, 471, 1.536, 476, 3.343, 490, 1.141, 491, 0.676, 492,
          0.676, 516, 2.566, 543, 1.536, 577, 2.566, 584, 2.284, 641, 1.82, 684,
          1.275, 685, 1.944, 765, 1.587, 857, 3.527, 1400, 4.276, 1401, 2.566,
          1402, 4.645, 1403, 5.138, 1404, 3.981, 1405, 2.787, 1406, 3.981, 1407,
          3.981, 1408, 3.981, 1409, 3.981, 1410, 5.067, 1411, 3.023, 1412,
          3.981, 1413, 3.981, 1414, 2.787, 1415, 2.787, 1416, 2.787, 1417,
          2.787, 1418, 2.787, 1419, 2.787, 1420, 2.787, 1421, 2.787, 1422,
          3.084, 1423, 3.084, 1424, 2.006, 1425, 3.413, 1426, 3.413, 1427,
          4.405, 1428, 4.405, 1429, 4.405, 1430, 5.138, 1431, 5.605, 1432,
          3.084, 1433, 3.084, 1434, 4.405, 1435, 4.405, 1436, 4.405, 1437,
          4.405, 1438, 5.138, 1439, 5.605, 1440, 4.405, 1441, 3.084, 1442,
          5.605, 1443, 3.084, 1444, 3.084, 1445, 3.084, 1446, 4.405, 1447,
          5.605, 1448, 3.084, 1449, 3.084, 1450, 3.084, 1451, 3.084, 1452,
          4.405, 1453, 3.084, 1733, 3.533, 1734, 3.533, 1735, 3.533, 1736,
          3.533, 1737, 3.533, 1738, 3.533, 1739, 3.533, 1740, 3.533, 1741,
          3.533, 1742, 3.533, 1743, 3.533, 1744, 6.423,
        ],
      ],
      ["title/components/InputComponent.html", [0, 0.213, 28, 0.802]],
      [
        "body/components/InputComponent.html",
        [
          0, 0.43, 1, 0.429, 2, 0.818, 3, 0.043, 4, 0.049, 5, 0.49, 6, 0.523, 7,
          0.523, 8, 0.043, 9, 0.112, 12, 0.295, 13, 0.354, 15, 0.523, 16, 0.385,
          17, 0.385, 19, 0.162, 21, 0.064, 22, 0.361, 27, 0.525, 28, 1.139, 34,
          0.818, 35, 2.19, 43, 0.386, 53, 1.182, 54, 1.666, 57, 1.545, 58,
          1.267, 67, 0.606, 70, 1.88, 72, 1.666, 73, 0.013, 74, 0.295, 76,
          1.061, 77, 1.556, 78, 1.025, 79, 1.723, 81, 0.296, 82, 0.757, 83,
          1.213, 88, 0.911, 107, 1.402, 113, 1.082, 138, 1.572, 148, 0.143, 150,
          0.366, 153, 0.049, 154, 3.22, 163, 0.429, 167, 0.178, 171, 0.101, 172,
          0.049, 174, 0.428, 175, 0.734, 188, 0.338, 201, 1.595, 228, 1.101,
          232, 0.523, 233, 0.845, 234, 0.818, 235, 1.029, 236, 1.036, 237,
          0.523, 239, 0.523, 240, 0.429, 241, 0.496, 242, 0.496, 243, 0.523,
          244, 0.429, 245, 0.523, 246, 0.429, 247, 0.49, 248, 0.523, 249, 0.429,
          250, 0.845, 251, 0.429, 252, 0.523, 253, 0.845, 254, 0.523, 255,
          0.444, 256, 0.523, 257, 0.401, 258, 0.415, 259, 0.523, 260, 0.429,
          261, 0.523, 262, 0.415, 263, 0.523, 264, 0.429, 265, 0.523, 266,
          0.429, 267, 0.459, 268, 0.523, 269, 0.444, 270, 0.523, 271, 0.444,
          272, 0.523, 273, 0.415, 274, 0.474, 275, 0.523, 276, 0.415, 277, 0.35,
          278, 0.429, 279, 0.523, 280, 0.429, 281, 0.845, 282, 1.064, 283,
          0.415, 284, 0.523, 285, 0.444, 286, 1.101, 287, 0.523, 288, 0.415,
          289, 0.717, 290, 0.429, 291, 0.523, 292, 0.415, 293, 0.474, 294,
          0.415, 295, 0.474, 296, 0.444, 297, 0.49, 298, 0.523, 299, 0.415, 300,
          0.523, 301, 0.429, 302, 0.523, 303, 0.415, 304, 0.523, 305, 0.429,
          306, 0.506, 307, 0.523, 308, 0.523, 309, 0.005, 310, 0.005, 323, 0.67,
          339, 1.486, 356, 0.577, 369, 0.681, 370, 0.681, 384, 0.338, 430, 1.56,
          440, 1.9, 444, 1.262, 446, 2.19, 471, 2.971, 490, 0.766, 491, 0.401,
          492, 0.401, 494, 0.459, 495, 0.459, 496, 0.706, 497, 0.706, 501,
          1.746, 513, 2.461, 514, 2.461, 543, 1.854, 554, 0.577, 599, 2.004,
          627, 0.818, 628, 1.176, 636, 1.93, 645, 2.536, 647, 2.012, 648, 1.364,
          649, 1.364, 650, 1.717, 651, 1.364, 652, 1.717, 653, 1.223, 656,
          2.197, 657, 1.717, 658, 2.337, 659, 2.603, 660, 2.303, 661, 1.83, 662,
          1.717, 663, 2.31, 664, 2.706, 665, 2.348, 666, 2.963, 667, 3.097, 668,
          2.523, 669, 2.292, 670, 2.292, 671, 2.673, 672, 3.106, 673, 2.151,
          674, 2.764, 675, 1.418, 678, 2.303, 684, 1.768, 685, 1.348, 687,
          2.739, 688, 4.177, 692, 1.473, 693, 1.746, 694, 1.83, 696, 2.645, 697,
          1.83, 699, 2.461, 701, 1.473, 704, 1.267, 706, 1.539, 709, 1.717, 711,
          2.197, 715, 1.435, 716, 2.436, 717, 1.223, 723, 0.617, 724, 1.223,
          725, 0.757, 726, 0.757, 727, 1.223, 728, 1.223, 729, 1.141, 730,
          0.844, 731, 0.757, 742, 0.757, 743, 0.757, 744, 0.844, 748, 2.461,
          751, 1.08, 752, 1.523, 756, 2.197, 757, 0.911, 758, 1.08, 759, 0.784,
          760, 0.784, 761, 0.784, 762, 1.364, 763, 1.364, 764, 2.315, 765,
          1.065, 766, 1.364, 768, 1.364, 769, 1.364, 770, 1.533, 771, 0.844,
          772, 0.844, 773, 1.523, 774, 2.197, 775, 1.08, 776, 1.08, 777, 1.08,
          778, 0.911, 779, 0.903, 780, 1.314, 781, 1.523, 782, 1.523, 784,
          2.151, 847, 2.151, 857, 2.934, 876, 2.151, 882, 2.461, 908, 0.844,
          976, 1.19, 1002, 1.331, 1225, 1.473, 1278, 2.648, 1286, 3.108, 1287,
          3.108, 1302, 3.108, 1311, 2.03, 1359, 3.108, 1454, 3.905, 1455, 1.523,
          1456, 1.256, 1457, 1.523, 1458, 1.523, 1459, 3.864, 1460, 4.622, 1461,
          1.924, 1462, 1.83, 1463, 3.722, 1464, 1.83, 1465, 1.83, 1466, 1.83,
          1467, 2.957, 1468, 2.461, 1469, 2.461, 1470, 4.177, 1471, 2.461, 1472,
          2.461, 1473, 2.461, 1474, 2.461, 1475, 2.03, 1476, 2.461, 1477, 2.957,
          1478, 2.957, 1479, 2.957, 1480, 2.957, 1481, 2.957, 1482, 2.957, 1483,
          5.019, 1484, 2.957, 1485, 2.957, 1486, 2.957, 1487, 2.957, 1488,
          2.957, 1489, 2.957, 1490, 4.274, 1491, 2.673, 1492, 2.957, 1493,
          2.957, 1494, 2.957, 1495, 2.957, 1496, 2.957, 1497, 4.274, 1498,
          2.957, 1499, 2.957, 1500, 2.957, 1501, 2.957, 1502, 2.957, 1503,
          4.692, 1504, 3.097, 1505, 3.722, 1506, 3.722, 1507, 4.692, 1508,
          2.884, 1509, 1.523, 1510, 1.523, 1511, 1.523, 1512, 2.957, 1513,
          2.957, 1514, 2.957, 1515, 4.274, 1516, 5.019, 1517, 4.274, 1518,
          5.019, 1519, 3.722, 1520, 3.722, 1521, 1.19, 1522, 1.523, 1523, 1.83,
          1524, 2.957, 1525, 2.957, 1526, 2.957, 1527, 2.957, 1528, 2.957, 1529,
          2.957, 1530, 4.274, 1531, 2.461, 1532, 1.523, 1533, 2.461, 1534,
          4.274, 1535, 3.864, 1536, 2.673, 1745, 2.957, 1746, 3.389, 1747,
          3.389, 1748, 2.097, 1749, 2.097, 1750, 2.097, 1751, 2.097, 1752,
          2.097, 1753, 2.097, 1754, 2.097, 1755, 2.097, 1756, 2.097, 1757,
          2.097, 1758, 2.097, 1759, 2.097, 1760, 2.097, 1761, 2.097, 1762,
          2.097, 1763, 2.097, 1764, 2.097, 1765, 2.097, 1766, 2.097, 1767,
          2.097, 1768, 2.097, 1769, 2.097, 1770, 2.097, 1771, 2.097, 1772,
          2.097, 1773, 2.097, 1774, 2.097, 1775, 2.097, 1776, 2.097, 1777,
          2.097, 1778, 2.097, 1779, 2.097,
        ],
      ],
      [
        "title/modules/IrccDsAngularBannerModule.html",
        [1780, 2.741, 1781, 2.943],
      ],
      [
        "body/modules/IrccDsAngularBannerModule.html",
        [
          0, 0.377, 3, 0.123, 4, 0.143, 8, 0.123, 9, 0.084, 73, 0.013, 148,
          0.191, 153, 0.143, 171, 0.143, 172, 0.143, 240, 1.74, 309, 0.011, 310,
          0.011, 311, 3.834, 494, 1.322, 495, 1.322, 623, 3.43, 1781, 6.016,
          1782, 3.43, 1783, 4.073, 1784, 5.273, 1785, 5.273, 1786, 5.273, 1787,
          4.553, 1788, 3.834, 1789, 6.042, 1790, 4.297, 1791, 4.297, 1792,
          6.042, 1793, 4.852, 1794, 4.852, 1795, 4.852, 1796, 6.042, 1797,
          4.073, 1798, 4.388, 1799, 4.388, 1800, 4.852, 1801, 3.834, 1802,
          4.852, 1803, 4.086,
        ],
      ],
      [
        "title/modules/IrccDsAngularComponentsSharedModule.html",
        [1780, 2.741, 1797, 2.301],
      ],
      [
        "body/modules/IrccDsAngularComponentsSharedModule.html",
        [
          0, 0.312, 3, 0.091, 4, 0.105, 8, 0.091, 9, 0.062, 73, 0.013, 148,
          0.198, 153, 0.105, 171, 0.105, 172, 0.105, 188, 0.719, 244, 1.66, 246,
          1.66, 249, 1.66, 260, 1.66, 264, 1.66, 266, 1.66, 267, 0.977, 276,
          1.605, 277, 0.745, 278, 1.66, 280, 1.66, 283, 1.605, 288, 1.605, 289,
          1.255, 290, 1.671, 301, 1.66, 303, 1.605, 309, 0.009, 310, 0.009, 352,
          1.671, 353, 2.107, 494, 0.977, 495, 0.977, 623, 2.536, 865, 3.524,
          866, 3.524, 963, 2.676, 964, 3.524, 1563, 2.676, 1569, 2.413, 1570,
          3.244, 1573, 3.244, 1782, 2.536, 1783, 3.369, 1787, 3.765, 1788,
          2.835, 1790, 2.676, 1791, 2.676, 1793, 4.012, 1794, 4.012, 1795,
          4.012, 1797, 4.909, 1800, 4.505, 1801, 2.835, 1802, 4.505, 1803,
          3.021, 1804, 3.898, 1805, 3.898, 1806, 3.898, 1807, 3.524, 1808,
          3.524, 1809, 6.661, 1810, 4.467, 1811, 4.467, 1812, 4.467, 1813,
          4.467, 1814, 4.467, 1815, 4.467, 1816, 4.467, 1817, 4.467, 1818,
          4.467, 1819, 4.467, 1820, 5.933, 1821, 4.467, 1822, 4.467, 1823,
          5.255,
        ],
      ],
      [
        "title/modules/IrccDsAngularFormComponentsModule.html",
        [1780, 2.741, 1824, 2.943],
      ],
      [
        "body/modules/IrccDsAngularFormComponentsModule.html",
        [
          0, 0.342, 3, 0.104, 4, 0.121, 8, 0.104, 9, 0.071, 28, 1.641, 73,
          0.013, 148, 0.197, 153, 0.121, 154, 3.08, 171, 0.121, 172, 0.121, 188,
          0.828, 251, 1.697, 257, 1.587, 258, 1.018, 262, 1.641, 292, 1.641,
          293, 1.162, 299, 1.641, 305, 1.697, 309, 0.01, 310, 0.01, 494, 1.125,
          495, 1.125, 623, 2.919, 645, 1.617, 723, 1.512, 1145, 3.08, 1153,
          3.477, 1611, 3.477, 1692, 4.056, 1782, 2.919, 1783, 3.69, 1787, 4.124,
          1788, 3.263, 1790, 3.893, 1791, 3.893, 1793, 4.395, 1794, 4.395, 1795,
          4.395, 1797, 3.69, 1798, 3.734, 1799, 3.734, 1800, 4.395, 1801, 3.263,
          1802, 4.395, 1803, 3.477, 1824, 6.234, 1825, 4.487, 1826, 4.487, 1827,
          4.487, 1828, 4.056, 1829, 4.056, 1830, 5.142, 1831, 4.487, 1832,
          5.142, 1833, 5.127, 1834, 5.127, 1835, 5.142, 1836, 5.142, 1837,
          5.621,
        ],
      ],
      [
        "title/modules/IrccDsAngularHeaderFooterModule.html",
        [1780, 2.741, 1838, 2.943],
      ],
      [
        "body/modules/IrccDsAngularHeaderFooterModule.html",
        [
          0, 0.356, 3, 0.112, 4, 0.13, 8, 0.112, 9, 0.076, 73, 0.013, 148,
          0.195, 153, 0.13, 171, 0.13, 172, 0.13, 188, 0.884, 269, 1.771, 271,
          1.771, 273, 1.656, 274, 1.241, 285, 1.771, 286, 1.124, 309, 0.01, 310,
          0.01, 494, 1.201, 495, 1.201, 623, 3.117, 723, 1.614, 1049, 2.828,
          1081, 3.987, 1110, 3.712, 1782, 3.117, 1783, 3.844, 1787, 4.297, 1788,
          3.484, 1790, 4.055, 1791, 4.055, 1793, 4.578, 1794, 4.578, 1795,
          4.578, 1797, 3.844, 1798, 3.987, 1799, 3.987, 1800, 4.578, 1801,
          3.484, 1802, 4.578, 1803, 3.712, 1833, 5.341, 1834, 5.341, 1838,
          6.178, 1839, 4.791, 1840, 4.791, 1841, 4.791, 1842, 4.331, 1843,
          4.331, 1844, 5.49, 1845, 5.49, 1846, 3.712, 1847, 5.49, 1848, 5.49,
          1849, 5.791,
        ],
      ],
      [
        "title/modules/IrccDsAngularLegacyOldModule.html",
        [1780, 2.741, 1850, 2.943],
      ],
      [
        "body/modules/IrccDsAngularLegacyOldModule.html",
        [
          0, 0.35, 1, 1.706, 3, 0.109, 4, 0.126, 8, 0.109, 9, 0.074, 10, 2.632,
          73, 0.013, 148, 0.196, 153, 0.126, 163, 1.706, 164, 5.253, 165, 3.615,
          166, 4.217, 171, 0.126, 172, 0.126, 188, 0.86, 255, 1.764, 294, 1.65,
          295, 1.208, 296, 1.764, 309, 0.01, 310, 0.01, 494, 1.169, 495, 1.169,
          623, 3.035, 723, 1.572, 798, 4.217, 1632, 3.615, 1782, 3.035, 1783,
          3.781, 1787, 4.226, 1788, 3.392, 1790, 3.989, 1791, 3.989, 1793,
          4.503, 1794, 4.503, 1795, 4.503, 1797, 3.781, 1798, 3.882, 1799,
          3.882, 1800, 4.503, 1801, 3.392, 1802, 4.503, 1803, 3.615, 1831,
          4.665, 1833, 5.253, 1834, 5.253, 1850, 6.2, 1851, 4.665, 1852, 4.665,
          1853, 4.665, 1854, 4.217, 1855, 4.217, 1856, 4.217, 1857, 5.345, 1858,
          5.345, 1859, 5.253, 1860, 5.345, 1861, 5.722,
        ],
      ],
      ["title/injectables/LabelButtonService.html", [1540, 2.572, 1862, 2.741]],
      [
        "body/injectables/LabelButtonService.html",
        [
          0, 0.415, 3, 0.122, 4, 0.141, 8, 0.122, 9, 0.11, 21, 0.181, 22, 0.448,
          27, 0.423, 34, 1.723, 57, 1.354, 70, 1.781, 72, 1.649, 73, 0.013, 74,
          0.223, 77, 1.51, 78, 0.955, 81, 0.31, 107, 1.186, 113, 0.865, 148,
          0.168, 153, 0.141, 171, 0.141, 172, 0.141, 175, 1.069, 309, 0.011,
          310, 0.011, 323, 0.601, 430, 1.965, 1540, 4.53, 1862, 4.827, 1863,
          4.725, 1864, 6.889, 1865, 4.725, 1866, 7.624, 1867, 7.624, 1868,
          7.137, 1869, 7.137, 1870, 5.227, 1871, 7.137, 1872, 5.227, 1873,
          6.654, 1874, 5.227, 1875, 5.227, 1876, 5.227, 1877, 5.227, 1878, 5.99,
        ],
      ],
      ["title/components/LabelComponent.html", [0, 0.213, 283, 0.802]],
      [
        "body/components/LabelComponent.html",
        [
          0, 0.418, 1, 0.743, 2, 1.242, 3, 0.074, 4, 0.086, 5, 0.848, 6, 0.906,
          7, 0.906, 8, 0.074, 9, 0.106, 12, 0.449, 13, 0.496, 15, 0.906, 16,
          0.405, 17, 0.405, 19, 0.246, 21, 0.11, 22, 0.323, 27, 0.364, 28,
          0.719, 34, 1.242, 35, 2.012, 43, 0.512, 53, 1.242, 54, 0.999, 57,
          1.47, 67, 0.92, 70, 1.75, 72, 1.416, 73, 0.013, 74, 0.255, 76, 0.771,
          77, 1.265, 78, 0.689, 81, 0.323, 82, 1.31, 83, 0.606, 94, 1.033, 107,
          1.287, 113, 0.863, 148, 0.168, 150, 0.246, 151, 1.592, 153, 0.086,
          163, 0.743, 167, 0.215, 171, 0.173, 172, 0.086, 174, 0.422, 175,
          0.771, 188, 1.047, 201, 1.358, 228, 1.581, 232, 0.906, 233, 1.284,
          234, 1.242, 235, 0.876, 236, 1.376, 237, 0.906, 239, 0.906, 240,
          0.743, 241, 0.527, 242, 0.527, 243, 0.906, 244, 0.743, 245, 0.906,
          246, 0.743, 247, 0.848, 248, 0.906, 249, 0.743, 250, 1.284, 251,
          0.743, 252, 0.906, 253, 1.284, 254, 0.906, 255, 0.768, 256, 0.906,
          257, 0.695, 258, 0.719, 259, 0.906, 260, 0.743, 261, 0.906, 262,
          0.719, 263, 0.906, 264, 0.743, 265, 0.906, 266, 0.743, 267, 0.794,
          268, 0.906, 269, 0.768, 270, 0.906, 271, 0.768, 272, 0.906, 273,
          0.719, 274, 0.821, 275, 0.906, 276, 0.719, 277, 0.606, 278, 0.743,
          279, 0.906, 280, 0.743, 281, 1.284, 282, 1.491, 283, 1.287, 284,
          0.906, 285, 0.768, 286, 0.743, 287, 0.906, 288, 0.719, 289, 1.089,
          290, 0.743, 291, 0.906, 292, 0.719, 293, 0.821, 294, 0.719, 295,
          0.821, 296, 0.768, 297, 0.848, 298, 0.906, 299, 0.719, 300, 0.906,
          301, 0.743, 302, 0.906, 303, 0.719, 304, 0.906, 305, 0.743, 306,
          0.876, 307, 0.906, 308, 0.906, 309, 0.008, 310, 0.008, 323, 0.516,
          346, 1.358, 367, 2.819, 430, 1.326, 443, 2.175, 444, 1.676, 446, 2.6,
          494, 0.794, 495, 0.794, 496, 1.222, 497, 1.222, 665, 1.408, 672,
          2.779, 674, 2.645, 685, 1.79, 704, 1.925, 706, 2.157, 715, 2.012, 717,
          2.157, 723, 1.068, 724, 1.857, 725, 1.31, 726, 1.31, 727, 1.857, 728,
          1.857, 729, 1.732, 731, 1.31, 742, 1.31, 743, 1.31, 753, 1.578, 759,
          1.358, 760, 1.358, 761, 1.358, 765, 1.142, 779, 1.37, 780, 1.996, 784,
          4.126, 855, 2.455, 1411, 2.175, 1424, 2.062, 1508, 2.455, 1537, 2.455,
          1538, 2.864, 1539, 2.304, 1540, 4.126, 1541, 2.637, 1542, 2.864, 1543,
          2.864, 1544, 2.062, 1545, 3.48, 1546, 2.637, 1547, 3.48, 1548, 2.637,
          1549, 2.637, 1550, 4.059, 1551, 4.715, 1552, 4.715, 1553, 4.059, 1554,
          4.059, 1555, 2.864, 1556, 2.864, 1557, 5.129, 1558, 2.864, 1559,
          5.129, 1560, 3.266, 1879, 5.146, 1880, 3.631, 1881, 3.631, 1882,
          3.631, 1883, 3.631, 1884, 3.631, 1885, 3.631, 1886, 5.146, 1887,
          5.146,
        ],
      ],
      [
        "title/injectables/LanguageSwitchButtonService.html",
        [1862, 2.741, 1888, 2.943],
      ],
      [
        "body/injectables/LanguageSwitchButtonService.html",
        [
          0, 0.415, 3, 0.121, 4, 0.141, 8, 0.121, 9, 0.11, 21, 0.181, 22, 0.447,
          34, 1.719, 70, 1.778, 73, 0.013, 77, 1.507, 78, 0.953, 107, 1.181,
          113, 0.862, 148, 0.168, 153, 0.141, 171, 0.141, 172, 0.141, 175,
          1.067, 309, 0.011, 310, 0.011, 430, 1.962, 1049, 4.061, 1846, 5.332,
          1862, 4.816, 1863, 4.708, 1865, 4.708, 1870, 5.208, 1872, 5.208, 1873,
          5.208, 1874, 5.208, 1875, 5.208, 1876, 5.208, 1877, 5.208, 1888,
          5.172, 1889, 5.726, 1890, 6.22, 1891, 7.613, 1892, 7.613, 1893, 7.884,
          1894, 7.122, 1895, 7.122, 1896, 5.968,
        ],
      ],
      ["title/components/LanguageSwitchComponent.html", [0, 0.213, 285, 0.858]],
      [
        "body/components/LanguageSwitchComponent.html",
        [
          0, 0.424, 1, 0.769, 2, 1.272, 3, 0.076, 4, 0.089, 5, 0.878, 6, 0.937,
          7, 0.937, 8, 0.076, 9, 0.109, 12, 0.459, 13, 0.505, 15, 0.937, 16,
          0.406, 17, 0.406, 19, 0.252, 21, 0.114, 22, 0.331, 27, 0.43, 28,
          0.744, 34, 1.272, 43, 0.48, 53, 1.272, 57, 1.572, 63, 3.345, 67,
          0.942, 70, 1.817, 72, 1.676, 73, 0.013, 74, 0.268, 76, 0.789, 77,
          1.397, 78, 0.884, 79, 1.359, 81, 0.293, 83, 1.159, 96, 2.541, 97,
          2.715, 107, 1.307, 111, 2.25, 113, 0.953, 148, 0.156, 149, 1.935, 150,
          0.252, 153, 0.089, 163, 0.769, 171, 0.164, 172, 0.089, 188, 1.063,
          228, 1.246, 232, 0.937, 233, 1.315, 234, 1.272, 235, 0.907, 236,
          1.397, 237, 0.937, 239, 0.937, 240, 0.769, 241, 0.528, 242, 0.528,
          243, 0.937, 244, 0.769, 245, 0.937, 246, 0.769, 247, 0.878, 248,
          0.937, 249, 0.769, 250, 1.315, 251, 0.769, 252, 0.937, 253, 1.315,
          254, 0.937, 255, 0.795, 256, 0.937, 257, 0.719, 258, 0.744, 259,
          0.937, 260, 0.769, 261, 0.937, 262, 0.744, 263, 0.937, 264, 0.769,
          265, 0.937, 266, 0.769, 267, 0.822, 268, 0.937, 269, 0.795, 270,
          0.937, 271, 0.795, 272, 0.937, 273, 0.744, 274, 0.849, 275, 0.937,
          276, 0.744, 277, 0.627, 278, 0.769, 279, 0.937, 280, 0.769, 281,
          1.315, 282, 1.519, 283, 0.744, 284, 0.937, 285, 1.397, 286, 1.475,
          287, 0.937, 288, 0.744, 289, 1.115, 290, 0.769, 291, 0.937, 292,
          0.744, 293, 0.849, 294, 0.744, 295, 0.849, 296, 0.795, 297, 0.878,
          298, 0.937, 299, 0.744, 300, 0.937, 301, 0.769, 302, 0.937, 303,
          0.744, 304, 0.937, 305, 0.769, 306, 0.907, 307, 0.937, 308, 0.937,
          309, 0.008, 310, 0.008, 323, 0.611, 430, 1.569, 442, 4.6, 444, 1.701,
          474, 2.964, 494, 0.822, 495, 0.822, 684, 2.198, 706, 2.198, 779,
          1.622, 843, 2.964, 1000, 4.158, 1049, 4.051, 1076, 2.964, 1491, 4.803,
          1541, 2.728, 1608, 4.464, 1801, 2.384, 1846, 5.318, 1888, 4.794, 1889,
          5.711, 1890, 5.96, 1897, 2.964, 1898, 5.271, 1899, 6.089, 1900, 5.271,
          1901, 5.271, 1902, 3.757, 1903, 6.089, 1904, 5.271, 1905, 5.271, 1906,
          3.757, 1907, 3.757, 1908, 5.271, 1909, 5.271, 1910, 5.271, 1911,
          5.271, 1912, 5.271, 1913, 5.271, 1914, 3.757, 1915, 3.757, 1916,
          5.271, 1917, 3.757, 1918, 3.757, 1919, 3.757, 1920, 3.757, 1921,
          3.757, 1922, 3.757, 1923, 3.757, 1924, 4.158, 1925, 3.279, 1926,
          4.158, 1927, 4.158, 1928, 3.279, 1929, 4.158, 1930, 3.757, 1931,
          6.089, 1932, 3.757, 1933, 3.757, 1934, 3.757, 1935, 3.757,
        ],
      ],
      [
        "title/components/ProgressIndicatorComponent.html",
        [0, 0.213, 288, 0.802],
      ],
      [
        "body/components/ProgressIndicatorComponent.html",
        [
          0, 0.417, 1, 0.725, 2, 1.221, 3, 0.072, 4, 0.084, 5, 0.828, 6, 0.884,
          7, 0.884, 8, 0.072, 9, 0.107, 12, 0.441, 13, 0.489, 15, 0.884, 16,
          0.404, 17, 0.404, 19, 0.242, 21, 0.107, 22, 0.318, 27, 0.417, 28,
          0.701, 34, 1.221, 43, 0.507, 53, 1.221, 57, 1.537, 60, 2.737, 61,
          2.605, 67, 0.634, 70, 1.769, 72, 1.623, 73, 0.013, 74, 0.277, 77,
          1.361, 78, 0.861, 81, 0.288, 85, 2.092, 86, 1.426, 94, 1.829, 107,
          1.167, 113, 0.851, 148, 0.16, 150, 0.242, 151, 1.347, 153, 0.084, 163,
          0.725, 167, 0.211, 171, 0.167, 172, 0.084, 174, 0.417, 175, 0.531,
          176, 1.745, 188, 0.814, 214, 2.494, 228, 1.035, 232, 0.884, 233,
          1.262, 234, 1.221, 235, 0.855, 236, 1.361, 237, 0.884, 239, 0.884,
          240, 0.725, 241, 0.526, 242, 0.526, 243, 0.884, 244, 0.725, 245,
          0.884, 246, 0.725, 247, 0.828, 248, 0.884, 249, 0.725, 250, 1.262,
          251, 0.725, 252, 0.884, 253, 1.262, 254, 0.884, 255, 0.75, 256, 0.884,
          257, 0.678, 258, 0.701, 259, 0.884, 260, 0.725, 261, 0.884, 262,
          0.701, 263, 0.884, 264, 0.725, 265, 0.884, 266, 0.725, 267, 0.775,
          268, 0.884, 269, 0.75, 270, 0.884, 271, 0.75, 272, 0.884, 273, 0.701,
          274, 0.801, 275, 0.884, 276, 0.701, 277, 0.591, 278, 0.725, 279,
          0.884, 280, 0.725, 281, 1.262, 282, 1.471, 283, 0.701, 284, 0.884,
          285, 0.75, 286, 0.725, 287, 0.884, 288, 1.273, 289, 1.54, 290, 0.725,
          291, 0.884, 292, 0.701, 293, 0.801, 294, 0.701, 295, 0.801, 296, 0.75,
          297, 0.828, 298, 0.884, 299, 0.701, 300, 0.884, 301, 0.725, 302,
          0.884, 303, 0.701, 304, 0.884, 305, 0.725, 306, 0.855, 307, 0.884,
          308, 0.884, 309, 0.008, 310, 0.008, 323, 0.78, 356, 0.975, 369, 0.703,
          370, 0.703, 384, 0.57, 443, 2.123, 444, 1.658, 490, 1.143, 491, 0.678,
          492, 0.678, 494, 0.775, 495, 0.775, 554, 0.975, 672, 2.731, 704,
          1.892, 706, 2.128, 759, 1.325, 760, 1.325, 761, 1.325, 779, 1.347,
          824, 2.036, 1133, 2.731, 1425, 3.42, 1426, 3.42, 1561, 3.988, 1562,
          4.363, 1563, 4.602, 1564, 2.249, 1565, 3.988, 1566, 4.652, 1567, 3.42,
          1568, 3.029, 1569, 1.914, 1570, 2.574, 1571, 3.348, 1572, 3.348, 1573,
          2.574, 1574, 3.42, 1575, 2.574, 1576, 3.42, 1577, 2.574, 1578, 4.652,
          1579, 3.673, 1580, 3.861, 1581, 2.872, 1582, 4.652, 1583, 4.652, 1584,
          4.652, 1585, 5.742, 1586, 3.42, 1587, 3.21, 1588, 3.99, 1589, 2.795,
          1590, 3.99, 1936, 5.057, 1937, 5.057, 1938, 3.544, 1939, 3.544, 1940,
          3.544, 1941, 3.544, 1942, 3.544, 1943, 3.544, 1944, 3.544,
        ],
      ],
      ["title/components/ProgressTagsComponent.html", [0, 0.213, 290, 0.83]],
      [
        "body/components/ProgressTagsComponent.html",
        [
          0, 0.42, 1, 0.767, 2, 1.27, 3, 0.076, 4, 0.088, 5, 0.875, 6, 0.934, 7,
          0.934, 8, 0.076, 9, 0.108, 12, 0.458, 13, 0.504, 15, 0.934, 16, 0.406,
          17, 0.406, 19, 0.252, 21, 0.113, 22, 0.33, 27, 0.265, 28, 0.741, 34,
          1.27, 43, 0.519, 53, 1.27, 54, 1.031, 57, 1.374, 67, 0.67, 70, 1.792,
          72, 1.031, 73, 0.013, 74, 0.289, 77, 1.286, 78, 0.814, 81, 0.268, 83,
          1.014, 107, 1.203, 113, 0.952, 148, 0.143, 150, 0.332, 153, 0.088,
          163, 0.767, 167, 0.156, 171, 0.164, 172, 0.088, 174, 0.43, 176, 1.844,
          188, 0.847, 228, 1.077, 232, 0.934, 233, 1.312, 234, 1.27, 235, 0.904,
          236, 1.395, 237, 0.934, 239, 0.934, 240, 0.767, 241, 0.528, 242,
          0.528, 243, 0.934, 244, 0.767, 245, 0.934, 246, 0.767, 247, 0.875,
          248, 0.934, 249, 0.767, 250, 1.312, 251, 0.767, 252, 0.934, 253,
          1.312, 254, 0.934, 255, 0.793, 256, 0.934, 257, 0.717, 258, 0.741,
          259, 0.934, 260, 0.767, 261, 0.934, 262, 0.741, 263, 0.934, 264,
          0.767, 265, 0.934, 266, 0.767, 267, 0.819, 268, 0.934, 269, 0.793,
          270, 0.934, 271, 0.793, 272, 0.934, 273, 0.741, 274, 0.847, 275,
          0.934, 276, 0.741, 277, 0.625, 278, 0.767, 279, 0.934, 280, 0.767,
          281, 1.312, 282, 1.516, 283, 0.741, 284, 0.934, 285, 0.793, 286,
          0.767, 287, 0.934, 288, 0.741, 289, 1.565, 290, 1.349, 291, 0.934,
          292, 0.741, 293, 0.847, 294, 0.741, 295, 0.847, 296, 0.793, 297,
          0.875, 298, 0.934, 299, 0.741, 300, 0.934, 301, 0.767, 302, 0.934,
          303, 0.741, 304, 0.934, 305, 0.767, 306, 0.904, 307, 0.934, 308,
          0.934, 309, 0.008, 310, 0.008, 323, 0.722, 346, 1.967, 356, 1.031,
          359, 2.199, 360, 2.59, 369, 0.917, 370, 0.917, 384, 1.061, 422, 1.844,
          440, 2.557, 443, 2.243, 444, 1.699, 490, 1.57, 491, 0.717, 492, 0.717,
          494, 0.819, 495, 0.819, 521, 1.218, 543, 1.628, 627, 1.27, 628, 0.819,
          631, 1.967, 779, 1.619, 976, 2.986, 1258, 2.127, 1261, 2.986, 1544,
          2.127, 1562, 4.414, 1568, 3.641, 1569, 4.199, 1591, 2.533, 1592, 3.82,
          1593, 2.955, 1594, 4.415, 1595, 2.955, 1596, 3.82, 1597, 2.955, 1598,
          2.955, 1599, 2.955, 1600, 2.955, 1601, 2.955, 1602, 5.478, 1603,
          4.149, 1604, 4.59, 1605, 4.59, 1606, 4.415, 1607, 4.788, 1608, 3.557,
          1945, 5.26, 1946, 3.745, 1947, 3.745, 1948, 3.745, 1949, 3.745, 1950,
          3.745, 1951, 3.745, 1952, 3.745, 1953, 5.26, 1954, 5.26, 1955, 5.26,
          1956, 5.26, 1957, 5.26,
        ],
      ],
      ["title/components/RadioInputComponent.html", [0, 0.213, 292, 0.802]],
      [
        "body/components/RadioInputComponent.html",
        [
          0, 0.428, 1, 0.538, 2, 0.978, 3, 0.053, 4, 0.062, 5, 0.614, 6, 0.655,
          7, 0.655, 8, 0.053, 9, 0.112, 12, 0.353, 13, 0.41, 15, 0.655, 16,
          0.394, 17, 0.394, 19, 0.194, 21, 0.15, 22, 0.254, 27, 0.482, 28, 0.52,
          34, 0.978, 35, 1.663, 43, 0.437, 53, 0.978, 54, 1.651, 57, 1.541, 58,
          1.848, 67, 0.724, 70, 1.878, 72, 1.744, 73, 0.013, 74, 0.284, 76,
          0.832, 77, 1.538, 78, 1.011, 79, 1.044, 81, 0.315, 82, 0.948, 83,
          0.824, 85, 1.607, 107, 1.439, 113, 1.01, 138, 1.745, 148, 0.156, 150,
          0.303, 153, 0.062, 163, 0.538, 167, 0.169, 171, 0.117, 172, 0.062,
          174, 0.424, 175, 0.607, 188, 0.423, 201, 1.515, 215, 2.187, 228,
          1.352, 232, 0.655, 233, 1.01, 234, 0.978, 235, 0.634, 236, 1.175, 237,
          0.655, 239, 0.655, 240, 0.538, 241, 0.51, 242, 0.51, 243, 0.655, 244,
          0.538, 245, 0.655, 246, 0.538, 247, 0.614, 248, 0.655, 249, 0.538,
          250, 1.01, 251, 0.538, 252, 0.655, 253, 1.01, 254, 0.655, 255, 0.556,
          256, 0.655, 257, 0.503, 258, 0.52, 259, 0.655, 260, 0.538, 261, 0.655,
          262, 0.52, 263, 0.655, 264, 0.538, 265, 0.655, 266, 0.538, 267, 0.575,
          268, 0.655, 269, 0.556, 270, 0.655, 271, 0.556, 272, 0.655, 273, 0.52,
          274, 0.594, 275, 0.655, 276, 0.52, 277, 0.438, 278, 0.538, 279, 0.655,
          280, 0.538, 281, 1.01, 282, 1.233, 283, 0.52, 284, 0.655, 285, 0.556,
          286, 0.538, 287, 0.655, 288, 0.52, 289, 0.857, 290, 0.538, 291, 0.655,
          292, 1.254, 293, 1.356, 294, 0.52, 295, 0.594, 296, 0.556, 297, 0.614,
          298, 0.655, 299, 0.52, 300, 0.655, 301, 0.538, 302, 0.655, 303, 0.52,
          304, 0.655, 305, 0.538, 306, 0.634, 307, 0.655, 308, 0.655, 309,
          0.006, 310, 0.006, 323, 0.635, 339, 1.411, 369, 0.563, 370, 0.563,
          384, 0.423, 430, 0.677, 440, 2.154, 444, 1.431, 446, 2.354, 490,
          1.117, 491, 0.503, 492, 0.503, 494, 0.575, 495, 0.575, 496, 0.884,
          497, 0.884, 554, 1.36, 599, 1.935, 627, 0.978, 628, 1.312, 637, 1.142,
          645, 2.537, 647, 2.331, 648, 1.63, 649, 1.63, 650, 1.989, 651, 1.63,
          652, 1.989, 653, 1.462, 656, 2.546, 657, 1.989, 658, 2.607, 659,
          2.236, 660, 2.669, 662, 1.989, 663, 2.829, 665, 2.326, 666, 3.264,
          668, 2.86, 669, 2.739, 670, 2.739, 672, 2.187, 673, 2.57, 674, 2.663,
          675, 1.777, 678, 3.239, 684, 1.462, 685, 1.36, 687, 2.148, 692, 1.76,
          693, 2.086, 701, 1.76, 704, 1.515, 706, 1.783, 709, 1.989, 711, 2.546,
          715, 1.663, 716, 2.658, 717, 1.462, 723, 0.773, 724, 1.462, 725,
          0.948, 726, 0.948, 727, 1.462, 728, 1.462, 729, 1.363, 730, 1.058,
          731, 0.948, 740, 1.777, 742, 0.948, 743, 0.948, 744, 1.058, 751,
          1.353, 753, 1.142, 756, 2.546, 757, 1.142, 758, 1.353, 759, 0.983,
          760, 0.983, 761, 0.983, 762, 1.63, 763, 1.63, 764, 2.551, 765, 1.273,
          766, 1.63, 768, 1.63, 769, 1.63, 770, 1.833, 771, 1.058, 772, 1.058,
          774, 2.086, 775, 1.353, 776, 1.353, 777, 1.353, 778, 2.148, 779,
          1.079, 780, 1.571, 784, 2.57, 861, 2.187, 908, 1.989, 970, 1.777,
          1017, 1.492, 1225, 1.76, 1226, 2.426, 1278, 1.994, 1324, 2.426, 1339,
          2.426, 1352, 1.574, 1368, 2.086, 1371, 3.09, 1461, 2.299, 1521, 2.299,
          1609, 3.342, 1610, 5.859, 1611, 5.456, 1612, 1.574, 1613, 2.073, 1614,
          2.739, 1615, 3.195, 1616, 2.073, 1617, 1.667, 1618, 1.667, 1619, 2.57,
          1620, 2.57, 1621, 1.667, 1622, 2.57, 1623, 2.57, 1624, 3.524, 1625,
          3.195, 1626, 3.195, 1627, 3.195, 1628, 3.195, 1629, 2.073, 1958, 4.05,
          1959, 4.05, 1960, 2.627, 1961, 2.627, 1962, 2.627, 1963, 2.627, 1964,
          2.627, 1965, 2.627, 1966, 2.627, 1967, 2.627, 1968, 2.627, 1969,
          2.627, 1970, 2.627, 1971, 2.627, 1972, 2.627, 1973, 2.627, 1974,
          2.627, 1975, 2.627, 1976, 2.627, 1977, 2.627, 1978, 2.627, 1979,
          2.627, 1980, 2.627, 1981, 2.627, 1982, 3.534,
        ],
      ],
      ["title/components/SearchInputComponent.html", [0, 0.213, 294, 0.802]],
      [
        "body/components/SearchInputComponent.html",
        [
          0, 0.418, 1, 0.904, 2, 1.421, 3, 0.09, 4, 0.104, 5, 1.031, 6, 1.101,
          7, 1.101, 8, 0.09, 9, 0.105, 10, 3.727, 12, 0.513, 13, 0.549, 15,
          1.101, 16, 0.41, 17, 0.41, 19, 0.282, 21, 0.134, 22, 0.37, 28, 0.874,
          34, 1.421, 43, 0.556, 53, 1.421, 57, 1.331, 61, 3.032, 67, 1.184, 70,
          1.719, 73, 0.013, 74, 0.219, 77, 0.934, 78, 0.591, 81, 0.287, 83,
          0.736, 94, 2.009, 107, 0.874, 113, 0.85, 148, 0.139, 150, 0.338, 151,
          1.568, 153, 0.104, 163, 0.904, 167, 0.246, 171, 0.156, 172, 0.104,
          174, 0.468, 175, 0.992, 232, 1.101, 233, 1.468, 234, 1.421, 235,
          1.066, 236, 1.495, 237, 1.101, 239, 1.101, 240, 0.904, 241, 0.533,
          242, 0.533, 243, 1.101, 244, 0.904, 245, 1.101, 246, 0.904, 247,
          1.031, 248, 1.101, 249, 0.904, 250, 1.468, 251, 0.904, 252, 1.101,
          253, 1.468, 254, 1.101, 255, 0.934, 256, 1.101, 257, 0.845, 258,
          0.874, 259, 1.101, 260, 0.904, 261, 1.101, 262, 0.874, 263, 1.101,
          264, 0.904, 265, 1.101, 266, 0.904, 267, 0.966, 268, 1.101, 269,
          0.934, 270, 1.101, 271, 0.934, 272, 1.101, 273, 0.874, 274, 0.998,
          275, 1.101, 276, 0.874, 277, 0.736, 278, 0.904, 279, 1.101, 280,
          0.904, 281, 1.468, 282, 1.652, 283, 0.874, 284, 1.101, 285, 0.934,
          286, 0.904, 287, 1.101, 288, 0.874, 289, 1.246, 290, 0.904, 291,
          1.101, 292, 0.874, 293, 0.998, 294, 1.398, 295, 1.663, 296, 0.934,
          297, 1.031, 298, 1.101, 299, 0.874, 300, 1.101, 301, 0.904, 302,
          1.101, 303, 0.874, 304, 1.101, 305, 0.904, 306, 1.066, 307, 1.101,
          308, 1.101, 309, 0.009, 310, 0.009, 659, 2.997, 723, 1.298, 828,
          2.985, 1424, 2.506, 1461, 3.342, 1612, 2.644, 1630, 3.98, 1631, 5.496,
          1632, 5.118, 1633, 4.478, 1634, 3.482, 1635, 3.482, 1636, 5.224, 1637,
          5.224, 1638, 3.482, 1983, 5.886, 1984, 4.414, 1985, 4.414, 1986,
          4.414, 1987, 5.886,
        ],
      ],
      ["title/components/SecondaryChipsComponent.html", [0, 0.213, 296, 0.858]],
      [
        "body/components/SecondaryChipsComponent.html",
        [
          0, 0.412, 1, 0.957, 2, 1.475, 3, 0.095, 4, 0.11, 5, 1.092, 6, 1.166,
          7, 1.166, 8, 0.095, 9, 0.1, 10, 3.557, 12, 0.533, 13, 0.565, 15,
          1.166, 16, 0.411, 17, 0.411, 19, 0.292, 21, 0.142, 28, 0.925, 34,
          1.475, 43, 0.569, 53, 1.475, 57, 1.382, 67, 1.218, 70, 1.591, 73,
          0.013, 74, 0.174, 81, 0.249, 107, 0.925, 113, 0.882, 148, 0.11, 150,
          0.292, 153, 0.11, 163, 0.957, 171, 0.11, 172, 0.11, 228, 1.251, 232,
          1.166, 233, 1.524, 234, 1.475, 235, 1.128, 236, 1.529, 237, 1.166,
          239, 1.166, 240, 0.957, 241, 0.536, 242, 0.536, 243, 1.166, 244,
          0.957, 245, 1.166, 246, 0.957, 247, 1.092, 248, 1.166, 249, 0.957,
          250, 1.524, 251, 0.957, 252, 1.166, 253, 1.524, 254, 1.166, 255,
          0.989, 256, 1.166, 257, 0.894, 258, 0.925, 259, 1.166, 260, 0.957,
          261, 1.166, 262, 0.925, 263, 1.166, 264, 0.957, 265, 1.166, 266,
          0.957, 267, 1.022, 268, 1.166, 269, 0.989, 270, 1.166, 271, 0.989,
          272, 1.166, 273, 0.925, 274, 1.056, 275, 1.166, 276, 0.925, 277,
          0.779, 278, 0.957, 279, 1.166, 280, 0.957, 281, 1.524, 282, 1.699,
          283, 0.925, 284, 1.166, 285, 0.989, 286, 0.957, 287, 1.166, 288,
          0.925, 289, 1.293, 290, 0.957, 291, 1.166, 292, 0.925, 293, 1.056,
          294, 0.925, 295, 1.056, 296, 1.529, 297, 1.751, 298, 1.166, 299,
          0.925, 300, 1.166, 301, 0.957, 302, 1.166, 303, 0.925, 304, 1.166,
          305, 0.957, 306, 1.128, 307, 1.166, 308, 1.166, 309, 0.009, 310,
          0.009, 791, 6.542, 1859, 5.698, 1988, 6.304, 1989, 4.078, 1990, 6.111,
          1991, 6.111, 1992, 6.111, 1993, 4.673,
        ],
      ],
      ["title/components/SelectComponent.html", [0, 0.213, 299, 0.802]],
      [
        "body/components/SelectComponent.html",
        [
          0, 0.431, 1, 0.561, 2, 1.009, 3, 0.056, 4, 0.065, 5, 0.64, 6, 0.683,
          7, 0.683, 8, 0.056, 9, 0.113, 12, 0.364, 13, 0.421, 15, 0.683, 16,
          0.396, 17, 0.396, 19, 0.2, 21, 0.083, 22, 0.263, 27, 0.488, 28, 0.542,
          34, 1.009, 35, 1.706, 42, 3.837, 43, 0.447, 52, 2.827, 53, 1.009, 54,
          1.562, 57, 1.562, 58, 1.024, 67, 0.747, 70, 1.894, 72, 1.773, 73,
          0.013, 74, 0.286, 76, 1.035, 77, 1.528, 78, 0.983, 79, 1.727, 81,
          0.31, 82, 0.988, 83, 0.846, 97, 1.411, 107, 1.475, 113, 1.075, 138,
          1.723, 148, 0.158, 150, 0.2, 153, 0.065, 156, 1.239, 163, 0.561, 167,
          0.174, 171, 0.12, 172, 0.065, 174, 0.401, 175, 0.626, 188, 0.441, 228,
          1.449, 232, 0.683, 233, 1.043, 234, 1.009, 235, 0.661, 236, 1.201,
          237, 0.683, 239, 0.683, 240, 0.561, 241, 0.513, 242, 0.513, 243,
          0.683, 244, 0.561, 245, 0.683, 246, 0.561, 247, 0.64, 248, 0.683, 249,
          0.561, 250, 1.043, 251, 0.561, 252, 0.683, 253, 1.043, 254, 0.683,
          255, 0.579, 256, 0.683, 257, 0.524, 258, 1.004, 259, 0.683, 260,
          0.561, 261, 0.683, 262, 0.542, 263, 0.683, 264, 0.561, 265, 0.683,
          266, 0.561, 267, 0.599, 268, 0.683, 269, 0.579, 270, 0.683, 271,
          0.579, 272, 0.683, 273, 0.542, 274, 0.619, 275, 0.683, 276, 0.542,
          277, 0.457, 278, 0.561, 279, 0.683, 280, 0.561, 281, 1.043, 282,
          1.265, 283, 0.542, 284, 0.683, 285, 0.579, 286, 0.561, 287, 0.683,
          288, 0.542, 289, 0.885, 290, 0.561, 291, 0.683, 292, 0.542, 293,
          0.619, 294, 0.542, 295, 0.619, 296, 0.579, 297, 0.64, 298, 0.683, 299,
          1.275, 300, 0.683, 301, 0.561, 302, 0.683, 303, 0.542, 304, 0.683,
          305, 0.561, 306, 0.661, 307, 0.683, 308, 0.683, 309, 0.006, 310,
          0.006, 323, 0.508, 339, 1.457, 369, 0.381, 370, 0.381, 373, 1.738,
          384, 0.441, 430, 0.706, 444, 1.462, 446, 2.383, 490, 0.945, 491,
          0.524, 492, 0.524, 494, 0.599, 495, 0.599, 496, 0.922, 497, 0.922,
          628, 1.241, 645, 2.557, 647, 2.392, 648, 1.683, 649, 1.683, 650,
          2.041, 651, 1.683, 652, 2.041, 653, 1.509, 656, 2.612, 657, 2.041,
          658, 2.656, 659, 2.294, 662, 2.041, 663, 2.882, 665, 2.37, 666, 3.318,
          668, 2.923, 669, 2.827, 670, 2.827, 672, 2.258, 673, 2.653, 674,
          2.555, 675, 1.852, 684, 1.83, 685, 1.395, 687, 2.204, 692, 1.817, 693,
          2.153, 701, 1.817, 704, 1.563, 706, 1.83, 709, 2.041, 711, 2.612, 715,
          1.706, 716, 2.593, 717, 1.509, 723, 0.805, 724, 1.509, 725, 0.988,
          726, 0.988, 727, 1.509, 728, 1.509, 729, 1.407, 730, 1.102, 731,
          0.988, 742, 0.988, 743, 0.988, 744, 1.102, 751, 1.411, 756, 2.612,
          757, 1.19, 758, 1.411, 759, 1.024, 760, 1.024, 761, 1.024, 762, 1.683,
          763, 1.683, 764, 2.593, 765, 1.314, 766, 1.683, 768, 1.683, 769,
          1.683, 771, 1.102, 772, 1.102, 774, 2.153, 775, 1.411, 776, 1.411,
          777, 1.411, 778, 2.467, 779, 1.113, 780, 1.621, 784, 2.653, 1017,
          1.555, 1030, 2.258, 1152, 2.738, 1212, 2.504, 1217, 1.64, 1221, 1.64,
          1225, 1.817, 1265, 1.64, 1368, 2.153, 1371, 3.148, 1456, 1.64, 1475,
          1.64, 1521, 1.555, 1539, 1.738, 1560, 2.653, 1617, 2.653, 1618, 1.738,
          1619, 2.653, 1620, 2.653, 1621, 1.738, 1622, 2.653, 1623, 2.653, 1624,
          3.601, 1639, 1.989, 1640, 2.827, 1641, 2.16, 1642, 2.16, 1643, 2.16,
          1644, 3.298, 1645, 4, 1646, 4, 1647, 3.298, 1648, 2.16, 1649, 4.476,
          1650, 4, 1651, 4.476, 1652, 2.16, 1653, 2.16, 1654, 2.16, 1655, 2.16,
          1656, 2.16, 1982, 3.648, 1994, 4.18, 1995, 2.738, 1996, 2.738, 1997,
          2.738, 1998, 2.738, 1999, 2.738, 2000, 2.738, 2001, 2.738, 2002,
          2.738, 2003, 2.738, 2004, 2.738, 2005, 2.738, 2006, 2.738, 2007,
          2.738, 2008, 2.738, 2009, 2.738, 2010, 2.738, 2011, 2.738, 2012,
          2.738, 2013, 2.738, 2014, 2.738, 2015, 2.738, 2016, 2.738, 2017,
          2.738, 2018, 4.18,
        ],
      ],
      ["title/components/SpinnerComponent.html", [0, 0.213, 301, 0.83]],
      [
        "body/components/SpinnerComponent.html",
        [
          0, 0.43, 1, 0.76, 2, 1.262, 3, 0.075, 4, 0.088, 5, 0.867, 6, 0.926, 7,
          0.926, 8, 0.075, 9, 0.112, 12, 0.455, 13, 0.502, 15, 0.926, 16, 0.405,
          17, 0.405, 19, 0.25, 21, 0.112, 22, 0.328, 27, 0.262, 28, 0.735, 34,
          1.262, 43, 0.517, 53, 1.262, 54, 1.021, 57, 1.367, 67, 0.663, 70,
          1.865, 72, 1.021, 73, 0.013, 74, 0.292, 77, 1.28, 78, 0.81, 81, 0.292,
          83, 1.009, 107, 1.3, 113, 0.948, 148, 0.143, 150, 0.36, 153, 0.088,
          163, 0.76, 167, 0.155, 171, 0.163, 172, 0.088, 174, 0.428, 176, 1.828,
          188, 0.841, 228, 1.07, 232, 0.926, 233, 1.304, 234, 1.262, 235, 0.896,
          236, 1.389, 237, 0.926, 239, 0.926, 240, 0.76, 241, 0.528, 242, 0.528,
          243, 0.926, 244, 0.76, 245, 0.926, 246, 0.76, 247, 0.867, 248, 0.926,
          249, 0.76, 250, 1.304, 251, 0.76, 252, 0.926, 253, 1.304, 254, 0.926,
          255, 0.785, 256, 0.926, 257, 0.71, 258, 0.735, 259, 0.926, 260, 0.76,
          261, 0.926, 262, 0.735, 263, 0.926, 264, 0.76, 265, 0.926, 266, 0.76,
          267, 0.812, 268, 0.926, 269, 0.785, 270, 0.926, 271, 0.785, 272,
          0.926, 273, 0.735, 274, 0.839, 275, 0.926, 276, 0.735, 277, 0.619,
          278, 0.76, 279, 0.926, 280, 0.76, 281, 1.304, 282, 1.509, 283, 0.735,
          284, 0.926, 285, 0.785, 286, 0.76, 287, 0.926, 288, 0.735, 289, 1.106,
          290, 0.76, 291, 0.926, 292, 0.735, 293, 0.839, 294, 0.735, 295, 0.839,
          296, 0.785, 297, 0.867, 298, 0.926, 299, 0.735, 300, 0.926, 301,
          1.344, 302, 0.926, 303, 0.735, 304, 0.926, 305, 0.76, 306, 0.896, 307,
          0.926, 308, 0.926, 309, 0.008, 310, 0.008, 323, 0.72, 356, 1.021, 359,
          2.185, 360, 2.979, 363, 2.465, 369, 0.998, 370, 0.998, 384, 1.057,
          440, 2.547, 443, 2.223, 444, 1.692, 491, 0.71, 492, 0.71, 494, 0.812,
          495, 0.812, 521, 2.135, 543, 1.613, 627, 1.262, 628, 0.812, 631,
          1.954, 685, 1.807, 779, 1.392, 839, 2.822, 976, 2.967, 1258, 2.107,
          1261, 2.967, 1352, 3.933, 1374, 4.68, 1544, 2.107, 1565, 4.44, 1580,
          2.967, 1581, 2.107, 1586, 4.68, 1606, 4.393, 1607, 4.768, 1608, 3.534,
          1657, 4.393, 1658, 2.51, 1659, 6.04, 1660, 3.795, 1661, 2.928, 1662,
          3.795, 1663, 2.928, 1664, 2.928, 1665, 5.459, 1666, 4.561, 1667,
          4.561, 1668, 4.561, 1669, 3.239, 1670, 5.73, 2019, 5.226, 2020, 3.711,
          2021, 3.711, 2022, 3.711, 2023, 3.711, 2024, 3.711, 2025, 3.711, 2026,
          3.711, 2027, 3.711, 2028, 3.711, 2029, 3.711, 2030, 3.711,
        ],
      ],
      ["title/components/TabsComponent.html", [0, 0.213, 303, 0.802]],
      [
        "body/components/TabsComponent.html",
        [
          0, 0.408, 1, 0.857, 2, 1.371, 3, 0.085, 4, 0.099, 5, 0.978, 6, 1.044,
          7, 1.044, 8, 0.085, 9, 0.1, 12, 0.495, 13, 0.535, 15, 1.044, 16,
          0.409, 17, 0.409, 19, 0.272, 21, 0.127, 27, 0.296, 28, 0.829, 34,
          1.371, 43, 0.545, 52, 4.359, 53, 1.371, 57, 1.457, 60, 1.685, 61,
          2.926, 70, 1.615, 72, 1.152, 73, 0.013, 74, 0.24, 76, 0.627, 77,
          0.886, 78, 0.76, 81, 0.294, 94, 1.834, 107, 1.124, 113, 0.82, 138,
          1.417, 148, 0.152, 150, 0.272, 151, 1.513, 153, 0.134, 163, 0.857,
          167, 0.237, 171, 0.152, 172, 0.099, 174, 0.456, 175, 0.627, 232,
          1.044, 233, 1.417, 234, 1.371, 235, 1.011, 236, 1.463, 237, 1.044,
          239, 1.044, 240, 0.857, 241, 0.533, 242, 0.533, 243, 1.044, 244,
          0.857, 245, 1.044, 246, 0.857, 247, 0.978, 248, 1.044, 249, 0.857,
          250, 1.417, 251, 0.857, 252, 1.044, 253, 1.417, 254, 1.044, 255,
          0.886, 256, 1.044, 257, 0.801, 258, 0.829, 259, 1.044, 260, 0.857,
          261, 1.044, 262, 0.829, 263, 1.044, 264, 0.857, 265, 1.044, 266,
          0.857, 267, 0.916, 268, 1.044, 269, 0.886, 270, 1.044, 271, 0.886,
          272, 1.044, 273, 0.829, 274, 0.946, 275, 1.044, 276, 0.829, 277,
          0.698, 278, 0.857, 279, 1.044, 280, 0.857, 281, 1.417, 282, 1.608,
          283, 0.829, 284, 1.044, 285, 0.886, 286, 0.857, 287, 1.044, 288,
          0.829, 289, 1.202, 290, 0.857, 291, 1.044, 292, 0.829, 293, 0.946,
          294, 0.829, 295, 0.946, 296, 0.886, 297, 0.978, 298, 1.044, 299,
          0.829, 300, 1.044, 301, 0.857, 302, 1.044, 303, 1.368, 304, 1.044,
          305, 0.857, 306, 1.011, 307, 1.044, 308, 1.044, 309, 0.009, 310,
          0.009, 323, 0.693, 339, 1.459, 369, 0.582, 370, 0.582, 384, 0.674,
          490, 1.284, 491, 0.801, 492, 0.801, 554, 1.152, 824, 2.286, 908,
          1.685, 1112, 4.387, 1133, 3.482, 1571, 3.225, 1572, 3.66, 1587, 4.091,
          1671, 3.041, 1672, 5.085, 1673, 4.481, 1674, 4.481, 1675, 3.303, 1676,
          3.303, 1677, 3.303, 1678, 4.481, 1679, 5.085, 1680, 3.303, 1681,
          3.303, 1682, 5.085, 1683, 3.303, 1684, 4.481, 1685, 3.303, 1686,
          3.303, 2031, 5.68, 2032, 4.187, 2033, 4.187, 2034, 4.187, 2035, 4.187,
          2036, 6.913, 2037, 5.68,
        ],
      ],
      ["title/components/TextareaComponent.html", [0, 0.213, 305, 0.83]],
      [
        "body/components/TextareaComponent.html",
        [
          0, 0.433, 1, 0.593, 2, 1.052, 3, 0.059, 4, 0.068, 5, 0.676, 6, 0.722,
          7, 0.722, 8, 0.059, 9, 0.113, 12, 0.38, 13, 0.435, 15, 0.722, 16,
          0.398, 17, 0.398, 19, 0.209, 21, 0.088, 22, 0.274, 27, 0.533, 28,
          0.573, 34, 1.052, 35, 2.298, 43, 0.46, 53, 1.052, 57, 1.626, 67,
          0.518, 70, 1.9, 72, 1.88, 73, 0.013, 74, 0.296, 76, 0.986, 77, 1.596,
          78, 1.021, 79, 1.505, 81, 0.307, 82, 1.045, 88, 1.258, 107, 1.424,
          113, 1.101, 138, 1.088, 148, 0.161, 150, 0.315, 153, 0.068, 163,
          0.593, 167, 0.121, 171, 0.124, 172, 0.068, 174, 0.371, 175, 0.874,
          232, 0.722, 233, 1.088, 234, 1.052, 235, 0.699, 236, 1.235, 237,
          0.722, 239, 0.722, 240, 0.593, 241, 0.516, 242, 0.516, 243, 0.722,
          244, 0.593, 245, 0.722, 246, 0.593, 247, 0.676, 248, 0.722, 249,
          0.593, 250, 1.088, 251, 0.593, 252, 0.722, 253, 1.088, 254, 0.722,
          255, 0.613, 256, 0.722, 257, 0.554, 258, 0.573, 259, 0.722, 260,
          0.593, 261, 0.722, 262, 0.573, 263, 0.722, 264, 0.593, 265, 0.722,
          266, 0.593, 267, 0.633, 268, 0.722, 269, 0.613, 270, 0.722, 271,
          0.613, 272, 0.722, 273, 0.573, 274, 0.654, 275, 0.722, 276, 0.573,
          277, 0.483, 278, 0.593, 279, 0.722, 280, 0.593, 281, 1.088, 282,
          1.308, 283, 0.573, 284, 0.722, 285, 0.613, 286, 0.593, 287, 0.722,
          288, 0.573, 289, 0.923, 290, 0.593, 291, 0.722, 292, 0.573, 293,
          0.654, 294, 0.573, 295, 0.654, 296, 0.613, 297, 0.676, 298, 0.722,
          299, 0.573, 300, 0.722, 301, 0.593, 302, 0.722, 303, 0.573, 304,
          0.722, 305, 1.347, 306, 1.266, 307, 0.722, 308, 0.722, 309, 0.007,
          310, 0.007, 323, 0.66, 356, 0.797, 369, 0.606, 370, 0.606, 384, 0.466,
          405, 2.767, 430, 1.696, 440, 2.264, 446, 2.42, 490, 0.986, 491, 0.554,
          492, 0.554, 496, 0.974, 497, 0.974, 599, 1.828, 627, 1.052, 628,
          1.277, 645, 2.566, 647, 2.474, 648, 1.755, 649, 1.755, 650, 2.111,
          651, 1.755, 652, 2.111, 653, 1.573, 657, 2.111, 660, 2.833, 661,
          1.563, 662, 2.111, 663, 2.753, 664, 3.329, 669, 2.948, 670, 2.948,
          671, 3.439, 673, 2.767, 674, 2.844, 675, 1.957, 678, 2.833, 685, 1.2,
          694, 1.563, 696, 2.355, 697, 1.563, 699, 2.102, 709, 2.111, 715,
          1.765, 716, 2.649, 717, 1.573, 723, 0.851, 724, 1.573, 725, 1.045,
          726, 1.045, 729, 1.467, 730, 1.165, 731, 1.045, 742, 1.045, 743,
          1.045, 744, 1.165, 762, 1.755, 763, 1.755, 764, 2.35, 765, 1.371, 766,
          1.755, 768, 1.755, 769, 1.755, 770, 1.973, 771, 1.165, 772, 1.165,
          847, 2.767, 900, 2.611, 908, 1.165, 1002, 1.837, 1225, 1.895, 1278,
          2.147, 1456, 1.734, 1457, 2.102, 1458, 2.102, 1460, 1.957, 1468,
          2.102, 1469, 2.102, 1470, 2.102, 1471, 2.102, 1472, 2.102, 1473,
          2.102, 1474, 2.102, 1475, 1.734, 1476, 2.102, 1504, 3.809, 1509,
          2.102, 1510, 2.102, 1511, 2.102, 1522, 2.102, 1531, 3.166, 1532,
          2.102, 1533, 3.166, 1535, 4.138, 1536, 2.283, 1580, 1.644, 1581,
          2.475, 1687, 3.809, 1688, 2.102, 1689, 5.094, 1690, 2.526, 1691,
          2.526, 1692, 2.283, 1693, 3.439, 1694, 3.439, 1695, 3.805, 1696,
          4.577, 1697, 4.577, 1698, 2.526, 1699, 3.805, 1700, 2.526, 1701,
          2.526, 1702, 2.526, 1703, 2.526, 1704, 2.526, 1705, 3.805, 1706,
          3.805, 1707, 5.094, 1708, 3.805, 1709, 2.526, 1710, 3.805, 1711,
          2.526, 1712, 3.805, 1713, 2.283, 1714, 2.526, 1715, 2.526, 1745,
          3.805, 2038, 4.36, 2039, 2.895, 2040, 2.895, 2041, 2.895, 2042, 2.895,
          2043, 2.895, 2044, 2.895, 2045, 2.895, 2046, 2.895, 2047, 2.895, 2048,
          2.895, 2049, 2.895, 2050, 2.895, 2051, 2.895, 2052, 2.895, 2053,
          2.895, 2054, 2.895, 2055, 2.895, 2056, 2.895, 2057, 2.895, 2058,
          2.895, 2059, 2.895, 2060, 2.895, 2061, 2.895, 2062, 2.895, 2063, 4.36,
          2064, 4.36, 2065, 4.36,
        ],
      ],
      ["title/coverage.html", [2066, 4.848]],
      [
        "body/coverage.html",
        [
          0, 0.457, 1, 0.529, 8, 0.052, 9, 0.12, 10, 3.427, 11, 3.153, 28,
          0.511, 73, 0.013, 74, 0.096, 86, 3.478, 90, 1.876, 154, 1.547, 163,
          0.529, 165, 1.747, 167, 0.346, 175, 0.387, 212, 2.038, 240, 0.529,
          244, 0.529, 246, 0.529, 249, 0.529, 251, 0.529, 255, 0.547, 257,
          0.494, 260, 0.529, 262, 0.511, 264, 0.529, 266, 0.529, 269, 0.547,
          271, 0.547, 273, 0.511, 276, 0.511, 278, 0.529, 280, 0.529, 283,
          0.511, 285, 0.547, 288, 0.511, 290, 0.529, 292, 0.511, 294, 0.511,
          296, 0.547, 299, 0.511, 301, 0.529, 303, 0.511, 305, 0.529, 309,
          0.006, 310, 0.006, 311, 3.102, 312, 3.306, 327, 1.747, 338, 1.123,
          350, 1.331, 352, 2.226, 354, 1.547, 368, 1.747, 421, 2.903, 452,
          1.876, 483, 1.639, 590, 3.153, 596, 2.903, 645, 2.601, 646, 3.153,
          677, 1.876, 715, 0.869, 727, 0.932, 728, 0.932, 729, 0.869, 785,
          3.153, 786, 2.254, 798, 2.038, 799, 2.254, 818, 3.153, 819, 3.153,
          830, 1.876, 859, 1.639, 892, 3.55, 897, 1.747, 900, 1.547, 914, 2.903,
          933, 1.639, 963, 2.394, 1036, 2.903, 1037, 2.903, 1049, 4.147, 1050,
          4.964, 1061, 2.038, 1065, 2.038, 1069, 2.038, 1073, 2.038, 1075,
          2.038, 1080, 5.49, 1081, 1.876, 1092, 2.038, 1096, 2.038, 1098, 2.038,
          1100, 2.038, 1102, 2.038, 1104, 2.038, 1105, 2.038, 1106, 2.038, 1109,
          3.55, 1110, 3.306, 1111, 3.55, 1117, 1.747, 1127, 1.747, 1143, 1.639,
          1144, 4.999, 1145, 4.718, 1146, 4.999, 1150, 1.639, 1151, 1.639, 1152,
          1.395, 1154, 1.639, 1166, 1.639, 1179, 1.639, 1181, 1.639, 1183,
          1.639, 1185, 1.639, 1189, 1.639, 1193, 1.639, 1195, 1.639, 1197,
          1.639, 1198, 1.639, 1199, 1.639, 1201, 1.639, 1203, 1.639, 1205,
          1.639, 1211, 1.639, 1317, 1.747, 1372, 3.777, 1373, 3.777, 1376,
          1.747, 1378, 1.747, 1388, 1.876, 1389, 3.153, 1400, 1.876, 1401,
          2.903, 1454, 1.876, 1455, 2.903, 1537, 4.438, 1540, 1.639, 1545,
          1.747, 1547, 1.747, 1561, 1.747, 1562, 3.951, 1563, 3.564, 1564,
          3.777, 1567, 1.747, 1568, 1.547, 1569, 2.972, 1571, 1.466, 1572,
          1.466, 1574, 1.747, 1576, 1.747, 1591, 3.721, 1592, 1.876, 1596,
          1.876, 1609, 1.747, 1610, 3.55, 1611, 3.306, 1612, 3.769, 1614, 1.747,
          1630, 1.747, 1631, 3.55, 1632, 3.306, 1633, 1.747, 1639, 3.55, 1640,
          1.747, 1657, 1.876, 1658, 3.721, 1660, 1.876, 1662, 1.876, 1671, 3.55,
          1687, 1.876, 1688, 2.903, 1713, 2.038, 1790, 3.296, 1791, 3.296, 1807,
          2.038, 1808, 2.038, 1823, 2.038, 1828, 2.038, 1829, 2.038, 1837,
          2.038, 1842, 2.038, 1843, 2.038, 1846, 4.256, 1849, 2.038, 1854,
          2.038, 1855, 2.038, 1856, 2.038, 1859, 2.038, 1861, 2.038, 1862,
          2.703, 1864, 2.254, 1865, 3.153, 1888, 1.876, 1889, 4.57, 1890, 2.038,
          1897, 4.695, 1924, 2.038, 1926, 2.038, 1927, 2.038, 1929, 2.038, 1988,
          2.254, 1989, 2.254, 2066, 2.254, 2067, 2.583, 2068, 2.583, 2069,
          2.583, 2070, 3.997, 2071, 6.293, 2072, 7.238, 2073, 2.583, 2074,
          3.997, 2075, 2.583, 2076, 2.583, 2077, 7.11, 2078, 5.502, 2079, 8.406,
          2080, 8.406, 2081, 6.959, 2082, 2.583, 2083, 2.583, 2084, 4.888, 2085,
          2.583, 2086, 2.583, 2087, 2.583, 2088, 2.583, 2089, 5.502, 2090,
          2.583, 2091, 4.888, 2092, 3.997, 2093, 2.583, 2094, 2.583, 2095,
          2.583, 2096, 2.583, 2097, 2.583, 2098, 2.583, 2099, 3.997, 2100,
          2.583, 2101, 2.583, 2102, 2.583, 2103, 2.583, 2104, 2.583,
        ],
      ],
      ["title/dependencies.html", [1783, 2.771, 2105, 2.943]],
      [
        "body/dependencies.html",
        [
          73, 0.013, 309, 0.011, 310, 0.011, 1783, 3.711, 2106, 6.537, 2107,
          6.537, 2108, 7.512, 2109, 6.537, 2110, 6.537, 2111, 7.512, 2112,
          6.537, 2113, 6.537, 2114, 6.537, 2115, 6.537, 2116, 6.537, 2117,
          6.537, 2118, 6.537, 2119, 6.537,
        ],
      ],
      ["title/miscellaneous/enumerations.html", [2120, 2.45, 2121, 4.26]],
      [
        "body/miscellaneous/enumerations.html",
        [
          0, 0.451, 3, 0.12, 9, 0.113, 21, 0.135, 73, 0.013, 78, 1.162, 83,
          1.23, 85, 1.445, 297, 1.381, 309, 0.009, 310, 0.009, 311, 2.819, 312,
          3.004, 341, 3.192, 346, 2.94, 352, 1.662, 357, 4.293, 358, 4.293, 359,
          3.411, 360, 3.871, 361, 4.494, 362, 4.293, 363, 3.34, 364, 4.494, 365,
          4.293, 366, 2.911, 367, 2.788, 383, 3.751, 399, 3.045, 405, 3.751,
          421, 3.226, 454, 3.356, 498, 4.663, 499, 3.997, 596, 3.226, 617,
          3.997, 618, 4.663, 619, 4.663, 620, 4.663, 624, 4.663, 625, 4.663,
          626, 4.663, 645, 1.858, 653, 2.133, 654, 3.997, 820, 3.192, 839,
          3.192, 857, 3.541, 914, 3.226, 963, 2.661, 965, 4.663, 966, 4.663,
          1036, 3.226, 1037, 4.293, 1043, 4.663, 1044, 4.663, 1372, 2.819, 1373,
          3.751, 1375, 4.293, 1401, 3.226, 1402, 4.663, 1404, 4.663, 1405,
          3.505, 1406, 4.663, 1407, 4.663, 1408, 4.663, 1409, 4.663, 1410,
          4.663, 1411, 3.541, 1412, 4.663, 1413, 4.663, 1414, 3.505, 1415,
          3.505, 1416, 3.505, 1417, 3.505, 1418, 3.505, 1419, 3.505, 1420,
          3.505, 1421, 3.505, 1455, 3.226, 1459, 4.663, 1460, 4.492, 1562,
          3.356, 1563, 2.661, 1564, 3.751, 1569, 2.399, 1579, 4.293, 1580,
          3.772, 1581, 4.021, 1591, 3.997, 1594, 4.293, 1602, 4.663, 1603,
          4.663, 1658, 3.004, 1665, 4.663, 1688, 3.226, 1693, 4.663, 1694,
          4.663, 2120, 3.226, 2121, 3.877, 2122, 6.643, 2123, 7.081, 2124,
          3.877, 2125, 4.443, 2126, 4.443, 2127, 7.373, 2128, 4.443, 2129,
          4.443, 2130, 5.159, 2131, 4.443, 2132, 3.877,
        ],
      ],
      ["title/index.html", [21, 0.123, 2133, 3.537]],
      [
        "body/index.html",
        [
          1, 1.57, 2, 1.036, 28, 1.518, 73, 0.013, 163, 1.57, 168, 0.767, 240,
          1.57, 244, 1.57, 246, 1.57, 249, 1.57, 251, 1.57, 255, 1.623, 257,
          1.468, 260, 1.57, 262, 1.518, 264, 1.57, 266, 1.57, 269, 1.623, 271,
          1.623, 273, 1.518, 276, 1.518, 278, 1.57, 280, 1.57, 283, 1.518, 285,
          1.623, 288, 1.518, 290, 1.57, 292, 1.518, 294, 1.518, 296, 1.623, 299,
          1.518, 301, 1.57, 303, 1.518, 305, 1.57, 309, 0.009, 310, 0.009, 623,
          2.436, 1311, 2.57, 1322, 2.901, 1781, 5.292, 1782, 2.436, 1783, 3.279,
          1784, 3.744, 1785, 3.744, 1786, 3.744, 1787, 3.665, 1788, 2.723, 1797,
          4.896, 1804, 3.744, 1805, 3.744, 1806, 3.744, 1824, 6.13, 1825, 3.744,
          1826, 3.744, 1827, 3.744, 1838, 5.962, 1839, 3.744, 1840, 3.744, 1841,
          3.744, 1850, 6.037, 1851, 3.744, 1852, 3.744, 1853, 3.744, 1863,
          3.384, 2133, 3.744, 2134, 4.29, 2135, 4.29,
        ],
      ],
      ["title/modules.html", [1782, 3.154]],
      [
        "body/modules.html",
        [
          73, 0.011, 309, 0.011, 310, 0.011, 1781, 4.722, 1782, 3.692, 1797,
          3.692, 1824, 4.722, 1838, 4.722, 1850, 4.722, 2136, 8.239, 2137,
          8.239, 2138, 8.239, 2139, 8.239,
        ],
      ],
      ["title/properties.html", [22, 0.307, 2105, 2.943]],
      [
        "body/properties.html",
        [
          22, 0.421, 73, 0.012, 309, 0.011, 310, 0.011, 2140, 6.698, 2141,
          6.698,
        ],
      ],
      ["title/miscellaneous/variables.html", [2120, 2.45, 2142, 4.26]],
      [
        "body/miscellaneous/variables.html",
        [
          0, 0.452, 1, 0.67, 9, 0.108, 10, 1.612, 21, 0.099, 28, 0.648, 54,
          1.552, 73, 0.013, 74, 0.317, 77, 1.805, 78, 1.142, 81, 0.343, 154,
          2.861, 163, 0.67, 244, 0.67, 246, 0.67, 249, 0.67, 251, 0.67, 255,
          0.693, 257, 0.627, 260, 0.67, 262, 0.648, 264, 0.67, 266, 0.67, 269,
          0.693, 271, 0.693, 273, 0.648, 276, 0.648, 278, 0.67, 280, 0.67, 283,
          0.648, 285, 0.693, 288, 0.648, 289, 0.693, 290, 0.978, 292, 0.648,
          294, 0.648, 296, 0.693, 299, 0.648, 301, 0.67, 303, 0.648, 305, 0.67,
          309, 0.007, 310, 0.007, 342, 3.348, 343, 1.768, 344, 1.961, 352,
          1.225, 360, 1.612, 645, 1.502, 727, 1.724, 728, 1.724, 779, 1.272,
          1049, 3.194, 1050, 2.583, 1061, 3.768, 1062, 4.449, 1063, 2.857, 1064,
          2.857, 1065, 3.768, 1066, 3.768, 1067, 4.449, 1068, 5.747, 1069,
          3.768, 1070, 3.768, 1071, 5.201, 1072, 4.449, 1073, 3.768, 1074,
          4.169, 1075, 3.768, 1076, 3.768, 1080, 2.583, 1081, 3.469, 1092,
          3.768, 1093, 4.169, 1094, 4.169, 1095, 2.857, 1096, 3.768, 1097,
          2.857, 1098, 3.768, 1099, 2.857, 1100, 3.768, 1101, 2.857, 1102,
          3.768, 1103, 4.169, 1104, 3.768, 1105, 3.768, 1106, 3.768, 1144,
          2.078, 1145, 1.961, 1146, 5.066, 1154, 3.032, 1155, 2.214, 1156,
          2.214, 1157, 2.214, 1158, 2.214, 1159, 2.214, 1160, 2.214, 1161,
          2.214, 1162, 2.214, 1163, 2.214, 1164, 2.214, 1165, 2.214, 1166,
          3.032, 1167, 2.214, 1168, 2.214, 1169, 2.214, 1170, 2.214, 1171,
          2.214, 1172, 2.214, 1173, 2.214, 1174, 2.214, 1175, 2.214, 1176,
          2.214, 1177, 2.214, 1178, 2.214, 1179, 3.032, 1180, 2.214, 1181,
          3.032, 1182, 2.214, 1183, 3.032, 1184, 2.214, 1185, 3.032, 1186,
          2.214, 1187, 3.23, 1188, 2.214, 1189, 3.032, 1190, 2.214, 1191, 3.23,
          1192, 2.214, 1193, 3.032, 1194, 2.214, 1195, 3.032, 1196, 2.214, 1197,
          3.032, 1198, 3.032, 1199, 3.032, 1200, 2.214, 1201, 3.032, 1202,
          2.214, 1203, 3.032, 1204, 2.214, 1205, 3.032, 1206, 2.214, 1372,
          2.078, 1373, 3.579, 1376, 3.23, 1377, 2.378, 1378, 3.23, 1379, 2.378,
          1411, 1.961, 1537, 2.214, 1544, 3.202, 1545, 3.23, 1546, 2.378, 1547,
          3.23, 1548, 2.378, 1549, 2.378, 1562, 2.712, 1563, 1.961, 1564, 3.579,
          1569, 1.768, 1574, 3.23, 1575, 2.378, 1576, 3.23, 1577, 2.378, 1591,
          3.814, 1592, 3.469, 1593, 2.583, 1594, 2.378, 1595, 2.583, 1596,
          3.469, 1597, 2.583, 1598, 2.583, 1599, 2.583, 1600, 2.583, 1601,
          2.583, 1658, 2.214, 1660, 3.469, 1661, 2.583, 1662, 3.469, 1663,
          2.583, 1664, 2.583, 1790, 4.363, 1791, 4.363, 1807, 2.583, 1808,
          3.768, 1823, 3.768, 1828, 2.583, 1829, 3.768, 1837, 3.768, 1842,
          2.583, 1843, 3.768, 1846, 2.214, 1849, 3.768, 1854, 2.583, 1855,
          3.768, 1856, 3.768, 1861, 3.768, 1889, 2.378, 1897, 5.201, 1924,
          3.768, 1925, 2.857, 1926, 3.768, 1927, 3.768, 1928, 2.857, 1929,
          3.768, 2120, 2.378, 2124, 4.169, 2130, 5.411, 2132, 4.169, 2142,
          2.857, 2143, 7.285, 2144, 7.932, 2145, 6.2, 2146, 6.592, 2147, 6.2,
          2148, 6.2,
        ],
      ],
    ],
    invertedIndex: [
      [
        "",
        {
          _index: 73,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
            "modules.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "0",
        {
          _index: 86,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["0.0.1", { _index: 2141, title: {}, body: { "properties.html": {} } }],
      ["0/1", { _index: 2080, title: {}, body: { "coverage.html": {} } }],
      ["0/10", { _index: 2071, title: {}, body: { "coverage.html": {} } }],
      ["0/11", { _index: 2102, title: {}, body: { "coverage.html": {} } }],
      ["0/12", { _index: 2084, title: {}, body: { "coverage.html": {} } }],
      ["0/13", { _index: 2070, title: {}, body: { "coverage.html": {} } }],
      ["0/14", { _index: 2089, title: {}, body: { "coverage.html": {} } }],
      ["0/15", { _index: 2074, title: {}, body: { "coverage.html": {} } }],
      ["0/21", { _index: 2098, title: {}, body: { "coverage.html": {} } }],
      ["0/25", { _index: 2090, title: {}, body: { "coverage.html": {} } }],
      ["0/3", { _index: 2081, title: {}, body: { "coverage.html": {} } }],
      ["0/4", { _index: 2077, title: {}, body: { "coverage.html": {} } }],
      ["0/40", { _index: 2095, title: {}, body: { "coverage.html": {} } }],
      ["0/5", { _index: 2078, title: {}, body: { "coverage.html": {} } }],
      ["0/6", { _index: 2072, title: {}, body: { "coverage.html": {} } }],
      ["0/7", { _index: 2099, title: {}, body: { "coverage.html": {} } }],
      ["0/8", { _index: 2091, title: {}, body: { "coverage.html": {} } }],
      ["0/9", { _index: 2092, title: {}, body: { "coverage.html": {} } }],
      [
        "1",
        {
          _index: 214,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "1).foreach((option",
        {
          _index: 980,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "1).tostring().padstart(2",
        {
          _index: 1276,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      ["1.0.0", { _index: 2115, title: {}, body: { "dependencies.html": {} } }],
      [
        "1.375",
        {
          _index: 579,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      ["1/22", { _index: 2096, title: {}, body: { "coverage.html": {} } }],
      ["1/9", { _index: 2101, title: {}, body: { "coverage.html": {} } }],
      [
        "100",
        {
          _index: 1326,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      ["11", { _index: 2100, title: {}, body: { "coverage.html": {} } }],
      [
        "11].includes(monthnum",
        {
          _index: 1320,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      ["12", { _index: 2085, title: {}, body: { "coverage.html": {} } }],
      ["12/33", { _index: 2083, title: {}, body: { "coverage.html": {} } }],
      [
        "123",
        {
          _index: 2063,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "13",
        {
          _index: 212,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "14.2.11",
        { _index: 2107, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "15",
        {
          _index: 1713,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["18", { _index: 2093, title: {}, body: { "coverage.html": {} } }],
      [
        "184",
        {
          _index: 1453,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "2",
        {
          _index: 1311,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "2.1.35",
        { _index: 2119, title: {}, body: { "dependencies.html": {} } },
      ],
      ["2/11", { _index: 2094, title: {}, body: { "coverage.html": {} } }],
      ["2/15", { _index: 2097, title: {}, body: { "coverage.html": {} } }],
      ["2/26", { _index: 2088, title: {}, body: { "coverage.html": {} } }],
      ["20", { _index: 2075, title: {}, body: { "coverage.html": {} } }],
      [
        "200px",
        {
          _index: 1446,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "23",
        {
          _index: 402,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "28",
        {
          _index: 1316,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "29",
        {
          _index: 1314,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "2nd",
        {
          _index: 586,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "3.321.1",
        { _index: 2111, title: {}, body: { "dependencies.html": {} } },
      ],
      ["3/25", { _index: 2086, title: {}, body: { "coverage.html": {} } }],
      [
        "30",
        {
          _index: 1321,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "31",
        {
          _index: 1322,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "35",
        {
          _index: 401,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      ["36", { _index: 2082, title: {}, body: { "coverage.html": {} } }],
      ["38", { _index: 2135, title: {}, body: { "index.html": {} } }],
      [
        "4",
        {
          _index: 1317,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["4/26", { _index: 2073, title: {}, body: { "coverage.html": {} } }],
      [
        "400",
        {
          _index: 1327,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      ["5", { _index: 2134, title: {}, body: { "index.html": {} } }],
      [
        "500",
        {
          _index: 532,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "6",
        {
          _index: 1318,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      ["7", { _index: 2087, title: {}, body: { "coverage.html": {} } }],
      [
        "700",
        {
          _index: 392,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "8px",
        {
          _index: 1449,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "9",
        {
          _index: 1319,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      ["9/44", { _index: 2076, title: {}, body: { "coverage.html": {} } }],
      [
        "99",
        {
          _index: 1438,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "_closebtn",
        {
          _index: 407,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "_daycontrol",
        {
          _index: 1180,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "_flyout",
        {
          _index: 860,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "_monthcontrol",
        {
          _index: 1182,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "_text",
        {
          _index: 409,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "_yearcontrol",
        {
          _index: 1184,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "_yearcontrol')?.value",
        {
          _index: 1268,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "a11ytext",
        {
          _index: 916,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "aaaa",
        {
          _index: 1196,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "abbr",
        {
          _index: 1431,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "abstractcontrol",
        {
          _index: 711,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "acc_demo.breadcrumb_component.additional_links",
        {
          _index: 526,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "accessors",
        {
          _index: 1746,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "act",
        {
          _index: 1462,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "active",
        {
          _index: 839,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "activiatedselect",
        {
          _index: 1645,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "actual_component",
        {
          _index: 308,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "add",
        {
          _index: 88,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "added",
        {
          _index: 1510,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "addhover",
        {
          _index: 23,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "additional",
        {
          _index: 1501,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "adds",
        {
          _index: 1457,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "afterviewinit",
        {
          _index: 423,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "again",
        {
          _index: 1017,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "aggregates",
        {
          _index: 1489,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "alloptionsforautocomplete",
        {
          _index: 227,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "allows",
        {
          _index: 1617,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "alone.functions",
        {
          _index: 497,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "altimage",
        {
          _index: 1053,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "always",
        {
          _index: 169,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "ancestor",
        {
          _index: 507,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "angular",
        {
          _index: 1791,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "angular/cli",
        { _index: 2106, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/common",
        {
          _index: 1801,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "angular/core",
        {
          _index: 153,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "angular/forms",
        {
          _index: 723,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "angular/router",
        {
          _index: 1810,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "année",
        {
          _index: 1192,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "anything",
        {
          _index: 746,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "août",
        {
          _index: 1174,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "apply",
        {
          _index: 1530,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "approaches",
        {
          _index: 749,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "april",
        {
          _index: 1158,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "arguments",
        {
          _index: 96,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "aria",
        {
          _index: 684,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "ariadissmissible",
        {
          _index: 322,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "arialabel",
        {
          _index: 379,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "ariatext",
        {
          _index: 1508,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "array",
        {
          _index: 1301,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "arrays",
        {
          _index: 1255,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "arrow",
        {
          _index: 993,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "attr.disabled",
        {
          _index: 1627,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "august",
        {
          _index: 1161,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "autocomplete",
        {
          _index: 18,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "autocomplete'},{'name",
        {
          _index: 239,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "autocomplete.component.html",
        {
          _index: 20,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "autocomplete/autocomplete.component",
        {
          _index: 1857,
          title: {},
          body: { "modules/IrccDsAngularLegacyOldModule.html": {} },
        },
      ],
      [
        "autocompletecomponent",
        {
          _index: 1,
          title: { "components/AutocompleteComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IOption.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "automatically",
        {
          _index: 702,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "avril",
        {
          _index: 1170,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["aws", { _index: 2108, title: {}, body: { "dependencies.html": {} } }],
      [
        "banner",
        {
          _index: 313,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "banner'},{'name",
        {
          _index: 243,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "banner.component.html",
        {
          _index: 314,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "banner.module.ts",
        {
          _index: 1792,
          title: {},
          body: { "modules/IrccDsAngularBannerModule.html": {} },
        },
      ],
      [
        "banner/banner.component",
        {
          _index: 1796,
          title: {},
          body: { "modules/IrccDsAngularBannerModule.html": {} },
        },
      ],
      [
        "banner?.classlist.add('bannerdismissed",
        {
          _index: 388,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "banner?.classlist.add('nodisplay",
        {
          _index: 390,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "banner?.classlist.remove('bannerdismissed",
        {
          _index: 391,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "banner?.classlist.remove('nodisplay",
        {
          _index: 394,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "bannercomponent",
        {
          _index: 240,
          title: { "components/BannerComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "bannersize",
        {
          _index: 362,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "bannertype",
        {
          _index: 357,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "base",
        {
          _index: 502,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "based",
        {
          _index: 574,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "baseurl",
        {
          _index: 425,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "baseurlkey",
        {
          _index: 453,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "basic",
        {
          _index: 1463,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "becomes",
        {
          _index: 1499,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "behavior",
        {
          _index: 1008,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "behaviorsubject",
        {
          _index: 1873,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
          },
        },
      ],
      [
        "behaviorsubject(false",
        {
          _index: 1895,
          title: {},
          body: { "injectables/LanguageSwitchButtonService.html": {} },
        },
      ],
      [
        "being",
        {
          _index: 855,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "below",
        {
          _index: 989,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "blank",
        {
          _index: 1040,
          title: {},
          body: {
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
          },
        },
      ],
      [
        "blk",
        {
          _index: 1094,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "blk.svg",
        {
          _index: 1064,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "block",
        {
          _index: 404,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "blue",
        {
          _index: 1418,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "blunt",
        {
          _index: 1656,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "boew/assets/sig",
        {
          _index: 1093,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "boew/assets/wmms",
        {
          _index: 1063,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "boolean",
        {
          _index: 76,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "both",
        {
          _index: 1694,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "bound",
        {
          _index: 1528,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "breadcrumb",
        {
          _index: 247,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "breadcrumb'},{'name",
        {
          _index: 245,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "breadcrumb.component.html",
        {
          _index: 424,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "breadcrumb/breadcrumb.component",
        {
          _index: 1816,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "breadcrumb/link/link.component",
        {
          _index: 1817,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "breadcrumb_separator",
        {
          _index: 486,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "breadcrumbcomponent",
        {
          _index: 244,
          title: { "components/BreadcrumbComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "breadcrumblinkcomponent",
        {
          _index: 246,
          title: { "components/BreadcrumbLinkComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["browse", { _index: 2139, title: {}, body: { "modules.html": {} } }],
      ["browser", { _index: 2136, title: {}, body: { "modules.html": {} } }],
      [
        "btnaction",
        {
          _index: 602,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "btnconfig",
        {
          _index: 378,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "btnevent",
        {
          _index: 324,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "btns",
        {
          _index: 1139,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "build",
        {
          _index: 372,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "button",
        {
          _index: 367,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/LabelComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "button'},{'name",
        {
          _index: 250,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "button.component",
        {
          _index: 353,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
          },
        },
      ],
      [
        "button.component.html",
        {
          _index: 597,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "button.component.ts",
        {
          _index: 1373,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "button.component.ts:30",
        {
          _index: 1719,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:35",
        {
          _index: 1722,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:36",
        {
          _index: 1718,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:37",
        {
          _index: 1723,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:38",
        {
          _index: 1717,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:39",
        {
          _index: 1720,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:40",
        {
          _index: 1721,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:41",
        {
          _index: 1724,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:43",
        {
          _index: 1727,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:54",
        {
          _index: 1726,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.component.ts:73",
        {
          _index: 1725,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "button.service",
        {
          _index: 1541,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "button.service.ts",
        {
          _index: 1865,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "button.service.ts:11",
        {
          _index: 1870,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
          },
        },
      ],
      [
        "button.service.ts:8",
        {
          _index: 1874,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
          },
        },
      ],
      [
        "button.service.ts:9",
        {
          _index: 1872,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
          },
        },
      ],
      [
        "button/button.component",
        {
          _index: 865,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
          },
        },
      ],
      [
        "button/icon",
        {
          _index: 352,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "buttoncategories",
        {
          _index: 617,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "buttoncategories.primary",
        {
          _index: 870,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "buttonclick",
        {
          _index: 1716,
          title: {},
          body: { "components/IconButtonComponent.html": {} },
        },
      ],
      [
        "buttonclick(id",
        {
          _index: 1386,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "buttoncolor",
        {
          _index: 620,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "buttoncomponent",
        {
          _index: 249,
          title: { "components/ButtonComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "buttonicondirection",
        {
          _index: 624,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "buttonid",
        {
          _index: 464,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "buttonpress",
        {
          _index: 1868,
          title: {},
          body: { "injectables/LabelButtonService.html": {} },
        },
      ],
      [
        "buttonpress(id",
        {
          _index: 1869,
          title: {},
          body: { "injectables/LabelButtonService.html": {} },
        },
      ],
      [
        "buttonsize",
        {
          _index: 619,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "buttontype",
        {
          _index: 621,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "calculate",
        {
          _index: 573,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "calculates",
        {
          _index: 1493,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "called",
        {
          _index: 1526,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "canada",
        {
          _index: 1068,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "canada_logo_aria_label_english",
        {
          _index: 1105,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "canada_logo_aria_label_french",
        {
          _index: 1106,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "case",
        {
          _index: 1511,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "category",
        {
          _index: 340,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "change",
        {
          _index: 173,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IOption.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "change.directive",
        {
          _index: 1822,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "change.foreachchangeditem((item",
        {
          _index: 196,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "change[this.config.id",
        {
          _index: 1523,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "changed",
        {
          _index: 157,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "changedetectorref",
        {
          _index: 450,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "changeref",
        {
          _index: 449,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "changes",
        {
          _index: 471,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "changes['config",
        {
          _index: 1394,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "changes['config'].currentvalue",
        {
          _index: 1395,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "changes['config'].currentvalue.size",
        {
          _index: 536,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "changes['config'].currentvalue.type",
        {
          _index: 539,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "changes['config'].firstchange",
        {
          _index: 535,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "changes['config'].previousvalue.size",
        {
          _index: 537,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "changes['config'].previousvalue.type",
        {
          _index: 540,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "changing",
        {
          _index: 533,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "character",
        {
          _index: 1441,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "charactercountstatus",
        {
          _index: 2038,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "charactercountstatus(currcharcount",
        {
          _index: 1705,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "chargement",
        {
          _index: 1663,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "charlimit",
        {
          _index: 1689,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "charlimitstatus",
        {
          _index: 1696,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "check",
        {
          _index: 584,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "checkactive",
        {
          _index: 36,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "checkactive(value",
        {
          _index: 105,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "checkbox",
        {
          _index: 654,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "checkbox'},{'name",
        {
          _index: 252,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "checkbox.component.html",
        {
          _index: 655,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "checkbox/checkbox.component",
        {
          _index: 1832,
          title: {},
          body: { "modules/IrccDsAngularFormComponentsModule.html": {} },
        },
      ],
      [
        "checkboxcomponent",
        {
          _index: 251,
          title: { "components/CheckboxComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "checkduplicated",
        {
          _index: 37,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "checkduplicated(index",
        {
          _index: 108,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "checklabellength",
        {
          _index: 1447,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "checklabelrounded",
        {
          _index: 1442,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "checknumber",
        {
          _index: 1439,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "cheerio",
        { _index: 2114, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "child",
        {
          _index: 513,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "childref",
        {
          _index: 426,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "children",
        {
          _index: 1495,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "chip",
        {
          _index: 253,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "chipcontent",
        {
          _index: 791,
          title: {},
          body: {
            "components/ChipItemComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
          },
        },
      ],
      [
        "chipcontenttext",
        {
          _index: 802,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "chipidx",
        {
          _index: 813,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "chipitemcomponent",
        {
          _index: 163,
          title: { "components/ChipItemComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IOption.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "chiplist",
        {
          _index: 804,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "chiplistchange",
        {
          _index: 805,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "chiplistcomponent",
        {
          _index: 255,
          title: { "components/ChipListComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "chips",
        {
          _index: 1990,
          title: {},
          body: { "components/SecondaryChipsComponent.html": {} },
        },
      ],
      [
        "chips'},{'name",
        {
          _index: 298,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "chips.component",
        {
          _index: 1860,
          title: {},
          body: { "modules/IrccDsAngularLegacyOldModule.html": {} },
        },
      ],
      [
        "chips.component.html",
        {
          _index: 1991,
          title: {},
          body: { "components/SecondaryChipsComponent.html": {} },
        },
      ],
      [
        "chips.component.ts",
        {
          _index: 1989,
          title: {},
          body: {
            "components/SecondaryChipsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "chips.component.ts:12",
        {
          _index: 1993,
          title: {},
          body: { "components/SecondaryChipsComponent.html": {} },
        },
      ],
      [
        "chips.component.ts:8",
        {
          _index: 1992,
          title: {},
          body: { "components/SecondaryChipsComponent.html": {} },
        },
      ],
      [
        "chips/chip",
        {
          _index: 164,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "chips/secondary",
        {
          _index: 1859,
          title: {},
          body: {
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/SecondaryChipsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "cl",
        {
          _index: 242,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "class",
        {
          _index: 172,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "class_trashcan",
        {
          _index: 1378,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "class_x_mark",
        {
          _index: 1376,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "clear",
        {
          _index: 838,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "clearflyoutfocus",
        {
          _index: 826,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "clearoptions",
        {
          _index: 919,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "clears",
        {
          _index: 1019,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "clearvalue",
        {
          _index: 1535,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "click",
        {
          _index: 64,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "click(event",
        {
          _index: 98,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "clickable",
        {
          _index: 1045,
          title: {},
          body: {
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
          },
        },
      ],
      [
        "clickevent",
        {
          _index: 598,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "clickevent(id",
        {
          _index: 614,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "clickinside",
        {
          _index: 38,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "clickinside(event",
        {
          _index: 110,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "clickout",
        {
          _index: 39,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "close",
        {
          _index: 325,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "closed",
        {
          _index: 883,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "closes",
        {
          _index: 852,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularbannermodule",
        {
          _index: 1784,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularbannermodule_declarations",
        {
          _index: 1786,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularbannermodule_exports",
        {
          _index: 1785,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularcomponentssharedmodule",
        {
          _index: 1804,
          title: {},
          body: {
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularcomponentssharedmodule_declarations",
        {
          _index: 1806,
          title: {},
          body: {
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularcomponentssharedmodule_exports",
        {
          _index: 1805,
          title: {},
          body: {
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularformcomponentsmodule",
        {
          _index: 1825,
          title: {},
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularformcomponentsmodule_declarations",
        {
          _index: 1827,
          title: {},
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularformcomponentsmodule_exports",
        {
          _index: 1826,
          title: {},
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularheaderfootermodule",
        {
          _index: 1839,
          title: {},
          body: {
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularheaderfootermodule_declarations",
        {
          _index: 1840,
          title: {},
          body: {
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularheaderfootermodule_exports",
        {
          _index: 1841,
          title: {},
          body: {
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularlegacyoldmodule",
        {
          _index: 1851,
          title: {},
          body: {
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularlegacyoldmodule_declarations",
        {
          _index: 1852,
          title: {},
          body: {
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cluster_irccdsangularlegacyoldmodule_exports",
        {
          _index: 1853,
          title: {},
          body: {
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "color",
        {
          _index: 345,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "colour",
        {
          _index: 1424,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/LabelComponent.html": {},
            "components/SearchInputComponent.html": {},
          },
        },
      ],
      [
        "commenc",
        {
          _index: 1601,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "commonmodule",
        {
          _index: 1800,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "completed",
        {
          _index: 1593,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "completely",
        {
          _index: 1465,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "complét",
        {
          _index: 1598,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "component",
        {
          _index: 0,
          title: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "component/banner/banner.component.ts",
        {
          _index: 312,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "component/banner/banner.component.ts:114",
        {
          _index: 335,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:118",
        {
          _index: 334,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:52",
        {
          _index: 348,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:53",
        {
          _index: 349,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:55",
        {
          _index: 328,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:56",
        {
          _index: 329,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:57",
        {
          _index: 326,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:59",
        {
          _index: 330,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:61",
        {
          _index: 347,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:70",
        {
          _index: 332,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:84",
        {
          _index: 337,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/banner/banner.component.ts:98",
        {
          _index: 336,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "component/ircc",
        {
          _index: 1789,
          title: {},
          body: { "modules/IrccDsAngularBannerModule.html": {} },
        },
      ],
      [
        "component_template",
        {
          _index: 237,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "components",
        {
          _index: 2,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "components.constants",
        {
          _index: 492,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "components.module.ts",
        {
          _index: 1829,
          title: {},
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts",
        {
          _index: 646,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:144",
        {
          _index: 689,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:160",
        {
          _index: 683,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:174",
        {
          _index: 691,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:179",
        {
          _index: 705,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:191",
        {
          _index: 686,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:51",
        {
          _index: 713,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:54",
        {
          _index: 680,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:60",
        {
          _index: 681,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:61",
        {
          _index: 682,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:63",
        {
          _index: 714,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:64",
        {
          _index: 710,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:65",
        {
          _index: 712,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:66",
        {
          _index: 718,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:70",
        {
          _index: 722,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:71",
        {
          _index: 708,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:72",
        {
          _index: 676,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:75",
        {
          _index: 721,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:79",
        {
          _index: 720,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:80",
        {
          _index: 719,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:82",
        {
          _index: 707,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:83",
        {
          _index: 695,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:86",
        {
          _index: 698,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:94",
        {
          _index: 700,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/checkbox/checkbox.component.ts:99",
        {
          _index: 690,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "components/date",
        {
          _index: 1144,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "components/error/error.component.ts",
        {
          _index: 892,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "components/error/error.component.ts:27",
        {
          _index: 898,
          title: {},
          body: { "components/ErrorComponent.html": {} },
        },
      ],
      [
        "components/error/error.component.ts:28",
        {
          _index: 902,
          title: {},
          body: { "components/ErrorComponent.html": {} },
        },
      ],
      [
        "components/error/error.component.ts:29",
        {
          _index: 899,
          title: {},
          body: { "components/ErrorComponent.html": {} },
        },
      ],
      [
        "components/error/error.component.ts:30",
        {
          _index: 901,
          title: {},
          body: { "components/ErrorComponent.html": {} },
        },
      ],
      [
        "components/error/error.component.ts:31",
        {
          _index: 896,
          title: {},
          body: { "components/ErrorComponent.html": {} },
        },
      ],
      [
        "components/error/error.component.ts:34",
        {
          _index: 904,
          title: {},
          body: { "components/ErrorComponent.html": {} },
        },
      ],
      [
        "components/error/error.component.ts:44",
        {
          _index: 903,
          title: {},
          body: { "components/ErrorComponent.html": {} },
        },
      ],
      [
        "components/error/error.component.ts:48",
        {
          _index: 905,
          title: {},
          body: { "components/ErrorComponent.html": {} },
        },
      ],
      [
        "components/input/input.component",
        {
          _index: 155,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "components/input/input.component.ts",
        {
          _index: 1455,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "components/input/input.component.ts:100",
        {
          _index: 1773,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:101",
        {
          _index: 1772,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:106",
        {
          _index: 1757,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:173",
        {
          _index: 1754,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:187",
        {
          _index: 1758,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:194",
        {
          _index: 1762,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:206",
        {
          _index: 1756,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:222",
        {
          _index: 1753,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:229",
        {
          _index: 1755,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:244",
        {
          _index: 1752,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:250",
        {
          _index: 1763,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:256",
        {
          _index: 1759,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:264",
        {
          _index: 1760,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:271",
        {
          _index: 1761,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:278",
        {
          _index: 1779,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:55",
        {
          _index: 1770,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:60",
        {
          _index: 1748,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:67",
        {
          _index: 1750,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:72",
        {
          _index: 1749,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:77",
        {
          _index: 1751,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:79",
        {
          _index: 1765,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:80",
        {
          _index: 1768,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:81",
        {
          _index: 1774,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:82",
        {
          _index: 1777,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:83",
        {
          _index: 1764,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:84",
        {
          _index: 1767,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:85",
        {
          _index: 1766,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:86",
        {
          _index: 1769,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:87",
        {
          _index: 1771,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:91",
        {
          _index: 1776,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:92",
        {
          _index: 1747,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/input/input.component.ts:95",
        {
          _index: 1775,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "components/ircc",
        {
          _index: 1828,
          title: {},
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "components/radio",
        {
          _index: 1610,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "components/select/select.component.ts",
        {
          _index: 1639,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "components/select/select.component.ts:100",
        {
          _index: 2001,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:104",
        {
          _index: 2000,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:109",
        {
          _index: 1999,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:142",
        {
          _index: 1998,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:159",
        {
          _index: 1996,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:173",
        {
          _index: 2002,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:178",
        {
          _index: 2005,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:54",
        {
          _index: 2017,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:55",
        {
          _index: 2010,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:56",
        {
          _index: 2008,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:57",
        {
          _index: 2015,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:59",
        {
          _index: 1995,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:63",
        {
          _index: 2011,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:64",
        {
          _index: 2009,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:66",
        {
          _index: 2012,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:70",
        {
          _index: 1994,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:73",
        {
          _index: 2016,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:77",
        {
          _index: 2013,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:78",
        {
          _index: 2014,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:79",
        {
          _index: 2007,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:82",
        {
          _index: 2003,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:85",
        {
          _index: 2004,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:89",
        {
          _index: 1997,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/select/select.component.ts:96",
        {
          _index: 2006,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts",
        {
          _index: 1688,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "components/textarea/textarea.component.ts:124",
        {
          _index: 2047,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:137",
        {
          _index: 2046,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:141",
        {
          _index: 2044,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:159",
        {
          _index: 2045,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:160",
        {
          _index: 2052,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:161",
        {
          _index: 2049,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:164",
        {
          _index: 2050,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:167",
        {
          _index: 2051,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:54",
        {
          _index: 2058,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:56",
        {
          _index: 2041,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:61",
        {
          _index: 2043,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:62",
        {
          _index: 2042,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:63",
        {
          _index: 2040,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:65",
        {
          _index: 2055,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:66",
        {
          _index: 2057,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:67",
        {
          _index: 2056,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:68",
        {
          _index: 2053,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:69",
        {
          _index: 2054,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:70",
        {
          _index: 2059,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:73",
        {
          _index: 2039,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:75",
        {
          _index: 2062,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:78",
        {
          _index: 2061,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:79",
        {
          _index: 2060,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "components/textarea/textarea.component.ts:81",
        {
          _index: 2048,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "config",
        {
          _index: 174,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "config.charlimit",
        {
          _index: 2065,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "config.desc",
        {
          _index: 1886,
          title: {},
          body: { "components/LabelComponent.html": {} },
        },
      ],
      [
        "config.hint",
        {
          _index: 1887,
          title: {},
          body: { "components/LabelComponent.html": {} },
        },
      ],
      [
        "config.inlinelabel",
        {
          _index: 783,
          title: {},
          body: { "components/CheckboxComponent.html": {} },
        },
      ],
      [
        "config.label",
        {
          _index: 784,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "config.placeholder",
        {
          _index: 2018,
          title: {},
          body: { "components/SelectComponent.html": {} },
        },
      ],
      [
        "config.placeholdertext",
        {
          _index: 891,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "config.text",
        {
          _index: 595,
          title: {},
          body: { "components/BreadcrumbLinkComponent.html": {} },
        },
      ],
      [
        "config.value",
        {
          _index: 1048,
          title: {},
          body: { "components/FlyoutOptionComponent.html": {} },
        },
      ],
      [
        "config?.errorlov",
        {
          _index: 913,
          title: {},
          body: { "components/ErrorComponent.html": {} },
        },
      ],
      [
        "config?.label",
        {
          _index: 1744,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "config?.searchbutton?.text",
        {
          _index: 1987,
          title: {},
          body: { "components/SearchInputComponent.html": {} },
        },
      ],
      [
        "config?.title",
        {
          _index: 419,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "configs",
        {
          _index: 726,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "configuration",
        {
          _index: 1502,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "consider",
        {
          _index: 745,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "console.log('testing",
        {
          _index: 1638,
          title: {},
          body: {
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/SearchInputComponent.html": {},
          },
        },
      ],
      [
        "console.log(emitvalue",
        {
          _index: 385,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "console.log(newlang.lang",
        {
          _index: 1933,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "const",
        {
          _index: 188,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "constructor",
        {
          _index: 67,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "constructor(differs",
        {
          _index: 68,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "constructor(platformid",
        {
          _index: 1902,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "constructor(private",
        {
          _index: 176,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "constructor(public",
        {
          _index: 1698,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "constructor(standalonefunctions",
        {
          _index: 675,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "constructor(translate",
        {
          _index: 443,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "cont.value",
        {
          _index: 2037,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "container",
        {
          _index: 1137,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "container?.classlist.add('active",
        {
          _index: 1141,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "containerelement",
        {
          _index: 562,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "containerheight",
        {
          _index: 395,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "content",
        {
          _index: 380,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "control",
        {
          _index: 1492,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "controls",
        {
          _index: 1497,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "controlvalueaccessor",
        {
          _index: 647,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "core",
        {
          _index: 1351,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "correct",
        {
          _index: 1302,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "cours",
        {
          _index: 1597,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "coverage",
        {
          _index: 2066,
          title: { "coverage.html": {} },
          body: { "coverage.html": {} },
        },
      ],
      [
        "create",
        {
          _index: 459,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "createlinks",
        {
          _index: 435,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "createoverflows",
        {
          _index: 436,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "critical",
        {
          _index: 359,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "cta",
        {
          _index: 383,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "cta.text",
        {
          _index: 420,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "ctas",
        {
          _index: 400,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "ctatype",
        {
          _index: 365,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "currcharcount",
        {
          _index: 1707,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "current",
        {
          _index: 1024,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "currentcharacterstatusaria",
        {
          _index: 1697,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "currently",
        {
          _index: 1015,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "currentyear",
        {
          _index: 1222,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "custom",
        {
          _index: 341,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "customerrortext",
        {
          _index: 741,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "customicon",
        {
          _index: 1634,
          title: {},
          body: {
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/SearchInputComponent.html": {},
          },
        },
      ],
      [
        "customizable",
        {
          _index: 1466,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "d'information",
        {
          _index: 1549,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "data",
        {
          _index: 1527,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "date",
        {
          _index: 258,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "date().getfullyear",
        {
          _index: 1223,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "date_picker_day_control_id_extension",
        {
          _index: 1179,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_labels_en",
        {
          _index: 1185,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_labels_en[0",
        {
          _index: 1290,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "date_picker_labels_en[1",
        {
          _index: 1292,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "date_picker_labels_en[2",
        {
          _index: 1294,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "date_picker_labels_fr",
        {
          _index: 1189,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_labels_fr[0",
        {
          _index: 1298,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "date_picker_labels_fr[1",
        {
          _index: 1299,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "date_picker_labels_fr[2",
        {
          _index: 1300,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "date_picker_month_control_id_extension",
        {
          _index: 1181,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_months_en",
        {
          _index: 1154,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_months_fr",
        {
          _index: 1166,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_placeholder_day_en",
        {
          _index: 1199,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_placeholder_day_fr",
        {
          _index: 1201,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_placeholder_month_en",
        {
          _index: 1197,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_placeholder_month_fr",
        {
          _index: 1198,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_placeholder_year_en",
        {
          _index: 1193,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_placeholder_year_fr",
        {
          _index: 1195,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_unkown_en",
        {
          _index: 1203,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_unkown_fr",
        {
          _index: 1205,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date_picker_year_control_id_extension",
        {
          _index: 1183,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "datepickercomponent",
        {
          _index: 257,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "datepickerstate",
        {
          _index: 1329,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "datepickertouchedorinvalid",
        {
          _index: 1328,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "day",
        {
          _index: 1186,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "day.tostring",
        {
          _index: 1308,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "days",
        {
          _index: 1214,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "dayselect",
        {
          _index: 1220,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "dayunknown",
        {
          _index: 1207,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "dd",
        {
          _index: 1200,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "december",
        {
          _index: 1165,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "declarations",
        {
          _index: 1793,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "declare",
        {
          _index: 1477,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "decorators",
        {
          _index: 111,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "default",
        {
          _index: 77,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "defined",
        {
          _index: 70,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "delete",
        {
          _index: 545,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "dependencies",
        {
          _index: 1783,
          title: { "dependencies.html": {} },
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "dependencies.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "desc",
        {
          _index: 742,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "description",
        {
          _index: 1352,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "descriptions",
        {
          _index: 1481,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "desired",
        {
          _index: 1478,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "detect",
        {
          _index: 1514,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "detects",
        {
          _index: 1515,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "determines",
        {
          _index: 850,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "differ",
        {
          _index: 24,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "different",
        {
          _index: 748,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "differs",
        {
          _index: 75,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "directive",
        {
          _index: 235,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "directives",
        {
          _index: 307,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "disable",
        {
          _index: 1521,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "disabled",
        {
          _index: 599,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "disableerror",
        {
          _index: 1217,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "disablefocus",
        {
          _index: 733,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "dismissible",
        {
          _index: 382,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "display",
        {
          _index: 1432,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "displayoverflow",
        {
          _index: 427,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "div",
        {
          _index: 1445,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "divref",
        {
          _index: 428,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "docheck",
        {
          _index: 14,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "document.getelementbyid('hidden",
        {
          _index: 1138,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "document.getelementbyid(id",
        {
          _index: 1129,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "document.getelementbyid(this.config?.id",
        {
          _index: 387,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "document.getelementbyid(this.config?.selected",
        {
          _index: 1681,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "document.getelementbyid(this.textid)?.offsetheight",
        {
          _index: 396,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "document.getelementsbyclassname('hidden",
        {
          _index: 1140,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "document.queryselector('.page",
        {
          _index: 1684,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "document.queryselector(`#${this.config?.id",
        {
          _index: 398,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "document:click",
        {
          _index: 65,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "document:keydown.arrowdown",
        {
          _index: 927,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "document:keydown.arrowdown(event",
        {
          _index: 938,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "document:keydown.arrowup",
        {
          _index: 928,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "document:keydown.arrowup(event",
        {
          _index: 940,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "document:keydown.enter",
        {
          _index: 929,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "document:keydown.enter(event",
        {
          _index: 942,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "documentation",
        { _index: 2067, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "doesn't",
        {
          _index: 159,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "dom",
        {
          _index: 6,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "domchangedirective",
        {
          _index: 1820,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "don't",
        {
          _index: 1468,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "dot",
        {
          _index: 1405,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "down.component",
        {
          _index: 1813,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "down.component.html",
        {
          _index: 822,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "down.component.ts",
        {
          _index: 819,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "down.component.ts:22",
        {
          _index: 831,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:26",
        {
          _index: 833,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:27",
        {
          _index: 836,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:28",
        {
          _index: 834,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:29",
        {
          _index: 835,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:30",
        {
          _index: 832,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:31",
        {
          _index: 829,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:33",
        {
          _index: 864,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:34",
        {
          _index: 863,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:36",
        {
          _index: 862,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:43",
        {
          _index: 840,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:66",
        {
          _index: 842,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:84",
        {
          _index: 846,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "down.component.ts:95",
        {
          _index: 837,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "drop",
        {
          _index: 821,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "dropdown",
        {
          _index: 820,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "dropdown'},{'name",
        {
          _index: 261,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "dropdown/drop",
        {
          _index: 1812,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "dropdowncomponent",
        {
          _index: 260,
          title: { "components/DropdownComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "dropdownconfigs",
        {
          _index: 1216,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "dropdowns",
        {
          _index: 1239,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "ds",
        {
          _index: 1790,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "dsfullsizes",
        {
          _index: 1374,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "dsorientations",
        {
          _index: 1659,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "dssizes",
        {
          _index: 490,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "dssizes.large",
        {
          _index: 679,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "du",
        {
          _index: 1071,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "décembre",
        {
          _index: 1178,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "e",
        {
          _index: 843,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "e.tostring",
        {
          _index: 879,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "e?.relatedtarget",
        {
          _index: 885,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "each",
        {
          _index: 1287,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "eindicatorstatus",
        {
          _index: 1430,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "el",
        {
          _index: 397,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "el.style.display",
        {
          _index: 403,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "el?.focus",
        {
          _index: 1132,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "el?.scrollintoview",
        {
          _index: 1130,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "el?.setattribute('tabindex",
        {
          _index: 1131,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "el_id",
        {
          _index: 947,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "element",
        {
          _index: 234,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "element.value",
        {
          _index: 222,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "elementref",
        {
          _index: 476,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "elipsis",
        {
          _index: 575,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "ellipsis",
        {
          _index: 488,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "emitevent",
        {
          _index: 1366,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "emits",
        {
          _index: 994,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "emitvalue",
        {
          _index: 333,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "empty",
        {
          _index: 861,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "emptyresults",
        {
          _index: 25,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "en",
        {
          _index: 779,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "en.svg",
        {
          _index: 1095,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "end",
        {
          _index: 1010,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "english",
        {
          _index: 1928,
          title: {},
          body: {
            "components/LanguageSwitchComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "english_banner_url",
        {
          _index: 1092,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ensure",
        {
          _index: 987,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "enter",
        {
          _index: 1135,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "entire",
        {
          _index: 1498,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "enum",
        {
          _index: 356,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "enumerations",
        {
          _index: 2121,
          title: { "miscellaneous/enumerations.html": {} },
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "erreur",
        {
          _index: 1544,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "error",
        {
          _index: 54,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "error'},{'name",
        {
          _index: 263,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "error.component.html",
        {
          _index: 893,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
          },
        },
      ],
      [
        "error/error.component",
        {
          _index: 1692,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "error_text_stub_en",
        {
          _index: 727,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "error_text_stub_fr",
        {
          _index: 728,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "erroraria",
        {
          _index: 656,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "errorcomponent",
        {
          _index: 262,
          title: { "components/ErrorComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "erroricon",
        {
          _index: 1690,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "errorids",
        {
          _index: 657,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "errorlov",
        {
          _index: 895,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
          },
        },
      ],
      [
        "errormessages",
        {
          _index: 743,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "errors",
        {
          _index: 1359,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "errorstubtext",
        {
          _index: 658,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "etc",
        {
          _index: 1482,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "event",
        {
          _index: 97,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IOption.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "event.key",
        {
          _index: 1119,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "event.keycode",
        {
          _index: 211,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "event.preventdefault",
        {
          _index: 977,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "event.stoppropagation",
        {
          _index: 179,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "event.target",
        {
          _index: 189,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "eventemitter",
        {
          _index: 94,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "eventhandler",
        {
          _index: 318,
          title: {},
          body: { "components/BannerComponent.html": {} },
        },
      ],
      [
        "eventhandler(emitvalue",
        {
          _index: 331,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "everywhere",
        {
          _index: 737,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "example",
        {
          _index: 1496,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "exceeds",
        {
          _index: 1437,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "export",
        {
          _index: 171,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "exports",
        {
          _index: 1794,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "fa",
        {
          _index: 342,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "fa_keywords",
        {
          _index: 1390,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "fall",
        {
          _index: 988,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "false",
        {
          _index: 79,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "feature",
        {
          _index: 1031,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "feb",
        {
          _index: 1313,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "february",
        {
          _index: 1156,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "field",
        {
          _index: 1278,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "fields",
        {
          _index: 1339,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "file",
        {
          _index: 8,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "filteredoptions.slice(0",
        {
          _index: 204,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "filterlist",
        {
          _index: 40,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "filterlist(filtervalue",
        {
          _index: 115,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "filtervalue",
        {
          _index: 117,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "filtervalue.length",
        {
          _index: 200,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "flipoverflow",
        {
          _index: 437,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "flipoverflow(buttonid",
        {
          _index: 462,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "flyout",
        {
          _index: 267,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "flyout'},{'name",
        {
          _index: 265,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "flyout.component.html",
        {
          _index: 915,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "flyout/flyout.component",
        {
          _index: 866,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
          },
        },
      ],
      [
        "flyoutcomponent",
        {
          _index: 264,
          title: { "components/FlyoutComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "flyoutconfig",
        {
          _index: 823,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "flyoutoptioncomponent",
        {
          _index: 266,
          title: { "components/FlyoutOptionComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "fn",
        {
          _index: 696,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "focus",
        {
          _index: 882,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "focusevent",
        {
          _index: 845,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "focusinput",
        {
          _index: 1745,
          title: {},
          body: {
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "focusinput(focusvalue",
        {
          _index: 1531,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "focusstate",
        {
          _index: 1504,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "focusvalue",
        {
          _index: 1533,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "fontawesome",
        {
          _index: 906,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "footer",
        {
          _index: 1051,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer'},{'name",
        {
          _index: 270,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "footer.component.html",
        {
          _index: 1052,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer.module.ts",
        {
          _index: 1843,
          title: {},
          body: {
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "footer/footer.component",
        {
          _index: 1845,
          title: {},
          body: { "modules/IrccDsAngularHeaderFooterModule.html": {} },
        },
      ],
      [
        "footer/footer/footer.component.ts",
        {
          _index: 1050,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "footer/footer/footer.component.ts:18",
        {
          _index: 1056,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer/footer/footer.component.ts:20",
        {
          _index: 1060,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer/footer/footer.component.ts:21",
        {
          _index: 1059,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer/footer/footer.component.ts:22",
        {
          _index: 1055,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer/footer/footer.component.ts:26",
        {
          _index: 1057,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer/footer/footer.component.ts:33",
        {
          _index: 1058,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer/header/header.component.ts",
        {
          _index: 1080,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "footer/header/header.component.ts:25",
        {
          _index: 1086,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "footer/header/header.component.ts:27",
        {
          _index: 1091,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "footer/header/header.component.ts:28",
        {
          _index: 1089,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "footer/header/header.component.ts:29",
        {
          _index: 1090,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "footer/header/header.component.ts:30",
        {
          _index: 1085,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "footer/header/header.component.ts:34",
        {
          _index: 1087,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "footer/header/header.component.ts:41",
        {
          _index: 1088,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "footer/hidden",
        {
          _index: 1109,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "footer/ircc",
        {
          _index: 1842,
          title: {},
          body: {
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "footer/language",
        {
          _index: 1889,
          title: {},
          body: {
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "footercomponent",
        {
          _index: 269,
          title: { "components/FooterComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "foreach((option",
        {
          _index: 986,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "form",
        {
          _index: 154,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "formcontrol",
        {
          _index: 659,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "formgroup",
        {
          _index: 674,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "formgroupempty",
        {
          _index: 660,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "formsmodule",
        {
          _index: 1833,
          title: {},
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "formvalue",
        {
          _index: 1619,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "forwardref",
        {
          _index: 652,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "foundclickable",
        {
          _index: 978,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "fr",
        {
          _index: 1076,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "fr.svg",
        {
          _index: 1097,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "français",
        {
          _index: 1925,
          title: {},
          body: {
            "components/LanguageSwitchComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "french_banner_url",
        {
          _index: 1096,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "function",
        {
          _index: 847,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "future",
        {
          _index: 1029,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "février",
        {
          _index: 1168,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "general",
        {
          _index: 1210,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "generates",
        {
          _index: 1350,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "generic",
        {
          _index: 358,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "get(this.config.id",
        {
          _index: 1269,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "getariaerrortext",
        {
          _index: 666,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "getariaoverride(haserror",
        {
          _index: 1341,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "getchildoverflow",
        {
          _index: 438,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "getdisabled",
        {
          _index: 1958,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "getdisabled(index",
        {
          _index: 1628,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "geterroraria",
        {
          _index: 1360,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "geterrorstate",
        {
          _index: 667,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "getgeterrorstate",
        {
          _index: 1778,
          title: {},
          body: { "components/InputComponent.html": {} },
        },
      ],
      [
        "getlabelcore",
        {
          _index: 1354,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "getmaxheight",
        {
          _index: 439,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "getnumdaysinmonth(month",
        {
          _index: 1309,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "gouvernement",
        {
          _index: 1072,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "gov_logo_alt_text_en",
        {
          _index: 1073,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "gov_logo_alt_text_fr",
        {
          _index: 1075,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "gov_logo_aria_label_english",
        {
          _index: 1065,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "gov_logo_aria_label_french",
        {
          _index: 1069,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "gov_logo_footer",
        {
          _index: 1061,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "govcanadaalt",
        {
          _index: 1083,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "govcanadalink",
        {
          _index: 1084,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "government",
        {
          _index: 1067,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "green",
        {
          _index: 1419,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "grey",
        {
          _index: 1417,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "group",
        {
          _index: 1483,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "handlekeydown",
        {
          _index: 41,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/HiddenNavComponent.html": {},
          },
        },
      ],
      [
        "handlekeydown(event",
        {
          _index: 118,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "handlekeydown(key",
        {
          _index: 1122,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "handleresize",
        {
          _index: 1900,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "handleresize(e",
        {
          _index: 1914,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "haserror",
        {
          _index: 1340,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "hasn't",
        {
          _index: 991,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "header",
        {
          _index: 1081,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "header'},{'name",
        {
          _index: 272,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "header.component.html",
        {
          _index: 1082,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "header/header.component",
        {
          _index: 1844,
          title: {},
          body: { "modules/IrccDsAngularHeaderFooterModule.html": {} },
        },
      ],
      [
        "header_img_link_en",
        {
          _index: 1098,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "header_img_link_fr",
        {
          _index: 1100,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "header_link_alt_fr",
        {
          _index: 1104,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "header_link_atl_en",
        {
          _index: 1102,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "headercomponent",
        {
          _index: 271,
          title: { "components/HeaderComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "heading",
        {
          _index: 1044,
          title: {},
          body: {
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "height",
        {
          _index: 517,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "help_icon_alt_en",
        {
          _index: 1545,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "help_icon_alt_fr",
        {
          _index: 1547,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "helptext",
        {
          _index: 740,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "here",
        {
          _index: 1265,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "hidden",
        {
          _index: 274,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "hiddennavcomponent",
        {
          _index: 273,
          title: { "components/HiddenNavComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "hidedropdown",
        {
          _index: 26,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "hideshow",
        {
          _index: 1534,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "highlightindex",
        {
          _index: 920,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "highlightindex(el_id",
        {
          _index: 945,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "hint",
        {
          _index: 82,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "hints",
        {
          _index: 1480,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "hinttext",
        {
          _index: 55,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "hook",
        {
          _index: 1525,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "horizontal",
        {
          _index: 1580,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "hostlistener",
        {
          _index: 149,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "hostlistener('click",
        {
          _index: 112,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "hostlistener('document:click",
        {
          _index: 114,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "hostlistener('document:keydown.arrowdown",
        {
          _index: 950,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "hostlistener('document:keydown.arrowup",
        {
          _index: 952,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "hostlistener('document:keydown.enter",
        {
          _index: 954,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "hostlistener('keydown",
        {
          _index: 1123,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "hostlistener('window:keydown.escape",
        {
          _index: 119,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "hostlistener('window:resize",
        {
          _index: 474,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "hostlisteners",
        {
          _index: 63,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "href",
        {
          _index: 454,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "html",
        {
          _index: 233,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "htmlelement",
        {
          _index: 886,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "htmlinputelement",
        {
          _index: 187,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "https://www.canada.ca/en.html",
        {
          _index: 1099,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "https://www.canada.ca/etc/designs/canada/wet",
        {
          _index: 1062,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "https://www.canada.ca/fr.html",
        {
          _index: 1101,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "i.active",
        {
          _index: 890,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "ibannerconfig",
        {
          _index: 327,
          title: { "interfaces/IBannerConfig.html": {} },
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ibreadcrumbconfig",
        {
          _index: 452,
          title: { "interfaces/IBreadcrumbConfig.html": {} },
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ibuttonconfig",
        {
          _index: 354,
          title: { "interfaces/IButtonConfig.html": {} },
          body: {
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "icheckboxcomponentconfig",
        {
          _index: 677,
          title: { "interfaces/ICheckBoxComponentConfig.html": {} },
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "icon",
        {
          _index: 277,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "icon'},{'name",
        {
          _index: 279,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "icon.component.html",
        {
          _index: 1391,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "icon/icon.component",
        {
          _index: 1811,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "iconbutton",
        {
          _index: 1538,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "iconbuttoncategories",
        {
          _index: 1375,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "iconbuttoncategories.custom",
        {
          _index: 1384,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "iconbuttoncategories.primary",
        {
          _index: 1380,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "iconbuttonclick",
        {
          _index: 1557,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "iconbuttoncomponent",
        {
          _index: 276,
          title: { "components/IconButtonComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "iconclass",
        {
          _index: 1542,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "iconclickevent",
        {
          _index: 792,
          title: {},
          body: { "components/ChipItemComponent.html": {} },
        },
      ],
      [
        "iconcomponent",
        {
          _index: 278,
          title: { "components/IconComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "iconconfig",
        {
          _index: 315,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "iconconfigs",
        {
          _index: 1383,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "icondirection",
        {
          _index: 600,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "icons",
        {
          _index: 1382,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "iconspan",
        {
          _index: 1393,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "ictaconfig",
        {
          _index: 368,
          title: { "interfaces/ICTAConfig.html": {} },
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "id",
        {
          _index: 323,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "idatepickerconfig",
        {
          _index: 1143,
          title: { "interfaces/IDatePickerConfig.html": {} },
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "idatepickerdropdownconfigs",
        {
          _index: 1211,
          title: { "interfaces/IDatePickerDropDownConfigs.html": {} },
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "idatepickererrormessages",
        {
          _index: 1150,
          title: { "interfaces/IDatePickerErrorMessages.html": {} },
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "idatepickerunknowndatetoggleconfig",
        {
          _index: 1151,
          title: { "interfaces/IDatePickerUnknownDateToggleConfig.html": {} },
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ideally",
        {
          _index: 158,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "identifier",
        { _index: 2068, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "identify",
        {
          _index: 1486,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "identifying",
        {
          _index: 736,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "idropdownconfig",
        {
          _index: 830,
          title: { "interfaces/IDropdownConfig.html": {} },
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ids",
        {
          _index: 1238,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "ierrorcomponentconfig",
        {
          _index: 897,
          title: { "interfaces/IErrorComponentConfig.html": {} },
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ierroriconconfig",
        {
          _index: 900,
          title: { "interfaces/IErrorIconConfig.html": {} },
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ierrorids",
        {
          _index: 709,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "ierrorpairs",
        {
          _index: 724,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "if(!target?.id.includes(this.config.id",
        {
          _index: 887,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "if((this.config.type",
        {
          _index: 1046,
          title: {},
          body: {
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
          },
        },
      ],
      [
        "if(e",
        {
          _index: 878,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "if(el_id",
        {
          _index: 1003,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "if(option.id",
        {
          _index: 1005,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "if(option.selected",
        {
          _index: 1018,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "if(this.config.flyout",
        {
          _index: 873,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "if(this.config.options",
        {
          _index: 1025,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "if(this.config.type",
        {
          _index: 967,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
          },
        },
      ],
      [
        "if(this.disabled",
        {
          _index: 971,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "if(this.id",
        {
          _index: 968,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
          },
        },
      ],
      [
        "if(this.options",
        {
          _index: 969,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "if(this.selection",
        {
          _index: 972,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "if(this.type",
        {
          _index: 975,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "iflyoutconfig",
        {
          _index: 859,
          title: { "interfaces/IFlyoutConfig.html": {} },
          body: {
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iflyoutoptionconfig",
        {
          _index: 933,
          title: { "interfaces/IFlyoutOptionConfig.html": {} },
          body: {
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iflyoutoptiontype",
        {
          _index: 1043,
          title: {},
          body: {
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "iflyoutselecttypes",
        {
          _index: 965,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "ihiddennavconfig",
        {
          _index: 1117,
          title: { "interfaces/IHiddenNavConfig.html": {} },
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iiconbuttoncomponentconfig",
        {
          _index: 338,
          title: { "interfaces/IIconButtonComponentConfig.html": {} },
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iiconbuttoniconconfig",
        {
          _index: 350,
          title: { "interfaces/IIconButtonIconConfig.html": {} },
          body: {
            "components/BannerComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iiconconfig",
        {
          _index: 1388,
          title: { "interfaces/IIconConfig.html": {} },
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iindicatorconfig",
        {
          _index: 1400,
          title: { "interfaces/IIndicatorConfig.html": {} },
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iinputcomponentconfig",
        {
          _index: 1454,
          title: { "interfaces/IInputComponentConfig.html": {} },
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ilabelconfig",
        {
          _index: 715,
          title: { "interfaces/ILabelConfig.html": {} },
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ilabeliconconfig",
        {
          _index: 729,
          title: { "interfaces/ILabelIconConfig.html": {} },
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ilinkcomponentconfig",
        {
          _index: 483,
          title: { "interfaces/ILinkComponentConfig.html": {} },
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ilinkconfig",
        {
          _index: 374,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "imageurl",
        {
          _index: 1054,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
          },
        },
      ],
      [
        "implements",
        {
          _index: 12,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "import",
        {
          _index: 148,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "imports",
        {
          _index: 1803,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "include",
        {
          _index: 1469,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "inconnu",
        {
          _index: 1206,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "index",
        {
          _index: 21,
          title: { "index.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "indicate",
        {
          _index: 1014,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "indicator",
        {
          _index: 1425,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "indicator'},{'name",
        {
          _index: 281,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "indicator.component",
        {
          _index: 1815,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "indicator.component.html",
        {
          _index: 1426,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "indicator.component.ts",
        {
          _index: 1564,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "indicator.component.ts:30",
        {
          _index: 1938,
          title: {},
          body: { "components/ProgressIndicatorComponent.html": {} },
        },
      ],
      [
        "indicator.component.ts:36",
        {
          _index: 1939,
          title: {},
          body: { "components/ProgressIndicatorComponent.html": {} },
        },
      ],
      [
        "indicator.component.ts:38",
        {
          _index: 1943,
          title: {},
          body: { "components/ProgressIndicatorComponent.html": {} },
        },
      ],
      [
        "indicator.component.ts:42",
        {
          _index: 1944,
          title: {},
          body: { "components/ProgressIndicatorComponent.html": {} },
        },
      ],
      [
        "indicator.component.ts:47",
        {
          _index: 1937,
          title: {},
          body: { "components/ProgressIndicatorComponent.html": {} },
        },
      ],
      [
        "indicator.component.ts:51",
        {
          _index: 1940,
          title: {},
          body: { "components/ProgressIndicatorComponent.html": {} },
        },
      ],
      [
        "indicator.component.ts:63",
        {
          _index: 1942,
          title: {},
          body: { "components/ProgressIndicatorComponent.html": {} },
        },
      ],
      [
        "indicator.component.ts:67",
        {
          _index: 1941,
          title: {},
          body: { "components/ProgressIndicatorComponent.html": {} },
        },
      ],
      [
        "indicator/indicator.component",
        {
          _index: 1818,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "indicator/progress",
        {
          _index: 1563,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "indicatorcomponent",
        {
          _index: 280,
          title: { "components/IndicatorComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "indicatorpalette",
        {
          _index: 1413,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "indicatorpurpose",
        {
          _index: 1409,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "indicatorpurpose.status",
        {
          _index: 1428,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "indicatorstatus",
        {
          _index: 1410,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "indicatortreatment",
        {
          _index: 1406,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "indicatortreatment.weak",
        {
          _index: 1427,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "indicatortype",
        {
          _index: 1404,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "individual",
        {
          _index: 1226,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "info",
        {
          _index: 3,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "information",
        {
          _index: 1411,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/LabelComponent.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "initial",
        {
          _index: 907,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
          },
        },
      ],
      [
        "initialize",
        {
          _index: 1513,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "inject",
        {
          _index: 1922,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "inject(platform_id",
        {
          _index: 1930,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "injectable",
        {
          _index: 1862,
          title: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
          },
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "injectables",
        {
          _index: 1863,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "inlinelabel",
        {
          _index: 734,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "inlinelabelbold",
        {
          _index: 735,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "input",
        {
          _index: 150,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "input'},{'name",
        {
          _index: 282,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "input.component",
        {
          _index: 1831,
          title: {},
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "input.component.html",
        {
          _index: 1461,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
          },
        },
      ],
      [
        "input.component.ts",
        {
          _index: 1612,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "input.component.ts:103",
        {
          _index: 1967,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:137",
        {
          _index: 1966,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:153",
        {
          _index: 1963,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:167",
        {
          _index: 1968,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:172",
        {
          _index: 1971,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:186",
        {
          _index: 1964,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:20",
        {
          _index: 1984,
          title: {},
          body: { "components/SearchInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:21",
        {
          _index: 1985,
          title: {},
          body: { "components/SearchInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:23",
        {
          _index: 1983,
          title: {},
          body: { "components/SearchInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:26",
        {
          _index: 1986,
          title: {},
          body: { "components/SearchInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:60",
        {
          _index: 1976,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:61",
        {
          _index: 1981,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:62",
        {
          _index: 1973,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:63",
        {
          _index: 1975,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:65",
        {
          _index: 1960,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:69",
        {
          _index: 1962,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:70",
        {
          _index: 1961,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:72",
        {
          _index: 1977,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:76",
        {
          _index: 1974,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:77",
        {
          _index: 1959,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:80",
        {
          _index: 1980,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:84",
        {
          _index: 1978,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:85",
        {
          _index: 1979,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:86",
        {
          _index: 1972,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:89",
        {
          _index: 1969,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:92",
        {
          _index: 1970,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input.component.ts:96",
        {
          _index: 1965,
          title: {},
          body: { "components/RadioInputComponent.html": {} },
        },
      ],
      [
        "input/input.component",
        {
          _index: 1830,
          title: {},
          body: { "modules/IrccDsAngularFormComponentsModule.html": {} },
        },
      ],
      [
        "input/radio",
        {
          _index: 1611,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/RadioInputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "input/search",
        {
          _index: 1632,
          title: {},
          body: {
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/SearchInputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "inputcomponent",
        {
          _index: 28,
          title: { "components/InputComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "inputs",
        {
          _index: 53,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "inputtypes",
        {
          _index: 1459,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "inputtypes.password",
        {
          _index: 1503,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "inputtypes.text",
        {
          _index: 1507,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "inputvalue",
        {
          _index: 29,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "instead",
        {
          _index: 1475,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "interacted",
        {
          _index: 856,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "interface",
        {
          _index: 167,
          title: {
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
          },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "interfaces",
        {
          _index: 168,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "invalid",
        {
          _index: 688,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "ioption",
        {
          _index: 90,
          title: { "interfaces/IOption.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iprogressindicatorconfig",
        {
          _index: 1561,
          title: { "interfaces/IProgressIndicatorConfig.html": {} },
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iprogresstagsconfig",
        {
          _index: 1568,
          title: { "interfaces/IProgressTagsConfig.html": {} },
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iradioinputcomponentconfig",
        {
          _index: 1609,
          title: { "interfaces/IRadioInputComponentConfig.html": {} },
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iradioinputoption",
        {
          _index: 1614,
          title: { "interfaces/IRadioInputOption.html": {} },
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ircc",
        {
          _index: 241,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "irccdsangularbannermodule",
        {
          _index: 1781,
          title: { "modules/IrccDsAngularBannerModule.html": {} },
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "index.html": {},
            "modules.html": {},
          },
        },
      ],
      [
        "irccdsangularcomponentssharedmodule",
        {
          _index: 1797,
          title: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "index.html": {},
            "modules.html": {},
          },
        },
      ],
      [
        "irccdsangularformcomponents",
        {
          _index: 1837,
          title: {},
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "irccdsangularformcomponentsmodule",
        {
          _index: 1824,
          title: { "modules/IrccDsAngularFormComponentsModule.html": {} },
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "index.html": {},
            "modules.html": {},
          },
        },
      ],
      [
        "irccdsangularheaderfootermodule",
        {
          _index: 1838,
          title: { "modules/IrccDsAngularHeaderFooterModule.html": {} },
          body: {
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "index.html": {},
            "modules.html": {},
          },
        },
      ],
      [
        "irccdsangularlegacyoldmodule",
        {
          _index: 1850,
          title: { "modules/IrccDsAngularLegacyOldModule.html": {} },
          body: {
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "index.html": {},
            "modules.html": {},
          },
        },
      ],
      [
        "irccdsheaderfootercomponents",
        {
          _index: 1849,
          title: {},
          body: {
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "irccdslegacyoldcomponents",
        {
          _index: 1861,
          title: {},
          body: {
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "irccdssharedcomponents",
        {
          _index: 1823,
          title: {},
          body: {
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ischildoverflow",
        {
          _index: 429,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "iscomponentclicked",
        {
          _index: 30,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "isdisabled",
        {
          _index: 661,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "isearchinputbuttonconfig",
        {
          _index: 1630,
          title: { "interfaces/ISearchInputButtonConfig.html": {} },
          body: {
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/SearchInputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "isearchinputconfig",
        {
          _index: 1633,
          title: { "interfaces/ISearchInputConfig.html": {} },
          body: {
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/SearchInputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iselectconfig",
        {
          _index: 1152,
          title: { "interfaces/ISelectConfig.html": {} },
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "iselectoptionsconfig",
        {
          _index: 1640,
          title: { "interfaces/ISelectOptionsConfig.html": {} },
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "isfocusinsidecomponent",
        {
          _index: 31,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "iskiplinkconfig",
        {
          _index: 1127,
          title: { "interfaces/ISkipLinkConfig.html": {} },
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "isleapyear(year",
        {
          _index: 1325,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "ismobile",
        {
          _index: 1899,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "ispinnerconfig",
        {
          _index: 1657,
          title: { "interfaces/ISpinnerConfig.html": {} },
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "isplatformbrowser",
        {
          _index: 1921,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "isselected",
        {
          _index: 926,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "istepconfig",
        {
          _index: 1567,
          title: { "interfaces/IStepConfig.html": {} },
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "it's",
        {
          _index: 876,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "itabconfig",
        {
          _index: 1571,
          title: { "interfaces/ITabConfig.html": {} },
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/TabsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "itabnavconfig",
        {
          _index: 1572,
          title: { "interfaces/ITabNavConfig.html": {} },
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/TabsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "item",
        {
          _index: 787,
          title: {},
          body: {
            "components/ChipItemComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "item'},{'name",
        {
          _index: 254,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "item.arialabel",
        {
          _index: 412,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "item.btnconfig",
        {
          _index: 413,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "item.btnconfig.arialabel",
        {
          _index: 414,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "item.component",
        {
          _index: 166,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "item.component.html",
        {
          _index: 788,
          title: {},
          body: { "components/ChipItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts",
        {
          _index: 786,
          title: {},
          body: {
            "components/ChipItemComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "item.component.ts:13",
        {
          _index: 796,
          title: {},
          body: { "components/ChipItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:17",
        {
          _index: 795,
          title: {},
          body: { "components/ChipItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:8",
        {
          _index: 794,
          title: {},
          body: { "components/ChipItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:9",
        {
          _index: 793,
          title: {},
          body: { "components/ChipItemComponent.html": {} },
        },
      ],
      [
        "item.key",
        {
          _index: 197,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "item/chip",
        {
          _index: 165,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/ChipItemComponent.html": {},
            "interfaces/IOption.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "itextareacomponentconfig",
        {
          _index: 1687,
          title: { "interfaces/ITextareaComponentConfig.html": {} },
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "january",
        {
          _index: 1155,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "janvier",
        {
          _index: 1167,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "jj",
        {
          _index: 1202,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "jour",
        {
          _index: 1190,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "juillet",
        {
          _index: 1173,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "juin",
        {
          _index: 1172,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "july",
        {
          _index: 1160,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "june",
        {
          _index: 1159,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "key",
        {
          _index: 501,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "keyboardevent",
        {
          _index: 103,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "keydown",
        {
          _index: 1116,
          title: {},
          body: { "components/HiddenNavComponent.html": {} },
        },
      ],
      [
        "keydown(key",
        {
          _index: 1120,
          title: {},
          body: { "components/HiddenNavComponent.html": {} },
        },
      ],
      [
        "keyof",
        {
          _index: 369,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "keys",
        {
          _index: 1396,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "keyvaluediffer",
        {
          _index: 136,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "keyvaluediffers",
        {
          _index: 69,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "know",
        {
          _index: 161,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "label",
        {
          _index: 685,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "label'},{'name",
        {
          _index: 284,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "label.component.html",
        {
          _index: 1550,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "label/label.component",
        {
          _index: 1814,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "labelbutton",
        {
          _index: 1552,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "labelbuttonclickobs",
        {
          _index: 1866,
          title: {},
          body: { "injectables/LabelButtonService.html": {} },
        },
      ],
      [
        "labelbuttonclicksubj",
        {
          _index: 1867,
          title: {},
          body: { "injectables/LabelButtonService.html": {} },
        },
      ],
      [
        "labelbuttonservice",
        {
          _index: 1540,
          title: { "injectables/LabelButtonService.html": {} },
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "labelcomponent",
        {
          _index: 283,
          title: { "components/LabelComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "labelconfig",
        {
          _index: 662,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "labelcore",
        {
          _index: 1355,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "labeliconconfig",
        {
          _index: 744,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "labelicontext",
        {
          _index: 1551,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "labels",
        {
          _index: 1286,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "lang",
        {
          _index: 706,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "langauge",
        {
          _index: 1279,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "langtoggle",
        {
          _index: 1903,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "language",
        {
          _index: 286,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "language_switch_text_english",
        {
          _index: 1924,
          title: {},
          body: {
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "language_switch_text_english_mobile",
        {
          _index: 1926,
          title: {},
          body: {
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "language_switch_text_french",
        {
          _index: 1927,
          title: {},
          body: {
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "language_switch_text_french_mobile",
        {
          _index: 1929,
          title: {},
          body: {
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "languageclickobs",
        {
          _index: 1891,
          title: {},
          body: { "injectables/LanguageSwitchButtonService.html": {} },
        },
      ],
      [
        "languageclicksub",
        {
          _index: 1892,
          title: {},
          body: { "injectables/LanguageSwitchButtonService.html": {} },
        },
      ],
      [
        "languageswitchbuttonservice",
        {
          _index: 1888,
          title: { "injectables/LanguageSwitchButtonService.html": {} },
          body: {
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "languageswitchcomponent",
        {
          _index: 285,
          title: { "components/LanguageSwitchComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "languagetoggleclick",
        {
          _index: 1893,
          title: {},
          body: { "injectables/LanguageSwitchButtonService.html": {} },
        },
      ],
      [
        "large",
        {
          _index: 363,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "layer",
        {
          _index: 505,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "lead",
        {
          _index: 511,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "leap",
        {
          _index: 1323,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "left",
        {
          _index: 625,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "legacy",
        {
          _index: 1855,
          title: {},
          body: {
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "legend",
        {
          _index: 232,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "less",
        {
          _index: 1655,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "lets",
        {
          _index: 995,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "lib",
        {
          _index: 17,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "lib/src/lib/banner",
        {
          _index: 311,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "lib/src/lib/form",
        {
          _index: 645,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lib/src/lib/header",
        {
          _index: 1049,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lib/src/lib/legacy",
        {
          _index: 10,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "interfaces/IOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts",
        {
          _index: 421,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:122",
        {
          _index: 458,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:143",
        {
          _index: 466,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:156",
        {
          _index: 461,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:177",
        {
          _index: 457,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:185",
        {
          _index: 463,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:190",
        {
          _index: 465,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:40",
        {
          _index: 455,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:45",
        {
          _index: 475,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:46",
        {
          _index: 489,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:55",
        {
          _index: 485,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:56",
        {
          _index: 484,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:57",
        {
          _index: 479,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:58",
        {
          _index: 482,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:60",
        {
          _index: 481,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:62",
        {
          _index: 478,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:63",
        {
          _index: 451,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:71",
        {
          _index: 472,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:80",
        {
          _index: 467,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:88",
        {
          _index: 470,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/link/link.component.ts",
        {
          _index: 590,
          title: {},
          body: {
            "components/BreadcrumbLinkComponent.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/link/link.component.ts:16",
        {
          _index: 593,
          title: {},
          body: { "components/BreadcrumbLinkComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/breadcrumb/link/link.component.ts:19",
        {
          _index: 592,
          title: {},
          body: { "components/BreadcrumbLinkComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts",
        {
          _index: 596,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:47",
        {
          _index: 606,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:50",
        {
          _index: 610,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:51",
        {
          _index: 604,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:52",
        {
          _index: 611,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:53",
        {
          _index: 605,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:54",
        {
          _index: 603,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:55",
        {
          _index: 607,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:56",
        {
          _index: 608,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:57",
        {
          _index: 609,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:58",
        {
          _index: 612,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:60",
        {
          _index: 613,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:62",
        {
          _index: 616,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/button/button.component.ts:81",
        {
          _index: 615,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/dropdown/drop",
        {
          _index: 818,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/flyout",
        {
          _index: 1036,
          title: {},
          body: {
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts",
        {
          _index: 914,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:111",
        {
          _index: 944,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:118",
        {
          _index: 956,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:22",
        {
          _index: 960,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:24",
        {
          _index: 930,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:27",
        {
          _index: 932,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:28",
        {
          _index: 934,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:29",
        {
          _index: 931,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:30",
        {
          _index: 935,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:31",
        {
          _index: 936,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:34",
        {
          _index: 937,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:36",
        {
          _index: 961,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:37",
        {
          _index: 957,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:39",
        {
          _index: 948,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:49",
        {
          _index: 939,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:64",
        {
          _index: 941,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:84",
        {
          _index: 943,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/flyout/flyout.component.ts:91",
        {
          _index: 946,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/icon",
        {
          _index: 1372,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/icon/icon.component.ts",
        {
          _index: 1389,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/icon/icon.component.ts:20",
        {
          _index: 1732,
          title: {},
          body: { "components/IconComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/icon/icon.component.ts:21",
        {
          _index: 1729,
          title: {},
          body: { "components/IconComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/icon/icon.component.ts:22",
        {
          _index: 1728,
          title: {},
          body: { "components/IconComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/icon/icon.component.ts:23",
        {
          _index: 1730,
          title: {},
          body: { "components/IconComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/icon/icon.component.ts:25",
        {
          _index: 1731,
          title: {},
          body: { "components/IconComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts",
        {
          _index: 1401,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:103",
        {
          _index: 1735,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:110",
        {
          _index: 1734,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:66",
        {
          _index: 1733,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:71",
        {
          _index: 1742,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:72",
        {
          _index: 1741,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:73",
        {
          _index: 1743,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:74",
        {
          _index: 1740,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:76",
        {
          _index: 1739,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:81",
        {
          _index: 1737,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:85",
        {
          _index: 1738,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/indicator/indicator.component.ts:92",
        {
          _index: 1736,
          title: {},
          body: { "components/IndicatorComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/ircc",
        {
          _index: 1807,
          title: {},
          body: {
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/label/label",
        {
          _index: 1864,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/label/label.component.ts",
        {
          _index: 1537,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/label/label.component.ts:38",
        {
          _index: 1880,
          title: {},
          body: { "components/LabelComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/label/label.component.ts:42",
        {
          _index: 1879,
          title: {},
          body: { "components/LabelComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/label/label.component.ts:46",
        {
          _index: 1885,
          title: {},
          body: { "components/LabelComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/label/label.component.ts:50",
        {
          _index: 1882,
          title: {},
          body: { "components/LabelComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/label/label.component.ts:57",
        {
          _index: 1884,
          title: {},
          body: { "components/LabelComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/label/label.component.ts:71",
        {
          _index: 1881,
          title: {},
          body: { "components/LabelComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/label/label.component.ts:75",
        {
          _index: 1883,
          title: {},
          body: { "components/LabelComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/progress",
        {
          _index: 1562,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts",
        {
          _index: 1658,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:29",
        {
          _index: 2030,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:31",
        {
          _index: 2020,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:34",
        {
          _index: 2021,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:35",
        {
          _index: 2025,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:36",
        {
          _index: 2024,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:37",
        {
          _index: 2023,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:38",
        {
          _index: 2022,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:39",
        {
          _index: 2019,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:43",
        {
          _index: 2027,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:59",
        {
          _index: 2026,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:63",
        {
          _index: 2029,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/spinner/spinner.component.ts:74",
        {
          _index: 2028,
          title: {},
          body: { "components/SpinnerComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/tabs/tabs.component.ts",
        {
          _index: 1671,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "lib/src/lib/shared/tabs/tabs.component.ts:21",
        {
          _index: 2032,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/tabs/tabs.component.ts:25",
        {
          _index: 2033,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/tabs/tabs.component.ts:27",
        {
          _index: 2034,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "lib/src/lib/shared/tabs/tabs.component.ts:34",
        {
          _index: 2035,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "library/.../banner.component.ts",
        {
          _index: 2122,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "library/.../breadcrumb.component.ts",
        {
          _index: 2129,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "library/.../button.component.ts",
        {
          _index: 2123,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "library/.../date",
        {
          _index: 2144,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "library/.../flyout",
        {
          _index: 2125,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "library/.../flyout.component.ts",
        {
          _index: 2126,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "library/.../footer.component.ts",
        {
          _index: 2146,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "library/.../header.component.ts",
        {
          _index: 2143,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "library/.../icon",
        {
          _index: 2124,
          title: {},
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "library/.../indicator.component.ts",
        {
          _index: 2127,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "library/.../input.component.ts",
        {
          _index: 2128,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "library/.../ircc",
        {
          _index: 2147,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "library/.../label.component.ts",
        {
          _index: 2145,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "library/.../language",
        {
          _index: 2148,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "library/.../progress",
        {
          _index: 2130,
          title: {},
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "library/.../spinner.component.ts",
        {
          _index: 2132,
          title: {},
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "library/.../textarea.component.ts",
        {
          _index: 2131,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "library/component",
        {
          _index: 9,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lifecycle",
        {
          _index: 1524,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "limit",
        {
          _index: 56,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "line",
        {
          _index: 399,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "linevisible",
        {
          _index: 316,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "link",
        {
          _index: 366,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "link'},{'name",
        {
          _index: 248,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "link.component.html",
        {
          _index: 591,
          title: {},
          body: {
            "components/BreadcrumbLinkComponent.html": {},
            "interfaces/ILinkComponentConfig.html": {},
          },
        },
      ],
      [
        "link.href",
        {
          _index: 546,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "link.linkkey",
        {
          _index: 556,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "link.overflow",
        {
          _index: 558,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "link.routerlink",
        {
          _index: 547,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "link.text",
        {
          _index: 589,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "link.title",
        {
          _index: 1142,
          title: {},
          body: { "components/HiddenNavComponent.html": {} },
        },
      ],
      [
        "link/link.component",
        {
          _index: 493,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "link[this.config.type",
        {
          _index: 555,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "linkconfig",
        {
          _index: 371,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "linkkey",
        {
          _index: 594,
          title: {},
          body: {
            "components/BreadcrumbLinkComponent.html": {},
            "interfaces/ILinkComponentConfig.html": {},
          },
        },
      ],
      [
        "links",
        {
          _index: 508,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "linkslength",
        {
          _index: 581,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "linktype",
        {
          _index: 498,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "list",
        {
          _index: 800,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "list'},{'name",
        {
          _index: 256,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "list.component",
        {
          _index: 1858,
          title: {},
          body: { "modules/IrccDsAngularLegacyOldModule.html": {} },
        },
      ],
      [
        "list.component.html",
        {
          _index: 801,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "list.component.ts",
        {
          _index: 799,
          title: {},
          body: {
            "components/ChipListComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "list.component.ts:10",
        {
          _index: 806,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "list.component.ts:13",
        {
          _index: 809,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "list.component.ts:15",
        {
          _index: 812,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "list.component.ts:20",
        {
          _index: 810,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "list.component.ts:8",
        {
          _index: 807,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "list.component.ts:9",
        {
          _index: 808,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "list/chip",
        {
          _index: 798,
          title: {},
          body: {
            "components/ChipListComponent.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "listens",
        {
          _index: 1909,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "literal",
        {
          _index: 99,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "live",
        {
          _index: 1641,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "loading",
        {
          _index: 1661,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "loads",
        {
          _index: 1512,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "locked",
        {
          _index: 1594,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "logo",
        {
          _index: 1103,
          title: {},
          body: {
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "looks",
        {
          _index: 854,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "lov",
        {
          _index: 1303,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "mai",
        {
          _index: 1171,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "make",
        {
          _index: 1476,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "makes",
        {
          _index: 1473,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "mandatory",
        {
          _index: 1484,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "many",
        {
          _index: 747,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "mapping",
        {
          _index: 1381,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "march",
        {
          _index: 1157,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "markastouched",
        {
          _index: 1624,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "mars",
        {
          _index: 1169,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matching",
        {
          _index: 310,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
            "modules.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "math.max(this.selectedindex",
        {
          _index: 990,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "max",
        {
          _index: 516,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "maxheight",
        {
          _index: 431,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "maxlimit",
        {
          _index: 1709,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "maxyear",
        {
          _index: 1147,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "metadata",
        {
          _index: 15,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "methods",
        {
          _index: 34,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "mid",
        {
          _index: 504,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      ["mime", { _index: 2117, title: {}, body: { "dependencies.html": {} } }],
      [
        "minyear",
        {
          _index: 1148,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "miscellaneous",
        {
          _index: 2120,
          title: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "missing",
        {
          _index: 739,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "mixed",
        {
          _index: 732,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "mobile",
        {
          _index: 1912,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "module",
        {
          _index: 1780,
          title: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
          body: {},
        },
      ],
      [
        "modules",
        {
          _index: 1782,
          title: { "modules.html": {} },
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "index.html": {},
            "modules.html": {},
          },
        },
      ],
      [
        "mois",
        {
          _index: 1191,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "month",
        {
          _index: 1187,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "monthnum",
        {
          _index: 1310,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "months",
        {
          _index: 1215,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "monthselect",
        {
          _index: 1219,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "monthunknown",
        {
          _index: 1208,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "more",
        {
          _index: 1546,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "mostly",
        {
          _index: 1642,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "multi",
        {
          _index: 653,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "name",
        {
          _index: 57,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "nav",
        {
          _index: 1112,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "nav'},{'name",
        {
          _index: 275,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "nav.component",
        {
          _index: 1848,
          title: {},
          body: { "modules/IrccDsAngularHeaderFooterModule.html": {} },
        },
      ],
      [
        "nav.component.html",
        {
          _index: 1113,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "nav.component.ts",
        {
          _index: 1111,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "nav.component.ts:19",
        {
          _index: 1118,
          title: {},
          body: { "components/HiddenNavComponent.html": {} },
        },
      ],
      [
        "nav.component.ts:23",
        {
          _index: 1125,
          title: {},
          body: { "components/HiddenNavComponent.html": {} },
        },
      ],
      [
        "nav.component.ts:33",
        {
          _index: 1121,
          title: {},
          body: { "components/HiddenNavComponent.html": {} },
        },
      ],
      [
        "nav.component.ts:38",
        {
          _index: 1126,
          title: {},
          body: { "components/HiddenNavComponent.html": {} },
        },
      ],
      [
        "nav.scrollleft",
        {
          _index: 1685,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "nav/hidden",
        {
          _index: 1110,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "navigation",
        {
          _index: 506,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "navy",
        {
          _index: 1421,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "need",
        {
          _index: 160,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "nested",
        {
          _index: 1643,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "neutral",
        {
          _index: 1412,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "never",
        {
          _index: 738,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "new",
        {
          _index: 175,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ng_value_accessor",
        {
          _index: 650,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "ngafterviewchecked",
        {
          _index: 319,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "ngafterviewinit",
        {
          _index: 320,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "ngdocheck",
        {
          _index: 42,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "ngmodule",
        {
          _index: 1795,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "ngonchange",
        {
          _index: 1652,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "ngonchanges",
        {
          _index: 440,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "ngonchanges(changes",
        {
          _index: 468,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "ngoninit",
        {
          _index: 43,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "ngx",
        {
          _index: 494,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "none",
        {
          _index: 405,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "noresults",
        {
          _index: 231,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "normallinks",
        {
          _index: 432,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "note",
        {
          _index: 1467,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "nothing",
        {
          _index: 996,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "notstarted",
        {
          _index: 1603,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "november",
        {
          _index: 1164,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "novembre",
        {
          _index: 1177,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "now",
        {
          _index: 375,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "null",
        {
          _index: 908,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "number",
        {
          _index: 85,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/IStepConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/RadioInputComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "number(this.config?.charlimit",
        {
          _index: 1712,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "numdays",
        {
          _index: 1266,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "obj",
        {
          _index: 1364,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "object",
        {
          _index: 1491,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "object.keys(change",
        {
          _index: 1397,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "october",
        {
          _index: 1163,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "octobre",
        {
          _index: 1176,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "old.module.ts",
        {
          _index: 1856,
          title: {},
          body: {
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts",
        {
          _index: 11,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:107",
        {
          _index: 122,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:111",
        {
          _index: 120,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:122",
        {
          _index: 134,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:126",
        {
          _index: 116,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:142",
        {
          _index: 106,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:151",
        {
          _index: 126,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:156",
        {
          _index: 130,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:161",
        {
          _index: 132,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:167",
        {
          _index: 125,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:172",
        {
          _index: 123,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:177",
        {
          _index: 127,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:184",
        {
          _index: 129,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:196",
        {
          _index: 109,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:206",
        {
          _index: 121,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:36",
        {
          _index: 142,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:39",
        {
          _index: 91,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:40",
        {
          _index: 93,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:41",
        {
          _index: 84,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:42",
        {
          _index: 89,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:43",
        {
          _index: 80,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:44",
        {
          _index: 87,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:45",
        {
          _index: 95,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:46",
        {
          _index: 92,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:48",
        {
          _index: 147,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:49",
        {
          _index: 146,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:50",
        {
          _index: 143,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:51",
        {
          _index: 139,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:52",
        {
          _index: 145,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:53",
        {
          _index: 144,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:54",
        {
          _index: 135,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:55",
        {
          _index: 137,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:57",
        {
          _index: 71,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:63",
        {
          _index: 104,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:75",
        {
          _index: 100,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/autocomplete/autocomplete.component.ts:97",
        {
          _index: 101,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "old/chips/chip",
        {
          _index: 785,
          title: {},
          body: {
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "old/chips/secondary",
        {
          _index: 1988,
          title: {},
          body: {
            "components/SecondaryChipsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "old/ircc",
        {
          _index: 1854,
          title: {},
          body: {
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "old/search",
        {
          _index: 1631,
          title: {},
          body: {
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/SearchInputComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "onarrowdown",
        {
          _index: 921,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "onarrowdown(event",
        {
          _index: 949,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "onarrowup",
        {
          _index: 922,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "onarrowup(event",
        {
          _index: 951,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "onblur",
        {
          _index: 1651,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "onchange",
        {
          _index: 663,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "onchanges",
        {
          _index: 422,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
          },
        },
      ],
      [
        "onclicked",
        {
          _index: 1649,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "one",
        {
          _index: 1490,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "onenter",
        {
          _index: 923,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "onenter(event",
        {
          _index: 953,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "onenterkeypress",
        {
          _index: 789,
          title: {},
          body: { "components/ChipItemComponent.html": {} },
        },
      ],
      [
        "oniconclick",
        {
          _index: 790,
          title: {},
          body: { "components/ChipItemComponent.html": {} },
        },
      ],
      [
        "oninit",
        {
          _index: 13,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "onmouseenter",
        {
          _index: 44,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "onresize",
        {
          _index: 441,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "onresize(event",
        {
          _index: 473,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "onsubmit",
        {
          _index: 803,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "ontouch",
        {
          _index: 664,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "ontouched",
        {
          _index: 1371,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "ontouchedlabel",
        {
          _index: 668,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "opens",
        {
          _index: 853,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "option",
        {
          _index: 215,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "option'},{'name",
        {
          _index: 268,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "option.active",
        {
          _index: 1006,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "option.clickable",
        {
          _index: 981,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "option.component",
        {
          _index: 964,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
          },
        },
      ],
      [
        "option.component.html",
        {
          _index: 1038,
          title: {},
          body: {
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
          },
        },
      ],
      [
        "option.component.ts",
        {
          _index: 1037,
          title: {},
          body: {
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "option.component.ts:27",
        {
          _index: 1041,
          title: {},
          body: { "components/FlyoutOptionComponent.html": {} },
        },
      ],
      [
        "option.component.ts:32",
        {
          _index: 1039,
          title: {},
          body: { "components/FlyoutOptionComponent.html": {} },
        },
      ],
      [
        "option.component.ts:36",
        {
          _index: 1042,
          title: {},
          body: { "components/FlyoutOptionComponent.html": {} },
        },
      ],
      [
        "option.selected",
        {
          _index: 1022,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "option.text",
        {
          _index: 1982,
          title: {},
          body: {
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "option.value",
        {
          _index: 1012,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "option/flyout",
        {
          _index: 963,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "option['text",
        {
          _index: 230,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "option[\\'text",
        {
          _index: 238,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "optional",
        {
          _index: 27,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "optioncontainers",
        {
          _index: 917,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "options",
        {
          _index: 58,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "optionselected",
        {
          _index: 924,
          title: {},
          body: { "components/FlyoutComponent.html": {} },
        },
      ],
      [
        "optionselected(i",
        {
          _index: 955,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "orange",
        {
          _index: 1415,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "orientation",
        {
          _index: 1565,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "orientations",
        {
          _index: 1579,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "originaloptions",
        {
          _index: 32,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "otherwise",
        {
          _index: 1324,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "out",
        {
          _index: 1788,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "output",
        {
          _index: 151,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "outputs",
        {
          _index: 61,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "overflow",
        {
          _index: 515,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
          },
        },
      ],
      [
        "overflowlinks",
        {
          _index: 433,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "overflows",
        {
          _index: 585,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "override",
        {
          _index: 909,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
          },
        },
      ],
      [
        "overview",
        {
          _index: 2133,
          title: { "index.html": {} },
          body: { "index.html": {} },
        },
      ],
      [
        "p",
        {
          _index: 576,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "package",
        {
          _index: 2105,
          title: { "dependencies.html": {}, "properties.html": {} },
          body: {},
        },
      ],
      [
        "padding",
        {
          _index: 1448,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "page",
        {
          _index: 514,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "pages",
        {
          _index: 510,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "palette",
        {
          _index: 1402,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "param",
        {
          _index: 753,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "parameters",
        {
          _index: 72,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "parent",
        {
          _index: 703,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "parentid",
        {
          _index: 717,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "pas",
        {
          _index: 1600,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "password",
        {
          _index: 1460,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "picker",
        {
          _index: 1212,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "picker'},{'name",
        {
          _index: 259,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "picker.component",
        {
          _index: 1835,
          title: {},
          body: { "modules/IrccDsAngularFormComponentsModule.html": {} },
        },
      ],
      [
        "picker.component.html",
        {
          _index: 1213,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "picker.component.ts",
        {
          _index: 1146,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "picker/date",
        {
          _index: 1145,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "placeholder",
        {
          _index: 1456,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "placeholdertext",
        {
          _index: 828,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/SearchInputComponent.html": {},
          },
        },
      ],
      [
        "plain",
        {
          _index: 618,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "platform_id",
        {
          _index: 1923,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "platformid",
        {
          _index: 1905,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "plus",
        {
          _index: 1548,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "populate",
        {
          _index: 1253,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "portinputvalues",
        {
          _index: 894,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
          },
        },
      ],
      [
        "possible",
        {
          _index: 750,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "present",
        {
          _index: 1227,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "press",
        {
          _index: 1554,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "pressed",
        {
          _index: 1555,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "prev",
        {
          _index: 553,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "previous",
        {
          _index: 509,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "primary",
        {
          _index: 346,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "private",
        {
          _index: 430,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "progress",
        {
          _index: 289,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "progress_indicator_step_en",
        {
          _index: 1574,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "progress_indicator_step_fr",
        {
          _index: 1576,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "progressindicatorcomponent",
        {
          _index: 288,
          title: { "components/ProgressIndicatorComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "progresstagscomponent",
        {
          _index: 290,
          title: { "components/ProgressTagsComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "properties",
        {
          _index: 22,
          title: { "properties.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TextareaComponent.html": {},
            "properties.html": {},
          },
        },
      ],
      [
        "property",
        {
          _index: 1529,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "provide",
        {
          _index: 649,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "providedin",
        {
          _index: 1876,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
          },
        },
      ],
      [
        "providers",
        {
          _index: 648,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "public",
        {
          _index: 35,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "purple",
        {
          _index: 1420,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "purpose",
        {
          _index: 1403,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "push(this.config.options[i]);*/console.log('multi",
        {
          _index: 1033,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "px",
        {
          _index: 518,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "querylist",
        {
          _index: 958,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "radio",
        {
          _index: 293,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "radioinputcomponent",
        {
          _index: 292,
          title: { "components/RadioInputComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ratio",
        {
          _index: 578,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      ["rc.12", { _index: 2116, title: {}, body: { "dependencies.html": {} } }],
      [
        "reactiveformsmodule",
        {
          _index: 1834,
          title: {},
          body: {
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "really",
        {
          _index: 1472,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "receives",
        {
          _index: 848,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "recreate",
        {
          _index: 538,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "red",
        {
          _index: 1416,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "reducing",
        {
          _index: 1494,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "refer",
        {
          _index: 1485,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "refers",
        {
          _index: 1500,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "registeronchange",
        {
          _index: 669,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "registeronchange(fn",
        {
          _index: 694,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "registeronchange(onchange",
        {
          _index: 1622,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "registerontouched",
        {
          _index: 670,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "registerontouched(fn",
        {
          _index: 697,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "registerontouched(ontouched",
        {
          _index: 1623,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "removeallchipitems",
        {
          _index: 45,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "removechipitem",
        {
          _index: 46,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/ChipListComponent.html": {},
          },
        },
      ],
      [
        "removechipitem(chipidx",
        {
          _index: 811,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "removechipitem(index",
        {
          _index: 124,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "removed",
        {
          _index: 1509,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "removevertical",
        {
          _index: 1670,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "renderer",
        {
          _index: 447,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "renderer2",
        {
          _index: 448,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "replace",
        {
          _index: 373,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "representing",
        {
          _index: 692,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "required",
        {
          _index: 731,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "reset",
        {
          _index: 623,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "resizable",
        {
          _index: 1691,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "resizabletypes",
        {
          _index: 1693,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "resizes",
        {
          _index: 1911,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "results",
        {
          _index: 309,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
            "modules.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "retcontrol",
        {
          _index: 756,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "return",
        {
          _index: 201,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "returnlabel",
        {
          _index: 1559,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "returnoptionstodefault",
        {
          _index: 47,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "returns",
        {
          _index: 107,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "reverse",
        {
          _index: 985,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "right",
        {
          _index: 626,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "root",
        {
          _index: 1877,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
          },
        },
      ],
      [
        "rotatechevron",
        {
          _index: 1646,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "rounded",
        {
          _index: 381,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "routerlink",
        {
          _index: 499,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "routerlinks",
        {
          _index: 460,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "routermodule",
        {
          _index: 1809,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "rxjs",
        {
          _index: 1875,
          title: {},
          body: {
            "injectables/LabelButtonService.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
          },
        },
      ],
      [
        "s",
        {
          _index: 229,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      ["s3", { _index: 2110, title: {}, body: { "dependencies.html": {} } }],
      [
        "same",
        {
          _index: 1556,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "savedselectedoptions",
        {
          _index: 59,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "screen",
        {
          _index: 1910,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "scrolling",
        {
          _index: 1016,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "scrolltoanchor",
        {
          _index: 1114,
          title: {},
          body: { "components/HiddenNavComponent.html": {} },
        },
      ],
      [
        "scrolltoanchor(id",
        {
          _index: 1124,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "sdk/client",
        { _index: 2109, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "sdk/lib",
        { _index: 2112, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "search",
        {
          _index: 295,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "searchbutton",
        {
          _index: 1635,
          title: {},
          body: {
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/SearchInputComponent.html": {},
          },
        },
      ],
      [
        "searchevent",
        {
          _index: 1636,
          title: {},
          body: {
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/SearchInputComponent.html": {},
          },
        },
      ],
      [
        "searchinputcomponent",
        {
          _index: 294,
          title: { "components/SearchInputComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "searchinputcontrol",
        {
          _index: 1637,
          title: {},
          body: {
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "components/SearchInputComponent.html": {},
          },
        },
      ],
      [
        "secondary",
        {
          _index: 297,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "secondarychipscomponent",
        {
          _index: 296,
          title: { "components/SecondaryChipsComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "segment",
        {
          _index: 503,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "select",
        {
          _index: 1030,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "select'},{'name",
        {
          _index: 300,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "select.component.html",
        {
          _index: 1644,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "select/select.component",
        {
          _index: 1153,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
          },
        },
      ],
      [
        "selectall",
        {
          _index: 48,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "selectcomponent",
        {
          _index: 299,
          title: { "components/SelectComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "selected",
        {
          _index: 824,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "selectedid",
        {
          _index: 1679,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "selectedindex",
        {
          _index: 918,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "selectedoption",
        {
          _index: 206,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "selectedoption(e",
        {
          _index: 841,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "selectedoption.value",
        {
          _index: 208,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "selectedoptions",
        {
          _index: 33,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "selectindex",
        {
          _index: 49,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "selectindex(index",
        {
          _index: 128,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "selection",
        {
          _index: 925,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "selections",
        {
          _index: 1020,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "selector",
        {
          _index: 16,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "selects",
        {
          _index: 877,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "selectvaluechange",
        {
          _index: 62,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "sense",
        {
          _index: 1474,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "sentiment",
        {
          _index: 1423,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "separatoricon",
        {
          _index: 434,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "september",
        {
          _index: 1162,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "septembre",
        {
          _index: 1175,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "serve",
        {
          _index: 1517,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "set",
        {
          _index: 339,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/CheckboxComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "setdisabledstate",
        {
          _index: 671,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "setdisabledstate(isdisabled",
        {
          _index: 699,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "setdisabledstate?(isdisabled",
        {
          _index: 754,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "setlabellanguage",
        {
          _index: 1288,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "setlang",
        {
          _index: 672,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "setlang(lang",
        {
          _index: 704,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "sets",
        {
          _index: 1000,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "setselected",
        {
          _index: 2031,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "setselected(selectedid",
        {
          _index: 1678,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "settext",
        {
          _index: 1901,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "settext(lang",
        {
          _index: 1916,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "settimeout",
        {
          _index: 527,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "settimeout(function",
        {
          _index: 389,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "setting",
        {
          _index: 1021,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "settypetitle",
        {
          _index: 1607,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "setup",
        {
          _index: 1028,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "setyeardaylanguage",
        {
          _index: 1280,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "shared.module",
        {
          _index: 1799,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "shared.module.ts",
        {
          _index: 1808,
          title: {},
          body: {
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "shared/button/button.component",
        {
          _index: 355,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "shared/constants/jl",
        {
          _index: 491,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "shared/directives/dom",
        {
          _index: 1821,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "shared/functions/stand",
        {
          _index: 496,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "shared/icon",
        {
          _index: 351,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "shared/interfaces/component",
        {
          _index: 725,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "shared/ircc",
        {
          _index: 1798,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "shared/label/label.component",
        {
          _index: 730,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "showcontent",
        {
          _index: 1672,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "shownav",
        {
          _index: 1115,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "showpassword",
        {
          _index: 1505,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "showplaceholder",
        {
          _index: 825,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "simplechanges",
        {
          _index: 469,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "single",
        {
          _index: 966,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "size",
        {
          _index: 384,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "sizeoverride",
        {
          _index: 1616,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "skiplinks",
        {
          _index: 1128,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "slice(0",
        {
          _index: 984,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "small",
        {
          _index: 364,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/ButtonComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "smooth",
        {
          _index: 1009,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "solid",
        {
          _index: 343,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "something",
        {
          _index: 1654,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "source",
        {
          _index: 4,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "spancontent",
        {
          _index: 1398,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "spinner",
        {
          _index: 1666,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "spinner'},{'name",
        {
          _index: 302,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "spinner.component.html",
        {
          _index: 1667,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "spinner/spinner.component",
        {
          _index: 1819,
          title: {},
          body: { "modules/IrccDsAngularComponentsSharedModule.html": {} },
        },
      ],
      [
        "spinner_labels_en",
        {
          _index: 1660,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "spinner_labels_fr",
        {
          _index: 1662,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "spinnercomponent",
        {
          _index: 301,
          title: { "components/SpinnerComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "spinnertype",
        {
          _index: 1665,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "standalone",
        {
          _index: 445,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "standalonefunctions",
        {
          _index: 446,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "start",
        {
          _index: 170,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "started",
        {
          _index: 1595,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "state",
        {
          _index: 687,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "statement",
        {
          _index: 1264,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "statements",
        { _index: 2069, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "static",
        {
          _index: 141,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "status",
        {
          _index: 857,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "step",
        {
          _index: 1575,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "steps",
        {
          _index: 1566,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "steptext",
        {
          _index: 1585,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "storage",
        { _index: 2113, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "string",
        {
          _index: 81,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "string(year",
        {
          _index: 1312,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "strong",
        {
          _index: 1407,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "styling",
        {
          _index: 1002,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "submit",
        {
          _index: 622,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "subscribing",
        {
          _index: 1488,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "success",
        {
          _index: 360,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "succès",
        {
          _index: 1664,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "such",
        {
          _index: 1479,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      ["support", { _index: 2137, title: {}, body: { "modules.html": {} } }],
      ["svg", { _index: 2138, title: {}, body: { "modules.html": {} } }],
      [
        "switch",
        {
          _index: 1890,
          title: {},
          body: {
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "switch'},{'name",
        {
          _index: 287,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "switch.component",
        {
          _index: 1847,
          title: {},
          body: { "modules/IrccDsAngularHeaderFooterModule.html": {} },
        },
      ],
      [
        "switch.component.html",
        {
          _index: 1898,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "switch.component.ts",
        {
          _index: 1897,
          title: {},
          body: {
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "switch.component.ts:24",
        {
          _index: 1906,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "switch.component.ts:26",
        {
          _index: 1919,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "switch.component.ts:28",
        {
          _index: 1920,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "switch.component.ts:29",
        {
          _index: 1904,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "switch.component.ts:41",
        {
          _index: 1908,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "switch.component.ts:48",
        {
          _index: 1915,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "switch.component.ts:57",
        {
          _index: 1918,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "switch.component.ts:61",
        {
          _index: 1917,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "switch/language",
        {
          _index: 1846,
          title: {},
          body: {
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "symbol",
        {
          _index: 1066,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "symbole",
        {
          _index: 1070,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "tab",
        {
          _index: 1133,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "tab?.getboundingclientrect().left",
        {
          _index: 1683,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "tabclick",
        {
          _index: 1582,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "tabclickfn",
        {
          _index: 1936,
          title: {},
          body: { "components/ProgressIndicatorComponent.html": {} },
        },
      ],
      [
        "tabclickfn(selected",
        {
          _index: 1588,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "tabconfig",
        {
          _index: 1583,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "tabindex",
        {
          _index: 601,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      ["table", { _index: 2104, title: {}, body: { "coverage.html": {} } }],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 2103, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "tablet",
        {
          _index: 1913,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "tabnavconfig",
        {
          _index: 1584,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "tabs",
        {
          _index: 1673,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "tabs'},{'name",
        {
          _index: 304,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "tabs.component.html",
        {
          _index: 1674,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "tabs/tabs.component",
        {
          _index: 1573,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "tabscomponent",
        {
          _index: 303,
          title: { "components/TabsComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "tag",
        {
          _index: 577,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "tag_labels_en",
        {
          _index: 1592,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "tag_labels_fr",
        {
          _index: 1596,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "tagconfig",
        {
          _index: 1578,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "tags",
        {
          _index: 1604,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
          },
        },
      ],
      [
        "tags'},{'name",
        {
          _index: 291,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "tags.component",
        {
          _index: 1570,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "tags.component.html",
        {
          _index: 1605,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
          },
        },
      ],
      [
        "tags.component.ts",
        {
          _index: 1591,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "tags.component.ts:37",
        {
          _index: 1952,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "tags.component.ts:39",
        {
          _index: 1946,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "tags.component.ts:42",
        {
          _index: 1947,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "tags.component.ts:43",
        {
          _index: 1948,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "tags.component.ts:44",
        {
          _index: 1945,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "tags.component.ts:48",
        {
          _index: 1950,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "tags.component.ts:58",
        {
          _index: 1949,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "tags.component.ts:62",
        {
          _index: 1951,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "tags/progress",
        {
          _index: 1569,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "tagtype",
        {
          _index: 1602,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "take",
        {
          _index: 376,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "takes",
        {
          _index: 999,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "tap",
        {
          _index: 1577,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "target",
        {
          _index: 186,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "target.classlist.contains('select",
        {
          _index: 193,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "target.classlist.contains(`selected",
        {
          _index: 194,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "target.type",
        {
          _index: 190,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "teal",
        {
          _index: 1414,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "tempelement",
        {
          _index: 565,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "tempelement.offsetheight",
        {
          _index: 571,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "template",
        {
          _index: 5,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "templateurl",
        {
          _index: 19,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "text",
        {
          _index: 83,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "text[0",
        {
          _index: 1957,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "text[1",
        {
          _index: 1953,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "text[2",
        {
          _index: 1954,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "text[3",
        {
          _index: 1955,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "text[4",
        {
          _index: 1956,
          title: {},
          body: { "components/ProgressTagsComponent.html": {} },
        },
      ],
      [
        "textarea",
        {
          _index: 306,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "textarea.component.html",
        {
          _index: 1695,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "textarea/textarea.component",
        {
          _index: 1836,
          title: {},
          body: { "modules/IrccDsAngularFormComponentsModule.html": {} },
        },
      ],
      [
        "textarea_component.maxlimit",
        {
          _index: 1711,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "textarea_component.warninglimit",
        {
          _index: 1715,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "textareacomponent",
        {
          _index: 305,
          title: { "components/TextareaComponent.html": {} },
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "textareainput.value.length",
        {
          _index: 2064,
          title: {},
          body: { "components/TextareaComponent.html": {} },
        },
      ],
      [
        "textid",
        {
          _index: 317,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "that's",
        {
          _index: 1464,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "thin",
        {
          _index: 1377,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "this.a11ytext",
        {
          _index: 1011,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.abbr",
        {
          _index: 1451,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.activiatedselect",
        {
          _index: 1648,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.addhover",
        {
          _index: 192,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.altimage",
        {
          _index: 1079,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "this.aria",
        {
          _index: 1078,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
          },
        },
      ],
      [
        "this.ariadissmissible",
        {
          _index: 417,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "this.arialabel",
        {
          _index: 634,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "this.ariatext",
        {
          _index: 1520,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "this.baseurl",
        {
          _index: 548,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.btnaction.emit(id",
        {
          _index: 644,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "this.btnevent?.emit(this.config.id",
        {
          _index: 393,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "this.category",
        {
          _index: 629,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "this.changeref.detectchanges",
        {
          _index: 531,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.charactercountstatus",
        {
          _index: 1702,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.charactercountstatus(change[this.config.id]?.length",
        {
          _index: 1704,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.charlimit",
        {
          _index: 1699,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.charlimitstatus",
        {
          _index: 1708,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.checkduplicated(index",
        {
          _index: 219,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.checklabellength",
        {
          _index: 1436,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.checklabelrounded",
        {
          _index: 1434,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.checknumber",
        {
          _index: 1435,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.childref",
        {
          _index: 587,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.childref.nativeelement.offsetwidth",
        {
          _index: 588,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.chipcontenttext",
        {
          _index: 816,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "this.chiplist?.push(this.chipcontenttext",
        {
          _index: 817,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "this.chiplist?.splice(chipidx",
        {
          _index: 814,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "this.chiplistchange.emit(this.chiplist",
        {
          _index: 815,
          title: {},
          body: { "components/ChipListComponent.html": {} },
        },
      ],
      [
        "this.clearflyoutfocus",
        {
          _index: 881,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.clearoptions",
        {
          _index: 1032,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.clickevent.emit(id",
        {
          _index: 1387,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "this.color",
        {
          _index: 632,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "this.config",
        {
          _index: 415,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
          },
        },
      ],
      [
        "this.config.ariadissmissible",
        {
          _index: 416,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "this.config.arialabel",
        {
          _index: 635,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "this.config.baseurlkey",
        {
          _index: 550,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.config.category",
        {
          _index: 630,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "this.config.charlimit",
        {
          _index: 1700,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.clickable",
        {
          _index: 1047,
          title: {},
          body: {
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
          },
        },
      ],
      [
        "this.config.color",
        {
          _index: 633,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "this.config.desc",
        {
          _index: 766,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.disabled",
        {
          _index: 637,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/IconButtonComponent.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "this.config.errorlov",
        {
          _index: 912,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
          },
        },
      ],
      [
        "this.config.errormessages",
        {
          _index: 764,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.errormessages.general",
        {
          _index: 1252,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.errormessages?.general",
        {
          _index: 1224,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.flyout",
        {
          _index: 875,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.config.flyout.options.foreach(i",
        {
          _index: 889,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup",
        {
          _index: 716,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.controls[this.config.id].value",
        {
          _index: 1701,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.controls[this.config.id].value.length",
        {
          _index: 1703,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.disable",
        {
          _index: 1369,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.enable",
        {
          _index: 1370,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get",
        {
          _index: 1271,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.config.id",
        {
          _index: 757,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.config.id)?.invalid",
        {
          _index: 782,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.config.id)?.statuschanges.subscribe",
        {
          _index: 773,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.config.id)?.touched",
        {
          _index: 781,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.dropdownconfigs.day.id)?.invalid",
        {
          _index: 1335,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.dropdownconfigs.day.id)?.touched",
        {
          _index: 1334,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.dropdownconfigs.month.id)?.invalid",
        {
          _index: 1333,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.dropdownconfigs.month.id)?.touched",
        {
          _index: 1332,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.dropdownconfigs.year.id)?.invalid",
        {
          _index: 1331,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.get(this.dropdownconfigs.year.id)?.touched",
        {
          _index: 1330,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.setvalue(obj",
        {
          _index: 1365,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.valuechanges.subscribe((change",
        {
          _index: 1522,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.formgroup.valuechanges.subscribe(fn",
        {
          _index: 1367,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup?.invalid",
        {
          _index: 1338,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.formgroup?.touched",
        {
          _index: 1337,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.helptext",
        {
          _index: 767,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "this.config.hint",
        {
          _index: 1225,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.icon",
        {
          _index: 641,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.config.icondirection",
        {
          _index: 642,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "this.config.id",
        {
          _index: 628,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.label",
        {
          _index: 765,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.label.length",
        {
          _index: 1444,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.config.label.trim().length",
        {
          _index: 871,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.config.labeliconconfig",
        {
          _index: 769,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.links",
        {
          _index: 551,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.config.links.length",
        {
          _index: 552,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.config.maxyear",
        {
          _index: 1233,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.minyear",
        {
          _index: 1235,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.options",
        {
          _index: 970,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "this.config.options.slice(this.selectedindex",
        {
          _index: 979,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.config.options?.foreach(option",
        {
          _index: 1004,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.config.options[i].clickable",
        {
          _index: 1027,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.config.options[i].selected",
        {
          _index: 1026,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.config.options[index].disabled",
        {
          _index: 1629,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "this.config.orientation",
        {
          _index: 1586,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.config.placeholdertext",
        {
          _index: 869,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.config.required",
        {
          _index: 768,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config.selected",
        {
          _index: 1587,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "this.config.selection",
        {
          _index: 973,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.config.size",
        {
          _index: 521,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.config.tab",
        {
          _index: 1675,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "this.config.tab[0].id",
        {
          _index: 1676,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "this.config.tabindex",
        {
          _index: 639,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "this.config.toplabel",
        {
          _index: 1560,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/LabelComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.config.type",
        {
          _index: 543,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.config.unknowndatetoggle",
        {
          _index: 1237,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.unknowndatetoggle?.dayunknown",
        {
          _index: 1272,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config.unknowndatetoggle?.yearunknown",
        {
          _index: 1262,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.config?.charlimit",
        {
          _index: 1706,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.config?.cta",
        {
          _index: 410,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "this.config?.cta.foreach((item",
        {
          _index: 411,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "this.config?.flyout?.options",
        {
          _index: 888,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.config?.id",
        {
          _index: 386,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "this.config?.label",
        {
          _index: 1440,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.config?.links",
        {
          _index: 541,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.config?.links.filter((link",
        {
          _index: 560,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.config?.links.find",
        {
          _index: 582,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.config?.links.foreach((link",
        {
          _index: 544,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.config?.links.length",
        {
          _index: 542,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.config?.options?.foreach(option",
        {
          _index: 1023,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.config?.selected",
        {
          _index: 1680,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "this.config?.size",
        {
          _index: 487,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "this.createlinks",
        {
          _index: 519,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.createoverflows",
        {
          _index: 528,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.currentcharacterstatusaria",
        {
          _index: 1710,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.days",
        {
          _index: 1305,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dayselect",
        {
          _index: 1348,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dayselect?.setattribute",
        {
          _index: 1349,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.desc",
        {
          _index: 1230,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.differ",
        {
          _index: 177,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.differ.diff(this",
        {
          _index: 195,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.differs.find({}).create",
        {
          _index: 178,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.disabled",
        {
          _index: 636,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "this.displayoverflow",
        {
          _index: 583,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.divref",
        {
          _index: 563,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.divref.nativeelement",
        {
          _index: 564,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.divref?.nativeelement.offsetheight",
        {
          _index: 580,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.formgroup",
        {
          _index: 1243,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.id",
        {
          _index: 1240,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.label",
        {
          _index: 1289,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.options",
        {
          _index: 1306,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.options?.length",
        {
          _index: 1274,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.options?.push",
        {
          _index: 1273,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.options?.shift",
        {
          _index: 1281,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.options?.unshift",
        {
          _index: 1284,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.placeholder",
        {
          _index: 1295,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.size",
        {
          _index: 1246,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.day.toplabel",
        {
          _index: 1249,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.month.formgroup",
        {
          _index: 1244,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.month.id",
        {
          _index: 1241,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.month.label",
        {
          _index: 1291,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.month.options?.push",
        {
          _index: 1275,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.month.placeholder",
        {
          _index: 1296,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.month.size",
        {
          _index: 1247,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.month.toplabel",
        {
          _index: 1250,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.year.formgroup",
        {
          _index: 1245,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.year.id",
        {
          _index: 1242,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.year.label",
        {
          _index: 1293,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.year.options?.push",
        {
          _index: 1263,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.year.options?.shift",
        {
          _index: 1282,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.year.options?.unshift",
        {
          _index: 1285,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.year.placeholder",
        {
          _index: 1297,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.year.size",
        {
          _index: 1248,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.dropdownconfigs.year.toplabel",
        {
          _index: 1251,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.emptyresults",
        {
          _index: 205,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.erroraria",
        {
          _index: 776,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.errorids",
        {
          _index: 771,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.errorids.foreach((error",
        {
          _index: 1361,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.errorlov",
        {
          _index: 911,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
          },
        },
      ],
      [
        "this.errormessages",
        {
          _index: 1231,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.errorstubtext",
        {
          _index: 780,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.filterlist(event",
        {
          _index: 199,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.flyoutconfig",
        {
          _index: 874,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.focusstate",
        {
          _index: 1532,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.form.get('formcontrol')?.setvalue(formvalue",
        {
          _index: 1621,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.formcontrol",
        {
          _index: 758,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.formcontrol?.markasdirty",
        {
          _index: 775,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.formgroup",
        {
          _index: 770,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.formgroupempty",
        {
          _index: 678,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.getariaerrortext",
        {
          _index: 774,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.getariaoverride",
        {
          _index: 1260,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.getariaoverride(datepickerstate",
        {
          _index: 1336,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.getchildoverflow",
        {
          _index: 530,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.geterroraria",
        {
          _index: 1345,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.getlabelcore",
        {
          _index: 1344,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.getmaxheight",
        {
          _index: 523,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.getnumdaysinmonth(month",
        {
          _index: 1307,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.govcanadaalt",
        {
          _index: 1108,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "this.govcanadalink",
        {
          _index: 1107,
          title: {},
          body: { "components/HeaderComponent.html": {} },
        },
      ],
      [
        "this.hidedropdown",
        {
          _index: 180,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.highlightindex(option.id",
        {
          _index: 983,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.hint",
        {
          _index: 1229,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.icon",
        {
          _index: 640,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "this.iconclickevent.emit",
        {
          _index: 797,
          title: {},
          body: { "components/ChipItemComponent.html": {} },
        },
      ],
      [
        "this.iconconfig.id",
        {
          _index: 406,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "this.iconconfigs[this.config.category",
        {
          _index: 1385,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
          },
        },
      ],
      [
        "this.icondirection",
        {
          _index: 643,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "this.iconspan.nativeelement.innerhtml",
        {
          _index: 1399,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "this.id",
        {
          _index: 627,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.imageurl",
        {
          _index: 1077,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
          },
        },
      ],
      [
        "this.inputcomponent?.clearvalue",
        {
          _index: 182,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.inputcomponent?.focusinput(this.hidedropdown",
        {
          _index: 210,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.ischildoverflow",
        {
          _index: 529,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.iscomponentclicked",
        {
          _index: 184,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.isdisabled",
        {
          _index: 755,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
          },
        },
      ],
      [
        "this.isfocusinsidecomponent",
        {
          _index: 185,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.isleapyear(year",
        {
          _index: 1315,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.ismobile",
        {
          _index: 1931,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "this.isselected.emit(null",
        {
          _index: 998,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.isselected.emit(this.config.options[i].value",
        {
          _index: 1035,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.label",
        {
          _index: 867,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.label?.nativeelement?.offsetwidth",
        {
          _index: 1452,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.labelbutton.buttonpress(this.config.parentid",
        {
          _index: 1558,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "this.labelbuttonclicksubj.asobservable",
        {
          _index: 1871,
          title: {},
          body: { "injectables/LabelButtonService.html": {} },
        },
      ],
      [
        "this.labelbuttonclicksubj.next(id",
        {
          _index: 1878,
          title: {},
          body: { "injectables/LabelButtonService.html": {} },
        },
      ],
      [
        "this.labelconfig",
        {
          _index: 762,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.labelicontext",
        {
          _index: 1553,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "this.langtoggle.languagetoggleclick",
        {
          _index: 1935,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "this.languageclicksub.asobservable",
        {
          _index: 1894,
          title: {},
          body: { "injectables/LanguageSwitchButtonService.html": {} },
        },
      ],
      [
        "this.languageclicksub.next(true",
        {
          _index: 1896,
          title: {},
          body: { "injectables/LanguageSwitchButtonService.html": {} },
        },
      ],
      [
        "this.limit",
        {
          _index: 217,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.maxheight",
        {
          _index: 522,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.maxyear",
        {
          _index: 1232,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.minyear",
        {
          _index: 1234,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.months",
        {
          _index: 1283,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.monthselect",
        {
          _index: 1346,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.monthselect?.setattribute",
        {
          _index: 1347,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.normallinks",
        {
          _index: 561,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.onchange",
        {
          _index: 751,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.ontouch",
        {
          _index: 752,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "this.ontouched",
        {
          _index: 1368,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.optioncontainers.toarray()[this.selectedindex]?.nativeelement?.scrollintoview",
        {
          _index: 1007,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.options",
        {
          _index: 203,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.options.length",
        {
          _index: 181,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.options.slice(0",
        {
          _index: 225,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.options[index].value",
        {
          _index: 223,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.optionselected(this.selectedindex",
        {
          _index: 997,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.orientation",
        {
          _index: 1668,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.originaloptions",
        {
          _index: 224,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.originaloptions.slice(0",
        {
          _index: 209,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.overflowlinks",
        {
          _index: 559,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.placeholdertext",
        {
          _index: 868,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.portinputvalues",
        {
          _index: 910,
          title: {},
          body: {
            "components/ErrorComponent.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
          },
        },
      ],
      [
        "this.removevertical",
        {
          _index: 1669,
          title: {},
          body: {
            "interfaces/ISpinnerConfig.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.renderer.addclass(tempelement",
        {
          _index: 569,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.renderer.appendchild(containerelement",
        {
          _index: 570,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.renderer.appendchild(tempelement",
        {
          _index: 568,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.renderer.createelement('p",
        {
          _index: 566,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.renderer.createtext('test",
        {
          _index: 567,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.renderer.removechild(containerelement",
        {
          _index: 572,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.required",
        {
          _index: 1228,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.returnoptionstodefault",
        {
          _index: 183,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.rotatechevron",
        {
          _index: 1650,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.rounded",
        {
          _index: 1443,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.savedselectedoptions",
        {
          _index: 226,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.scrolltoanchor(link",
        {
          _index: 1136,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "this.selected",
        {
          _index: 880,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.selectedindex",
        {
          _index: 982,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.selectedoptions",
        {
          _index: 207,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.selectedoptions.length",
        {
          _index: 218,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.selectedoptions.push(option",
        {
          _index: 216,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.selectedoptions.push(this.options[index",
        {
          _index: 220,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.selectedoptions.some((element",
        {
          _index: 221,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.selectedoptions.splice(index",
        {
          _index: 213,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.selection",
        {
          _index: 974,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "this.selectvaluechange.emit(this.selectedoptions",
        {
          _index: 198,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.separatoricon.arialabel",
        {
          _index: 524,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.separatoricon.size",
        {
          _index: 520,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.setlabellanguage",
        {
          _index: 1257,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.setlang(change.lang",
        {
          _index: 761,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.setlang(this.translate.currentlang",
        {
          _index: 759,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.setmonthslanguage",
        {
          _index: 1256,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.settext(newlang.lang",
        {
          _index: 1934,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "this.settypetitle",
        {
          _index: 1606,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.setyeardaylanguage",
        {
          _index: 1259,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.shownav",
        {
          _index: 1134,
          title: {},
          body: {
            "components/HiddenNavComponent.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
          },
        },
      ],
      [
        "this.showpassword",
        {
          _index: 1518,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "this.showplaceholder",
        {
          _index: 872,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.size",
        {
          _index: 631,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.standalone.getbaseurl",
        {
          _index: 549,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.standalonefunctions.geterroraria",
        {
          _index: 777,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.standalonefunctions.geterrorids",
        {
          _index: 772,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.standalonefunctions.makelabelconfig",
        {
          _index: 763,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "this.steptext",
        {
          _index: 1590,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.tabclick.emit(selected",
        {
          _index: 1589,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
          },
        },
      ],
      [
        "this.tabindex",
        {
          _index: 638,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "interfaces/IButtonConfig.html": {},
          },
        },
      ],
      [
        "this.text",
        {
          _index: 1608,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.textid",
        {
          _index: 408,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "this.toggledropdown",
        {
          _index: 191,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "this.toggleflyout(false",
        {
          _index: 884,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "this.toggleline",
        {
          _index: 418,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "this.touched",
        {
          _index: 778,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.translate.currentlang",
        {
          _index: 1261,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.translate.instant",
        {
          _index: 525,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.translate.instant(error.errorlov",
        {
          _index: 1362,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.translate.instant(link.linkkey",
        {
          _index: 557,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "this.translate.instant(this.config.desc",
        {
          _index: 1357,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.translate.instant(this.config.hint",
        {
          _index: 1358,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.translate.instant(this.config.label",
        {
          _index: 1356,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.translate.onlangchange.subscribe",
        {
          _index: 1258,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.translate.onlangchange.subscribe((change",
        {
          _index: 760,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "this.type",
        {
          _index: 976,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "components/InputComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "this.typecontrol",
        {
          _index: 1519,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "this.unknowndatetoggle",
        {
          _index: 1236,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.updatedaysarray",
        {
          _index: 1267,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.valuechange.emit(selectedid",
        {
          _index: 1686,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "this.valuechange.emit(this.config.selected",
        {
          _index: 1677,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "this.yearselect",
        {
          _index: 1342,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "this.yearselect?.setattribute",
        {
          _index: 1343,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "through",
        {
          _index: 992,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "title",
        {
          _index: 60,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "todo",
        {
          _index: 156,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "toggle",
        {
          _index: 1516,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "toggledropdown",
        {
          _index: 50,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "toggledropdownkey",
        {
          _index: 51,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "toggledropdownkey(event",
        {
          _index: 131,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "toggleflyout",
        {
          _index: 827,
          title: {},
          body: { "components/DropdownComponent.html": {} },
        },
      ],
      [
        "toggleflyout(status",
        {
          _index: 844,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "toggleline",
        {
          _index: 321,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "token",
        {
          _index: 1543,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "components/LabelComponent.html": {},
          },
        },
      ],
      [
        "toplabel",
        {
          _index: 1539,
          title: {},
          body: {
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/LabelComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "touched",
        {
          _index: 665,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "translate",
        {
          _index: 228,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "translate/core",
        {
          _index: 495,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "translated",
        {
          _index: 1353,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "translatemodule",
        {
          _index: 1802,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
          },
        },
      ],
      [
        "translateservice",
        {
          _index: 444,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
          },
        },
      ],
      [
        "translation",
        {
          _index: 500,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/FlyoutComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "trash",
        {
          _index: 1379,
          title: {},
          body: {
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "treatment",
        {
          _index: 1422,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "tree",
        {
          _index: 7,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "trigger",
        {
          _index: 693,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "triggers",
        {
          _index: 1001,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "true",
        {
          _index: 138,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "truncated",
        {
          _index: 1433,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "truthy",
        {
          _index: 849,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "turned",
        {
          _index: 1618,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "type",
        {
          _index: 74,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IHiddenNavConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ILabelConfig.html": {},
            "interfaces/ILabelIconConfig.html": {},
            "interfaces/ILinkComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISkipLinkConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "typecontrol",
        {
          _index: 1506,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "typeof",
        {
          _index: 370,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      ["types", { _index: 2118, title: {}, body: { "dependencies.html": {} } }],
      [
        "undefined",
        {
          _index: 554,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IButtonConfig.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/InputComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "under",
        {
          _index: 1625,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "uniquely",
        {
          _index: 1487,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
          },
        },
      ],
      [
        "unknown",
        {
          _index: 1204,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "unknowndatetoggle",
        {
          _index: 1149,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "unless",
        {
          _index: 1471,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "update",
        {
          _index: 534,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "updated",
        {
          _index: 1653,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "updatedaysarray(month",
        {
          _index: 1304,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "updates",
        {
          _index: 1013,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "url",
        {
          _index: 377,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
          },
        },
      ],
      [
        "use",
        {
          _index: 1221,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "used",
        {
          _index: 701,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "useexisting",
        {
          _index: 651,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "users",
        {
          _index: 512,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "using",
        {
          _index: 162,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "val.title",
        {
          _index: 2036,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "validation",
        {
          _index: 1458,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "validatorfn",
        {
          _index: 1615,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "validators",
        {
          _index: 1613,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "value",
        {
          _index: 78,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IDropdownConfig.html": {},
            "interfaces/IFlyoutConfig.html": {},
            "interfaces/IFlyoutOptionConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "value.text.tolowercase().includes(filtervalue.tolowercase",
        {
          _index: 202,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "valuechange",
        {
          _index: 52,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/SelectComponent.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "valuechange($event",
        {
          _index: 1647,
          title: {},
          body: {
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "valuechange(event",
        {
          _index: 133,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "valuechanges.subscribe((year",
        {
          _index: 1270,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "values",
        {
          _index: 1470,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "var",
        {
          _index: 236,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/BreadcrumbLinkComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "components/LabelComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      ["variable", { _index: 2079, title: {}, body: { "coverage.html": {} } }],
      [
        "variables",
        {
          _index: 2142,
          title: { "miscellaneous/variables.html": {} },
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "verrouill",
        {
          _index: 1599,
          title: {},
          body: {
            "interfaces/IProgressTagsConfig.html": {},
            "components/ProgressTagsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["version", { _index: 2140, title: {}, body: { "properties.html": {} } }],
      [
        "vertical",
        {
          _index: 1581,
          title: {},
          body: {
            "interfaces/IProgressIndicatorConfig.html": {},
            "interfaces/ISpinnerConfig.html": {},
            "interfaces/IStepConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TextareaComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "viewchild",
        {
          _index: 152,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
            "interfaces/IIconConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "interfaces/IOption.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "viewchild('breadcrumb_child",
        {
          _index: 477,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "viewchild('breadcrumb_div",
        {
          _index: 480,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "interfaces/IBreadcrumbConfig.html": {},
          },
        },
      ],
      [
        "viewchild('iconspan",
        {
          _index: 1392,
          title: {},
          body: {
            "interfaces/IIconConfig.html": {},
            "components/IconComponent.html": {},
          },
        },
      ],
      [
        "viewchild('label",
        {
          _index: 1429,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "viewchild(inputcomponent",
        {
          _index: 140,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "interfaces/IOption.html": {},
          },
        },
      ],
      [
        "viewchildren",
        {
          _index: 962,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "viewchildren('option",
        {
          _index: 959,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "visible",
        {
          _index: 1034,
          title: {},
          body: {
            "components/FlyoutComponent.html": {},
            "interfaces/IFlyoutConfig.html": {},
          },
        },
      ],
      [
        "void",
        {
          _index: 113,
          title: {},
          body: {
            "components/AutocompleteComponent.html": {},
            "components/BannerComponent.html": {},
            "components/BreadcrumbComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CheckboxComponent.html": {},
            "components/ChipItemComponent.html": {},
            "components/ChipListComponent.html": {},
            "components/DropdownComponent.html": {},
            "components/ErrorComponent.html": {},
            "components/FlyoutComponent.html": {},
            "components/FlyoutOptionComponent.html": {},
            "components/FooterComponent.html": {},
            "components/HeaderComponent.html": {},
            "components/HiddenNavComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "interfaces/IErrorComponentConfig.html": {},
            "interfaces/IErrorIconConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "interfaces/IInputComponentConfig.html": {},
            "interfaces/IOption.html": {},
            "interfaces/IProgressTagsConfig.html": {},
            "interfaces/ISearchInputButtonConfig.html": {},
            "interfaces/ISearchInputConfig.html": {},
            "interfaces/ITextareaComponentConfig.html": {},
            "components/IconButtonComponent.html": {},
            "components/IconComponent.html": {},
            "components/IndicatorComponent.html": {},
            "components/InputComponent.html": {},
            "injectables/LabelButtonService.html": {},
            "components/LabelComponent.html": {},
            "injectables/LanguageSwitchButtonService.html": {},
            "components/LanguageSwitchComponent.html": {},
            "components/ProgressIndicatorComponent.html": {},
            "components/ProgressTagsComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SearchInputComponent.html": {},
            "components/SecondaryChipsComponent.html": {},
            "components/SelectComponent.html": {},
            "components/SpinnerComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "warning",
        {
          _index: 361,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "warninglimit",
        {
          _index: 1714,
          title: {},
          body: {
            "interfaces/ITextareaComponentConfig.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "weak",
        {
          _index: 1408,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "wether",
        {
          _index: 851,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "interfaces/IDropdownConfig.html": {},
          },
        },
      ],
      [
        "window.innerwidth",
        {
          _index: 1932,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "window:keydown.escape",
        {
          _index: 66,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "window:keydown.escape(event",
        {
          _index: 102,
          title: {},
          body: { "components/AutocompleteComponent.html": {} },
        },
      ],
      [
        "window:resize",
        {
          _index: 442,
          title: {},
          body: {
            "components/BreadcrumbComponent.html": {},
            "components/LanguageSwitchComponent.html": {},
          },
        },
      ],
      [
        "window:resize(e",
        {
          _index: 1907,
          title: {},
          body: { "components/LanguageSwitchComponent.html": {} },
        },
      ],
      [
        "window:resize(event",
        {
          _index: 456,
          title: {},
          body: { "components/BreadcrumbComponent.html": {} },
        },
      ],
      [
        "wordmark",
        {
          _index: 1074,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "works",
        {
          _index: 1626,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "components/RadioInputComponent.html": {},
          },
        },
      ],
      [
        "writevalue",
        {
          _index: 673,
          title: {},
          body: {
            "components/CheckboxComponent.html": {},
            "interfaces/ICheckBoxComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "writevalue(formvalue",
        {
          _index: 1620,
          title: {},
          body: {
            "interfaces/IRadioInputComponentConfig.html": {},
            "interfaces/IRadioInputOption.html": {},
            "interfaces/ISelectConfig.html": {},
            "interfaces/ISelectOptionsConfig.html": {},
            "components/RadioInputComponent.html": {},
            "components/SelectComponent.html": {},
          },
        },
      ],
      [
        "writevalue(obj",
        {
          _index: 1363,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "writevalue(value",
        {
          _index: 1536,
          title: {},
          body: {
            "interfaces/IInputComponentConfig.html": {},
            "components/InputComponent.html": {},
            "components/TextareaComponent.html": {},
          },
        },
      ],
      [
        "x",
        {
          _index: 1682,
          title: {},
          body: {
            "interfaces/ITabConfig.html": {},
            "interfaces/ITabNavConfig.html": {},
            "components/TabsComponent.html": {},
          },
        },
      ],
      [
        "x2",
        {
          _index: 1450,
          title: {},
          body: {
            "interfaces/IIndicatorConfig.html": {},
            "components/IndicatorComponent.html": {},
          },
        },
      ],
      [
        "xmark",
        {
          _index: 344,
          title: {},
          body: {
            "components/BannerComponent.html": {},
            "interfaces/IBannerConfig.html": {},
            "interfaces/ICTAConfig.html": {},
            "interfaces/IIconButtonComponentConfig.html": {},
            "interfaces/IIconButtonIconConfig.html": {},
            "components/IconButtonComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "year",
        {
          _index: 1188,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "year/day",
        {
          _index: 1277,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "years",
        {
          _index: 1254,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "yearselect",
        {
          _index: 1218,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "yearunknown",
        {
          _index: 1209,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
          },
        },
      ],
      [
        "yes",
        {
          _index: 858,
          title: {},
          body: {
            "components/DropdownComponent.html": {},
            "components/HiddenNavComponent.html": {},
          },
        },
      ],
      [
        "yyyy",
        {
          _index: 1194,
          title: {},
          body: {
            "interfaces/IDatePickerConfig.html": {},
            "interfaces/IDatePickerDropDownConfigs.html": {},
            "interfaces/IDatePickerErrorMessages.html": {},
            "interfaces/IDatePickerUnknownDateToggleConfig.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "zoom",
        {
          _index: 1787,
          title: {},
          body: {
            "modules/IrccDsAngularBannerModule.html": {},
            "modules/IrccDsAngularComponentsSharedModule.html": {},
            "modules/IrccDsAngularFormComponentsModule.html": {},
            "modules/IrccDsAngularHeaderFooterModule.html": {},
            "modules/IrccDsAngularLegacyOldModule.html": {},
            "index.html": {},
          },
        },
      ],
    ],
    pipeline: ["stemmer"],
  },
  store: {
    "components/AutocompleteComponent.html": {
      url: "components/AutocompleteComponent.html",
      title: "component - AutocompleteComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  AutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-autocomplete\n            \n\n\n\n\n            \n                templateUrl\n                ./autocomplete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addHover\n                            \n                            \n                                differ\n                            \n                            \n                                emptyResults\n                            \n                            \n                                hideDropdown\n                            \n                            \n                                    Optional\n                                inputComponent\n                            \n                            \n                                    Optional\n                                inputValue\n                            \n                            \n                                isComponentClicked\n                            \n                            \n                                isFocusInsideComponent\n                            \n                            \n                                originalOptions\n                            \n                            \n                                selectedOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkActive\n                            \n                            \n                                checkDuplicated\n                            \n                            \n                                clickInside\n                            \n                            \n                                clickout\n                            \n                            \n                                filterList\n                            \n                            \n                                handleKeyDown\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                    Public\n                                removeAllChipItems\n                            \n                            \n                                removeChipItem\n                            \n                            \n                                returnOptionsToDefault\n                            \n                            \n                                    Public\n                                selectAll\n                            \n                            \n                                    Public\n                                selectIndex\n                            \n                            \n                                    Public\n                                toggleDropDown\n                            \n                            \n                                    Public\n                                toggleDropDownKey\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                hintText\n                            \n                            \n                                limit\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                savedSelectedOptions\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectValueChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                document:click\n                            \n                            \n                                window:keydown.escape\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(differs: KeyValueDiffers)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                        KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `Hint Text`\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        limit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `Add Name`\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         IOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        savedSelectedOptions\n                    \n                \n                \n                    \n                        Type :         IOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `Title`\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectValueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:45\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:75\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \ndocument:click()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:97\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:keydown.escape\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keydown.escape(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:63\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkActive(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkDuplicated\n                        \n                    \n                \n            \n            \n                \ncheckDuplicated(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickInside\n                        \n                    \n                \n            \n            \n                \nclickInside(event: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickout\n                        \n                    \n                \n            \n            \n                \nclickout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click')\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterList\n                        \n                    \n                \n            \n            \n                \nfilterList(filterValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \nhandleKeyDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:keydown.escape', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \nonMouseEnter()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeAllChipItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllChipItems()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeChipItem\n                        \n                    \n                \n            \n            \n                \nremoveChipItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnOptionsToDefault\n                        \n                    \n                \n            \n            \n                \nreturnOptionsToDefault()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectAll()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleDropDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleDropDown()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleDropDownKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleDropDownKey(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueChange\n                        \n                    \n                \n            \n            \n                \nvalueChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addHover\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        differ\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValueDiffer\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        inputComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InputComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(InputComponent, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        inputValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isComponentClicked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFocusInsideComponent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewChild\n} from '@angular/core';\nimport { InputComponent } from '../../form-components/input/input.component';\n//TODO: This should be changed. Ideally the component doesn't need to know about these, and can just\n//add them in using the template.\nimport { ChipItemComponent } from '../chips/chip-item/chip-item.component';\n\ninterface IOption {\n  //Changed: Interfaces should ALWAYS start with 'I'.\n  text: string;\n  value: string;\n}\n\n@Component({\n  selector: 'lib-autocomplete',\n  templateUrl: './autocomplete.component.html'\n})\nexport class AutocompleteComponent implements OnInit, DoCheck {\n  @ViewChild(InputComponent, { static: true })\n  inputComponent?: InputComponent;\n\n  //TODO: Change this to a config\n  @Input() options: IOption[] = [];\n  @Input() title = `Title`;\n  @Input() hintText = `Hint Text`;\n  @Input() name = `Add Name`;\n  @Input() error = false;\n  @Input() limit = 0;\n  @Output() selectValueChange = new EventEmitter();\n  @Input() savedSelectedOptions: IOption[] = [];\n\n  selectedOptions: IOption[] = [];\n  originalOptions: IOption[] = [];\n  inputValue?: string;\n  hideDropdown = true;\n  isFocusInsideComponent = false;\n  isComponentClicked = false;\n  addHover = false;\n  emptyResults = false;\n\n  differ: KeyValueDiffer;\n  constructor(private differs: KeyValueDiffers) {\n    this.differ = this.differs.find({}).create();\n  }\n\n  @HostListener('window:keydown.escape', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (this.hideDropdown === false || this.options.length > 0) {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  clickInside(event: { target: HTMLInputElement }) {\n    const target = event.target;\n    if (\n      this.hideDropdown === true &&\n      target.type === `text` &&\n      this.options.length > 0\n    ) {\n      this.isFocusInsideComponent = true;\n      this.isComponentClicked = true;\n      this.toggleDropDown();\n      this.addHover = true;\n    } else if (\n      target.classList.contains('select-target') ||\n      target.classList.contains(`selected`)\n    ) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.toggleDropDown();\n    }\n  }\n\n  @HostListener('document:click')\n  clickout() {\n    if (!this.isFocusInsideComponent && this.isComponentClicked) {\n      this.toggleDropDown();\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n    }\n    this.isFocusInsideComponent = false;\n  }\n\n  onMouseEnter() {\n    this.addHover = false;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this);\n    if (change) {\n      change.forEachChangedItem((item) => {\n        if (item.key === `options`) {\n          this.selectValueChange.emit(this.selectedOptions);\n        }\n      });\n    }\n  }\n\n  valueChange(event: any) {\n    this.filterList(event);\n  }\n\n  filterList(filterValue: any) {\n    if (filterValue.length  {\n        return value.text.toLowerCase().includes(filterValue.toLowerCase());\n      });\n      this.options = filteredOptions.slice(0);\n      if (this.options.length === 0) {\n        this.emptyResults = true;\n      } else {\n        this.emptyResults = false;\n      }\n    }\n  }\n\n  public checkActive(value: string): boolean {\n    for (const selectedOption of this.selectedOptions) {\n      if (selectedOption.value === value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  returnOptionsToDefault() {\n    this.emptyResults = false;\n    this.options = this.originalOptions.slice(0);\n  }\n\n  public toggleDropDown() {\n    this.hideDropdown = !this.hideDropdown;\n    this.inputComponent?.focusInput(this.hideDropdown);\n  }\n\n  public toggleDropDownKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.toggleDropDown();\n    }\n  }\n\n  removeChipItem(index: number) {\n    this.selectedOptions.splice(index, 1);\n    this.returnOptionsToDefault();\n  }\n\n  public removeAllChipItems() {\n    this.selectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n\n  public selectAll() {\n    for (const option of this.options) {\n      this.selectedOptions.push(option);\n    }\n    this.returnOptionsToDefault();\n  }\n\n  public selectIndex(index: number) {\n    if (this.limit !== 0 && this.selectedOptions.length >= this.limit) {\n      return;\n    } else {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      if (this.checkDuplicated(index) === false) {\n        this.selectedOptions.push(this.options[index]);\n      }\n    }\n  }\n\n  checkDuplicated(index: number) {\n    return this.selectedOptions.some((element: { value: string }) => {\n      if (element.value === this.options[index].value) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedOptions = [];\n    this.originalOptions = this.options.slice(0);\n    this.selectedOptions = this.savedSelectedOptions;\n    this.savedSelectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n}\n\n    \n\n    \n        \n  \n     -->\n    \n     -->\n  \n\n  \n    \n      \n        {{ 'AllOptionsForAutocomplete' | translate }} {{ title | translate }}s\n      \n    \n    \n      {{ option['text'] }}\n    \n    \n      {{ 'NoResults' | translate }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       -->         -->                      {{ \\'AllOptionsForAutocomplete\\' | translate }} {{ title | translate }}s                    {{ option[\\'text\\'] }}              {{ \\'NoResults\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/BannerComponent.html": {
      url: "components/BannerComponent.html",
      title: "component - BannerComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-banner\n            \n\n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconConfig\n                            \n                            \n                                lineVisible\n                            \n                            \n                                textId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                eventHandler\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleLine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaDissmissible\n                            \n                            \n                                config\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaDissmissible\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'close'\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IBannerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:56\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:59\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        eventHandler\n                        \n                    \n                \n            \n            \n                \neventHandler(emitValue: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emitValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLine\n                        \n                    \n                \n            \n            \n                \ntoggleLine()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/banner-component/banner/banner.component.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      \n    \n    \n      \n        \n          \n            {{ config?.title || '' | translate }}\n          \n          \n        \n      \n      \n        \n          {{ cta.text | translate }}\n          {{ cta.text | translate }}\n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            {{ config?.title || \\'\\' | translate }}                                                          {{ cta.text | translate }}          {{ cta.text | translate }}                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/BreadcrumbComponent.html": {
      url: "components/BreadcrumbComponent.html",
      title: "component - BreadcrumbComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-breadcrumb\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                    Optional\n                                childRef\n                            \n                            \n                                displayOverflow\n                            \n                            \n                                    Optional\n                                divRef\n                            \n                            \n                                isChildOverflow\n                            \n                            \n                                    Private\n                                maxHeight\n                            \n                            \n                                    Optional\n                                normalLinks\n                            \n                            \n                                    Optional\n                                overflowLinks\n                            \n                            \n                                separatorIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLinks\n                            \n                            \n                                createOverflows\n                            \n                            \n                                flipOverflow\n                            \n                            \n                                getChildOverflow\n                            \n                            \n                                getMaxHeight\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, standalone: StandAloneFunctions, renderer: Renderer2, changeRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        standalone\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IBreadcrumbConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:177\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createLinks\n                        \n                    \n                \n            \n            \n                \ncreateLinks()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:122\n                \n            \n\n\n            \n                \n                    Create href or routerLinks\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOverflows\n                        \n                    \n                \n            \n            \n                \ncreateOverflows()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flipOverflow\n                        \n                    \n                \n            \n            \n                \nflipOverflow(buttonId: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buttonId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChildOverflow\n                        \n                    \n                \n            \n            \n                \ngetChildOverflow()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxHeight\n                        \n                    \n                \n            \n            \n                \ngetMaxHeight()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onResize\n                        \n                    \n                \n            \n            \n                \nonResize(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        childRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('breadcrumb_child', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayOverflow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        divRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('breadcrumb_div', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChildOverflow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maxHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        normalLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILinkComponentConfig[]\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        overflowLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILinkComponentConfig[]\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        separatorIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 'breadcrumb_separator',\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: 'fa-solid fa-ellipsis',\n      color: 'var(--text-primary)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  HostListener,\n  ElementRef,\n  AfterViewInit,\n  Renderer2,\n  ChangeDetectorRef,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ILinkComponentConfig } from './link/link.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IIconButtonComponentConfig } from '../icon-button/icon-button.component';\n\nexport enum LinkType {\n  href = 'href',\n  routerLink = 'routerLink'\n}\n\nexport interface IBreadcrumbConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof LinkType;\n  // Translation key of base url segment\n  baseUrlKey: string;\n  // The mid-layer navigation to the ancestor links, the previous pages that lead to users to the child page\n  links?: ILinkComponentConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() config: IBreadcrumbConfig = {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  };\n  baseUrl = '';\n  separatorIcon: IIconButtonComponentConfig = {\n    id: 'breadcrumb_separator',\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: 'fa-solid fa-ellipsis',\n      color: 'var(--text-primary)'\n    }\n  };\n  overflowLinks?: ILinkComponentConfig[];\n  normalLinks?: ILinkComponentConfig[]; // Links that are not overflow\n  displayOverflow = false;\n  private maxHeight: number = 0; // Max height of element in px\n  @ViewChild('breadcrumb_div', { static: false })\n  divRef?: ElementRef;\n  @ViewChild('breadcrumb_child', { static: false })\n  childRef?: ElementRef;\n  isChildOverflow: boolean = false;\n  constructor(\n    private translate: TranslateService,\n    private standalone: StandAloneFunctions,\n    private renderer: Renderer2,\n    private changeRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.createLinks();\n    this.separatorIcon.size = this.config.size;\n    this.maxHeight = this.getMaxHeight();\n    this.separatorIcon.ariaLabel = this.translate.instant(\n      'ACC_DEMO.BREADCRUMB_COMPONENT.ADDITIONAL_LINKS'\n    );\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.createOverflows();\n      this.isChildOverflow = this.getChildOverflow();\n      this.changeRef.detectChanges();\n    }, 500);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If changing size, update max height\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.size !==\n        changes['config'].previousValue.size\n    ) {\n      this.maxHeight = this.getMaxHeight();\n    }\n    // If changing link type, recreate all links\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.type !==\n        changes['config'].previousValue.type\n    ) {\n      this.createLinks();\n    }\n    if (this.config?.links && this.config?.links.length > 0) {\n      if (this.config.type == 'routerLink') {\n        this.config?.links.forEach((link) => {\n          delete link.href;\n        });\n      } else {\n        this.config?.links.forEach((link) => {\n          delete link.routerLink;\n        });\n      }\n    }\n    this.separatorIcon.size = this.config.size;\n  }\n\n  /**\n   * Create href or routerLinks\n   */\n  createLinks() {\n    this.baseUrl = this.standalone.getBaseUrl('', this.config.baseUrlKey);\n    if (this.config.links && this.config.links.length > 1) {\n      let prev: string | undefined;\n      this.config?.links.forEach((link, i) => {\n        if (i === 0) {\n          link[this.config.type] = this.baseUrl;\n          prev = link[this.config.type];\n        } else if (link.linkKey) {\n          link[this.config.type] =\n            prev + this.translate.instant(link.linkKey) + '/';\n          prev = link[this.config.type];\n        }\n        link.overflow = false;\n      });\n\n      this.overflowLinks = this.config?.links.filter((link) => link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  getMaxHeight(): number {\n    const containerElement = this.divRef && this.divRef.nativeElement;\n    const tempElement = this.renderer.createElement('p');\n    const text = this.renderer.createText('Test');\n    this.renderer.appendChild(tempElement, text);\n    this.renderer.addClass(tempElement, 'breadcrumb-child');\n    this.renderer.appendChild(containerElement, tempElement);\n    const maxHeight = tempElement.offsetHeight;\n    this.renderer.removeChild(containerElement, tempElement);\n    // Calculate based on elipsis icon size to p tag ratio\n    return maxHeight * 1.375;\n  }\n\n  createOverflows() {\n    if (\n      this.divRef &&\n      this.divRef?.nativeElement.offsetHeight  1) {\n      const linksLength = this.config.links.length;\n\n      const overflow = this.config?.links.find(\n        (link, i) => i > 0 && i  link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.overflowLinks = [];\n    this.normalLinks = [];\n    this.createLinks();\n    this.createOverflows();\n    this.isChildOverflow = this.getChildOverflow();\n  }\n\n  flipOverflow(buttonId: string) {\n    this.displayOverflow = !this.displayOverflow;\n  }\n\n  // Check if child page title overflows to 2nd line\n  getChildOverflow(): boolean {\n    if (this.childRef) {\n      return (\n        this.childRef.nativeElement.offsetWidth \n    \n\n    \n        \n  \n    \n      \n       0\">\n        \n        \n      \n    \n    \n      \n      \n    \n    \n      \n      \n        {{ link.text }}\n        {{ link.text }}\n      \n    \n  \n   0\"\n  >\n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   0\">                                                                      {{ link.text }}        {{ link.text }}               0\"  >                '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/BreadcrumbLinkComponent.html": {
      url: "components/BreadcrumbLinkComponent.html",
      title: "component - BreadcrumbLinkComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-breadcrumb-link\n            \n\n\n\n\n            \n                templateUrl\n                ./link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ILinkComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    text: '',\n    overflow: false\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport interface ILinkComponentConfig {\n  text: string;\n  linkKey?: string;\n  href?: string;\n  routerLink?: string;\n  overflow?: boolean;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb-link',\n  templateUrl: './link.component.html'\n})\nexport class BreadcrumbLinkComponent {\n  @Input() config: ILinkComponentConfig = {\n    text: '',\n    overflow: false\n  };\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  {{ config.text | translate }}\n\n\n  {{\n    config.text | translate\n  }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config.text | translate }}  {{    config.text | translate  }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/ButtonComponent.html": {
      url: "components/ButtonComponent.html",
      title: "component - ButtonComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/button/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-button\n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                category\n                            \n                            \n                                color\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                iconDirection\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnAction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n}\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconDirection\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:60\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickEvent\n                        \n                    \n                \n            \n            \n                \nclickEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/button/button.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum ButtonCategories {\n  primary = 'primary',\n  secondary = 'secondary',\n  plain = 'plain'\n}\n\nexport enum ButtonSize {\n  small = 'small',\n  large = 'large'\n}\n\nexport enum ButtonColor {\n  critical = 'critical',\n  CTA = 'CTA'\n}\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n  left = 'left',\n  right = 'right'\n}\n\nexport interface IButtonConfig {\n    id: string;\n    category?: keyof typeof ButtonCategories;\n    size?: keyof typeof ButtonSize;\n    color?: keyof typeof ButtonColor;\n    ariaLabel?: string;\n    disabled?: boolean;\n    icon?: string;\n    iconDirection?: keyof typeof ButtonIconDirection;\n    tabIndex?: number;\n};\n\n@Component({\n  selector: 'ircc-cl-lib-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n@Input() config: IButtonConfig = {\n    id: '',\n};\n    @Input() id = '';\n    @Input() category?: keyof typeof ButtonCategories;\n    @Input() size?: keyof typeof ButtonSize;\n    @Input() color?: keyof typeof ButtonColor;\n    @Input() ariaLabel?: string;\n    @Input() disabled?: boolean;\n    @Input() icon?: string;\n    @Input() iconDirection?: keyof typeof ButtonIconDirection;\n    @Input() tabIndex?: number;\n\n  @Output() btnAction: EventEmitter = new EventEmitter();\n\n    ngOnInit() {\n        (this.id !== '') ? this.config.id = this.id : undefined;\n        (this.category === undefined) ? undefined : this.config.category = this.category;\n        (this.size === undefined) ? undefined : this.config.size = this.size;\n        (this.color === undefined) ? undefined : this.config.color = this.color;\n        (this.ariaLabel !== undefined) ? this.config.ariaLabel = this.ariaLabel : undefined;\n        (this.disabled !== undefined) ? this.config.disabled = this.disabled : undefined;\n        (this.tabIndex !== undefined) ? this.config.tabIndex = this.tabIndex : undefined;\n        if (this.icon || this.config.icon) {\n            this.config.icon = this.icon ? this.icon : this.config.icon;\n            this.config.iconDirection = this.iconDirection? this.iconDirection : this.config.iconDirection;\n            this.config.iconDirection = this.config.iconDirection ? this.config.iconDirection : 'left'\n        } else {\n            this.config.icon = undefined;\n            this.config.iconDirection = undefined;\n        }\n    }\n\n\n  clickEvent(id: string) {\n    this.btnAction.emit(id);\n  }\n}\n\n    \n\n    \n           \n        \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                           '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/CheckboxComponent.html": {
      url: "components/CheckboxComponent.html",
      title: "component - CheckboxComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CheckboxComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                isDisabled\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                getErrorState\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ICheckBoxComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:160\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorState\n                        \n                    \n                \n            \n            \n                \ngetErrorState()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:191\n                \n            \n\n\n            \n                \n                    Return error state from FormGroup, must be touched & invalid\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:174\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:94\n                \n            \n\n\n            \n                \n                    This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  label?: string;\n  required?: boolean;\n  size?: keyof typeof DSSizes | DSSizes;\n  mixed?: true;\n  disableFocus?: boolean; //Default is true\n  inlineLabel?: string;\n  inlineLabelBold?: boolean;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  helpText?: string;\n  customErrorText?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  isDisabled = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorAria = '';\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {};\n  onChange = () => {};\n\n  writeValue(): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n    if (!this.config?.size) this.config.size = DSSizes.large;\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        \n      \n      {{ config.inlineLabel || '' | translate }}\n      \n    \n    \n      \n        {{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}\n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{ config.inlineLabel || \\'\\' | translate }}                            {{          errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'        }}                                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/ChipItemComponent.html": {
      url: "components/ChipItemComponent.html",
      title: "component - ChipItemComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ChipItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-chip-item\n            \n\n\n\n\n            \n                templateUrl\n                ./chip-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onEnterKeyPress\n                            \n                            \n                                onIconClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconClickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipContent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:8\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        iconClickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onEnterKeyPress\n                        \n                    \n                \n            \n            \n                \nonEnterKeyPress()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIconClick\n                        \n                    \n                \n            \n            \n                \nonIconClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-item',\n  templateUrl: './chip-item.component.html'\n})\nexport class ChipItemComponent {\n  @Input() chipContent?: string;\n  @Output() iconClickEvent = new EventEmitter();\n\n  constructor() {}\n\n  onIconClick() {\n    this.iconClickEvent.emit();\n  }\n\n  onEnterKeyPress() {\n    this.iconClickEvent.emit();\n  }\n}\n\n    \n\n    \n        \n  {{ chipContent || '' }}\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ chipContent || \\'\\' }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChipItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/ChipListComponent.html": {
      url: "components/ChipListComponent.html",
      title: "component - ChipListComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ChipListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-chip-list\n            \n\n\n\n\n            \n                templateUrl\n                ./chip-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chipContentText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeChipItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipListChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:8\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chipListChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeChipItem\n                        \n                    \n                \n            \n            \n                \nremoveChipItem(chipIdx: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chipIdx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chipContentText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-list',\n  templateUrl: './chip-list.component.html'\n})\nexport class ChipListComponent implements OnInit {\n  @Input() chipList?: string[];\n  @Output() chipListChange = new EventEmitter>();\n  chipContentText?: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  removeChipItem(chipIdx: number) {\n    this.chipList?.splice(chipIdx, 1);\n    this.chipListChange.emit(this.chipList);\n  }\n\n  onSubmit() {\n    if (this.chipContentText) {\n      this.chipList?.push(this.chipContentText);\n      this.chipListChange.emit(this.chipList);\n      this.chipContentText = '';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChipListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/DropdownComponent.html": {
      url: "components/DropdownComponent.html",
      title: "component - DropdownComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-dropdown\n            \n\n\n\n\n            \n                templateUrl\n                ./drop-down.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                flyoutConfig\n                            \n                            \n                                selected\n                            \n                            \n                                showPlaceholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFlyoutFocus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectedOption\n                            \n                            \n                                toggleFlyout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                placeholderText\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IDropdownConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearFlyoutFocus\n                        \n                    \n                \n            \n            \n                \nclearFlyoutFocus()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:95\n                \n            \n\n\n            \n                \n                    Clear the flyout active state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOption\n                        \n                    \n                \n            \n            \n                \nselectedOption(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFlyout\n                        \n                    \n                \n            \n            \n                \ntoggleFlyout(status: boolean, e?: FocusEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:84\n                \n            \n\n\n            \n                \n                    function receives a truthy value which determines wether it closes or opens,\nbut also looks for FocusEvent to check if flyout is being interacted with\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n                                    \n                                            FocusEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        flyoutConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFlyoutConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from \"../../../shared/constants/jl-components.constants\";\nimport { ButtonCategories } from '../button/button.component';\nimport { IIconButtonIconConfig } from '../icon-button/icon-button.component';\nimport { IFlyoutConfig } from '../flyout/flyout.component';\nexport interface IDropdownConfig {\n    id: string;\n    label?: string;\n    size?: keyof typeof DSSizes;\n    category?: keyof typeof ButtonCategories;\n    placeholderText?: string;\n    disabled?: boolean;\n    icon?: IIconButtonIconConfig;\n    flyout?: IFlyoutConfig;\n}\n@Component({\n  selector: 'ircc-cl-lib-dropdown',\n  templateUrl: './drop-down.component.html'\n})\nexport class DropdownComponent implements OnInit {\n\n  @Input() config: IDropdownConfig = {\n    id: ''\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string = '';\n  @Input() placeholderText?: string = '';\n  @Input() disabled?: boolean;\n  @Input() category?: keyof typeof ButtonCategories;\n\n  showPlaceholder: boolean = false;\n  selected: boolean = false;\n\n  flyoutConfig : IFlyoutConfig = {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n\n  ngOnInit() {\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.placeholderText !== '')\n      this.config.placeholderText = this.placeholderText;\n    if (this.disabled !== undefined) this.config.disabled = this.disabled;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n\n    if (!this.config.category) this.config.category = ButtonCategories.primary;\n\n    if (!this.config.label || this.config.label.trim().length == 0) {\n      if (!this.config.placeholderText) {\n        this.config.placeholderText = 'Default';\n      }\n      this.showPlaceholder = true;\n    }\n\n    if(this.config.flyout) this.flyoutConfig = this.config.flyout;\n  }\n\n  selectedOption(e: Event) {\n    //if it receives it's event info it selects the index - if not closes flyout\n    if(e){\n      this.showPlaceholder = false;\n      this.config.label = e.toString();\n      this.selected = !this.selected;\n      this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }else{\n      this.toggleFlyout(false);\n    }\n  }\n\n  /**\n   * function receives a truthy value which determines wether it closes or opens, \n   * but also looks for FocusEvent to check if flyout is being interacted with\n   * @param status \n   * @param e \n   */\n  toggleFlyout(status: boolean, e?: FocusEvent) {\n    let target = e?.relatedTarget as HTMLElement;\n    if(!target?.id.includes(this.config.id) || !e){\n      this.selected = status;\n      !status && this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }\n  }\n\n  /**\n   * Clear the flyout active state\n   */\n  clearFlyoutFocus() {\n    if (this.config?.flyout?.options) {\n      this.config.flyout.options.forEach(i => {\n        i.active = false;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n        {{config.placeholderText}}\n        {{config.label}}\n      \n      \n        \n      \n      \n        \n      \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{config.placeholderText}}        {{config.label}}                                                  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/ErrorComponent.html": {
      url: "components/ErrorComponent.html",
      title: "component - ErrorComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/error/error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                portInputValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                errorLOV\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IErrorComponentConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLOV\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         IErrorIconConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        portInputValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    portInputValues()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/error/error.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    {{ config?.errorLOV || '' | translate }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ config?.errorLOV || \\'\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/FlyoutComponent.html": {
      url: "components/FlyoutComponent.html",
      title: "component - FlyoutComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  FlyoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-flyout\n            \n\n\n\n\n            \n                templateUrl\n                ./flyout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                a11yText\n                            \n                            \n                                optionContainers\n                            \n                            \n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearOptions\n                            \n                            \n                                highlightIndex\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onArrowDown\n                            \n                            \n                                onArrowUp\n                            \n                            \n                                onEnter\n                            \n                            \n                                optionSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                id\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.arrowdown\n                            \n                            \n                                document:keydown.arrowup\n                            \n                            \n                                document:keydown.enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IFlyoutConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         IFlyoutOptionConfig[]\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :      | number\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown.arrowdown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.arrowdown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:49\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown.arrowup\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.arrowup(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:64\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown.enter\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown.enter(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:84\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearOptions\n                        \n                    \n                \n            \n            \n                \nclearOptions()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlightIndex\n                        \n                    \n                \n            \n            \n                \nhighlightIndex(el_id: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el_id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onArrowDown\n                        \n                    \n                \n            \n            \n                \nonArrowDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.arrowdown', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onArrowUp\n                        \n                    \n                \n            \n            \n                \nonArrowUp(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.arrowup', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnter\n                        \n                    \n                \n            \n            \n                \nonEnter(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown.enter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionSelected\n                        \n                    \n                \n            \n            \n                \noptionSelected(i: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        a11yText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionContainers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Default value : new QueryList\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren('option')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/flyout/flyout.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter, HostListener, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { IFlyoutOptionConfig } from '../flyout-option/flyout-option.component';\n\nexport enum IFlyoutSelectTypes {\n  single = 'single',\n  multi = 'multi'\n}\n\nexport interface IFlyoutConfig {\n  id: string,\n  options?: IFlyoutOptionConfig[],\n  disabled?: boolean\n  selection?: [] | number,\n  type?: keyof typeof IFlyoutSelectTypes\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout',\n  templateUrl: './flyout.component.html'\n})\nexport class FlyoutComponent implements OnInit {\n  @ViewChildren('option') optionContainers: QueryList = new QueryList;\n\n  @Input() config : IFlyoutConfig = {\n    id: ''\n  }\n  @Input() id? : string;\n  @Input() options?: IFlyoutOptionConfig[];\n  @Input() disabled?: boolean;\n  @Input() selection?: [] | number;\n  @Input() type?: keyof typeof IFlyoutSelectTypes;\n\n  //TODO: Must add the other config parameters\n  @Output() isSelected = new EventEmitter();\n\n  selectedIndex : number = -1;\n  a11yText : string = '';\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'single';\n    if(this.id) this.config.id = this.id;\n    if(this.options) this.config.options = this.options;\n    if(this.disabled) this.config.disabled = this.disabled;\n    if(this.selection) this.config.selection = this.selection;\n    if(this.type) this.config.type = this.type;\n  };\n\n  @HostListener('document:keydown.arrowdown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options.slice(this.selectedIndex + 1).forEach((option, index) => {\n        if (!foundClickable && option.clickable !== false) {\n          this.selectedIndex += index + 1;\n          this.highlightIndex(option.id);\n          foundClickable = true;\n        }\n      });\n    }\n  }\n\n  @HostListener('document:keydown.arrowup', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(0, this.selectedIndex)\n        .reverse()\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex -= index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n      // Ensure selectedIndex does not fall below 0\n      this.selectedIndex = Math.max(this.selectedIndex, 0);\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    event.preventDefault();\n    //if the index hasn't changes through arrow navigation, emits our event but lets the parent know nothing was selected\n    this.selectedIndex != -1 ? this.optionSelected(this.selectedIndex) : this.isSelected.emit(null);\n  }\n\n  //takes in the active index from HostListeners and sets the config option to active state which triggers styling\n  highlightIndex(el_id: any) {\n    if(el_id){\n      this.config.options?.forEach(option => {\n        if(option.id === el_id){\n          option.active = true;\n          this.optionContainers.toArray()[this.selectedIndex]?.nativeElement?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n          this.a11yText = option.value;\n          //updates a11yText to indicate currently selected item if scrolling through flyout again\n          if(option.selected) this.a11yText += ' currently selected'; //translation?\n        }else{\n          option.active = false;\n        }\n      });\n    }\n  }\n\n  //clears all selections by setting the option.selected to false\n  clearOptions(){\n    this.config?.options?.forEach(option => {\n      option.selected = false;\n    });\n  }\n\n  //function takes in index value of current active option and selects it\n  optionSelected(i: number){\n    if(this.config.options && !this.config.options[i].selected && this.config.options[i].clickable){\n      //setup for future multi select feature\n      this.config.type !== 'multi' ? this.clearOptions() : /*this.config.selection = [].push(this.config.options[i]);*/console.log('MULTI');\n      this.config.options[i].selected = true;\n      //emits the value of the selected index so it's visible to the parent\n      this.isSelected.emit(this.config.options[i].value);\n      }\n  }\n\n};\n\n    \n\n    \n        \n  \n    \n  \n\n{{ a11yText || '' | translate }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ a11yText || \\'\\' | translate }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlyoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/FlyoutOptionComponent.html": {
      url: "components/FlyoutOptionComponent.html",
      title: "component - FlyoutOptionComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  FlyoutOptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-flyout-option\n            \n\n\n\n\n            \n                templateUrl\n                ./flyout-option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IFlyoutOptionConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    value: 'Blank label'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nexport enum IFlyoutOptionType {\n  text = 'text',\n  checkbox = 'checkbox',\n  dropdown = 'dropdown',\n  line = 'line',\n  heading = 'heading'\n}\n\nexport interface IFlyoutOptionConfig {\n  id?: string,\n  value: string,\n  selected?: boolean,\n  active?: boolean,\n  disabled?: boolean,\n  type?: keyof typeof IFlyoutOptionType,\n  clickable?: boolean\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout-option',\n  templateUrl: './flyout-option.component.html'\n})\nexport class FlyoutOptionComponent implements OnInit {\n\n  @Input() config : IFlyoutOptionConfig = {\n    id: '',\n    value: 'Blank label'\n  }\n\n  @Input() id? : string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'text';\n    if((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false) this.config.clickable = true;\n    if(this.id) this.config.id = this.id;\n  };\n\n};\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{ config.value || '' | translate }}\n        \n          \n        \n      \n    \n  \n  \n    \n      {{ config.value || '' | translate }}\n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ config.value || \\'\\' | translate }}                                                  {{ config.value || \\'\\' | translate }}                          '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlyoutOptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/FooterComponent.html": {
      url: "components/FooterComponent.html",
      title: "component - FooterComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-footer\n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                altImage\n                            \n                            \n                                aria\n                            \n                            \n                                imageURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        altImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/footer/footer.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const GOV_LOGO_FOOTER =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/wmms-blk.svg';\n\nexport const GOV_LOGO_ARIA_LABEL_ENGLISH = 'Symbol of the Government of Canada';\nexport const GOV_LOGO_ARIA_LABEL_FRENCH = 'Symbole du gouvernement du Canada';\n\nexport const GOV_LOGO_ALT_TEXT_EN = 'Canada wordmark';\nexport const GOV_LOGO_ALT_TEXT_FR = 'FR Canada wordmark';\n\n@Component({\n  selector: 'ircc-cl-lib-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent {\n  @Input() id = '';\n\n  imageURL = '';\n  altImage = '';\n  aria = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.imageURL = GOV_LOGO_FOOTER;\n      this.aria = GOV_LOGO_ARIA_LABEL_ENGLISH;\n      this.altImage = GOV_LOGO_ALT_TEXT_EN;\n    } else {\n      this.imageURL = GOV_LOGO_FOOTER;\n      this.aria = GOV_LOGO_ARIA_LABEL_FRENCH;\n      this.altImage = GOV_LOGO_ALT_TEXT_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/HeaderComponent.html": {
      url: "components/HeaderComponent.html",
      title: "component - HeaderComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-header\n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aria\n                            \n                            \n                                govCanadaAlt\n                            \n                            \n                                govCanadaLink\n                            \n                            \n                                imageURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        govCanadaAlt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        govCanadaLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const ENGLISH_BANNER_URL =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-en.svg';\nexport const FRENCH_BANNER_URL =\n  'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-fr.svg';\n\nexport const HEADER_IMG_LINK_EN = 'https://www.canada.ca/en.html';\nexport const HEADER_IMG_LINK_FR = 'https://www.canada.ca/fr.html';\n\nexport const HEADER_LINK_ATL_EN = 'Government of Canada logo';\nexport const HEADER_LINK_ALT_FR = 'Gouvernement du Canada logo';\n\nexport const CANADA_LOGO_ARIA_LABEL_ENGLISH =\n  'Symbol of the Government of Canada';\nexport const CANADA_LOGO_ARIA_LABEL_FRENCH =\n  'Symbole du gouvernement du Canada';\n\n@Component({\n  selector: 'ircc-cl-lib-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {\n  @Input() id = '';\n\n  imageURL = '';\n  aria = '';\n  govCanadaLink = '';\n  govCanadaAlt = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.imageURL = ENGLISH_BANNER_URL;\n      this.aria = CANADA_LOGO_ARIA_LABEL_ENGLISH;\n      this.govCanadaLink = HEADER_IMG_LINK_EN;\n      this.govCanadaAlt = HEADER_LINK_ATL_EN;\n    } else {\n      this.imageURL = FRENCH_BANNER_URL;\n      this.aria = CANADA_LOGO_ARIA_LABEL_FRENCH;\n      this.govCanadaLink = HEADER_IMG_LINK_FR;\n      this.govCanadaAlt = HEADER_LINK_ALT_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/HiddenNavComponent.html": {
      url: "components/HiddenNavComponent.html",
      title: "component - HiddenNavComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  HiddenNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-hidden-nav\n            \n\n\n\n\n            \n                templateUrl\n                ./hidden-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleKeyDown\n                            \n                            \n                                scrollToAnchor\n                            \n                            \n                                showNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IHiddenNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.key' \n                \n            \n            \n                \nkeydown(key: string, link?: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:33\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \nhandleKeyDown(key: string, link?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('keydown', ['$event.key'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToAnchor\n                        \n                    \n                \n            \n            \n                \nscrollToAnchor(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNav\n                        \n                    \n                \n            \n            \n                \nshowNav()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ link.title }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ link.title }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IBannerConfig.html": {
      url: "interfaces/IBannerConfig.html",
      title: "interface - IBannerConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBannerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaDissmissible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissible\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rounded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaDissmissible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaDissmissible:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cta:         ICTAConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICTAConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rounded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rounded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IBreadcrumbConfig.html": {
      url: "interfaces/IBreadcrumbConfig.html",
      title: "interface - IBreadcrumbConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBreadcrumbConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            baseUrlKey\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrlKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrlKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         ILinkComponentConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILinkComponentConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  HostListener,\n  ElementRef,\n  AfterViewInit,\n  Renderer2,\n  ChangeDetectorRef,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ILinkComponentConfig } from './link/link.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IIconButtonComponentConfig } from '../icon-button/icon-button.component';\n\nexport enum LinkType {\n  href = 'href',\n  routerLink = 'routerLink'\n}\n\nexport interface IBreadcrumbConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof LinkType;\n  // Translation key of base url segment\n  baseUrlKey: string;\n  // The mid-layer navigation to the ancestor links, the previous pages that lead to users to the child page\n  links?: ILinkComponentConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() config: IBreadcrumbConfig = {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  };\n  baseUrl = '';\n  separatorIcon: IIconButtonComponentConfig = {\n    id: 'breadcrumb_separator',\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: 'fa-solid fa-ellipsis',\n      color: 'var(--text-primary)'\n    }\n  };\n  overflowLinks?: ILinkComponentConfig[];\n  normalLinks?: ILinkComponentConfig[]; // Links that are not overflow\n  displayOverflow = false;\n  private maxHeight: number = 0; // Max height of element in px\n  @ViewChild('breadcrumb_div', { static: false })\n  divRef?: ElementRef;\n  @ViewChild('breadcrumb_child', { static: false })\n  childRef?: ElementRef;\n  isChildOverflow: boolean = false;\n  constructor(\n    private translate: TranslateService,\n    private standalone: StandAloneFunctions,\n    private renderer: Renderer2,\n    private changeRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.createLinks();\n    this.separatorIcon.size = this.config.size;\n    this.maxHeight = this.getMaxHeight();\n    this.separatorIcon.ariaLabel = this.translate.instant(\n      'ACC_DEMO.BREADCRUMB_COMPONENT.ADDITIONAL_LINKS'\n    );\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.createOverflows();\n      this.isChildOverflow = this.getChildOverflow();\n      this.changeRef.detectChanges();\n    }, 500);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If changing size, update max height\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.size !==\n        changes['config'].previousValue.size\n    ) {\n      this.maxHeight = this.getMaxHeight();\n    }\n    // If changing link type, recreate all links\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.type !==\n        changes['config'].previousValue.type\n    ) {\n      this.createLinks();\n    }\n    if (this.config?.links && this.config?.links.length > 0) {\n      if (this.config.type == 'routerLink') {\n        this.config?.links.forEach((link) => {\n          delete link.href;\n        });\n      } else {\n        this.config?.links.forEach((link) => {\n          delete link.routerLink;\n        });\n      }\n    }\n    this.separatorIcon.size = this.config.size;\n  }\n\n  /**\n   * Create href or routerLinks\n   */\n  createLinks() {\n    this.baseUrl = this.standalone.getBaseUrl('', this.config.baseUrlKey);\n    if (this.config.links && this.config.links.length > 1) {\n      let prev: string | undefined;\n      this.config?.links.forEach((link, i) => {\n        if (i === 0) {\n          link[this.config.type] = this.baseUrl;\n          prev = link[this.config.type];\n        } else if (link.linkKey) {\n          link[this.config.type] =\n            prev + this.translate.instant(link.linkKey) + '/';\n          prev = link[this.config.type];\n        }\n        link.overflow = false;\n      });\n\n      this.overflowLinks = this.config?.links.filter((link) => link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  getMaxHeight(): number {\n    const containerElement = this.divRef && this.divRef.nativeElement;\n    const tempElement = this.renderer.createElement('p');\n    const text = this.renderer.createText('Test');\n    this.renderer.appendChild(tempElement, text);\n    this.renderer.addClass(tempElement, 'breadcrumb-child');\n    this.renderer.appendChild(containerElement, tempElement);\n    const maxHeight = tempElement.offsetHeight;\n    this.renderer.removeChild(containerElement, tempElement);\n    // Calculate based on elipsis icon size to p tag ratio\n    return maxHeight * 1.375;\n  }\n\n  createOverflows() {\n    if (\n      this.divRef &&\n      this.divRef?.nativeElement.offsetHeight  1) {\n      const linksLength = this.config.links.length;\n\n      const overflow = this.config?.links.find(\n        (link, i) => i > 0 && i  link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.overflowLinks = [];\n    this.normalLinks = [];\n    this.createLinks();\n    this.createOverflows();\n    this.isChildOverflow = this.getChildOverflow();\n  }\n\n  flipOverflow(buttonId: string) {\n    this.displayOverflow = !this.displayOverflow;\n  }\n\n  // Check if child page title overflows to 2nd line\n  getChildOverflow(): boolean {\n    if (this.childRef) {\n      return (\n        this.childRef.nativeElement.offsetWidth \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IButtonConfig.html": {
      url: "interfaces/IButtonConfig.html",
      title: "interface - IButtonConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/button/button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconDirection\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tabIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconDirection:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tabIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tabIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum ButtonCategories {\n  primary = 'primary',\n  secondary = 'secondary',\n  plain = 'plain'\n}\n\nexport enum ButtonSize {\n  small = 'small',\n  large = 'large'\n}\n\nexport enum ButtonColor {\n  critical = 'critical',\n  CTA = 'CTA'\n}\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n  left = 'left',\n  right = 'right'\n}\n\nexport interface IButtonConfig {\n    id: string;\n    category?: keyof typeof ButtonCategories;\n    size?: keyof typeof ButtonSize;\n    color?: keyof typeof ButtonColor;\n    ariaLabel?: string;\n    disabled?: boolean;\n    icon?: string;\n    iconDirection?: keyof typeof ButtonIconDirection;\n    tabIndex?: number;\n};\n\n@Component({\n  selector: 'ircc-cl-lib-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n@Input() config: IButtonConfig = {\n    id: '',\n};\n    @Input() id = '';\n    @Input() category?: keyof typeof ButtonCategories;\n    @Input() size?: keyof typeof ButtonSize;\n    @Input() color?: keyof typeof ButtonColor;\n    @Input() ariaLabel?: string;\n    @Input() disabled?: boolean;\n    @Input() icon?: string;\n    @Input() iconDirection?: keyof typeof ButtonIconDirection;\n    @Input() tabIndex?: number;\n\n  @Output() btnAction: EventEmitter = new EventEmitter();\n\n    ngOnInit() {\n        (this.id !== '') ? this.config.id = this.id : undefined;\n        (this.category === undefined) ? undefined : this.config.category = this.category;\n        (this.size === undefined) ? undefined : this.config.size = this.size;\n        (this.color === undefined) ? undefined : this.config.color = this.color;\n        (this.ariaLabel !== undefined) ? this.config.ariaLabel = this.ariaLabel : undefined;\n        (this.disabled !== undefined) ? this.config.disabled = this.disabled : undefined;\n        (this.tabIndex !== undefined) ? this.config.tabIndex = this.tabIndex : undefined;\n        if (this.icon || this.config.icon) {\n            this.config.icon = this.icon ? this.icon : this.config.icon;\n            this.config.iconDirection = this.iconDirection? this.iconDirection : this.config.iconDirection;\n            this.config.iconDirection = this.config.iconDirection ? this.config.iconDirection : 'left'\n        } else {\n            this.config.icon = undefined;\n            this.config.iconDirection = undefined;\n        }\n    }\n\n\n  clickEvent(id: string) {\n    this.btnAction.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ICTAConfig.html": {
      url: "interfaces/ICTAConfig.html",
      title: "interface - ICTAConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICTAConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            btnConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linkConfig\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        btnConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        btnConfig:         IButtonConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IButtonConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  lineVisible = true;\n  textId = '';\n\n  @Input() config?: IBannerConfig;\n  @Input() id?: string;\n  @Input() ariaDissmissible?: string = 'close';\n\n  @Output() btnEvent = new EventEmitter();\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    console.log(emitValue);\n    if (this.config?.id) {\n      let banner = document.getElementById(this.config?.id);\n      banner?.classList.add('bannerDismissed');\n      setTimeout(function () {\n        banner?.classList.add('noDisplay');\n        banner?.classList.remove('bannerDismissed');\n      }, 700);\n      this.btnEvent?.emit(this.config.id);\n      banner?.classList.remove('noDisplay');\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  ngOnInit() {\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (this.config && !this.config.ariaDissmissible) {\n      this.config.ariaDissmissible = this.ariaDissmissible;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ICheckBoxComponentConfig.html": {
      url: "interfaces/ICheckBoxComponentConfig.html",
      title: "interface - ICheckBoxComponentConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICheckBoxComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customErrorText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFocus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            helpText\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inlineLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inlineLabelBold\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mixed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customErrorText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customErrorText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFocus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helpText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helpText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inlineLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineLabelBold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inlineLabelBold:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixed:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:      | DSSizes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | DSSizes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  label?: string;\n  required?: boolean;\n  size?: keyof typeof DSSizes | DSSizes;\n  mixed?: true;\n  disableFocus?: boolean; //Default is true\n  inlineLabel?: string;\n  inlineLabelBold?: boolean;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  helpText?: string;\n  customErrorText?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  isDisabled = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorAria = '';\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {};\n  onChange = () => {};\n\n  writeValue(): void {}\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n    if (!this.config?.size) this.config.size = DSSizes.large;\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.helpText,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IDatePickerConfig.html": {
      url: "interfaces/IDatePickerConfig.html",
      title: "interface - IDatePickerConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minYear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unknownDateToggle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:         IDatePickerErrorMessages\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatePickerErrorMessages\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unknownDateToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unknownDateToggle:         IDatePickerUnknownDateToggleConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatePickerUnknownDateToggleConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IDatePickerDropDownConfigs.html": {
      url: "interfaces/IDatePickerDropDownConfigs.html",
      title: "interface - IDatePickerDropDownConfigs",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerDropDownConfigs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            day\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         ISelectConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IDatePickerErrorMessages.html": {
      url: "interfaces/IDatePickerErrorMessages.html",
      title: "interface - IDatePickerErrorMessages",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerErrorMessages\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            day\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            general\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            month\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        general\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        general:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IDatePickerUnknownDateToggleConfig.html": {
      url: "interfaces/IDatePickerUnknownDateToggleConfig.html",
      title: "interface - IDatePickerUnknownDateToggleConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatePickerUnknownDateToggleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dayUnknown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            monthUnknown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            yearUnknown\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dayUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monthUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monthUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearUnknown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yearUnknown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IDatePickerErrorMessages;\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerErrorMessages {\n  general?: IErrorPairs[];\n  day?: IErrorPairs[];\n  month?: IErrorPairs[];\n  year?: IErrorPairs[];\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup?: FormGroup;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IDatePickerErrorMessages;\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages?.general,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    this.dropDownConfigs.day.topLabel = this.config.label;\n    this.dropDownConfigs.month.topLabel = this.config.label;\n    this.dropDownConfigs.year.topLabel = this.config.label;\n\n    if (this.config.errorMessages?.general) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages.general\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i  {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i  {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i  {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  datePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.config.formGroup.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled\n      ? this.config.formGroup.disable()\n      : this.config.formGroup.enable();\n  }\n  private onTouched: () => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IDropdownConfig.html": {
      url: "interfaces/IDropdownConfig.html",
      title: "interface - IDropdownConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDropdownConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flyout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholderText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flyout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flyout:         IFlyoutConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFlyoutConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IIconButtonIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IIconButtonIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholderText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from \"../../../shared/constants/jl-components.constants\";\nimport { ButtonCategories } from '../button/button.component';\nimport { IIconButtonIconConfig } from '../icon-button/icon-button.component';\nimport { IFlyoutConfig } from '../flyout/flyout.component';\nexport interface IDropdownConfig {\n    id: string;\n    label?: string;\n    size?: keyof typeof DSSizes;\n    category?: keyof typeof ButtonCategories;\n    placeholderText?: string;\n    disabled?: boolean;\n    icon?: IIconButtonIconConfig;\n    flyout?: IFlyoutConfig;\n}\n@Component({\n  selector: 'ircc-cl-lib-dropdown',\n  templateUrl: './drop-down.component.html'\n})\nexport class DropdownComponent implements OnInit {\n\n  @Input() config: IDropdownConfig = {\n    id: ''\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string = '';\n  @Input() placeholderText?: string = '';\n  @Input() disabled?: boolean;\n  @Input() category?: keyof typeof ButtonCategories;\n\n  showPlaceholder: boolean = false;\n  selected: boolean = false;\n\n  flyoutConfig : IFlyoutConfig = {\n    id: this.config.id + '_flyout',\n    options: [{\n      value: 'Options empty'\n    }]\n  }\n\n  ngOnInit() {\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.placeholderText !== '')\n      this.config.placeholderText = this.placeholderText;\n    if (this.disabled !== undefined) this.config.disabled = this.disabled;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n\n    if (!this.config.category) this.config.category = ButtonCategories.primary;\n\n    if (!this.config.label || this.config.label.trim().length == 0) {\n      if (!this.config.placeholderText) {\n        this.config.placeholderText = 'Default';\n      }\n      this.showPlaceholder = true;\n    }\n\n    if(this.config.flyout) this.flyoutConfig = this.config.flyout;\n  }\n\n  selectedOption(e: Event) {\n    //if it receives it's event info it selects the index - if not closes flyout\n    if(e){\n      this.showPlaceholder = false;\n      this.config.label = e.toString();\n      this.selected = !this.selected;\n      this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }else{\n      this.toggleFlyout(false);\n    }\n  }\n\n  /**\n   * function receives a truthy value which determines wether it closes or opens, \n   * but also looks for FocusEvent to check if flyout is being interacted with\n   * @param status \n   * @param e \n   */\n  toggleFlyout(status: boolean, e?: FocusEvent) {\n    let target = e?.relatedTarget as HTMLElement;\n    if(!target?.id.includes(this.config.id) || !e){\n      this.selected = status;\n      !status && this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }\n  }\n\n  /**\n   * Clear the flyout active state\n   */\n  clearFlyoutFocus() {\n    if (this.config?.flyout?.options) {\n      this.config.flyout.options.forEach(i => {\n        i.active = false;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IErrorComponentConfig.html": {
      url: "interfaces/IErrorComponentConfig.html",
      title: "interface - IErrorComponentConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/error/error.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorLOV\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorLOV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorLOV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IErrorIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IErrorIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IErrorIconConfig.html": {
      url: "interfaces/IErrorIconConfig.html",
      title: "interface - IErrorIconConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/error/error.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IFlyoutConfig.html": {
      url: "interfaces/IFlyoutConfig.html",
      title: "interface - IFlyoutConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlyoutConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         IFlyoutOptionConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFlyoutOptionConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selection:      | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, OnInit, EventEmitter, HostListener, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { IFlyoutOptionConfig } from '../flyout-option/flyout-option.component';\n\nexport enum IFlyoutSelectTypes {\n  single = 'single',\n  multi = 'multi'\n}\n\nexport interface IFlyoutConfig {\n  id: string,\n  options?: IFlyoutOptionConfig[],\n  disabled?: boolean\n  selection?: [] | number,\n  type?: keyof typeof IFlyoutSelectTypes\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout',\n  templateUrl: './flyout.component.html'\n})\nexport class FlyoutComponent implements OnInit {\n  @ViewChildren('option') optionContainers: QueryList = new QueryList;\n\n  @Input() config : IFlyoutConfig = {\n    id: ''\n  }\n  @Input() id? : string;\n  @Input() options?: IFlyoutOptionConfig[];\n  @Input() disabled?: boolean;\n  @Input() selection?: [] | number;\n  @Input() type?: keyof typeof IFlyoutSelectTypes;\n\n  //TODO: Must add the other config parameters\n  @Output() isSelected = new EventEmitter();\n\n  selectedIndex : number = -1;\n  a11yText : string = '';\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'single';\n    if(this.id) this.config.id = this.id;\n    if(this.options) this.config.options = this.options;\n    if(this.disabled) this.config.disabled = this.disabled;\n    if(this.selection) this.config.selection = this.selection;\n    if(this.type) this.config.type = this.type;\n  };\n\n  @HostListener('document:keydown.arrowdown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options.slice(this.selectedIndex + 1).forEach((option, index) => {\n        if (!foundClickable && option.clickable !== false) {\n          this.selectedIndex += index + 1;\n          this.highlightIndex(option.id);\n          foundClickable = true;\n        }\n      });\n    }\n  }\n\n  @HostListener('document:keydown.arrowup', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(0, this.selectedIndex)\n        .reverse()\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex -= index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n      // Ensure selectedIndex does not fall below 0\n      this.selectedIndex = Math.max(this.selectedIndex, 0);\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    event.preventDefault();\n    //if the index hasn't changes through arrow navigation, emits our event but lets the parent know nothing was selected\n    this.selectedIndex != -1 ? this.optionSelected(this.selectedIndex) : this.isSelected.emit(null);\n  }\n\n  //takes in the active index from HostListeners and sets the config option to active state which triggers styling\n  highlightIndex(el_id: any) {\n    if(el_id){\n      this.config.options?.forEach(option => {\n        if(option.id === el_id){\n          option.active = true;\n          this.optionContainers.toArray()[this.selectedIndex]?.nativeElement?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n          this.a11yText = option.value;\n          //updates a11yText to indicate currently selected item if scrolling through flyout again\n          if(option.selected) this.a11yText += ' currently selected'; //translation?\n        }else{\n          option.active = false;\n        }\n      });\n    }\n  }\n\n  //clears all selections by setting the option.selected to false\n  clearOptions(){\n    this.config?.options?.forEach(option => {\n      option.selected = false;\n    });\n  }\n\n  //function takes in index value of current active option and selects it\n  optionSelected(i: number){\n    if(this.config.options && !this.config.options[i].selected && this.config.options[i].clickable){\n      //setup for future multi select feature\n      this.config.type !== 'multi' ? this.clearOptions() : /*this.config.selection = [].push(this.config.options[i]);*/console.log('MULTI');\n      this.config.options[i].selected = true;\n      //emits the value of the selected index so it's visible to the parent\n      this.isSelected.emit(this.config.options[i].value);\n      }\n  }\n\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IFlyoutOptionConfig.html": {
      url: "interfaces/IFlyoutOptionConfig.html",
      title: "interface - IFlyoutOptionConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlyoutOptionConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nexport enum IFlyoutOptionType {\n  text = 'text',\n  checkbox = 'checkbox',\n  dropdown = 'dropdown',\n  line = 'line',\n  heading = 'heading'\n}\n\nexport interface IFlyoutOptionConfig {\n  id?: string,\n  value: string,\n  selected?: boolean,\n  active?: boolean,\n  disabled?: boolean,\n  type?: keyof typeof IFlyoutOptionType,\n  clickable?: boolean\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout-option',\n  templateUrl: './flyout-option.component.html'\n})\nexport class FlyoutOptionComponent implements OnInit {\n\n  @Input() config : IFlyoutOptionConfig = {\n    id: '',\n    value: 'Blank label'\n  }\n\n  @Input() id? : string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if(this.config.type === undefined) this.config.type = 'text';\n    if((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false) this.config.clickable = true;\n    if(this.id) this.config.id = this.id;\n  };\n\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IHiddenNavConfig.html": {
      url: "interfaces/IHiddenNavConfig.html",
      title: "interface - IHiddenNavConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHiddenNavConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipLinks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipLinks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipLinks:         ISkipLinkConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISkipLinkConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IIconButtonComponentConfig.html": {
      url: "interfaces/IIconButtonComponentConfig.html",
      title: "interface - IIconButtonComponentConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconButtonComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         IIconButtonIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IIconButtonIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IIconButtonIconConfig.html": {
      url: "interfaces/IIconButtonIconConfig.html",
      title: "interface - IIconButtonIconConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconButtonIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IIconConfig.html": {
      url: "interfaces/IIconConfig.html",
      title: "interface - IIconConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/icon/icon.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FA_keywords\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FA_keywords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FA_keywords:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface IIconConfig {\n  ariaLabel?: string;\n  FA_keywords?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent implements OnChanges {\n  @ViewChild('iconSpan') iconSpan!: ElementRef;\n  @Input() config: IIconConfig = {};\n  @Input() ariaLabel?: string;\n  @Input() FA_keywords?: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config'] && !changes['config'].firstChange) {\n      const change = changes['config'].currentValue;\n      const keys = Object.keys(change);\n      let spanContent = ``;\n      this.iconSpan.nativeElement.innerHTML = spanContent;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IIndicatorConfig.html": {
      url: "interfaces/IIndicatorConfig.html",
      title: "interface - IIndicatorConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIndicatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            palette\n                                        \n                                \n                                \n                                        \n                                            purpose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        palette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        palette:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purpose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        purpose:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IndicatorType {\n  dot,\n  text,\n  number\n}\n\nexport enum IndicatorTreatment {\n  strong = 'strong',\n  weak = 'weak'\n}\n\nexport enum IndicatorPurpose {\n  status = 'status',\n  palette = 'palette'\n}\n\nexport enum IndicatorStatus {\n  information = 'information',\n  warning = 'warning',\n  critical = 'critical',\n  neutral = 'neutral',\n  primary = 'primary',\n  success = 'success'\n}\n\nexport enum IndicatorPalette {\n  teal,\n  orange,\n  red,\n  grey,\n  blue,\n  green,\n  purple,\n  navy\n}\n\nexport interface IIndicatorConfig {\n  label?: string | number;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof IndicatorType;\n  icon?: string;\n  category: keyof typeof IndicatorTreatment; // Treatment\n  purpose: keyof typeof IndicatorPurpose;\n  status?: keyof typeof IndicatorStatus; // Sentiment\n  palette?: keyof typeof IndicatorPalette; // Colour\n  ariaLabel?: string; // Aria label line of value\n}\n\n@Component({\n  selector: 'ircc-cl-lib-indicator',\n  templateUrl: './indicator.component.html'\n})\nexport class IndicatorComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: IIndicatorConfig = {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  };\n  @ViewChild('label') label?: ElementRef;\n  EIndicatorStatus = IndicatorStatus;\n  rounded?: boolean;\n  abbr?: boolean; // Display abbr tag when text is truncated\n\n  ngOnInit() {\n    this.checkLabelRounded();\n    this.checkNumber();\n  }\n\n  ngAfterViewInit() {\n    this.checkLabelLength();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.checkNumber();\n    this.checkLabelRounded();\n    this.checkLabelLength();\n  }\n\n  // Check if number exceeds 99\n  private checkNumber() {\n    if (\n      this.config.type === 'number' &&\n      this.config?.label &&\n      this.config.label > 99\n    ) {\n      this.config.label = '99+';\n    }\n  }\n\n  // If label only have 1 character, it should be rounded\n  private checkLabelRounded() {\n    if (typeof this.config?.label === 'string') {\n      this.rounded = this.config.label.length == 1 && !this.config.icon;\n    }\n  }\n\n  // Check if div exceeds 200px\n  private checkLabelLength() {\n    // Max 200px - padding 8px x2\n    this.abbr = (\n      (this.label?.nativeElement?.offsetWidth &&\n        this.label?.nativeElement?.offsetWidth > 184)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IInputComponentConfig.html": {
      url: "interfaces/IInputComponentConfig.html",
      title: "interface - IInputComponentConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInputComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/input/input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IInputComponentConfig {\n  label?: string;\n  hint?: string;\n  desc?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  type?: keyof typeof InputTypes;\n  id: string;\n  size?: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password'\n}\n@Component({\n  selector: 'ircc-cl-lib-input',\n  templateUrl: './input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\n/**\n* The input component can act as a basic text field or password input that's completely customizable.\n*/\nexport class InputComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  /**\n   * Note: DON'T include default values of '' unless it REALLY makes sense to do so - instead, make them optional.\n   * The config input is where you declare the inputs desired properties such as labels, hints, descriptions, etc. where only the id and form group are mandatory properties. Refer to IInputComponentConfig interface.\n*/\n  @Input() config: IInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  /**\n* The input id is used to identify the component uniquely for subscribing to value changes and errors\n*/\n  @Input() id = '';\n\n  /**\n  * FormGroup aggregates the values of each child FormControl into one object, with each control name as the key. It calculates its status by reducing the status values of its children. For example, if one of the controls in a group is invalid, the entire group becomes invalid.\n  */\n  @Input() formGroup = this.formGroupEmpty;\n\n  /**\n  * Type refers to the 2 different input options: basic text or password as the password type has additional configuration\n  */\n  @Input() type: keyof typeof InputTypes = InputTypes.password;\n\n  disabled = false;\n  focusState = false;\n  showPassword?: boolean;\n  typeControl: keyof typeof InputTypes = InputTypes.text;\n  ariaText = 'Text Input';\n  errorIds: IErrorIDs[] = [];\n  errorAria = '';\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  /**\n * When the page loads, we initialize the form with it's controls, labels, and config, and detect value changes and errors. setLang detects changes to the language toggle to serve the correct text\n */\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (!this.config.type) {\n      this.config.type = InputTypes.text;\n    } else if (this.config.type === InputTypes.password) {\n      this.showPassword = false;\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n\n    this.type === InputTypes.text\n      ? (this.showPassword = false)\n      : (this.showPassword = true);\n\n    //set disable to true when form is disabled\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      if (change[this.config.id] === undefined) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n  /**\n* setLang detects changes to the language toggle to serve the correct aria error text\n*/\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n  * A lifecycle hook that is called when any data-bound property of a directive changes.\n  */\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n  * Apply focus state\n  */\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n\n    if (this.showPassword) {\n      this.typeControl = InputTypes.text;\n      this.ariaText = 'Text Input';\n    } else {\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n  }\n\n  /**\n* \n*/\n  public clearvalue() { }\n\n\n  /**\n   * \n   */\n  writeValue(value: string): void { }\n\n\n  /**\n   * \n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n\n  /**\n * \n */\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n * Apply a disabled state\n */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ILabelConfig.html": {
      url: "interfaces/ILabelConfig.html",
      title: "interface - ILabelConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILabelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconButton\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            parentID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            touched\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconButton:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touched\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        touched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ILabelIconConfig.html": {
      url: "interfaces/ILabelIconConfig.html",
      title: "interface - ILabelIconConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILabelIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ariaText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            colour\n                                        \n                                \n                                \n                                        \n                                            iconClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colour:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ILinkComponentConfig.html": {
      url: "interfaces/ILinkComponentConfig.html",
      title: "interface - ILinkComponentConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILinkComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            href\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linkKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overflow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routerLink\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overflow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overflow:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport interface ILinkComponentConfig {\n  text: string;\n  linkKey?: string;\n  href?: string;\n  routerLink?: string;\n  overflow?: boolean;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb-link',\n  templateUrl: './link.component.html'\n})\nexport class BreadcrumbLinkComponent {\n  @Input() config: ILinkComponentConfig = {\n    text: '',\n    overflow: false\n  };\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IOption.html": {
      url: "interfaces/IOption.html",
      title: "interface - IOption",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewChild\n} from '@angular/core';\nimport { InputComponent } from '../../form-components/input/input.component';\n//TODO: This should be changed. Ideally the component doesn't need to know about these, and can just\n//add them in using the template.\nimport { ChipItemComponent } from '../chips/chip-item/chip-item.component';\n\ninterface IOption {\n  //Changed: Interfaces should ALWAYS start with 'I'.\n  text: string;\n  value: string;\n}\n\n@Component({\n  selector: 'lib-autocomplete',\n  templateUrl: './autocomplete.component.html'\n})\nexport class AutocompleteComponent implements OnInit, DoCheck {\n  @ViewChild(InputComponent, { static: true })\n  inputComponent?: InputComponent;\n\n  //TODO: Change this to a config\n  @Input() options: IOption[] = [];\n  @Input() title = `Title`;\n  @Input() hintText = `Hint Text`;\n  @Input() name = `Add Name`;\n  @Input() error = false;\n  @Input() limit = 0;\n  @Output() selectValueChange = new EventEmitter();\n  @Input() savedSelectedOptions: IOption[] = [];\n\n  selectedOptions: IOption[] = [];\n  originalOptions: IOption[] = [];\n  inputValue?: string;\n  hideDropdown = true;\n  isFocusInsideComponent = false;\n  isComponentClicked = false;\n  addHover = false;\n  emptyResults = false;\n\n  differ: KeyValueDiffer;\n  constructor(private differs: KeyValueDiffers) {\n    this.differ = this.differs.find({}).create();\n  }\n\n  @HostListener('window:keydown.escape', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (this.hideDropdown === false || this.options.length > 0) {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  clickInside(event: { target: HTMLInputElement }) {\n    const target = event.target;\n    if (\n      this.hideDropdown === true &&\n      target.type === `text` &&\n      this.options.length > 0\n    ) {\n      this.isFocusInsideComponent = true;\n      this.isComponentClicked = true;\n      this.toggleDropDown();\n      this.addHover = true;\n    } else if (\n      target.classList.contains('select-target') ||\n      target.classList.contains(`selected`)\n    ) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.toggleDropDown();\n    }\n  }\n\n  @HostListener('document:click')\n  clickout() {\n    if (!this.isFocusInsideComponent && this.isComponentClicked) {\n      this.toggleDropDown();\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n    }\n    this.isFocusInsideComponent = false;\n  }\n\n  onMouseEnter() {\n    this.addHover = false;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this);\n    if (change) {\n      change.forEachChangedItem((item) => {\n        if (item.key === `options`) {\n          this.selectValueChange.emit(this.selectedOptions);\n        }\n      });\n    }\n  }\n\n  valueChange(event: any) {\n    this.filterList(event);\n  }\n\n  filterList(filterValue: any) {\n    if (filterValue.length  {\n        return value.text.toLowerCase().includes(filterValue.toLowerCase());\n      });\n      this.options = filteredOptions.slice(0);\n      if (this.options.length === 0) {\n        this.emptyResults = true;\n      } else {\n        this.emptyResults = false;\n      }\n    }\n  }\n\n  public checkActive(value: string): boolean {\n    for (const selectedOption of this.selectedOptions) {\n      if (selectedOption.value === value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  returnOptionsToDefault() {\n    this.emptyResults = false;\n    this.options = this.originalOptions.slice(0);\n  }\n\n  public toggleDropDown() {\n    this.hideDropdown = !this.hideDropdown;\n    this.inputComponent?.focusInput(this.hideDropdown);\n  }\n\n  public toggleDropDownKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.toggleDropDown();\n    }\n  }\n\n  removeChipItem(index: number) {\n    this.selectedOptions.splice(index, 1);\n    this.returnOptionsToDefault();\n  }\n\n  public removeAllChipItems() {\n    this.selectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n\n  public selectAll() {\n    for (const option of this.options) {\n      this.selectedOptions.push(option);\n    }\n    this.returnOptionsToDefault();\n  }\n\n  public selectIndex(index: number) {\n    if (this.limit !== 0 && this.selectedOptions.length >= this.limit) {\n      return;\n    } else {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      if (this.checkDuplicated(index) === false) {\n        this.selectedOptions.push(this.options[index]);\n      }\n    }\n  }\n\n  checkDuplicated(index: number) {\n    return this.selectedOptions.some((element: { value: string }) => {\n      if (element.value === this.options[index].value) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedOptions = [];\n    this.originalOptions = this.options.slice(0);\n    this.selectedOptions = this.savedSelectedOptions;\n    this.savedSelectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IProgressIndicatorConfig.html": {
      url: "interfaces/IProgressIndicatorConfig.html",
      title: "interface - IProgressIndicatorConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProgressIndicatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orientation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            steps\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:         IStepConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IStepConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IProgressTagsConfig.html": {
      url: "interfaces/IProgressTagsConfig.html",
      title: "interface - IProgressTagsConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProgressTagsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport const TAG_LABELS_EN = [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n];\nexport const TAG_LABELS_FR = [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n];\n\nexport enum TagType {\n  primary = 'primary',\n  success = 'success',\n  critical = 'critical',\n  locked = 'locked',\n  notStarted = 'notStarted'\n}\nexport interface IProgressTagsConfig {\n  id: string;\n  type?: keyof typeof TagType;\n  size?: keyof typeof DSSizes;\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-tags',\n  templateUrl: './progress-tags.component.html'\n})\nexport class ProgressTagsComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: IProgressTagsConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof TagType | TagType;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = TAG_LABELS_EN;\n    } else {\n      this.text = TAG_LABELS_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IRadioInputComponentConfig.html": {
      url: "interfaces/IRadioInputComponentConfig.html",
      title: "interface - IRadioInputComponentConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRadioInputComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            helpText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helpText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helpText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         IRadioInputOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRadioInputOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:     ValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IRadioInputOption.html": {
      url: "interfaces/IRadioInputOption.html",
      title: "interface - IRadioInputOption",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRadioInputOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizeOverride\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeOverride\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeOverride:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ISearchInputButtonConfig.html": {
      url: "interfaces/ISearchInputButtonConfig.html",
      title: "interface - ISearchInputButtonConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchInputButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            colour\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colour:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ISearchInputConfig.html": {
      url: "interfaces/ISearchInputConfig.html",
      title: "interface - ISearchInputConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchInputConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholderText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchButton\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholderText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchButton:         ISearchInputButtonConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISearchInputButtonConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ISelectConfig.html": {
      url: "interfaces/ISelectConfig.html",
      title: "interface - ISelectConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISelectConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/select/select.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableError\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ISelectOptionsConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISelectOptionsConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ISelectOptionsConfig.html": {
      url: "interfaces/ISelectOptionsConfig.html",
      title: "interface - ISelectOptionsConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISelectOptionsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/select/select.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ISkipLinkConfig.html": {
      url: "interfaces/ISkipLinkConfig.html",
      title: "interface - ISkipLinkConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISkipLinkConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ISpinnerConfig.html": {
      url: "interfaces/ISpinnerConfig.html",
      title: "interface - ISpinnerConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISpinnerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orientation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  DSFullSizes,\n  DSOrientations\n} from '../../../shared/constants/jl-components.constants';\n\nexport const SPINNER_LABELS_EN = ['Loading', 'Success', 'Error'];\nexport const SPINNER_LABELS_FR = ['Chargement', 'Succès', 'Erreur'];\n\nexport enum SpinnerType {\n  active = 'active',\n  success = 'success',\n  critical = 'critical'\n}\nexport interface ISpinnerConfig {\n  id: string;\n  type?: keyof typeof SpinnerType;\n  size?: keyof typeof DSFullSizes;\n  orientation?: keyof typeof DSOrientations;\n  label?: string;\n  description?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-spinner',\n  templateUrl: './spinner.component.html'\n})\nexport class SpinnerComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: ISpinnerConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof SpinnerType | SpinnerType;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() orientation?: keyof typeof DSOrientations | DSOrientations;\n  @Input() label?: '';\n  @Input() description?: '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    if (!this.config.size) this.config.size = 'large';\n\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    this.removeVertical();\n\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = SPINNER_LABELS_EN;\n    } else {\n      this.text = SPINNER_LABELS_FR;\n    }\n  }\n\n  removeVertical() {\n    if (\n      this.config.size !== 'large' &&\n      this.config.orientation === 'vertical'\n    ) {\n      this.config.orientation = 'horizontal';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IStepConfig.html": {
      url: "interfaces/IStepConfig.html",
      title: "interface - IStepConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStepConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tagConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tagConfig:         IProgressTagsConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProgressTagsConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ITabConfig.html": {
      url: "interfaces/ITabConfig.html",
      title: "interface - ITabConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITabConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ITabNavConfig.html": {
      url: "interfaces/ITabNavConfig.html",
      title: "interface - ITabNavConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITabNavConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tab\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ITabConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITabConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/ITextareaComponentConfig.html": {
      url: "interfaces/ITextareaComponentConfig.html",
      title: "interface - ITextareaComponentConfig",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITextareaComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            charLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessages\n                                        \n                                \n                                \n                                        \n                                            formGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelIconConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resizable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorIcon:         IErrorIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IErrorIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessages:     IErrorPairs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorPairs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelIconConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelIconConfig:         ILabelIconConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabelIconConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizable:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorIconConfig } from '../error/error.component';\n\nexport interface ITextareaComponentConfig {\n  formGroup: FormGroup;\n  id: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  charLimit?: string;\n  resizable?: keyof typeof ResizableTypes;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  errorIcon?: IErrorIconConfig;\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum ResizableTypes {\n  vertical = 'vertical',\n  horizontal = 'password',\n  both = 'both',\n  none = 'none'\n}\n\n@Component({\n  selector: 'ircc-cl-lib-textarea',\n  templateUrl: './textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: ITextareaComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() charLimit = '';\n\n  disabled = false;\n  focusState = false;\n  errorIds: IErrorIDs[] = [];\n  charLimitStatus = '';\n  currentCharacterStatusAria = '';\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n\n  constructor(public standAloneFunctions: StandAloneFunctions) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit(): void {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.charLimit !== '') {\n      this.config.charLimit = this.charLimit;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.characterCountStatus(\n        this.config.formGroup.controls[this.config.id].value.length\n      );\n    }\n\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.characterCountStatus(change[this.config.id]?.length);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  characterCountStatus(currCharCount: any) {\n    if (this.config?.charLimit) {\n      if (this.config?.charLimit == currCharCount) {\n        this.charLimitStatus = 'maxLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.maxLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount == 15) {\n        this.charLimitStatus = 'warningLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.warningLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/IconButtonComponent.html": {
      url: "components/IconButtonComponent.html",
      title: "component - IconButtonComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  IconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-icon-button\n            \n\n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                category\n                            \n                            \n                                config\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :      | IconButtonCategories\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIconButtonComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         IIconButtonIconConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSFullSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClick\n                        \n                    \n                \n            \n            \n                \nbuttonClick(id)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.config.id\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-thin fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-solid fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--primary-text)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/IconComponent.html": {
      url: "components/IconComponent.html",
      title: "component - IconComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/icon/icon.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconSpan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                config\n                            \n                            \n                                FA_keywords\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIconConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FA_keywords\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        iconSpan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('iconSpan')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/icon/icon.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface IIconConfig {\n  ariaLabel?: string;\n  FA_keywords?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent implements OnChanges {\n  @ViewChild('iconSpan') iconSpan!: ElementRef;\n  @Input() config: IIconConfig = {};\n  @Input() ariaLabel?: string;\n  @Input() FA_keywords?: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config'] && !changes['config'].firstChange) {\n      const change = changes['config'].currentValue;\n      const keys = Object.keys(change);\n      let spanContent = ``;\n      this.iconSpan.nativeElement.innerHTML = spanContent;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/IndicatorComponent.html": {
      url: "components/IndicatorComponent.html",
      title: "component - IndicatorComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  IndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-indicator\n            \n\n\n\n\n            \n                templateUrl\n                ./indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                abbr\n                            \n                            \n                                EIndicatorStatus\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLabelLength\n                            \n                            \n                                    Private\n                                checkLabelRounded\n                            \n                            \n                                    Private\n                                checkNumber\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IIndicatorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:66\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkLabelLength\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkLabelLength()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkLabelRounded\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkLabelRounded()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkNumber()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        abbr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EIndicatorStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : IndicatorStatus\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('label')\n                        \n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rounded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/indicator/indicator.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IndicatorType {\n  dot,\n  text,\n  number\n}\n\nexport enum IndicatorTreatment {\n  strong = 'strong',\n  weak = 'weak'\n}\n\nexport enum IndicatorPurpose {\n  status = 'status',\n  palette = 'palette'\n}\n\nexport enum IndicatorStatus {\n  information = 'information',\n  warning = 'warning',\n  critical = 'critical',\n  neutral = 'neutral',\n  primary = 'primary',\n  success = 'success'\n}\n\nexport enum IndicatorPalette {\n  teal,\n  orange,\n  red,\n  grey,\n  blue,\n  green,\n  purple,\n  navy\n}\n\nexport interface IIndicatorConfig {\n  label?: string | number;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof IndicatorType;\n  icon?: string;\n  category: keyof typeof IndicatorTreatment; // Treatment\n  purpose: keyof typeof IndicatorPurpose;\n  status?: keyof typeof IndicatorStatus; // Sentiment\n  palette?: keyof typeof IndicatorPalette; // Colour\n  ariaLabel?: string; // Aria label line of value\n}\n\n@Component({\n  selector: 'ircc-cl-lib-indicator',\n  templateUrl: './indicator.component.html'\n})\nexport class IndicatorComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: IIndicatorConfig = {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status\n  };\n  @ViewChild('label') label?: ElementRef;\n  EIndicatorStatus = IndicatorStatus;\n  rounded?: boolean;\n  abbr?: boolean; // Display abbr tag when text is truncated\n\n  ngOnInit() {\n    this.checkLabelRounded();\n    this.checkNumber();\n  }\n\n  ngAfterViewInit() {\n    this.checkLabelLength();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.checkNumber();\n    this.checkLabelRounded();\n    this.checkLabelLength();\n  }\n\n  // Check if number exceeds 99\n  private checkNumber() {\n    if (\n      this.config.type === 'number' &&\n      this.config?.label &&\n      this.config.label > 99\n    ) {\n      this.config.label = '99+';\n    }\n  }\n\n  // If label only have 1 character, it should be rounded\n  private checkLabelRounded() {\n    if (typeof this.config?.label === 'string') {\n      this.rounded = this.config.label.length == 1 && !this.config.icon;\n    }\n  }\n\n  // Check if div exceeds 200px\n  private checkLabelLength() {\n    // Max 200px - padding 8px x2\n    this.abbr = (\n      (this.label?.nativeElement?.offsetWidth &&\n        this.label?.nativeElement?.offsetWidth > 184)\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ config?.label }}\n    \n    \n      {{ config?.label }}\n    \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ config?.label }}              {{ config?.label }}          '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/InputComponent.html": {
      url: "components/InputComponent.html",
      title: "component - InputComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/input/input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-input\n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ariaText\n                            \n                            \n                                disabled\n                            \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                focusState\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                    Private\n                                    Optional\n                                onChange\n                            \n                            \n                                    Private\n                                    Optional\n                                onTouch\n                            \n                            \n                                    Optional\n                                showPassword\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                            \n                                typeControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearvalue\n                            \n                            \n                                    Public\n                                focusInput\n                            \n                            \n                                getAriaErrorText\n                            \n                            \n                                hideShow\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getErrorState\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IInputComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:60\n                            \n                        \n                \n                    \n                        Note: DON'T include default values of '' unless it REALLY makes sense to do so - instead, make them optional.\nThe config input is where you declare the inputs desired properties such as labels, hints, descriptions, etc. where only the id and form group are mandatory properties. Refer to IInputComponentConfig interface.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:72\n                            \n                        \n                \n                    \n                        FormGroup aggregates the values of each child FormControl into one object, with each control name as the key. It calculates its status by reducing the status values of its children. For example, if one of the controls in a group is invalid, the entire group becomes invalid.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:67\n                            \n                        \n                \n                    \n                        The input id is used to identify the component uniquely for subscribing to value changes and errors\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : InputTypes.password\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:77\n                            \n                        \n                \n                    \n                        Type refers to the 2 different input options: basic text or password as the password type has additional configuration\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearvalue\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearvalue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        focusInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusInput(focusValue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:222\n                \n            \n\n\n            \n                \n                    Apply focus state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focusValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:173\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideShow\n                        \n                    \n                \n            \n            \n                \nhideShow()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:229\n                \n            \n\n\n            \n                \n                    Toggle the password field\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:206\n                \n            \n\n\n            \n                \n                    A lifecycle hook that is called when any data-bound property of a directive changes.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:106\n                \n            \n\n\n            \n                \n                    When the page loads, we initialize the form with it's controls, labels, and config, and detect value changes and errors. setLang detects changes to the language toggle to serve the correct text\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:187\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:271\n                \n            \n\n\n            \n                \n                    Apply a disabled state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:194\n                \n            \n\n\n            \n                \n                    setLang detects changes to the language toggle to serve the correct aria error text\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ariaText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Text Input'\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : InputTypes.text\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:82\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getErrorState\n                    \n                \n\n                \n                    \n                        getgetErrorState()\n                    \n                \n                            \n                                \n                                    Defined in component-library/component-lib/src/lib/form-components/input/input.component.ts:278\n                                \n                            \n                    \n                        \n                                Return error state from FormGroup, must be touched & invalid\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IInputComponentConfig {\n  label?: string;\n  hint?: string;\n  desc?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  type?: keyof typeof InputTypes;\n  id: string;\n  size?: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password'\n}\n@Component({\n  selector: 'ircc-cl-lib-input',\n  templateUrl: './input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\n/**\n* The input component can act as a basic text field or password input that's completely customizable.\n*/\nexport class InputComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  /**\n   * Note: DON'T include default values of '' unless it REALLY makes sense to do so - instead, make them optional.\n   * The config input is where you declare the inputs desired properties such as labels, hints, descriptions, etc. where only the id and form group are mandatory properties. Refer to IInputComponentConfig interface.\n*/\n  @Input() config: IInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  /**\n* The input id is used to identify the component uniquely for subscribing to value changes and errors\n*/\n  @Input() id = '';\n\n  /**\n  * FormGroup aggregates the values of each child FormControl into one object, with each control name as the key. It calculates its status by reducing the status values of its children. For example, if one of the controls in a group is invalid, the entire group becomes invalid.\n  */\n  @Input() formGroup = this.formGroupEmpty;\n\n  /**\n  * Type refers to the 2 different input options: basic text or password as the password type has additional configuration\n  */\n  @Input() type: keyof typeof InputTypes = InputTypes.password;\n\n  disabled = false;\n  focusState = false;\n  showPassword?: boolean;\n  typeControl: keyof typeof InputTypes = InputTypes.text;\n  ariaText = 'Text Input';\n  errorIds: IErrorIDs[] = [];\n  errorAria = '';\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  /**\n * When the page loads, we initialize the form with it's controls, labels, and config, and detect value changes and errors. setLang detects changes to the language toggle to serve the correct text\n */\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (!this.config.type) {\n      this.config.type = InputTypes.text;\n    } else if (this.config.type === InputTypes.password) {\n      this.showPassword = false;\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n\n    this.type === InputTypes.text\n      ? (this.showPassword = false)\n      : (this.showPassword = true);\n\n    //set disable to true when form is disabled\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      if (change[this.config.id] === undefined) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    //Get the error text when the formControl value changes\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe(() => {\n      this.getAriaErrorText();\n    });\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n  /**\n* setLang detects changes to the language toggle to serve the correct aria error text\n*/\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n  * A lifecycle hook that is called when any data-bound property of a directive changes.\n  */\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n  * Apply focus state\n  */\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n\n    if (this.showPassword) {\n      this.typeControl = InputTypes.text;\n      this.ariaText = 'Text Input';\n    } else {\n      this.typeControl = InputTypes.password;\n      this.ariaText = 'Password Input';\n    }\n  }\n\n  /**\n* \n*/\n  public clearvalue() { }\n\n\n  /**\n   * \n   */\n  writeValue(value: string): void { }\n\n\n  /**\n   * \n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n\n  /**\n * \n */\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n * Apply a disabled state\n */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n          \n\n          \n            \n              \n            \n            \n              \n            \n          \n        \n      \n      \n        \n          {{\n            errorStubText + ': ' + (config.label || '' | translate) + ': '\n          }}\n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                      {{            errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'          }}                                                                              '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/IrccDsAngularBannerModule.html": {
      url: "modules/IrccDsAngularBannerModule.html",
      title: "module - IrccDsAngularBannerModule",
      body: "\n                   \n\n\n\n\n    Modules\n    IrccDsAngularBannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularBannerModule\n\n\n\ncluster_IrccDsAngularBannerModule_exports\n\n\n\ncluster_IrccDsAngularBannerModule_declarations\n\n\n\n\nBannerComponent\n\nBannerComponent\n\n\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule -->\n\nBannerComponent->IrccDsAngularBannerModule\n\n\n\n\n\nBannerComponent \n\nBannerComponent \n\nBannerComponent  -->\n\nIrccDsAngularBannerModule->BannerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/banner-component/ircc-ds-angular-banner.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BannerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BannerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BannerComponent } from './banner/banner.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [BannerComponent],\n  imports: [IrccDsAngularComponentsSharedModule, CommonModule, TranslateModule],\n  exports: [BannerComponent]\n})\nexport class IrccDsAngularBannerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/IrccDsAngularComponentsSharedModule.html": {
      url: "modules/IrccDsAngularComponentsSharedModule.html",
      title: "module - IrccDsAngularComponentsSharedModule",
      body: "\n                   \n\n\n\n\n    Modules\n    IrccDsAngularComponentsSharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularComponentsSharedModule\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_exports\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_declarations\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\n\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbLinkComponent\n\nBreadcrumbLinkComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbLinkComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nDropdownComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutComponent\n\nFlyoutComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutOptionComponent\n\nFlyoutOptionComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutOptionComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIndicatorComponent\n\nIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nLabelComponent\n\nLabelComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nLabelComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressIndicatorComponent\n\nProgressIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressTagsComponent\n\nProgressTagsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressTagsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nSpinnerComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nTabsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbComponent \n\n\n\n\n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbLinkComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->ButtonComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nIrccDsAngularComponentsSharedModule->DropdownComponent \n\n\n\n\n\nFlyoutComponent \n\nFlyoutComponent \n\nFlyoutComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutComponent \n\n\n\n\n\nFlyoutOptionComponent \n\nFlyoutOptionComponent \n\nFlyoutOptionComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutOptionComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconComponent \n\n\n\n\n\nIndicatorComponent \n\nIndicatorComponent \n\nIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->IndicatorComponent \n\n\n\n\n\nLabelComponent \n\nLabelComponent \n\nLabelComponent  -->\n\nIrccDsAngularComponentsSharedModule->LabelComponent \n\n\n\n\n\nProgressIndicatorComponent \n\nProgressIndicatorComponent \n\nProgressIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressIndicatorComponent \n\n\n\n\n\nProgressTagsComponent \n\nProgressTagsComponent \n\nProgressTagsComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressTagsComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nIrccDsAngularComponentsSharedModule->SpinnerComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nIrccDsAngularComponentsSharedModule->TabsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            BreadcrumbLinkComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FlyoutComponent\n                        \n                        \n                            FlyoutOptionComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            IndicatorComponent\n                        \n                        \n                            LabelComponent\n                        \n                        \n                            ProgressIndicatorComponent\n                        \n                        \n                            ProgressTagsComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            BreadcrumbLinkComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FlyoutComponent\n                        \n                        \n                            FlyoutOptionComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            IndicatorComponent\n                        \n                        \n                            LabelComponent\n                        \n                        \n                            ProgressIndicatorComponent\n                        \n                        \n                            ProgressTagsComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonComponent } from './button/button.component';\nimport { IconComponent } from './icon/icon.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { ProgressTagsComponent } from './progress-tags/progress-tags.component';\nimport { DropdownComponent } from './dropdown/drop-down.component';\nimport { LabelComponent } from './label/label.component';\nimport { ProgressIndicatorComponent } from './progress-indicator/progress-indicator.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { BreadcrumbLinkComponent } from './breadcrumb/link/link.component';\nimport { IndicatorComponent } from './indicator/indicator.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { DomChangeDirective } from \"../../shared/directives/dom-change.directive\";\nimport { FlyoutComponent } from './flyout/flyout.component';\nimport { FlyoutOptionComponent } from './flyout-option/flyout-option.component';\n\nconst IrccDsSharedComponents = [\n  ButtonComponent,\n  BreadcrumbComponent,\n  BreadcrumbLinkComponent,\n  IconComponent,\n  IconButtonComponent,\n  IndicatorComponent,\n  TabsComponent,\n  ProgressTagsComponent,\n  DropdownComponent,\n  LabelComponent,\n  ProgressTagsComponent,\n  ProgressIndicatorComponent,\n  SpinnerComponent,\n  FlyoutComponent,\n  FlyoutOptionComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsSharedComponents, DomChangeDirective],\n  imports: [CommonModule, TranslateModule, RouterModule],\n  exports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule,\n    ...IrccDsSharedComponents\n  ]\n})\nexport class IrccDsAngularComponentsSharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/IrccDsAngularFormComponentsModule.html": {
      url: "modules/IrccDsAngularFormComponentsModule.html",
      title: "module - IrccDsAngularFormComponentsModule",
      body: "\n                   \n\n\n\n\n    Modules\n    IrccDsAngularFormComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularFormComponentsModule\n\n\n\ncluster_IrccDsAngularFormComponentsModule_exports\n\n\n\ncluster_IrccDsAngularFormComponentsModule_declarations\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule -->\n\nCheckboxComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nDatePickerComponent\n\nDatePickerComponent\n\nIrccDsAngularFormComponentsModule -->\n\nDatePickerComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nIrccDsAngularFormComponentsModule -->\n\nErrorComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nRadioInputComponent\n\nRadioInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nRadioInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nIrccDsAngularFormComponentsModule -->\n\nSelectComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\nIrccDsAngularFormComponentsModule -->\n\nTextareaComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nIrccDsAngularFormComponentsModule->CheckboxComponent \n\n\n\n\n\nDatePickerComponent \n\nDatePickerComponent \n\nDatePickerComponent  -->\n\nIrccDsAngularFormComponentsModule->DatePickerComponent \n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nIrccDsAngularFormComponentsModule->ErrorComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIrccDsAngularFormComponentsModule->InputComponent \n\n\n\n\n\nRadioInputComponent \n\nRadioInputComponent \n\nRadioInputComponent  -->\n\nIrccDsAngularFormComponentsModule->RadioInputComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nIrccDsAngularFormComponentsModule->SelectComponent \n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nIrccDsAngularFormComponentsModule->TextareaComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                        \n                            DatePickerComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioInputComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            TextareaComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                        \n                            DatePickerComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioInputComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            TextareaComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorComponent } from './error/error.component';\nimport { InputComponent } from './input/input.component';\nimport { RadioInputComponent } from './radio-input/radio-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TextareaComponent } from './textarea/textarea.component';\nimport { SelectComponent } from './select/select.component';\n\nconst IrccDsAngularFormComponents = [\n  CheckboxComponent,\n  ErrorComponent,\n  InputComponent,\n  RadioInputComponent,\n  DatePickerComponent,\n  TextareaComponent,\n  SelectComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsAngularFormComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsAngularFormComponents]\n})\nexport class IrccDsAngularFormComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/IrccDsAngularHeaderFooterModule.html": {
      url: "modules/IrccDsAngularHeaderFooterModule.html",
      title: "module - IrccDsAngularHeaderFooterModule",
      body: "\n                   \n\n\n\n\n    Modules\n    IrccDsAngularHeaderFooterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularHeaderFooterModule\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_declarations\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule -->\n\nFooterComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHeaderComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHiddenNavComponent\n\nHiddenNavComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHiddenNavComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nLanguageSwitchComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nIrccDsAngularHeaderFooterModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nIrccDsAngularHeaderFooterModule->HeaderComponent \n\n\n\n\n\nHiddenNavComponent \n\nHiddenNavComponent \n\nHiddenNavComponent  -->\n\nIrccDsAngularHeaderFooterModule->HiddenNavComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nIrccDsAngularHeaderFooterModule->LanguageSwitchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HiddenNavComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HiddenNavComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LanguageSwitchComponent } from './language-switch/language-switch.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HiddenNavComponent } from './hidden-nav/hidden-nav.component';\n\nconst IrccDsHeaderFooterComponents = [\n  HeaderComponent,\n  FooterComponent,\n  LanguageSwitchComponent,\n  HiddenNavComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsHeaderFooterComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsHeaderFooterComponents]\n})\nexport class IrccDsAngularHeaderFooterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/IrccDsAngularLegacyOldModule.html": {
      url: "modules/IrccDsAngularLegacyOldModule.html",
      title: "module - IrccDsAngularLegacyOldModule",
      body: "\n                   \n\n\n\n\n    Modules\n    IrccDsAngularLegacyOldModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularLegacyOldModule\n\n\n\ncluster_IrccDsAngularLegacyOldModule_declarations\n\n\n\ncluster_IrccDsAngularLegacyOldModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule -->\n\nAutocompleteComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipItemComponent\n\nChipItemComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipItemComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipListComponent\n\nChipListComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipListComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSearchInputComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSecondaryChipsComponent\n\nSecondaryChipsComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSecondaryChipsComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nIrccDsAngularLegacyOldModule->AutocompleteComponent \n\n\n\n\n\nChipItemComponent \n\nChipItemComponent \n\nChipItemComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipItemComponent \n\n\n\n\n\nChipListComponent \n\nChipListComponent \n\nChipListComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipListComponent \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nIrccDsAngularLegacyOldModule->SearchInputComponent \n\n\n\n\n\nSecondaryChipsComponent \n\nSecondaryChipsComponent \n\nSecondaryChipsComponent  -->\n\nIrccDsAngularLegacyOldModule->SecondaryChipsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ChipItemComponent\n                        \n                        \n                            ChipListComponent\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            SecondaryChipsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ChipItemComponent\n                        \n                        \n                            ChipListComponent\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            SecondaryChipsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { ChipListComponent } from './chips/chip-list/chip-list.component';\nimport { SecondaryChipsComponent } from './chips/secondary-chips/secondary-chips.component';\nimport { ChipItemComponent } from './chips/chip-item/chip-item.component';\nimport { SearchInputComponent } from './search-input/search-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst IrccDsLegacyOldComponents = [\n  AutocompleteComponent,\n  ChipListComponent,\n  SecondaryChipsComponent,\n  ChipItemComponent,\n  SearchInputComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsLegacyOldComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsLegacyOldComponents]\n})\nexport class IrccDsAngularLegacyOldModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/LabelButtonService.html": {
      url: "injectables/LabelButtonService.html",
      title: "injectable - LabelButtonService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/shared/label/label-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labelButtonClickObs$\n                            \n                            \n                                    Private\n                                labelButtonClickSubj\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonPress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonPress\n                        \n                    \n                \n            \n            \n                \nbuttonPress(id: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labelButtonClickObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.labelButtonClickSubj.asObservable()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        labelButtonClickSubj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label-button.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelButtonService {\n  private labelButtonClickSubj = new BehaviorSubject('');\n  labelButtonClickObs$ = this.labelButtonClickSubj.asObservable();\n\n  buttonPress(id: string) {\n    this.labelButtonClickSubj.next(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/LabelComponent.html": {
      url: "components/LabelComponent.html",
      title: "component - LabelComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  LabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/label/label.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-label\n            \n\n\n\n\n            \n                templateUrl\n                ./label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labelIconText\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                iconButtonClick\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnLabel\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, standAloneFunctions: StandAloneFunctions, labelButton: LabelButtonService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelButton\n                                                  \n                                                        \n                                                                        LabelButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        iconButtonClick\n                        \n                    \n                \n            \n            \n                \niconButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:71\n                \n            \n\n\n            \n                \n                    Output the button press\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnLabel\n                        \n                    \n                \n            \n            \n                \nreturnLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labelIconText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/label/label.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n}\n\nexport const ERROR_TEXT_STUB_EN = 'Error';\nexport const ERROR_TEXT_STUB_FR = 'Erreur';\n\nexport const HELP_ICON_ALT_EN = ', more information';\nexport const HELP_ICON_ALT_FR = \", plus d'information\";\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: ''\n  };\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT_EN;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT_FR;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ config.label || '' | translate }}\n      \n      \n        {{ config.label || '' | translate }}\n      \n      \n        \n        \n      \n    \n  \n  \n    {{ config.desc || '' | translate }}\n  \n  \n    {{ config.hint | translate }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ config.label || \\'\\' | translate }}                    {{ config.label || \\'\\' | translate }}                                              {{ config.desc || \\'\\' | translate }}        {{ config.hint | translate }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/LanguageSwitchButtonService.html": {
      url: "injectables/LanguageSwitchButtonService.html",
      title: "injectable - LanguageSwitchButtonService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageSwitchButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                languageClickObs$\n                            \n                            \n                                    Private\n                                languageClickSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                languageToggleClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        languageToggleClick\n                        \n                    \n                \n            \n            \n                \nlanguageToggleClick()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        languageClickObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languageClickSub.asObservable()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languageClickSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageSwitchButtonService {\n  private languageClickSub = new BehaviorSubject(false);\n  languageClickObs$ = this.languageClickSub.asObservable();\n\n  languageToggleClick() {\n    this.languageClickSub.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/LanguageSwitchComponent.html": {
      url: "components/LanguageSwitchComponent.html",
      title: "component - LanguageSwitchComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-language-switch\n            \n\n\n\n\n            \n                templateUrl\n                ./language-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aria\n                            \n                            \n                                isMobile\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setText\n                            \n                            \n                                switch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: object, langToggle: LanguageSwitchButtonService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        langToggle\n                                                  \n                                                        \n                                                                        LanguageSwitchButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(e: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:41\n                \n            \n\n\n            \n                \n                    Listens for screen resizes and sets mobile-tablet boolean\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleResize\n                        \n                    \n                \n            \n            \n                \nhandleResize(e: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:41\n                \n            \n\n\n            \n                \n                    Listens for screen resizes and sets mobile-tablet boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setText\n                        \n                    \n                \n            \n            \n                \nsetText(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switch\n                        \n                    \n                \n            \n            \n                \nswitch()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  PLATFORM_ID\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguageSwitchButtonService } from './language-switch-button.service';\n\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH = 'Français';\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE = 'FR';\n\nexport const LANGUAGE_SWITCH_TEXT_FRENCH = 'English';\nexport const LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE = 'EN';\n\n@Component({\n  selector: 'ircc-cl-lib-language-switch',\n  templateUrl: './language-switch.component.html'\n})\nexport class LanguageSwitchComponent implements OnInit {\n  @Input() id = '';\n\n  isMobile = false;\n\n  text = '';\n  aria = '';\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private langToggle: LanguageSwitchButtonService,\n    private translate: TranslateService\n  ) {\n    this.isMobile = window.innerWidth  {\n      console.log(newLang.lang, 'switch');\n      this.setText(newLang.lang);\n    });\n  }\n\n  switch() {\n    this.langToggle.languageToggleClick();\n  }\n\n  setText(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH);\n    } else {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_FRENCH);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ text }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ text }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/ProgressIndicatorComponent.html": {
      url: "components/ProgressIndicatorComponent.html",
      title: "component - ProgressIndicatorComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ProgressIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-progress-indicator\n            \n\n\n\n\n            \n                templateUrl\n                ./progress-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepText\n                            \n                            \n                                tabConfig\n                            \n                            \n                                tabNavConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLang\n                            \n                            \n                                tabClickFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tabClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IProgressIndicatorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tabClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabClickFn\n                        \n                    \n                \n            \n            \n                \ntabClickFn(selected: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stepText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    title: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabNavConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Output() tabClick: EventEmitter = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ stepText + ' ' + (i + 1) }}\n          \n          \n            {{ stepText + ' ' + (i + 1) }}\n          \n          \n          \n            \n          \n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ stepText + \\' \\' + (i + 1) }}                                {{ stepText + \\' \\' + (i + 1) }}                                                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/ProgressTagsComponent.html": {
      url: "components/ProgressTagsComponent.html",
      title: "component - ProgressTagsComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ProgressTagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-progress-tags\n            \n\n\n\n\n            \n                templateUrl\n                ./progress-tags.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTypeTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                id\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IProgressTagsConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :          | TagType\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:43\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypeTitle\n                        \n                    \n                \n            \n            \n                \nsetTypeTitle()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport const TAG_LABELS_EN = [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n];\nexport const TAG_LABELS_FR = [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n];\n\nexport enum TagType {\n  primary = 'primary',\n  success = 'success',\n  critical = 'critical',\n  locked = 'locked',\n  notStarted = 'notStarted'\n}\nexport interface IProgressTagsConfig {\n  id: string;\n  type?: keyof typeof TagType;\n  size?: keyof typeof DSSizes;\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-tags',\n  templateUrl: './progress-tags.component.html'\n})\nexport class ProgressTagsComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: IProgressTagsConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof TagType | TagType;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit(): void {\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = TAG_LABELS_EN;\n    } else {\n      this.text = TAG_LABELS_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          {{ text[1] }}\n        \n        \n          \n          {{ text[2] }}\n        \n        \n          \n          {{ text[3] }}\n        \n        \n          \n          {{ text[4] }}\n        \n        \n          \n          {{ text[0] }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ text[1] }}                                    {{ text[2] }}                                    {{ text[3] }}                                    {{ text[4] }}                                    {{ text[0] }}                    '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressTagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/RadioInputComponent.html": {
      url: "components/RadioInputComponent.html",
      title: "component - RadioInputComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  RadioInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => RadioInputComponent)\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-radio-input\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                getDisabled\n                            \n                            \n                                markAsTouched\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setLang\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IRadioInputComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: this.formGroupEmpty\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:69\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:153\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisabled\n                        \n                    \n                \n            \n            \n                \ngetDisabled(index: number)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:186\n                \n            \n\n\n            \n                \n                    used to disable individual fields (from the config under 'options')\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the option field to be disabled\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        null if value is undefined, empty string otherwise. This works with [attr.disabled].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsTouched\n                        \n                    \n                \n            \n            \n                \nmarkAsTouched()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:167\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(formValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onChange = (formValue: string) => {};\n  onTouched = () => {};\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (\n        this.config.options[index].disabled === undefined &&\n        !this.config.disabled\n      ) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      \n      {{ option.text || '' | translate }}\n    \n  \n  \n    \n      {{\n        errorStubText + ': ' + (config.label || '' | translate) + ': '\n      }}\n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ option.text || \\'\\' | translate }}                  {{        errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'      }}                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadioInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/SearchInputComponent.html": {
      url: "components/SearchInputComponent.html",
      title: "component - SearchInputComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SearchInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-search-input\n            \n\n\n\n\n            \n                templateUrl\n                ./search-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInputControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISearchInputConfig\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        searchInputControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('testing');\n  }\n}\n\n    \n\n    \n        \n\n\n  {{ config?.searchButton?.text }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ config?.searchButton?.text }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/SecondaryChipsComponent.html": {
      url: "components/SecondaryChipsComponent.html",
      title: "component - SecondaryChipsComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SecondaryChipsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-secondary-chips\n            \n\n\n\n\n            \n                templateUrl\n                ./secondary-chips.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipContent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:8\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipContent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-secondary-chips',\n  templateUrl: './secondary-chips.component.html'\n})\nexport class SecondaryChipsComponent implements OnInit {\n  @Input() chipContent?: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  {{ chipContent || '' | translate }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ chipContent || \\'\\' | translate }}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecondaryChipsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/SelectComponent.html": {
      url: "components/SelectComponent.html",
      title: "component - SelectComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/select/select.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => SelectComponent)\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-select\n            \n\n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activiatedSelect\n                            \n                            \n                                errorAria\n                            \n                            \n                                errorIds\n                            \n                            \n                                errorStubText\n                            \n                            \n                                    Optional\n                                formControl\n                            \n                            \n                                labelConfig\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                rotateChevron\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAriaErrorText\n                            \n                            \n                                markAsTouched\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onClicked\n                            \n                            \n                                onTouchedLabel\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setLang\n                            \n                            \n                                valueChange\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISelectConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaErrorText\n                        \n                    \n                \n            \n            \n                \ngetAriaErrorText()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:159\n                \n            \n\n\n            \n                \n                    Get the aria error text for the label\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsTouched\n                        \n                    \n                \n            \n            \n                \nmarkAsTouched()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClicked\n                        \n                    \n                \n            \n            \n                \nonClicked()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouchedLabel\n                        \n                    \n                \n            \n            \n                \nonTouchedLabel()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:173\n                \n            \n\n\n            \n                \n                    Set a boolean representing the touched state to true and trigger getAriaErrorText()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueChange\n                        \n                    \n                \n            \n            \n                \nvalueChange($event: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(formValue: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activiatedSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorStubText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotateChevron\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/select/select.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB_EN,\n  ERROR_TEXT_STUB_FR,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  topLabel?: string;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) { }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      this.config.topLabel\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB_EN;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB_FR;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          {{ config.placeholder || '' | translate }}\n        \n        \n          {{ option.text | translate }}\n        \n      \n      \n        \n      \n    \n    \n      \n        {{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}\n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ config.placeholder || \\'\\' | translate }}                          {{ option.text | translate }}                                                        {{          errorStubText + \\': \\' + (config.label || \\'\\' | translate) + \\': \\'        }}                                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/SpinnerComponent.html": {
      url: "components/SpinnerComponent.html",
      title: "component - SpinnerComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-spinner\n            \n\n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeVertical\n                            \n                            \n                                setTypeTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                orientation\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISpinnerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        orientation\n                    \n                \n                \n                    \n                        Type :          | DSOrientations\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :      | DSFullSizes\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :          | SpinnerType\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeVertical\n                        \n                    \n                \n            \n            \n                \nremoveVertical()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypeTitle\n                        \n                    \n                \n            \n            \n                \nsetTypeTitle()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/shared/spinner/spinner.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  DSFullSizes,\n  DSOrientations\n} from '../../../shared/constants/jl-components.constants';\n\nexport const SPINNER_LABELS_EN = ['Loading', 'Success', 'Error'];\nexport const SPINNER_LABELS_FR = ['Chargement', 'Succès', 'Erreur'];\n\nexport enum SpinnerType {\n  active = 'active',\n  success = 'success',\n  critical = 'critical'\n}\nexport interface ISpinnerConfig {\n  id: string;\n  type?: keyof typeof SpinnerType;\n  size?: keyof typeof DSFullSizes;\n  orientation?: keyof typeof DSOrientations;\n  label?: string;\n  description?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-spinner',\n  templateUrl: './spinner.component.html'\n})\nexport class SpinnerComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: ISpinnerConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof SpinnerType | SpinnerType;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() orientation?: keyof typeof DSOrientations | DSOrientations;\n  @Input() label?: '';\n  @Input() description?: '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    if (!this.config.size) this.config.size = 'large';\n\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    this.removeVertical();\n\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = SPINNER_LABELS_EN;\n    } else {\n      this.text = SPINNER_LABELS_FR;\n    }\n  }\n\n  removeVertical() {\n    if (\n      this.config.size !== 'large' &&\n      this.config.orientation === 'vertical'\n    ) {\n      this.config.orientation = 'horizontal';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n          \n        \n      \n      \n        \n          \n        \n        \n          \n          \n        \n      \n      \n        \n          \n        \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/TabsComponent.html": {
      url: "components/TabsComponent.html",
      title: "component - TabsComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ircc-cl-lib-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ITabNavConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    showContent: true\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelected\n                        \n                    \n                \n            \n            \n                \nsetSelected(selectedID: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/shared/tabs/tabs.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Output() valueChange = new EventEmitter();\n\n  ngOnInit() {\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ val.title }}\n      \n      \n        {{ val.title }}\n      \n    \n  \n  \n    \n    \n      \n        \n          \n            {{ cont.value }}\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ val.title }}                    {{ val.title }}                                                          {{ cont.value }}                              '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/TextareaComponent.html": {
      url: "components/TextareaComponent.html",
      title: "component - TextareaComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TextareaComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ircc-cl-lib-textarea\n            \n\n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charLimitStatus\n                            \n                            \n                                currentCharacterStatusAria\n                            \n                            \n                                disabled\n                            \n                            \n                                errorIds\n                            \n                            \n                                focusState\n                            \n                            \n                                formGroupEmpty\n                            \n                            \n                                labelConfig\n                            \n                            \n                                    Private\n                                    Optional\n                                onChange\n                            \n                            \n                                    Private\n                                    Optional\n                                onTouch\n                            \n                            \n                                    Public\n                                standAloneFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                characterCountStatus\n                            \n                            \n                                    Public\n                                clearvalue\n                            \n                            \n                                    Public\n                                focusInput\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                charLimit\n                            \n                            \n                                config\n                            \n                            \n                                formGroup\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(standAloneFunctions: StandAloneFunctions)\n                    \n                \n                        \n                            \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        standAloneFunctions\n                                                  \n                                                        \n                                                                    StandAloneFunctions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        charLimit\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ITextareaComponentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    formGroup: new FormGroup({})\n  }\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formGroupEmpty\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        characterCountStatus\n                        \n                    \n                \n            \n            \n                \ncharacterCountStatus(currCharCount: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currCharCount\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearvalue\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearvalue()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        focusInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusInput(focusValue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focusValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        charLimitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCharacterStatusAria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IErrorIDs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroupEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        standAloneFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StandAloneFunctions\n\n                    \n                \n                    \n                        \n                                Defined in component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorIconConfig } from '../error/error.component';\n\nexport interface ITextareaComponentConfig {\n  formGroup: FormGroup;\n  id: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  charLimit?: string;\n  resizable?: keyof typeof ResizableTypes;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  errorIcon?: IErrorIconConfig;\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum ResizableTypes {\n  vertical = 'vertical',\n  horizontal = 'password',\n  both = 'both',\n  none = 'none'\n}\n\n@Component({\n  selector: 'ircc-cl-lib-textarea',\n  templateUrl: './textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: ITextareaComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() charLimit = '';\n\n  disabled = false;\n  focusState = false;\n  errorIds: IErrorIDs[] = [];\n  charLimitStatus = '';\n  currentCharacterStatusAria = '';\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n\n  constructor(public standAloneFunctions: StandAloneFunctions) {}\n\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n  ngOnInit(): void {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    if (this.charLimit !== '') {\n      this.config.charLimit = this.charLimit;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.characterCountStatus(\n        this.config.formGroup.controls[this.config.id].value.length\n      );\n    }\n\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.characterCountStatus(change[this.config.id]?.length);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  characterCountStatus(currCharCount: any) {\n    if (this.config?.charLimit) {\n      if (this.config?.charLimit == currCharCount) {\n        this.charLimitStatus = 'maxLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.maxLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount == 15) {\n        this.charLimitStatus = 'warningLimit';\n        this.currentCharacterStatusAria = 'TEXTAREA_COMPONENT.warningLimit';\n      } else if (Number(this.config?.charLimit) - currCharCount \n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n123\n          \n          \n            {{ textareaInput.value.length }}/{{ config.charLimit }}\n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      123                                {{ textareaInput.value.length }}/{{ config.charLimit }}                                                                                          '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'lib-autocomplete'},{'name': 'BannerComponent', 'selector': 'ircc-cl-lib-banner'},{'name': 'BreadcrumbComponent', 'selector': 'ircc-cl-lib-breadcrumb'},{'name': 'BreadcrumbLinkComponent', 'selector': 'ircc-cl-lib-breadcrumb-link'},{'name': 'ButtonComponent', 'selector': 'ircc-cl-lib-button'},{'name': 'CheckboxComponent', 'selector': 'ircc-cl-lib-checkbox'},{'name': 'ChipItemComponent', 'selector': 'lib-chip-item'},{'name': 'ChipListComponent', 'selector': 'lib-chip-list'},{'name': 'DatePickerComponent', 'selector': 'ircc-cl-lib-date-picker'},{'name': 'DropdownComponent', 'selector': 'ircc-cl-lib-dropdown'},{'name': 'ErrorComponent', 'selector': 'ircc-cl-lib-error'},{'name': 'FlyoutComponent', 'selector': 'ircc-cl-lib-flyout'},{'name': 'FlyoutOptionComponent', 'selector': 'ircc-cl-lib-flyout-option'},{'name': 'FooterComponent', 'selector': 'ircc-cl-lib-footer'},{'name': 'HeaderComponent', 'selector': 'ircc-cl-lib-header'},{'name': 'HiddenNavComponent', 'selector': 'ircc-cl-lib-hidden-nav'},{'name': 'IconButtonComponent', 'selector': 'ircc-cl-lib-icon-button'},{'name': 'IconComponent', 'selector': 'ircc-cl-lib-icon'},{'name': 'IndicatorComponent', 'selector': 'ircc-cl-lib-indicator'},{'name': 'InputComponent', 'selector': 'ircc-cl-lib-input'},{'name': 'LabelComponent', 'selector': 'ircc-cl-lib-label'},{'name': 'LanguageSwitchComponent', 'selector': 'ircc-cl-lib-language-switch'},{'name': 'ProgressIndicatorComponent', 'selector': 'ircc-cl-lib-progress-indicator'},{'name': 'ProgressTagsComponent', 'selector': 'ircc-cl-lib-progress-tags'},{'name': 'RadioInputComponent', 'selector': 'ircc-cl-lib-radio-input'},{'name': 'SearchInputComponent', 'selector': 'lib-search-input'},{'name': 'SecondaryChipsComponent', 'selector': 'lib-secondary-chips'},{'name': 'SelectComponent', 'selector': 'ircc-cl-lib-select'},{'name': 'SpinnerComponent', 'selector': 'ircc-cl-lib-spinner'},{'name': 'TabsComponent', 'selector': 'ircc-cl-lib-tabs'},{'name': 'TextareaComponent', 'selector': 'ircc-cl-lib-textarea'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "coverage.html": {
      url: "coverage.html",
      title: "coverage - coverage",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            interface\n            IBannerConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n            \n            interface\n            ICTAConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                15 %\n                (4/26)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/checkbox/checkbox.component.ts\n            \n            interface\n            ICheckBoxComponentConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            component\n            DatePickerComponent\n            \n                20 %\n                (9/44)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerConfig\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerDropDownConfigs\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerErrorMessages\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            interface\n            IDatePickerUnknownDateToggleConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_DAY_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTHS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_MONTHS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_DAY_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_DAY_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_MONTH_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_MONTH_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_YEAR_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_PLACEHOLDER_YEAR_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_UNKOWN_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_UNKOWN_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n            \n            variable\n            DATE_PICKER_YEAR_CONTROL_ID_EXTENSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            interface\n            IErrorComponentConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/error/error.component.ts\n            \n            interface\n            IErrorIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                36 %\n                (12/33)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/input/input.component.ts\n            \n            interface\n            IInputComponentConfig\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n            \n            variable\n            IrccDsAngularFormComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            component\n            RadioInputComponent\n            \n                12 %\n                (3/25)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            interface\n            IRadioInputComponentConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/radio-input/radio-input.component.ts\n            \n            interface\n            IRadioInputOption\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                7 %\n                (2/26)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            interface\n            ISelectConfig\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/select/select.component.ts\n            \n            interface\n            ISelectOptionsConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n            \n            component\n            TextareaComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n            \n            interface\n            ITextareaComponentConfig\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ALT_TEXT_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ALT_TEXT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ARIA_LABEL_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_ARIA_LABEL_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n            \n            variable\n            GOV_LOGO_FOOTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            CANADA_LOGO_ARIA_LABEL_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            CANADA_LOGO_ARIA_LABEL_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            ENGLISH_BANNER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            FRENCH_BANNER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_IMG_LINK_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_IMG_LINK_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_LINK_ALT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/header/header.component.ts\n            \n            variable\n            HEADER_LINK_ATL_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            component\n            HiddenNavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            interface\n            IHiddenNavConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts\n            \n            interface\n            ISkipLinkConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n            \n            variable\n            IrccDsHeaderFooterComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch-button.service.ts\n            \n            injectable\n            LanguageSwitchButtonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            component\n            LanguageSwitchComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_ENGLISH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_FRENCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n            \n            variable\n            LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts\n            \n            interface\n            IOption\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts\n            \n            component\n            ChipItemComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts\n            \n            component\n            ChipListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts\n            \n            component\n            SecondaryChipsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n            \n            variable\n            IrccDsLegacyOldComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            component\n            SearchInputComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            interface\n            ISearchInputButtonConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/legacy-old/search-input/search-input.component.ts\n            \n            interface\n            ISearchInputConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n            \n            interface\n            IBreadcrumbConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n            \n            component\n            BreadcrumbLinkComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/breadcrumb/link/link.component.ts\n            \n            interface\n            ILinkComponentConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/button/button.component.ts\n            \n            interface\n            IButtonConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n            \n            component\n            DropdownComponent\n            \n                13 %\n                (2/15)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/dropdown/drop-down.component.ts\n            \n            interface\n            IDropdownConfig\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n            \n            component\n            FlyoutOptionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n            \n            interface\n            IFlyoutOptionConfig\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n            \n            component\n            FlyoutComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n            \n            interface\n            IFlyoutConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            component\n            IconButtonComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            interface\n            IIconButtonComponentConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            interface\n            IIconButtonIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            variable\n            CLASS_TRASHCAN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n            \n            variable\n            CLASS_X_MARK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/icon/icon.component.ts\n            \n            interface\n            IIconConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n            \n            component\n            IndicatorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n            \n            interface\n            IIndicatorConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n            \n            variable\n            IrccDsSharedComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label-button.service.ts\n            \n            injectable\n            LabelButtonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            component\n            LabelComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            interface\n            ILabelConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            interface\n            ILabelIconConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            ERROR_TEXT_STUB_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            ERROR_TEXT_STUB_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            HELP_ICON_ALT_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/label/label.component.ts\n            \n            variable\n            HELP_ICON_ALT_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            component\n            ProgressIndicatorComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            interface\n            IProgressIndicatorConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            interface\n            IStepConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            variable\n            PROGRESS_INDICATOR_STEP_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n            \n            variable\n            PROGRESS_INDICATOR_STEP_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            component\n            ProgressTagsComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            interface\n            IProgressTagsConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            variable\n            TAG_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n            \n            variable\n            TAG_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            interface\n            ISpinnerConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            variable\n            SPINNER_LABELS_EN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n            \n            variable\n            SPINNER_LABELS_FR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            interface\n            ITabConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                component-library/component-lib/src/lib/shared/tabs/tabs.component.ts\n            \n            interface\n            ITabNavConfig\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "dependencies.html": {
      url: "dependencies.html",
      title: "package-dependencies - dependencies",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cli : ^14.2.11\n        \n            @aws-sdk/client-s3 : ^3.321.1\n        \n            @aws-sdk/lib-storage : ^3.321.1\n        \n            cheerio : ^1.0.0-rc.12\n        \n            mime-types : ^2.1.35\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/enumerations.html": {
      url: "miscellaneous/enumerations.html",
      title: "miscellaneous-enumerations - enumerations",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BannerSize   (component-library/.../banner.component.ts)\n                        \n                        \n                            BannerType   (component-library/.../banner.component.ts)\n                        \n                        \n                            ButtonCategories   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonColor   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonIconDirection   (component-library/.../button.component.ts)\n                        \n                        \n                            ButtonSize   (component-library/.../button.component.ts)\n                        \n                        \n                            CTAType   (component-library/.../banner.component.ts)\n                        \n                        \n                            IconButtonCategories   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            IFlyoutOptionType   (component-library/.../flyout-option.component.ts)\n                        \n                        \n                            IFlyoutSelectTypes   (component-library/.../flyout.component.ts)\n                        \n                        \n                            IndicatorPalette   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorPurpose   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorStatus   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorTreatment   (component-library/.../indicator.component.ts)\n                        \n                        \n                            IndicatorType   (component-library/.../indicator.component.ts)\n                        \n                        \n                            InputTypes   (component-library/.../input.component.ts)\n                        \n                        \n                            LinkType   (component-library/.../breadcrumb.component.ts)\n                        \n                        \n                            Orientations   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            ResizableTypes   (component-library/.../textarea.component.ts)\n                        \n                        \n                            SpinnerType   (component-library/.../spinner.component.ts)\n                        \n                        \n                            TagType   (component-library/.../progress-tags.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    component-library/component-lib/src/lib/banner-component/banner/banner.component.ts\n    \n        \n            \n                \n                    \n                        \n                        BannerSize\n                    \n                \n                        \n                            \n                                 large\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        BannerType\n                    \n                \n                        \n                            \n                                 generic\n                            \n                        \n                        \n                            \n                                Value : generic\n                            \n                        \n                        \n                            \n                                 info\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CTAType\n                    \n                \n                        \n                            \n                                 link\n                            \n                        \n                        \n                            \n                                Value : link\n                            \n                        \n                        \n                            \n                                 button\n                            \n                        \n                        \n                            \n                                Value : button\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/button/button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ButtonCategories\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 secondary\n                            \n                        \n                        \n                            \n                                Value : secondary\n                            \n                        \n                        \n                            \n                                 plain\n                            \n                        \n                        \n                            \n                                Value : plain\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonColor\n                    \n                \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 CTA\n                            \n                        \n                        \n                            \n                                Value : CTA\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonIconDirection\n                    \n                \n                        \n                            \n                                 left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n                        \n                            \n                                 right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ButtonSize\n                    \n                \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n                        \n                            \n                                 large\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IconButtonCategories\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/flyout-option/flyout-option.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IFlyoutOptionType\n                    \n                \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 checkbox\n                            \n                        \n                        \n                            \n                                Value : checkbox\n                            \n                        \n                        \n                            \n                                 dropdown\n                            \n                        \n                        \n                            \n                                Value : dropdown\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n                        \n                            \n                                 heading\n                            \n                        \n                        \n                            \n                                Value : heading\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/flyout/flyout.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IFlyoutSelectTypes\n                    \n                \n                        \n                            \n                                 single\n                            \n                        \n                        \n                            \n                                Value : single\n                            \n                        \n                        \n                            \n                                 multi\n                            \n                        \n                        \n                            \n                                Value : multi\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/indicator/indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        IndicatorPalette\n                    \n                \n                        \n                            \n                                 teal\n                            \n                        \n                        \n                            \n                                 orange\n                            \n                        \n                        \n                            \n                                 red\n                            \n                        \n                        \n                            \n                                 grey\n                            \n                        \n                        \n                            \n                                 blue\n                            \n                        \n                        \n                            \n                                 green\n                            \n                        \n                        \n                            \n                                 purple\n                            \n                        \n                        \n                            \n                                 navy\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorPurpose\n                    \n                \n                        \n                            \n                                 status\n                            \n                        \n                        \n                            \n                                Value : status\n                            \n                        \n                        \n                            \n                                 palette\n                            \n                        \n                        \n                            \n                                Value : palette\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorStatus\n                    \n                \n                        \n                            \n                                 information\n                            \n                        \n                        \n                            \n                                Value : information\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 neutral\n                            \n                        \n                        \n                            \n                                Value : neutral\n                            \n                        \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorTreatment\n                    \n                \n                        \n                            \n                                 strong\n                            \n                        \n                        \n                            \n                                Value : strong\n                            \n                        \n                        \n                            \n                                 weak\n                            \n                        \n                        \n                            \n                                Value : weak\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndicatorType\n                    \n                \n                        \n                            \n                                 dot\n                            \n                        \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/form-components/input/input.component.ts\n    \n        \n            \n                \n                    \n                        \n                        InputTypes\n                    \n                \n                        \n                            \n                                 text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 password\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LinkType\n                    \n                \n                        \n                            \n                                 href\n                            \n                        \n                        \n                            \n                                Value : href\n                            \n                        \n                        \n                            \n                                 routerLink\n                            \n                        \n                        \n                            \n                                Value : routerLink\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Orientations\n                    \n                \n                        \n                            \n                                 horizontal\n                            \n                        \n                        \n                            \n                                Value : horizontal\n                            \n                        \n                        \n                            \n                                 vertical\n                            \n                        \n                        \n                            \n                                Value : vertical\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/form-components/textarea/textarea.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ResizableTypes\n                    \n                \n                        \n                            \n                                 vertical\n                            \n                        \n                        \n                            \n                                Value : vertical\n                            \n                        \n                        \n                            \n                                 horizontal\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n                        \n                            \n                                 both\n                            \n                        \n                        \n                            \n                                Value : both\n                            \n                        \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n    \n        \n            \n                \n                    \n                        \n                        SpinnerType\n                    \n                \n                        \n                            \n                                 active\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n            \n        \n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TagType\n                    \n                \n                        \n                            \n                                 primary\n                            \n                        \n                        \n                            \n                                Value : primary\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 critical\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 locked\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 notStarted\n                            \n                        \n                        \n                            \n                                Value : notStarted\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "index.html": {
      url: "index.html",
      title: "overview - index",
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IrccDsAngularBannerModule\n\n\n\ncluster_IrccDsAngularBannerModule_declarations\n\n\n\ncluster_IrccDsAngularBannerModule_exports\n\n\n\ncluster_IrccDsAngularComponentsSharedModule\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_declarations\n\n\n\ncluster_IrccDsAngularComponentsSharedModule_exports\n\n\n\ncluster_IrccDsAngularFormComponentsModule\n\n\n\ncluster_IrccDsAngularFormComponentsModule_declarations\n\n\n\ncluster_IrccDsAngularFormComponentsModule_exports\n\n\n\ncluster_IrccDsAngularHeaderFooterModule\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_declarations\n\n\n\ncluster_IrccDsAngularHeaderFooterModule_exports\n\n\n\ncluster_IrccDsAngularLegacyOldModule\n\n\n\ncluster_IrccDsAngularLegacyOldModule_declarations\n\n\n\ncluster_IrccDsAngularLegacyOldModule_exports\n\n\n\n\nBannerComponent\n\nBannerComponent\n\n\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule\n\nIrccDsAngularBannerModule -->\n\nBannerComponent->IrccDsAngularBannerModule\n\n\n\n\n\nBannerComponent \n\nBannerComponent \n\nBannerComponent  -->\n\nIrccDsAngularBannerModule->BannerComponent \n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\n\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbLinkComponent\n\nBreadcrumbLinkComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nBreadcrumbLinkComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nDropdownComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutComponent\n\nFlyoutComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nFlyoutOptionComponent\n\nFlyoutOptionComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nFlyoutOptionComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconButtonComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIconComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nIndicatorComponent\n\nIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nLabelComponent\n\nLabelComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nLabelComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressIndicatorComponent\n\nProgressIndicatorComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressIndicatorComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nProgressTagsComponent\n\nProgressTagsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nProgressTagsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nSpinnerComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nIrccDsAngularComponentsSharedModule -->\n\nTabsComponent->IrccDsAngularComponentsSharedModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbComponent \n\n\n\n\n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent \n\nBreadcrumbLinkComponent  -->\n\nIrccDsAngularComponentsSharedModule->BreadcrumbLinkComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->ButtonComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nIrccDsAngularComponentsSharedModule->DropdownComponent \n\n\n\n\n\nFlyoutComponent \n\nFlyoutComponent \n\nFlyoutComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutComponent \n\n\n\n\n\nFlyoutOptionComponent \n\nFlyoutOptionComponent \n\nFlyoutOptionComponent  -->\n\nIrccDsAngularComponentsSharedModule->FlyoutOptionComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIrccDsAngularComponentsSharedModule->IconComponent \n\n\n\n\n\nIndicatorComponent \n\nIndicatorComponent \n\nIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->IndicatorComponent \n\n\n\n\n\nLabelComponent \n\nLabelComponent \n\nLabelComponent  -->\n\nIrccDsAngularComponentsSharedModule->LabelComponent \n\n\n\n\n\nProgressIndicatorComponent \n\nProgressIndicatorComponent \n\nProgressIndicatorComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressIndicatorComponent \n\n\n\n\n\nProgressTagsComponent \n\nProgressTagsComponent \n\nProgressTagsComponent  -->\n\nIrccDsAngularComponentsSharedModule->ProgressTagsComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nIrccDsAngularComponentsSharedModule->SpinnerComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nIrccDsAngularComponentsSharedModule->TabsComponent \n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule\n\nIrccDsAngularFormComponentsModule -->\n\nCheckboxComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nDatePickerComponent\n\nDatePickerComponent\n\nIrccDsAngularFormComponentsModule -->\n\nDatePickerComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nIrccDsAngularFormComponentsModule -->\n\nErrorComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nRadioInputComponent\n\nRadioInputComponent\n\nIrccDsAngularFormComponentsModule -->\n\nRadioInputComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nIrccDsAngularFormComponentsModule -->\n\nSelectComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\nIrccDsAngularFormComponentsModule -->\n\nTextareaComponent->IrccDsAngularFormComponentsModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nIrccDsAngularFormComponentsModule->CheckboxComponent \n\n\n\n\n\nDatePickerComponent \n\nDatePickerComponent \n\nDatePickerComponent  -->\n\nIrccDsAngularFormComponentsModule->DatePickerComponent \n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nIrccDsAngularFormComponentsModule->ErrorComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIrccDsAngularFormComponentsModule->InputComponent \n\n\n\n\n\nRadioInputComponent \n\nRadioInputComponent \n\nRadioInputComponent  -->\n\nIrccDsAngularFormComponentsModule->RadioInputComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nIrccDsAngularFormComponentsModule->SelectComponent \n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nIrccDsAngularFormComponentsModule->TextareaComponent \n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule\n\nIrccDsAngularHeaderFooterModule -->\n\nFooterComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHeaderComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nHiddenNavComponent\n\nHiddenNavComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nHiddenNavComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nIrccDsAngularHeaderFooterModule -->\n\nLanguageSwitchComponent->IrccDsAngularHeaderFooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nIrccDsAngularHeaderFooterModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nIrccDsAngularHeaderFooterModule->HeaderComponent \n\n\n\n\n\nHiddenNavComponent \n\nHiddenNavComponent \n\nHiddenNavComponent  -->\n\nIrccDsAngularHeaderFooterModule->HiddenNavComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nIrccDsAngularHeaderFooterModule->LanguageSwitchComponent \n\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule\n\nIrccDsAngularLegacyOldModule -->\n\nAutocompleteComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipItemComponent\n\nChipItemComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipItemComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nChipListComponent\n\nChipListComponent\n\nIrccDsAngularLegacyOldModule -->\n\nChipListComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSearchInputComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nSecondaryChipsComponent\n\nSecondaryChipsComponent\n\nIrccDsAngularLegacyOldModule -->\n\nSecondaryChipsComponent->IrccDsAngularLegacyOldModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nIrccDsAngularLegacyOldModule->AutocompleteComponent \n\n\n\n\n\nChipItemComponent \n\nChipItemComponent \n\nChipItemComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipItemComponent \n\n\n\n\n\nChipListComponent \n\nChipListComponent \n\nChipListComponent  -->\n\nIrccDsAngularLegacyOldModule->ChipListComponent \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nIrccDsAngularLegacyOldModule->SearchInputComponent \n\n\n\n\n\nSecondaryChipsComponent \n\nSecondaryChipsComponent \n\nSecondaryChipsComponent  -->\n\nIrccDsAngularLegacyOldModule->SecondaryChipsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    38 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules.html": {
      url: "modules.html",
      title: "modules - modules",
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        IrccDsAngularBannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularComponentsSharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularFormComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularHeaderFooterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IrccDsAngularLegacyOldModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "properties.html": {
      url: "properties.html",
      title: "package-properties - properties",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/variables.html": {
      url: "miscellaneous/variables.html",
      title: "miscellaneous-variables - variables",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CANADA_LOGO_ARIA_LABEL_ENGLISH   (component-library/.../header.component.ts)\n                        \n                        \n                            CANADA_LOGO_ARIA_LABEL_FRENCH   (component-library/.../header.component.ts)\n                        \n                        \n                            CLASS_TRASHCAN   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            CLASS_X_MARK   (component-library/.../icon-button.component.ts)\n                        \n                        \n                            DATE_PICKER_DAY_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_LABELS_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_LABELS_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTH_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTHS_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_MONTHS_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_DAY_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_DAY_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_MONTH_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_MONTH_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_YEAR_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_PLACEHOLDER_YEAR_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_UNKOWN_EN   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_UNKOWN_FR   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            DATE_PICKER_YEAR_CONTROL_ID_EXTENSION   (component-library/.../date-picker.component.ts)\n                        \n                        \n                            ENGLISH_BANNER_URL   (component-library/.../header.component.ts)\n                        \n                        \n                            ERROR_TEXT_STUB_EN   (component-library/.../label.component.ts)\n                        \n                        \n                            ERROR_TEXT_STUB_FR   (component-library/.../label.component.ts)\n                        \n                        \n                            FRENCH_BANNER_URL   (component-library/.../header.component.ts)\n                        \n                        \n                            GOV_LOGO_ALT_TEXT_EN   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ALT_TEXT_FR   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ARIA_LABEL_ENGLISH   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_ARIA_LABEL_FRENCH   (component-library/.../footer.component.ts)\n                        \n                        \n                            GOV_LOGO_FOOTER   (component-library/.../footer.component.ts)\n                        \n                        \n                            HEADER_IMG_LINK_EN   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_IMG_LINK_FR   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_LINK_ALT_FR   (component-library/.../header.component.ts)\n                        \n                        \n                            HEADER_LINK_ATL_EN   (component-library/.../header.component.ts)\n                        \n                        \n                            HELP_ICON_ALT_EN   (component-library/.../label.component.ts)\n                        \n                        \n                            HELP_ICON_ALT_FR   (component-library/.../label.component.ts)\n                        \n                        \n                            IrccDsAngularFormComponents   (component-library/.../ircc-ds-angular-form-components.module.ts)\n                        \n                        \n                            IrccDsHeaderFooterComponents   (component-library/.../ircc-ds-angular-header-footer.module.ts)\n                        \n                        \n                            IrccDsLegacyOldComponents   (component-library/.../ircc-ds-angular-legacy-old.module.ts)\n                        \n                        \n                            IrccDsSharedComponents   (component-library/.../ircc-ds-angular-component-shared.module.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_ENGLISH   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_FRENCH   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE   (component-library/.../language-switch.component.ts)\n                        \n                        \n                            PROGRESS_INDICATOR_STEP_EN   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            PROGRESS_INDICATOR_STEP_FR   (component-library/.../progress-indicator.component.ts)\n                        \n                        \n                            SPINNER_LABELS_EN   (component-library/.../spinner.component.ts)\n                        \n                        \n                            SPINNER_LABELS_FR   (component-library/.../spinner.component.ts)\n                        \n                        \n                            TAG_LABELS_EN   (component-library/.../progress-tags.component.ts)\n                        \n                        \n                            TAG_LABELS_FR   (component-library/.../progress-tags.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    component-library/component-lib/src/lib/header-footer/header/header.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CANADA_LOGO_ARIA_LABEL_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbol of the Government of Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CANADA_LOGO_ARIA_LABEL_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbole du gouvernement du Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENGLISH_BANNER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-en.svg'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FRENCH_BANNER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/sig-blk-fr.svg'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_IMG_LINK_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/en.html'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_IMG_LINK_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/fr.html'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_LINK_ALT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gouvernement du Canada logo'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HEADER_LINK_ATL_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Government of Canada logo'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/icon-button/icon-button.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CLASS_TRASHCAN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fa-solid fa-trash-can'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CLASS_X_MARK\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fa-thin fa-xmark'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/form-components/date-picker/date-picker.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_DAY_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_dayControl'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Day', 'Month', 'Year']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Jour', 'Mois', 'Année']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_monthControl'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTHS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_MONTHS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_DAY_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DD'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_DAY_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JJ'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_MONTH_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Month'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_MONTH_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mois'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_YEAR_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'YYYY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_PLACEHOLDER_YEAR_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AAAA'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_UNKOWN_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Unknown'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_UNKOWN_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Inconnu'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATE_PICKER_YEAR_CONTROL_ID_EXTENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_yearControl'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/label/label.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_TEXT_STUB_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Error'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_TEXT_STUB_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Erreur'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HELP_ICON_ALT_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ', more information'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HELP_ICON_ALT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \", plus d'information\"\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/footer/footer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ALT_TEXT_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Canada wordmark'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ALT_TEXT_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR Canada wordmark'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ARIA_LABEL_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbol of the Government of Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_ARIA_LABEL_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Symbole du gouvernement du Canada'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GOV_LOGO_FOOTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://www.canada.ca/etc/designs/canada/wet-boew/assets/wmms-blk.svg'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsAngularFormComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CheckboxComponent,\n  ErrorComponent,\n  InputComponent,\n  RadioInputComponent,\n  DatePickerComponent,\n  TextareaComponent,\n  SelectComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsHeaderFooterComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  HeaderComponent,\n  FooterComponent,\n  LanguageSwitchComponent,\n  HiddenNavComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsLegacyOldComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  AutocompleteComponent,\n  ChipListComponent,\n  SecondaryChipsComponent,\n  ChipItemComponent,\n  SearchInputComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IrccDsSharedComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ButtonComponent,\n  BreadcrumbComponent,\n  BreadcrumbLinkComponent,\n  IconComponent,\n  IconButtonComponent,\n  IndicatorComponent,\n  TabsComponent,\n  ProgressTagsComponent,\n  DropdownComponent,\n  LabelComponent,\n  ProgressTagsComponent,\n  ProgressIndicatorComponent,\n  SpinnerComponent,\n  FlyoutComponent,\n  FlyoutOptionComponent\n]\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/header-footer/language-switch/language-switch.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_ENGLISH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Français'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_FRENCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'English'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'EN'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PROGRESS_INDICATOR_STEP_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Step'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROGRESS_INDICATOR_STEP_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Étap'\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/spinner/spinner.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SPINNER_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Loading', 'Success', 'Error']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPINNER_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Chargement', 'Succès', 'Erreur']\n                    \n                \n\n\n        \n    \n\n    component-library/component-lib/src/lib/shared/progress-tags/progress-tags.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TAG_LABELS_EN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'In Progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TAG_LABELS_FR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
  },
};
