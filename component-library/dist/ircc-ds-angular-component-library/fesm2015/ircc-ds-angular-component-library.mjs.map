{"version":3,"file":"ircc-ds-angular-component-library.mjs","sources":["../../../component-lib/src/lib/ircc-ds-angular-component-library.service.ts","../../../component-lib/src/lib/ircc-ds-angular-component-library.component.ts","../../../component-lib/src/lib/jl-input/jl-input.component.ts","../../../component-lib/src/lib/jl-input/jl-input.component.html","../../../component-lib/src/lib/jl-chips/jl-chip-item/jl-chip-item.component.ts","../../../component-lib/src/lib/jl-chips/jl-chip-item/jl-chip-item.component.html","../../../component-lib/src/lib/jl-autocomplete/jl-autocomplete.component.ts","../../../component-lib/src/lib/jl-autocomplete/jl-autocomplete.component.html","../../../component-lib/src/lib/jl-banner/jl-banner.component.ts","../../../component-lib/src/lib/jl-banner/jl-banner.component.html","../../../component-lib/src/lib/jl-checkbox/jl-checkbox.component.ts","../../../component-lib/src/lib/jl-checkbox/jl-checkbox.component.html","../../../component-lib/src/lib/jl-chips/jl-chip-list/jl-chip-list.component.ts","../../../component-lib/src/lib/jl-chips/jl-chip-list/jl-chip-list.component.html","../../../component-lib/src/lib/jl-chips/jl-secondary-chips/jl-secondary-chips.component.ts","../../../component-lib/src/lib/jl-chips/jl-secondary-chips/jl-secondary-chips.component.html","../../../component-lib/src/shared/constants/jl-components/jl-components.constants/jl-components.constants.ts","../../../component-lib/src/lib/jl-dropdown/jl-dropdown.component.ts","../../../component-lib/src/lib/jl-dropdown/jl-dropdown.component.html","../../../component-lib/src/lib/radio-input/radio-input.component.ts","../../../component-lib/src/lib/radio-input/radio-input.component.html","../../../component-lib/src/lib/dropdown-input/dropdown-input.component.ts","../../../component-lib/src/lib/dropdown-input/dropdown-input.component.html","../../../component-lib/src/lib/date-picker/date-picker.component.ts","../../../component-lib/src/lib/date-picker/date-picker.component.html","../../../component-lib/src/lib/language-switch/language-switch-button.service.ts","../../../component-lib/src/lib/language-switch/language-switch.component.ts","../../../component-lib/src/lib/language-switch/language-switch.component.html","../../../component-lib/src/lib/header/header.component.ts","../../../component-lib/src/lib/header/header.component.html","../../../component-lib/src/lib/footer/footer.component.ts","../../../component-lib/src/lib/footer/footer.component.html","../../../component-lib/src/lib/icon/icon.component.ts","../../../component-lib/src/lib/icon/icon.component.html","../../../component-lib/src/lib/button/button.component.ts","../../../component-lib/src/lib/button/button.component.html","../../../component-lib/src/lib/icon-button/icon-button.component.ts","../../../component-lib/src/lib/icon-button/icon-button.component.html","../../../component-lib/src/lib/ircc-ds-angular-component-library.module.ts","../../../component-lib/src/public-api.ts","../../../component-lib/src/ircc-ds-angular-component-library.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IrccDsAngularComponentLibraryService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ircc-ds-angular-component-library',\n  template: `\n    <p>\n      ircc-ds-angular-component-library works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class IrccDsAngularComponentLibraryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {\n  Component,\n  forwardRef,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, ValidatorFn } from '@angular/forms';\n\nexport interface IJLInputComponentConfig {\n  label?: string;\n  hintText?: string;\n  placeholder?: string;\n  type?: InputTypes;\n  value?: string;\n  name?: string;\n  id: string;\n  formGroup: FormGroup;\n  autocomplete?: string;\n  large?: true;\n  error?: boolean;\n  empty?: boolean; //Default is TRUE\n  validators?: ValidatorFn[];\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password'\n}\n@Component({\n  selector: 'jl-pr-sclp-input',\n  templateUrl: './jl-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JLInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class JLInputComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: IJLInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  disabled = false;\n  focusState = false;\n  showPassword = false;\n  //Removed '!' and added null case in onChange\n  private onTouch?: () => void;\n  private onChange?: (value: any) => void;\n\n\n  ngOnInit() {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    this.config.formGroup.addControl(this.config.id, new FormControl('', this.config.validators));\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n    this.config.type === InputTypes.password ? (this.config.type = InputTypes.text) : (this.config.type = InputTypes.password);\n  }\n\n  public clearvalue() {\n    this.config.value = ``;\n  }\n\n  writeValue(value: string): void {\n    this.config.value = value;\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /**\n * Used to get the aria-pressed text for the show password button\n * @param fieldID id of the input field the text is for\n * @returns translated text\n */\n  //  getShowHideText(fieldID: string) {\n  //   let text = ''\n  //   if (fieldID === 'password') {\n  //     text = this.translate.instant('Password.accessibility.passwordMatch1');\n  //   } else {\n  //     this.translate.instant('Password.accessibility.passwordMatch2');\n  //   }\n  //   (this.passwordFieldType === InputType.password) ?\n  //     (text += (' ' + this.translate.instant('Password.accessibility.passHidden'))) :\n  //     (text += (' ' + this.translate.instant('Password.accessibility.passShown')));\n  //   return text;\n  // }\n}\n","<!-- TODO: Fix how large is handled here to work with DS rather than against it -->\n<div>\n  <form [formGroup]=\"config.formGroup\">\n    <p *ngIf=\"config.type === 'password' || showPassword\">TODO: This element does not actually have correct aria text on\n      it!</p>\n    <div class=\"input-container\" [ngClass]=\"{ large: config.large, error: config.error }\">\n      <div class=\"input-text\">\n        <label for=\"{{ (config.value || '') }}\">{{ (config.label || '') | translate }}</label>\n        <p *ngIf=\"config.hintText\" class=\"hint-text\">{{ config.hintText | translate }}</p>\n        <div class=\"input-content-area\" [ngClass]=\"focusState === true ? 'focus' : ''\">\n          <!-- ngModel doesn't mind undefined values, apparently\n        TODO: Should probably change the (keyup) to (onblur) -->\n          <input autocomplete=\"{{ config.autocomplete }}\" placeholder=\"{{ (config.placeholder || '') | translate }}\"\n            tabindex=\"0\" [ngClass]=\"(showPassword || config.type === 'password') ? 'password' : 'input'\"\n            [type]=\"config.type\" [id]=\"config.id\" [formControlName]=\"config.id\" />\n        </div>\n        <button *ngIf=\"config.type === 'password' || showPassword\" role=\"switch\" category=\"plain\" class=\"transparentButton\" (click)=\"hideShow()\" [disabled]=\"disabled\">\n          <i class=\"passwordIcon fa-solid\"\n            aria-pressed=\"getShowHideText('check')\"\n            [ngClass]=\"{'fa-eye': (!showPassword), 'fa-eye-slash': (showPassword)}\"></i>\n        </button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'jl-pr-sclp-jl-chip-item',\n  templateUrl: './jl-chip-item.component.html',\n  styleUrls: ['./jl-chip-item.component.scss']\n})\nexport class JlChipItemComponent {\n  @Input() chipContent?: string;\n  @Output() iconClickEvent = new EventEmitter();\n\n  constructor() {}\n\n  onIconClick() {\n    this.iconClickEvent.emit();\n  }\n\n  onEnterKeyPress() {\n    this.iconClickEvent.emit();\n  }\n}\n","<div class=\"chip-item\" tabindex=\"0\" (keydown.enter)=\"onEnterKeyPress()\">\n  <span class=\"chip-text\">{{ chipContent || '' }}</span>\n  <span class=\"icon-container\" (click)=\"onIconClick()\">\n    <i class=\"fa-solid fa-circle-xmark clickable-icon\"></i>\n  </span>\n</div>","/**\n * TODO: This particular component, while functional, is not ideal. Components should not import other components directly in the .ts\n * unless absolutely necessary. Furthermore, the use of DoCheck, while interesting, is not ideal, since it ignores the built-in\n * angular lifecycle hooks and change detection. \n */\n\nimport {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewChild\n} from '@angular/core';\n//TODO: This should be changed. Ideally the component doesn't need to know about these, and can just\n//add them in using the template.\nimport { JLInputComponent } from '../jl-input/jl-input.component';\nimport { JlChipItemComponent } from '../jl-chips/jl-chip-item/jl-chip-item.component';\n\ninterface IOption { //Changed: Interfaces should ALWAYS start with 'I'.\n  text: string;\n  value: string;\n}\n\n@Component({\n  selector: 'jl-pr-sclp-autocomplete',\n  templateUrl: './jl-autocomplete.component.html',\n  styleUrls: ['./jl-autocomplete.scss']\n})\nexport class JLAutocompleteComponent implements OnInit, DoCheck {\n  @ViewChild(JLInputComponent, { static: true })\n  inputComponent?: JLInputComponent;\n\n  //TODO: Change this to a config\n  @Input() options: IOption[] = [];\n  @Input() title = `Title`;\n  @Input() hintText = `Hint Text`;\n  @Input() name = `Add Name`;\n  @Input() error = false;\n  @Input() limit = 0;\n  @Output() selectValueChange = new EventEmitter();\n  @Input() savedSelectedOptions: IOption[] = [];\n\n  selectedOptions: IOption[] = [];\n  originalOptions: IOption[] = [];\n  inputValue?: string;\n  hideDropdown = true;\n  isFocusInsideComponent = false;\n  isComponentClicked = false;\n  addHover = false;\n  emptyResults = false;\n\n  differ: KeyValueDiffer<string, any>;\n  constructor(private differs: KeyValueDiffers) {\n    this.differ = this.differs.find({}).create();\n  }\n\n  @HostListener('window:keydown.escape', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (this.hideDropdown === false || this.options.length > 0) {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  clickInside(event: { target: HTMLInputElement }) {\n    const target = event.target;\n    if (\n      this.hideDropdown === true &&\n      target.type === `text` &&\n      this.options.length > 0\n    ) {\n      this.isFocusInsideComponent = true;\n      this.isComponentClicked = true;\n      this.toggleDropDown();\n      this.addHover = true;\n    } else if (\n      target.classList.contains('select-target') ||\n      target.classList.contains(`selected`)\n    ) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.toggleDropDown();\n    }\n  }\n\n  @HostListener('document:click')\n  clickout() {\n    if (!this.isFocusInsideComponent && this.isComponentClicked) {\n      this.toggleDropDown();\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n    }\n    this.isFocusInsideComponent = false;\n  }\n\n  onMouseEnter() {\n    this.addHover = false;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this);\n    if (change) {\n      change.forEachChangedItem((item) => {\n        if (item.key === `options`) {\n          this.selectValueChange.emit(this.selectedOptions);\n        }\n      });\n    }\n  }\n\n  valueChange(event: any) {\n    this.filterList(event);\n  }\n\n  filterList(filterValue: any) {\n    if (filterValue.length < 1) {\n      this.returnOptionsToDefault();\n    } else {\n      const filteredOptions = this.originalOptions.filter((value) => {\n        return value.text.toLowerCase().includes(filterValue.toLowerCase());\n      });\n      this.options = filteredOptions.slice(0);\n      if (this.options.length === 0) {\n        this.emptyResults = true;\n      } else {\n        this.emptyResults = false;\n      }\n    }\n  }\n\n  public checkActive(value: string): boolean {\n    for (const selectedOption of this.selectedOptions) {\n      if (selectedOption.value === value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  returnOptionsToDefault() {\n    this.emptyResults = false;\n    this.options = this.originalOptions.slice(0);\n  }\n\n  public toggleDropDown() {\n    this.hideDropdown = !this.hideDropdown;\n    this.inputComponent?.focusInput(this.hideDropdown);\n  }\n\n  public toggleDropDownKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.toggleDropDown();\n    }\n  }\n\n  removeChipItem(index: number) {\n    this.selectedOptions.splice(index, 1);\n    this.returnOptionsToDefault();\n  }\n\n  public removeAllChipItems() {\n    this.selectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n\n  public selectAll() {\n    for (const option of this.options) {\n      this.selectedOptions.push(option);\n    }\n    this.returnOptionsToDefault();\n  }\n\n  public selectIndex(index: number) {\n    if (this.limit !== 0 && this.selectedOptions.length >= this.limit) {\n      return;\n    } else {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      if (this.checkDuplicated(index) === false) {\n        this.selectedOptions.push(this.options[index]);\n      }\n    }\n  }\n\n  checkDuplicated(index: number) {\n    return this.selectedOptions.some((element: { value: string }) => {\n      if (element.value === this.options[index].value) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedOptions = [];\n    this.originalOptions = this.options.slice(0);\n    this.selectedOptions = this.savedSelectedOptions;\n    this.savedSelectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n}\n","<div class=\"autocomplete-container\" [ngClass]=\"{ error: error }\">\n  <div>\n    <!-- <jl-pr-sclp-input\n      [label]=\"title\"\n      [hintText]=\"hintText\"\n      [placeholder]=\"'+ ' + (name | translate)\"\n      [error]=\"error\"\n      (valueChange)=\"valueChange($event)\"\n    > -->\n      <jl-pr-sclp-jl-chip-item\n        *ngFor=\"let option of selectedOptions; let index = index\"\n        [chipContent]=\"option['text']\"\n        (iconClickEvent)=\"removeChipItem(index)\"\n      ></jl-pr-sclp-jl-chip-item\n    >\n  <!-- </jl-pr-sclp-input> -->\n  </div>\n\n  <div\n    class=\"autocomplete-options\"\n    [ngClass]=\"hideDropdown === false ? '' : 'hide'\"\n    (mouseenter)=\"onMouseEnter()\"\n  >\n    <div\n      *ngIf=\"limit === 0\" \n      class=\"option autocomplete-target all-results\"\n      (click)=\"selectAll()\"\n      [tabindex]=\"0\"\n      [ngClass]=\"emptyResults === false ? '' : 'hide-option'\"\n    >\n      <p class=\"select-target\">{{ 'AllOptionsForAutocomplete' | translate}} {{ title | translate }}s</p>\n    </div>\n    <div\n      class=\"option autocomplete-target\"\n      *ngFor=\"let option of options; let index = index; first as isFirst\"\n      (click)=\"selectIndex(index)\"\n      [tabindex]=\"index + 1\"\n      [ngClass]=\"checkActive(option['value']) ? 'active' : ''\"\n    >\n      <p class=\"select-target\">{{ option['text'] }}</p>\n    </div>\n    <div\n      class=\"option autocomplete-target\"\n      [ngClass]=\"emptyResults === false ? 'hide-option' : ''\"\n    >\n      <p>{{ 'NoResults' | translate }}</p>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'jl-pr-sclp-banner',\n  templateUrl: './jl-banner.component.html',\n  styleUrls: ['./jl-banner.scss']\n})\nexport class JLBannerComponent implements OnInit {\n  @Input() title = '';\n  @Input() body = '';\n  @Input() fixedLayout = false;\n  @Input() delay = 0;\n  @Input() hide = false;\n  @Input() type = '';\n  @Input() applications = '';\n\n  @Output() bannerEvent = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.delay > 0) {\n      // 10 second max and 3 second min\n      if (this.delay > 10000) {\n        this.delay = 10000;\n      } else if (this.delay < 1000) {\n        this.delay = 3000;\n      }\n      setTimeout(() => {\n        this.hide = true;\n        this.bannerEvent.emit(''); //This had to be changed to make it universal (for the library). Call service from parent\n      }, this.delay);\n    }\n  }\n}\n","<ng-container *ngIf=\"true; then notEmpty\"> </ng-container>\n\n<ng-template #notEmpty>\n    <div *ngIf=\"!hide\" class=\"banner-container\" [ngClass]=\"{'layout': fixedLayout, 'success': type === 'success', 'info': type === 'info', 'warning': type === 'warning', 'critical': type === 'critical'}\">\n        <div class=\"alert-line\">\n        </div>\n\n        <td *ngIf=\"type === 'info'\" class=\"information\">        \n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 21\" fill=\"none\">\n            <path d=\"M10 0.5C4.45312 0.5 0 4.99219 0 10.5C0 16.0469 4.45312 20.5 10 20.5C15.5078 20.5 20 16.0469 20 10.5C20 4.99219 15.5078 0.5 10 0.5ZM10 19.25C5.15625 19.25 1.25 15.3438 1.25 10.5C1.25 5.69531 5.15625 1.75 10 1.75C14.8047 1.75 18.75 5.69531 18.75 10.5C18.75 15.3438 14.8047 19.25 10 19.25ZM10 7.6875C10.5078 7.6875 10.9375 7.29688 10.9375 6.75C10.9375 6.24219 10.5078 5.8125 10 5.8125C9.45312 5.8125 9.0625 6.24219 9.0625 6.75C9.0625 7.29688 9.45312 7.6875 10 7.6875ZM11.875 14.25H10.625V9.875C10.625 9.5625 10.3125 9.25 10 9.25H8.75C8.39844 9.25 8.125 9.5625 8.125 9.875C8.125 10.2266 8.39844 10.5 8.75 10.5H9.375V14.25H8.125C7.77344 14.25 7.5 14.5625 7.5 14.875C7.5 15.2266 7.77344 15.5 8.125 15.5H11.875C12.1875 15.5 12.5 15.2266 12.5 14.875C12.5 14.5625 12.1875 14.25 11.875 14.25Z\" fill=\"#1F83A1\"/>\n            </svg>\n        </td>\n        <td *ngIf=\"type === 'warning'\" class=\"exclamation-triangle\"><i class=\"bi bi-exclamation-triangle\"></i></td>\n        <td *ngIf=\"type === 'critical'\" class=\"exclamation-circle\"><i class=\"bi bi-exclamation-circle\"></i></td>\n        <td *ngIf=\"type === 'success'\" class=\"checkmark\"><i class=\"bi bi-check-circle\"></i></td>\n        <div class=\"text\">\n            <div class=\"title\">{{ title | translate }}</div>\n            <div *ngIf=\"type === 'success'\" class=\"body\">{{ body | translate: { assignedApplications: applications } }}</div>\n            <div *ngIf=\"type !== 'success'\" class=\"body\">{{ body | translate }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, ValidatorFn, Validators } from '@angular/forms';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  error?: true;\n  small?: true; //DS Default is Large, hence this being changed for consistency \n  mixed?: true;\n  disableFocus?: boolean; //Default is true\n  checked?: boolean; //Controls the actual checked state of the component\n  label?: string;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  validators?: ValidatorFn[];\n  helpText?: string;\n  customErrorText?: string;\n}\n\n@Component({\n  selector: 'jl-pr-sclp-checkbox',\n  templateUrl: './jl-checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JLCheckboxComponent),\n      multi: true\n    }\n  ]\n\n})\nexport class JLCheckboxComponent implements ControlValueAccessor {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  checkboxIsChecked = false;\n  touched = false;\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  isDisabled = false;\n\n  onTouch = () => {};\n  onChange = () => {};\n\n  writeValue(checked: boolean): void {\n    this.config.checked = checked;\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled \n   */\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n    this.config.formGroup.addControl(this.config.id, new FormControl('', this.config.validators));\n  }\n\n}","<div class=\"checkbox-container\" [formGroup]=\"config.formGroup\">\n  <div class=\"checkbox-layout\" [ngClass]=\"{ error: config?.error }\">\n    <div class=\"checkbox\">\n      <input *ngIf=\"config.small\" id=\"{{config.id}}\" class=\"check\"\n        [ngClass]=\"{ mixed: config?.mixed, focus: !config.disableFocus}\" size=\"small\" type=\"checkbox\"\n        [checked]=\"config.checked\" [formControlName]=\"config.id\" />\n      <input *ngIf=\"(!config.small)\" id=\"{{config.id}}\" class=\"check\"\n        [ngClass]=\"{ mixed: config?.mixed, focus: !config.disableFocus}\" size=\"large\" type=\"checkbox\"\n        [checked]=\"config.checked\" [formControlName]=\"config.id\" />\n      <span class=\"checkmark\"></span>\n    </div>\n    <label class=\"label\" for=\"{{config.id}}\" [attr.aria-label]=\"\n    config.formGroup.get(config.id)?.invalid && config.formGroup.get(config.id)?.dirty\n      ? (config.label || '' | translate) + ' ' +\n        (config.helpText || '' | translate) + ' ' +\n        ('INPUT.ERROR' | translate) + ' ' +\n        (config.customErrorText || '' | translate) : \n        (config.label || '' | translate) + ' ' + (config.helpText || '' | translate)\n  \" [ngClass]=\"{'disabled-label': isDisabled }\">{{\n      config.label || '' }}</label>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'jl-pr-sclp-jl-chip-list',\n  templateUrl: './jl-chip-list.component.html',\n  styleUrls: ['./jl-chip-list.component.scss']\n})\nexport class JlChipListComponent implements OnInit {\n  @Input() chipList?: string[];\n  @Output() chipListChange = new EventEmitter<Array<string>>();\n  chipContentText?: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  removeChipItem(chipIdx: number) {\n    this.chipList?.splice(chipIdx, 1);\n    this.chipListChange.emit(this.chipList);\n  }\n\n  onSubmit() {\n    if (this.chipContentText) {\n      this.chipList?.push(this.chipContentText);\n      this.chipListChange.emit(this.chipList);\n      this.chipContentText = '';\n    }\n  }\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n  <jl-pr-sclp-input name=\"chipContentText\" [(ngModel)]=\"chipContentText\" placeholder=\"Add Chip\">\n  </jl-pr-sclp-input>\n</form>\n<div class=\"chip-list\">\n  <jl-pr-sclp-jl-chip-item *ngFor=\"let chip of chipList; let idx = index\" [chipContent]=\"chip\"\n    (iconClickEvent)=\"removeChipItem(idx)\"></jl-pr-sclp-jl-chip-item>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'jl-pr-sclp-jl-secondary-chips',\n  templateUrl: './jl-secondary-chips.component.html',\n  styleUrls: ['./jl-secondary-chips.component.scss']\n})\nexport class JlSecondaryChipsComponent implements OnInit {\n  @Input() chipContent?: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"secondary-chip\" tabindex=\"0\">\n    <span class=\"secondary-chip-text\">{{ chipContent || '' | translate }}</span>\n</div>","export enum DropdownTypes {\n    input = 'input',\n    cta = 'cta'\n}\n\nexport enum DropDownActions {\n    addApplications = 'add-applications',\n    filterApplications = 'filter-applications'\n}\n\nexport enum DSSizes {\n    large = 'large',\n    small = 'small'\n}","// TODO: Cannot enter dropdown menu with keyboard!!!\n\nimport {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  KeyValueDiffers,\n} from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\n\nimport { DropdownTypes } from '../../shared/constants/jl-components/jl-components.constants/jl-components.constants';\nimport { IComponentOutputEvent } from '../../shared/interfaces/component-configs';\n\nexport interface IJLDropdownComponentConfig {\n  type: DropdownTypes;\n  options: IJLDropdownOptions[];\n  text?: string;\n  large?: boolean; //TODO: This should be changed to 'small' like all the others\n  error?: boolean;\n  // empty?: boolean; //Default TRUE but doesn't do anything\n  selectedIndex?: number;\n  id: string;\n}\n\nexport interface IJLDropdownOptions {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'jl-pr-sclp-dropdown',\n  templateUrl: './jl-dropdown.component.html',\n  styleUrls: ['./jl-dropdown.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi:true,\n      useExisting: JLDropdownComponent\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: JLDropdownComponent\n    }\n  ]\n})\nexport class JLDropdownComponent implements OnInit, ControlValueAccessor, Validator {\n  // @Input() options: IJLDropdownOptions[] = [\n  //   {\n  //     text: `Text`,\n  //     value: `Value`\n  //   }\n  // ];\n\n  // @Input() type = DropdownTypes.input;\n  // @Input() text = ``;\n  // @Input() large = false;\n  // @Input() error = false;\n  // @Input() empty = true;\n  // @Input() selectedIndex = 0;\n\n  @Input() config?: IJLDropdownComponentConfig;\n\n  //Optionally, individual parameters can be used instead.\n  @Input() options?: IJLDropdownOptions[]\n  @Input() id?: string;\n  @Input() type?: DropdownTypes;\n  @Input() text?: string;\n  @Input() large?: true;\n  @Input() error?: true;\n  // @Input() empty?: true;\n  @Input() selectedIndex?: number;\n\n  hideDropdown = true;\n  isFocusInsideComponent = false;\n  isComponentClicked = false;\n  dropdownTypes = DropdownTypes;\n\n  touched = false;\n  isDisabled = false;\n\n  constructor(private differs: KeyValueDiffers) {\n  }\n  onChange = (value: string) => {};\n  onTouched = () => {};\n\n  validate(control: AbstractControl<any, any>): ValidationErrors | null {\n    return control.errors\n  }\n\n  writeValue(value: any) {\n    //TODO: This needs to be written to set the value and the current index number;\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n  setDisabledState?(isDisabled: boolean) {\n    // (this.config !== undefined) ? this.config.disabled = isDisabled : this.disabled = isDisabled;\n    this.isDisabled = isDisabled;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  @HostListener('window:keydown.escape', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (this.hideDropdown === false || (this.config?.options || []).length > 0) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  clickInside(event: { target: HTMLInputElement }) {\n    const target = event.target;\n\n    if (this.hideDropdown === true && target.classList.contains(`selected`)) {\n      this.isFocusInsideComponent = true;\n      this.isComponentClicked = true;\n      this.hideDropdown = false;\n    } else if (\n      target.classList.contains('select-target') ||\n      target.classList.contains(`selected`)\n    ) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('document:click')\n  clickout() {\n    if (!this.isFocusInsideComponent && this.isComponentClicked) {\n      this.toggleDropDown();\n\n      this.isComponentClicked = false;\n    }\n    this.isFocusInsideComponent = false;\n  }\n\n  public toggleDropDown() {\n    this.hideDropdown = !this.hideDropdown;\n  }\n\n  public toggleDropDownKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) { //TODO: Changed until const can be added.\n      // if (event.key === KeyboardEvents.enter) {\n      this.toggleDropDown();\n    }\n  }\n\n  /**\n   * TODO: I've band-aided this one so that it works. Can probably remove the entire\n   * custom DoCheck by just doing this.\n   * @param index \n   */\n  public selectIndex(index: number) {\n    if (this.config) {\n      let emit = false;\n      if (this.config.selectedIndex !== index) {\n        emit = true;\n      }\n      this.config.selectedIndex = index;\n      emit ? this.onChange(this.config?.options[(this.config?.selectedIndex || 0)].value || '') : '';\n      // emit ? this.valueChange.emit({ id: this.config?.id || '', value: this.config?.options[(this.config?.selectedIndex || 0)].value || '' }) : '';\n    }\n  }\n\n  getOptions(index: number) {\n    if (this.config) {\n      return this.config.options[index].text;\n    }\n    return '';\n  }\n\n  ngOnInit(): void { }\n}\n","<ng-container *ngIf=\"(config?.options || options || []).length > 0; then notEmpty; else isEmpty\">\n  <!-- an *ngIf may be better here, since there are only two cases -->\n</ng-container>\n<ng-template #notEmpty>\n  <div class=\"select-container\" [ngClass]=\"{ large: config?.large || large, error: config?.error || error }\">\n    <div\n      class=\"select\"\n      [ngClass]=\"!hideDropdown ? 'open' : ''\"\n      [class]=\"(config?.type || type || dropdownTypes.input)\"\n    >\n      <div\n        tabindex=\"0\"\n        class=\"selected input\"\n        (keyup)=\"toggleDropDownKey($event)\"\n        [ngClass]=\"!hideDropdown ? 'active' : ''\"\n        *ngIf=\"(config?.type === dropdownTypes.input) || (type === dropdownTypes.input)\"\n      >\n        {{ getOptions(config?.selectedIndex || selectedIndex || 0) | translate }}\n      </div>\n\n      <div\n        tabindex=\"0\"\n        class=\"selected cta\"\n        (keyup)=\"toggleDropDownKey($event)\"\n        [ngClass]=\"!hideDropdown ? 'active' : ''\"\n        *ngIf=\"(config?.type === dropdownTypes.cta) || (type === dropdownTypes.cta)\"\n      >\n        {{ (config?.text || text || '') | translate }}\n      </div>\n\n      <div\n        class=\"select-options\"\n        [ngClass]=\"!hideDropdown ? '' : 'hide'\"\n      >\n        <div\n          *ngFor=\"let option of config?.options || options; let index = index\" \n          class=\"option select-target\"\n          (click)=\"selectIndex(index)\"\n          [tabindex]=\"index + 1\"\n          [ngClass]=\"{ active: index === (config?.selectedIndex || selectedIndex || 0), hide: (config?.type === dropdownTypes.cta) || (type === dropdownTypes.cta) }\"\n        > \n        <!-- TODO: Check if the above line defaults to 0 if the selectedIndex is undefined, or if it also triggers if 0 -->\n          <p class=\"select-target\">{{ option.text | translate }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #isEmpty>\n  <div\n    class=\"select-container empty\"\n    [ngClass]=\"{ large: config?.large || large, error: config?.error || error }\"\n  >\n    <div class=\"select\">\n      <div tabindex=\"0\" class=\"selected\">&#160;</div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { DSSizes } from '../../shared/constants/jl-components/jl-components.constants/jl-components.constants';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: IRadioInputOption[];\n  small?: true; //Default is large in the DS, so this is to keep things consistent.\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  customErrorText?: string;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent implements OnInit, ControlValueAccessor {\n  formGroupEmpty = new FormGroup({});\n  size = DSSizes.large;\n  sizes = DSSizes;\n  touched = false;\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    if (this.config?.small) this.size = DSSizes.small;\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty) this.config.formGroup = this.formGroup;\n\n    this.config.formGroup.addControl(this.config.id, new FormControl('', this.config.validators));\n  }\n\n  /**\n   *\n   * @param override\n   * @returns\n   */\n  getSize(override: DSSizes | undefined) {\n    if (override) {\n      return override;\n    }\n    if (this.config?.small) {\n      return DSSizes.small;\n    }\n    return DSSizes.large;\n  }\n\n  /**\n   * used to disable individual fields (from the config under 'options')\n   * @param index of the option field to be disabled\n   * @returns null if value is undefined, empty string otherwise. This works with [attr.disabled].\n   */\n  getDisabled(index: number) {\n    if (this.config.options) {\n      if (this.config.options[index].disabled === undefined) {\n        return null;\n      }\n    }\n    return '';\n  }\n}\n","<form [formGroup]=\"config.formGroup\">\n    <label *ngIf=\"config.label\"\n       [attr.aria-label]=\"\n          config.formGroup.get(config.id)?.invalid && config.formGroup.get(config.id)?.dirty\n          ? (config.label || '' | translate) + ' ' +\n            (config.helpText || '' | translate) + ' ' + ('INPUT.ERROR' | translate) + ' ' +\n            (config.customErrorText || '' | translate)\n          : (config.label || '' | translate) + ' ' + (config?.helpText || '' | translate)\n       \"\n       [for]=\"config.id\">{{(config.label || '') | translate}}</label>\n    <div *ngFor=\"let option of config.options; let index = index\" class=\"radio\">\n        <ng-container [ngSwitch]=\"getSize(option.sizeOverride)\">\n            <ng-container *ngSwitchCase=\"sizes.small\">\n                <ng-container *ngIf=\"config.error || option.error\">\n                    <input type=\"radio\" value=\"{{option.value || option.text}}\"\n                         [id]=\"config.id + index\" size=\"small\" class=\"ng-invalid\"\n                         [formControlName]=\"config.id ?? 'formControl'\"\n                         [attr.disabled]='getDisabled(index)'>\n                </ng-container>\n                <ng-container *ngIf=\"!config.error && !option.error\">\n                    <input type=\"radio\" value=\"{{option.value || option.text}}\"\n                        [id]=\"config.id + index\" size=\"small\"\n                        [formControlName]=\"config.id ?? 'formControl'\"\n                        [attr.disabled]='getDisabled(index)'>\n                </ng-container>\n            </ng-container>\n\n            <!-- TODO: See if we can remove the error state from here, since it is controlled by the formControl -->\n            <ng-container *ngSwitchDefault>\n                <ng-container *ngIf=\"config.error || option.error\">\n                    <input type=\"radio\" value=\"{{option.value || option.text}}\"\n                        [id]=\"config.id + index\" size=\"large\" class=\"ng-invalid\"\n                        [formControlName]=\"config.id ?? 'formControl'\"\n                        [attr.disabled]='getDisabled(index)'>\n                </ng-container>\n                <ng-container *ngIf=\"!config.error && !option.error\">\n                    <input type=\"radio\" value=\"{{option.value || option.text}}\"\n                        [id]=\"config.id + index\" size=\"large\"\n                        [formControlName]=\"config.id ?? 'formControl'\"\n                        [attr.disabled]='getDisabled(index)'>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n\n        <label for=\"{{config.id}}\">{{option.text | translate}}</label>\n    </div>\n</form>\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport interface IDropdownInputConfig {\n  id: string;\n  formGroup: FormGroup;\n  small?: boolean;\n  label?: string;\n  options?: IDropdownInputOptionsConfig[]\n  category?: string;\n};\n\nexport interface IDropdownInputOptionsConfig {\n  text: string;\n  value?: string;\n};\n\n@Component({\n  selector: 'lib-dropdown-input',\n  templateUrl: './dropdown-input.component.html',\n  styleUrls: ['./dropdown-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DropdownInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class DropdownInputComponent implements OnInit, ControlValueAccessor {\n  touched = false;\n\n  @Input() config: IDropdownInputConfig = {\n    id: '',\n    formGroup: new FormGroup({}),\n    category: 'secondary'\n  }\n\n  onChange = (formValue: string) => { };\n  onTouched = () => { };\n  writeValue(formValue: any) {\n    // this.form.get('formControl')?.setValue(formValue);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <label *ngIf=\"config.label\" [for]=\"config.id\">{{config.label}}</label>\n    <form [formGroup]=\"config.formGroup\">\n        <div class=\"dropdown\">\n            <select class=\"custom-select\"\n             [name]=\"config.id\" [id]=\"config.id\" [formControlName]=\"config.id\">\n                <option *ngFor=\"let option of config.options\" [value]=\"option.value || option.text\">{{option.text}}\n                </option>\n            </select>\n        </div>\n    </form>\n</div>","import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n  @Input() title?: string;\n  @Input() dateForm: FormGroup = new FormGroup({});\n  @Input() id?: string;\n  days: number[] = [];\n  months: string[] = [];\n  years: number[] = [];\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    // Populate the months and years arrays\n    this.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    for (let i = 1900; i <= this.currentYear; i++) {\n      this.years.push(i);\n    }\n\n    // Set up a form control for the month and year\n    this.dateForm.addControl((this.id + '_monthControl'), new FormControl('', Validators.required));\n    this.dateForm.addControl((this.id + '_yearControl'), new FormControl('', Validators.required));\n    this.dateForm.addControl((this.id + '_dayControl'), new FormControl('', Validators.required));\n\n    // Populate the days array based on the selected month and year\n    this.dateForm.get((this.id + '_monthControl'))?.valueChanges.subscribe(month => {\n      //add if statement here - the value of year can be empty, since it may not have been selected yet.\n      const numDays = this.updateDaysArray(month, this.dateForm.get((this.id + '_yearControl'))?.value);\n      console.log(month, numDays);\n      console.log(this.dateForm.get((this.id + '_yearControl'))?.value);\n    });\n    this.dateForm.get((this.id + '_yearControl'))?.valueChanges.subscribe(year => {\n      const numDays = this.updateDaysArray(this.dateForm.get((this.id + '_monthControl'))?.value, year);\n    });\n    if (this.days.length === 0) {\n      for (let i = 1; i <= 31; i++) {\n        this.days.push(i);\n      }\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i <= numDays; i++) {\n      this.days.push(i);\n    }\n    this.dateForm.get((this.id + '_dayControl'))?.setValue('');\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected \n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum = this.getMonthNum(month);\n    if (monthNum === 2) {\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Switch function that grabs the month number based on the month name/lov\n   * @param month string representing the month\n   * @returns number representing the month (Jan = 1, etc.)/ or 0, if no match found.\n   */\n  private getMonthNum(month: string) {\n      switch (month) {\n        case 'January':\n          return 1;\n        case 'February':\n          return 2;\n        case 'March':\n          return 3;\n        case 'April':\n          return 4;\n        case 'May':\n          return 5;\n        case 'June':\n          return 6;\n        case 'July':\n          return 7;\n        case 'August':\n          return 8;\n        case 'September':\n          return 9;\n        case 'October':\n          return 10;\n        case 'November':\n          return 11;\n        case 'December':\n          return 12;\n        default:\n          return 0;\n    }   \n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.dateForm.setValue(obj, { emitEvent: false });\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.dateForm.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.dateForm.disable() : this.dateForm.enable();\n  }\n  private onTouched: () => void = () => { };\n}","<div class=\"date-title\" [attr.aria-label]=\"title\">{{ title }}</div>\n<div class=\"date-form\">\n    <form [formGroup]=\"dateForm\">\n        <div class=\"select-container\">\n            <div class=\"label-year\">Year YYYY</div>\n            <label for=\"year\" class=\"sr-only\">Year:</label>\n            <select id=\"year\" aria-label=\"Select a year\" [formControlName]=\"id + '_yearControl'\" class=\"date-input\">\n                <option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</option>\n            </select>\n        </div>\n        <div class=\"select-container\">\n            <div class=\"label-month\">Month MM</div>\n            <label for=\"month\" class=\"sr-only\">Month:</label>\n            <select id=\"month\" aria-label=\"Select a month\" [formControlName]=\"id + '_monthControl'\" class=\"date-input\">\n                <option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</option>\n            </select>\n        </div>\n        <div class=\"select-container\">\n            <div class=\"label-day\">Day DD</div>\n            <label for=\"day\" class=\"sr-only\">Day:</label>\n            <select id=\"day\" aria-label=\"Select a day\" [formControlName]=\"id + '_dayControl'\" class=\"date-input\">\n                <option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</option>\n            </select>\n        </div>\n    </form>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageSwitchButtonService {\n  private languageClickSub = new BehaviorSubject<any>('');\n  languageClickObs$ = this.languageClickSub.asObservable();\n\n  languageToggleClick() {\n    this.languageClickSub.next(true);\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Component, EventEmitter, HostListener, Inject, Input, OnInit, Output, PLATFORM_ID } from '@angular/core';\nimport { LanguageSwitchButtonService } from './language-switch-button.service';\n\n@Component({\n  selector: 'lib-language-switch',\n  templateUrl: './language-switch.component.html',\n  styleUrls: ['./language-switch.component.scss']\n})\nexport class LanguageSwitchComponent {\n\n  @Input() id = '';\n\n  isMobile = false;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private langToggle: LanguageSwitchButtonService) { }\n\n    /** Listens for screen resizes and sets mobile boolean */\n    @HostListener('window:resize', ['$event'])\n    handleResize(e: any) {\n      if (isPlatformBrowser(this.platformId)) {\n        this.isMobile = window.innerWidth <= 893;\n      }\n    }\n\n    switch() {\n      this.langToggle.languageToggleClick();\n    } \n}\n","<button category=\"plain\" [id]=\"id\"  attr.aria-label=\"{{'LANGUAGE_SELECTION_ARIA_LABEL' | translate}}\" (click)=\"switch()\" id=\"language-toggle\">{{ (!isMobile ? 'OPPOSITE_LANGUAGE' : 'OPPOSITE_LANGUAGE_MOBILE') | translate }}</button>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'lib-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n    @Input() id = '';\n}\n","<!-- <header class=\"heading\">\n    <div class=\"grid-container\">\n        <picture>\n            <source srcset=\"assets/images/canada_govt_logo_dark.svg\" media=\"(prefers-color-scheme: dark)\">\n            <img src=\"assets/images/canada_govt_logo_light.svg\">\n        </picture>\n        <div class=\"item2\"><ng-content></ng-content></div>\n    </div>\n    <hr class=\"headerLine\"/>\n</header> -->\n\n<header class=\"heading\">\n    <div class=\"grid-container\" [id]=\"id\">\n        <picture>\n            <!-- <source srcset=\"../../assets/images/goc-flag.png\" media=\"(prefers-color-scheme: dark)\"> -->\n            <img src=\"./assets/images/goc-flag.png\">\n        </picture>\n        <picture class=\"gocText\">\n          <source srcset=\"../../assets/images/goc-text.png\" media=\"(prefers-color-scheme: dark)\">\n          <img src=\"../../assets/images/goc-text.png\">\n        </picture>\n        <div class=\"item2\"><ng-content></ng-content></div>\n        <div class=\"languageSwitch\">\n            <lib-language-switch [id]=\"id + '_langToggle'\"></lib-language-switch>\n        </div>\n    </div>\n    <hr class=\"headerLine\"/>\n  </header>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'lib-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {}\n","<footer class=\"footing\">\n    <div class=\"grid-container\">\n        <div class=\"item1 body3\">\n            <ng-content></ng-content>\n        </div>\n        <picture class=\"item2\">\n            <source srcset=\"assets/canada_logo_dark.svg\" media=\"(prefers-color-scheme: dark)\">\n            <img src=\"assets/canada_logo_light.svg\">\n        </picture>\n    </div>\n</footer>","import { Component, Input } from '@angular/core';\n\nexport const FONT_FAMILIES = {\n    ['fa-solid']: null,\n    ['fa-thin']: null,\n    ['fa-light']: null,\n    ['fa-regular']: null,\n    ['fa-brands']: null,\n};\n\nexport interface IIconConfig {\n    ariaLabel?: string;\n    unicode: string;\n    fontFamily: keyof typeof FONT_FAMILIES;\n}\n\n@Component({\n    selector: 'lib-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent {\n    @Input() iconConfig!: IIconConfig;\n\n    public get formattedIcon(): string {\n        return \"'\" + '\\\\' + this.iconConfig.unicode + \"'\";\n    }\n\n    public get isHidden(): boolean {\n        return this.iconConfig.ariaLabel === '';\n    }\n}\n","<span\n    class=\"font-icon\"\n    [attr.aria-hidden]=\"isHidden\"\n    [attr.aria-label]=\"iconConfig.ariaLabel\"\n    [style.--font-unicode]=\"formattedIcon\"\n    [ngClass]=\"iconConfig.fontFamily\"\n></span>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum ButtonCategories {\n    primary = \"primary\",\n    secondary = \"secondary\",\n    plain = \"plain\"\n};\n\nexport enum ButtonSize {\n    small = \"small\",\n    large = \"large\"\n};\n\nexport enum ButtonColor {\n    critical = 'critical',\n    CTA = 'CTA'\n};\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n    left = 'left',\n    right = 'right'\n};\n\nexport interface IButtonConfig {\n    id: string;\n    category?: ButtonCategories;\n    size?: ButtonSize;\n    color?: ButtonColor;\n    ariaLabel?: string;\n    disabled?: boolean;\n    icon?: string;\n    iconDirection?: ButtonIconDirection;\n};\n\n@Component({\n    selector: 'lib-button',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n@Input() config: IButtonConfig = {\n    id: '',\n    iconDirection: ButtonIconDirection.left\n\n};\n    @Input() id = '';\n    @Input() category?: ButtonCategories;\n    @Input() size?: ButtonSize;\n    @Input() color?: ButtonColor;\n    // @Input() type?: 'button' | 'submit' | 'reset';\n    @Input() ariaLabel?: string;\n    @Input() disabled?: boolean;\n    @Input() icon?: string;\n    @Input() iconDirection?: ButtonIconDirection;\n\n    @Output() click: EventEmitter<any> = new EventEmitter();\n\n    ngOnInit() {\n        (this.id !== '') ? this.config.id = this.id : undefined;\n        (this.category === undefined) ? undefined : this.config.category = this.category;\n        (this.size === undefined) ? undefined : this.config.size = this.size;\n        (this.color === undefined) ? undefined : this.config.color = this.color;\n        (this.ariaLabel !== undefined) ? this.config.ariaLabel = this.ariaLabel : undefined;\n        (this.disabled !== undefined) ? this.config.disabled = this.disabled : undefined;\n        (this.icon !== undefined) ? this.config.icon = this.icon : undefined;\n        (this.iconDirection !== undefined) ? this.config.iconDirection = this.iconDirection : undefined;\n    }\n\n    buttonClick(id: string) {\n        this.click.emit(id);\n    }\n}\n","<button\n    [attr.aria-label]=\"config.ariaLabel\"\n    [attr.color]=\"config.color\"\n    [attr.category]=\"config.category\"\n    [attr.size]=\"config.size\"\n    [disabled]=\"config.disabled\"\n    [ngClass]=\"config.iconDirection === 'right' ? 'icon-right' : ''\"\n    (click)=\"buttonClick(config.id)\"\n>\n<div class=\"icon\">\n    <lib-icon *ngIf=\"icon != ''\" [class]=\"icon\"></lib-icon>\n</div>\n    <ng-content></ng-content>\n</button>\n","import { Component, OnInit } from '@angular/core';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n@Component({\n  selector: 'lib-icon-button',\n  templateUrl: './icon-button.component.html',\n})\nexport class IconButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>icon-button works!</p>\n<lib-icon></lib-icon>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IrccDsAngularComponentLibraryComponent } from './ircc-ds-angular-component-library.component';\nimport { JLAutocompleteComponent } from './jl-autocomplete/jl-autocomplete.component';\nimport { JLBannerComponent } from './jl-banner/jl-banner.component';\nimport { JLCheckboxComponent } from './jl-checkbox/jl-checkbox.component';\nimport { JlChipItemComponent } from './jl-chips/jl-chip-item/jl-chip-item.component';\nimport { JlChipListComponent } from './jl-chips/jl-chip-list/jl-chip-list.component';\nimport { JlSecondaryChipsComponent } from './jl-chips/jl-secondary-chips/jl-secondary-chips.component';\nimport { JLDropdownComponent } from './jl-dropdown/jl-dropdown.component';\nimport { JLInputComponent } from './jl-input/jl-input.component';\nimport { RadioInputComponent } from './radio-input/radio-input.component';\nimport { DropdownInputComponent } from './dropdown-input/dropdown-input.component';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ButtonComponent } from './button/button.component';\nimport { IconComponent } from './icon/icon.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { LanguageSwitchComponent } from './language-switch/language-switch.component';\n\n\n\n@NgModule({\n  declarations: [\n    IrccDsAngularComponentLibraryComponent,\n    JLCheckboxComponent,\n    JLDropdownComponent,\n    JlChipItemComponent,\n    JlChipListComponent,\n    JlSecondaryChipsComponent,\n    JLInputComponent,\n    JLAutocompleteComponent,\n    JLBannerComponent,\n    RadioInputComponent,\n    DropdownInputComponent,\n    DatePickerComponent,\n    HeaderComponent,\n    FooterComponent,\n    ButtonComponent,\n    IconComponent,\n    IconButtonComponent,\n    LanguageSwitchComponent,\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    IrccDsAngularComponentLibraryComponent,\n    JLCheckboxComponent,\n    JLDropdownComponent,\n    JlChipItemComponent,\n    JlChipListComponent,\n    JlSecondaryChipsComponent,\n    JLInputComponent,\n    JLAutocompleteComponent,\n    JLBannerComponent,\n    RadioInputComponent,\n    DropdownInputComponent,\n    DatePickerComponent,\n    HeaderComponent,\n    FooterComponent,\n    ButtonComponent,\n    IconComponent,\n    IconButtonComponent,\n    LanguageSwitchComponent,\n  ]\n})\nexport class IrccDsAngularComponentLibraryModule { }\n","/*\n * Public API Surface of ircc-ds-angular-component-library\n */\n\nexport * from './lib/ircc-ds-angular-component-library.service';\nexport * from './lib/ircc-ds-angular-component-library.component';\nexport * from './lib/ircc-ds-angular-component-library.module';\n\nexport * from './lib/jl-checkbox/jl-checkbox.component';\nexport * from './lib/jl-dropdown/jl-dropdown.component';\nexport * from './lib/jl-chips/jl-chip-item/jl-chip-item.component';\nexport * from './lib/jl-chips/jl-chip-list/jl-chip-list.component';\nexport * from './lib/jl-chips/jl-secondary-chips/jl-secondary-chips.component';\nexport * from './lib/jl-input/jl-input.component';\nexport * from './lib/jl-autocomplete/jl-autocomplete.component';\nexport * from './lib/jl-banner/jl-banner.component';\nexport * from './lib/radio-input/radio-input.component';\nexport * from './lib/dropdown-input/dropdown-input.component';\nexport * from './lib/date-picker/date-picker.component';\nexport * from './lib/button/button.component';\nexport * from './lib/icon/icon.component';\n\nexport * from './lib/header/header.component';\nexport * from './lib/footer/footer.component';\nexport * from './lib/icon-button/icon-button.component';\nexport * from './lib/language-switch/language-switch.component';\nexport * from './lib/language-switch/language-switch-button.service';\n\n\nexport * from './shared/interfaces/component-configs';\nexport * from './shared/constants/jl-components/jl-components.constants/jl-components.constants'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.JlChipItemComponent","i2","i3.JlChipItemComponent","i4.JLInputComponent","i1","i1.LanguageSwitchButtonService","i1.LanguageSwitchComponent","i2.IconComponent","i1.IconComponent"],"mappings":"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"}