{
	"Home": {
		"Title": "Home",
		"DateModified": "Date Modified"
	},
	"ROUTES": {
		"overview": "overview",
		"forDesigners": "designers",
		"forDevelopers": "developers",
		"utilities": "utilities",
		"buttons": "buttons",
		"contact": "contact",
		"codeview": "codeview",
		"mahsa": "mahsa-en",
		"michael": "michael-en",
		"naseer": "naseer-en",
		"mike": "mike-en",
		"bobby": "bobby-en",
		"AccessibilityDemo": "accessibility-demo",
		"AccessibilityDemoNext": "accessibility-demo-next",
		"AccessibilityDemoPrevious": "accessibility-demo-previous",
		"QATesting": "qa"
	},
	"Link": {
		"Overview": "Overview",
		"Mahsa": "Mahsa",
		"Michael": "Michael",
		"Mike": "Mike",
		"Naseer": "Naseer",
		"Bobby": "Bobby",
		"AccessibilityDemo": "Accessibility Demo",
		"BannerDocumentation": "Banner Documentation",
		"Codeview": "Codeview",
		"ButtonDocumentation": "Button Documentation",
		"InputDocumentation": "Input Documentation",
		"DatePickerDocumentation": "Date Picker Documentation",
		"IconButtonDocumentation": "Icon Button Documentation"
	},
	"Buttons": {
		"Title": "Buttons",
		"Intro": "Buttons trigger an action or navigate to another page. They have multiple styles and configurations for various needs. They call attention to actions the user should take to progress through a flow.",
		"IntroAlert": "This UI element is currently available in our styles package only. The component version is coming soon.",
		"PrimaryHeading": "Primary",
		"PrimaryBtnText": "Primary button",
		"PrimaryText": "Primary buttons are used to highlight the most important actions in any experience. Avoid using more than one primary button in a section or screen whenever possible.",
		"SecondaryHeading": "Secondary",
		"SecondaryIBtnText": "Secondary button",
		"SecondaryText": "Secondary buttons are used most often and are used when less visual attention is required on an action. They can also be used alongside a primary action if there are two options to present to the user that require a different hierarchy.",
		"CriticalBtnText": "Critical button",
		"CriticalText": "Critical buttons are used for destructive actions like deleting user-contributed content.",
		"PlainHeading": "Plain",
		"PlainBtnText": "Plain button",
		"PlainBtnTexts": "Plain buttons",
		"PlainText": "Plain buttons can be used for actions that require less attention than a primary or secondary button. They are also useful in situations where the UI is more compact. They are not to be used as links. Use the link text styles for those scenarios.",
		"PlainCritBtnText": "Plain critical button",
		"ConfigLayoutFluid": "Fluid",
		"ConfigLayoutFixed": "Fixed",
		"ConfigIconHeading": "Icon",
		"ConfigIconNone": "None",
		"ConfigIconLeading": "Leading",
		"ConfigIconTrailing": "Trailing",
		"HierarchyHeading": "Hierarchy",
		"HierarchyDoImgAlt": "A UI using multiple button types. There is a primary button, a secondary button and a plain button to create visual hierarchy.",
		"HierarchyDontText": "Use multiple primary buttons in a single page or section. ",
		"HierarchyDontImgAlt": "A UI using multiple primary buttons which makes it unclear to the user which action is most important.",
		"DestructiveHeading": "Destructive actions",
		"DestructiveDoText": "Use the critical button or plain critical button for destructive actions.",
		"DestructiveDoImgAlt": "A modal window with two options – “Cancel” and “Delete”. The delete button uses the red critical styling.",
		"DestructiveDontText": "Use other button types for destructive actions.",
		"DestructiveDontImgAlt": "A modal window with two options – “Cancel” and “Delete”. The delete button uses the dark blue primary styling which is incorrect.",
		"PlainDoText": "Use plain buttons for allowing the user to perform an action or navigate in app.",
		"PlainDoImgAlt": "A form UI with plain buttons used to navigate between steps in the form.",
		"PlainDontText": "Use plain buttons to link the user to other pages or websites. Links should be used in this case.",
		"PlainDontImgAlt": "A help center listed as a resource with a plain button used to link the user out to the help center website.",
		"SpacingGroupsHeading": "Spacing for button groups",
		"SpacingGroupsText": "A button group is a set of buttons that have a contextual relationship. To create consistency with how these actions are visually related, consistent spacing rules should be followed. Large button groups should have 16 pixels between buttons and small button groups should have 12 pixels between buttons.",
		"SpacingGroupsImgAlt": "Specs displaying the correct spacing between buttons. Spacing is described in the paragraph below.",
		"MinMaxWidthImgAlt": "Specs displaying the minimum and maximum widths of the button component. Widths are described in the paragraph below.",
		"MinMaxWidthText": "Large buttons have a maximum width of 400 pixels and a minimum width of 64 pixels. Small buttons have a maximum width of 400 pixels and a minimum width of 52 pixels.",
		"AnatomyImgAlt": "The parts that makeup the button component. The parts are described in the content below.",
		"AnatomyBGHeading": "Background",
		"AnatomyBGText": "The background fill behind the button label and icon. The corner radius for both large and small button sizes is 4 pixels.",
		"AnatomyIconText": "Icons are used to support the button label content. They are optional and can be either shown or hidden by using the icon configurations.",
		"AnatomyLblText": "The label provides context to the user about what action the button will perform.",
		"SpecsImgAlt": "Specs displaying the padding and layer measurements within the button component. Specs are described in the paragraph below.",
		"SpecsText": "The small button with fluid layout has 8 pixels of vertical padding and 16 pixels of horizontal padding inside the button. The icon has a 20 pixel width and height. There is 8 pixels between the icon and label. The label width is dynamic based on number of characters. The large button with fluid layout has 12 pixels of vertical padding and 20 pixels of horizontal padding inside the button. The icon has a 24 pixel width and height. There is 8 pixels between the icon and label. The label width is dynamic based on number of characters. The small button with fixed layout has 8 pixels of vertical padding and fluid horizontal padding based on the fixed width of the button. The icon has a 20 pixel width and height. There is 8 pixels between the icon and label. The label width is dynamic based on number of characters. The large button with fixed layout has 12 pixels of vertical padding and fluid horizontal padding based on the fixed width of the button. The icon has a 24 pixel width and height. There is 8 pixels between the icon and label. The label width is dynamic based on number of characters.",
		"CaseHeading": "Label capitalization",
		"CaseDoImgAlt": "A button that has the label “Save changes” written in sentence case.",
		"CaseDoText": "Write button labels in sentence case",
		"CaseDontImgAlt": "A button that has the label “Save changes” written in title case.",
		"CaseDontText": "Write button labels in title case",
		"DescriptiveHeading": "Task-focused labels",
		"DescriptiveDoImgAlt": "A button that has the label “View my documents”.",
		"DescriptiveDoText": "Write button labels to match the action the button will perform",
		"DescriptiveDontText": "Write button labels that are static and don't describe an action.",
		"DescriptiveDontImgAlt": "A button that has the label “Documents”.",
		"FigmaDirectionsListItem1": "From the “Assets” panel, drag in the <strong>“button”</strong> component from the Components library.",
		"FigmaDirectionsListItem4": "If an icon is used, designers can <a class='link' target='_blank' href='https://www.loom.com/share/b0d137f991034f08b504c93278384c2f'>change the Font Awesome keyword</a> to update the icon in the button to any Font Awesome icon.",
		"FigmaDirectionsImgAlt": "A screenshot of the design panel from Figma. The design panel displays the configuration options designers can choose from when customizing a button.",
		"AccessibilityColourText": "Primary buttons have a colour contrast ratio of 8.88:1 and passes AAA accessibility standards under WCAG 2.1.",
		"AccessibilityKeyboardText": "Buttons are developed using the native HTML button element to ensure interactive elements are keyboard accessible and pass WCAG 2.1 AA conformity."
	},
	"CodeView": {
		"B": "B",
		"C": "C"
	},
	"Utilities": {
		"sub-titles": {
			"pixels": "pixels"
		},
		"content": {
			"figma-usage": "Use {{px}} pixels of spacing",
			"bp-figma-usage": "Set frame width to {{px}} pixels"
		},
		"Heading": "Utilities",
		"Text": "Utilities are re-usable tokens, variables, etc. that are applied consistently to elements and components throughout the entire design system. This creates consistency in how the design system’s foundations are applied and allows efficient and reliable design iterations to be made globally.",
		"TypographyText": "The type scale keeps the number of styles to a minimum and is designed to ensure an affective visual hierarchy of content globally. Text styles include point sizes, line heights and paragraph spacing that pass AAA accessibility standards under WCAG 2.1.",
		"SpacingText": "Spacing units to apply as padding or margins throughout the UI. Spacing options are limited to help create consistency across spacing decisions. All spacing units are a multiple of four to adhere to a four pixel grid.",
		"SpacingTableSampleHeading": "Sample",
		"SpacingTableVariableHeading": "Variable name",
		"SpacingTableValueHeading": "Value",
		"SpacingTableFigmaHeading": "Figma usage",
		"BreakpointsHeading": "Breakpoints",
		"BreakpointsText": "Setting breakpoints allows content and design to adapt in order to provide the best possible layout for the viewport or device. Use these common breakpoint widths for layout consistency. Design system consumers can add additional breakpoints as needed.",
		"BreakpointsTableWidthHeading": "Width",
		"ColourText": "Designers have a variety of colours to choose from to ensure clear communication, indicate UI functionality, and provide colour contrast that complies with accessibility standards. The colour system is designed to define meaning for each colour, allow for global colour changes, and ensure every colour used comes from the system.",
		"SpacingHeading": "Spacing",
		"ColourTableTokenHeading": "Token name",
		"ColourTableColourHeading": "Colour role, hue & hex value",
		"ColourTableFigmaHeading": "Figma colour style",
		"ColourTableDescriptionRow1": "Background of the primary button.",
		"ColourTableDescriptionRow2": "Background of the primary button while in the hover state.",
		"ColourTableDescriptionRow3": "Background of the primary button while in the active state.",
		"ColourTableDescriptionRow4": "Background of the primary button while in the disabled state.",
		"ColourTableDescriptionRow5": "Text and icon within the primary button.",
		"ColourTableDescriptionRow6": "Text and icon within the disabled state of the primary button.",
		"ColourTableDescriptionRow7": "Background of the primary button using the Critical colour role.",
		"ColourTableDescriptionRow8": "Background of the primary button using the Critical colour role while in the hover state.",
		"ColourTableDescriptionRow9": "Background of the primary button using the Critical colour role while in the active state.",
		"ColourTableDescriptionRow10": "Background of the primary button using the Critical colour role while in the disabled state.",
		"ColourTableDescriptionRow11": "Text and icon within the primary button using the Critical colour role.",
		"ColourTableDescriptionRow12": "Text and icon within the disabled state of the primary button using the Critical colour role.",
		"ColourTableDescriptionRow13": "Border of the secondary button.",
		"ColourTableDescriptionRow14": "Border of the secondary button while in the hover state.",
		"ColourTableDescriptionRow15": "Border of the secondary button while in the active state.",
		"ColourTableDescriptionRow16": "Border of the secondary button while in the disabled state.",
		"ColourTableDescriptionRow17": "Text and icon within the secondary button.",
		"ColourTableDescriptionRow18": "Text and icon within the disabled state of the secondary button.",
		"ColourTableDescriptionRow19": "Border of the secondary button using the Critical colour role.",
		"ColourTableDescriptionRow20": "Border of the secondary button using the Critical colour role while in the hover state.",
		"ColourTableDescriptionRow21": "Border of the secondary button using the Critical colour role while in the active state.",
		"ColourTableDescriptionRow22": "Border of the secondary button using the Critical colour role while in the disabled state.",
		"ColourTableDescriptionRow23": "Text and icon within the secondary button using the Critical colour role.",
		"ColourTableDescriptionRow24": "Text and icon within the disabled state of the secondary button using the Critical colour role.",
		"ColourTableDescriptionRow25": "Text colour of links in the default state.",
		"ColourTableDescriptionRow26": "Text colour of links in the hover state.",
		"ColourTableDescriptionRow27": "Text colour of links in the active state.",
		"ColourTableDescriptionRow28": "Text colour of links after they have been visited.",
		"ColourTableDescriptionRow29": "Background of alert banners with the warning sentiment.",
		"ColourTableDescriptionRow30": "Border of alert banners with the warning sentiment.",
		"ColourTableDescriptionRow31": "Icon in alert banners with the warning sentiment.",
		"ColourTableDescriptionRow32": "Background of alert banners with the critical sentiment.",
		"ColourTableDescriptionRow33": "Border of alert banners with the critical sentiment.",
		"ColourTableDescriptionRow34": "Icon in alert banners with the critical sentiment.",
		"ColourTableDescriptionRow35": "Background of alert banners with the success sentiment.",
		"ColourTableDescriptionRow36": "Border of alert banners with the success sentiment.",
		"ColourTableDescriptionRow37": "Icon in alert banners with the success sentiment.",
		"ColourTableDescriptionRow38": "Background of alert banners with the information sentiment.",
		"ColourTableDescriptionRow39": "Border of alert banners with the information sentiment.",
		"ColourTableDescriptionRow40": "Icon in alert banners with the information sentiment.",
		"ColourTableDescriptionRow41": "Background of selected form elements while displaying an error.",
		"ColourTableDescriptionRow42": "Background of selected form elements while displaying an error and in the hover state.",
		"ColourTableDescriptionRow43": "Background of selected form elements while displaying an error and in the active state.",
		"ColourTableDescriptionRow44": "Background of selected form elements while displaying an error and in the disabled state.",
		"ColourTableDescriptionRow45": "Background of unselected form elements while displaying an error.",
		"ColourTableDescriptionRow46": "Background of unselected form elements while displaying an error and in the hover state.",
		"ColourTableDescriptionRow47": "Background of unselected form elements while displaying an error and in the active state.",
		"ColourTableDescriptionRow48": "Background of unselected form elements while displaying an error and in the disabled state.",
		"ColourTableDescriptionRow49": "Border of unselected form elements while displaying an error.",
		"ColourTableDescriptionRow50": "Border of unselected form elements while displaying an error and in a hover state.",
		"ColourTableDescriptionRow51": "Border of unselected form elements while displaying an error and in a disabled state.",
		"ColourTableDescriptionRow52": "Text used for error messages.",
		"ColourTableDescriptionRow53": "Background of selected form elements while displaying success.",
		"ColourTableDescriptionRow54": "Background of selected form elements while displaying success and in the hover state.",
		"ColourTableDescriptionRow55": "Background of selected form elements while displaying success and in the active state.",
		"ColourTableDescriptionRow56": "Background of selected form elements while displaying success and in the disabled state.",
		"ColourTableDescriptionRow57": "Background of unselected form elements while displaying success.",
		"ColourTableDescriptionRow58": "Background of unselected form elements while displaying success and in the hover state.",
		"ColourTableDescriptionRow59": "Background of unselected form elements while displaying success and in the active state.",
		"ColourTableDescriptionRow60": "Background of unselected form elements while displaying success and in the disabled state.",
		"ColourTableDescriptionRow61": "Border of unselected form elements while displaying success.",
		"ColourTableDescriptionRow62": "Border of unselected form elements while displaying success and in a hover state.",
		"ColourTableDescriptionRow63": "Border of unselected form elements while displaying success and in a disabled state.",
		"ColourTableDescriptionRow64": "Text used for success messages.",
		"ColourTableDescriptionRow65": "Background of selected form elements while displaying warning.",
		"ColourTableDescriptionRow66": "Background of selected form elements while displaying warning and in the hover state.",
		"ColourTableDescriptionRow67": "Background of selected form elements while displaying warning and in the active state.",
		"ColourTableDescriptionRow68": "Background of selected form elements while displaying warning and in the disabled state.",
		"ColourTableDescriptionRow69": "Background of unselected form elements while displaying warning.",
		"ColourTableDescriptionRow70": "Background of unselected form elements while displaying warning and in the hover state.",
		"ColourTableDescriptionRow71": "Background of unselected form elements while displaying warning and in the active state.",
		"ColourTableDescriptionRow72": "Background of unselected form elements while displaying warning and in the disabled state.",
		"ColourTableDescriptionRow73": "Border of unselected form elements while displaying warning.",
		"ColourTableDescriptionRow74": "Border of unselected form elements while displaying warning and in a hover state.",
		"ColourTableDescriptionRow75": "Border of unselected form elements while displaying warning and in a disabled state.",
		"ColourTableDescriptionRow76": "Text used for warning messages.",
		"ColourTableDescriptionRow77": "Background of selected form elements while displaying information.",
		"ColourTableDescriptionRow78": "Background of selected form elements while displaying information and in the hover state.",
		"ColourTableDescriptionRow79": "Background of selected form elements while displaying information and in the active state.",
		"ColourTableDescriptionRow80": "Background of selected form elements while displaying information and in the disabled state.",
		"ColourTableDescriptionRow81": "Background of unselected form elements while displaying information.",
		"ColourTableDescriptionRow82": "Background of unselected form elements while displaying information and in the hover state.",
		"ColourTableDescriptionRow83": "Background of unselected form elements while displaying information and in the active state.",
		"ColourTableDescriptionRow84": "Background of unselected form elements while displaying information and in the disabled state.",
		"ColourTableDescriptionRow85": "Border of unselected form elements while displaying information.",
		"ColourTableDescriptionRow86": "Border of unselected form elements while displaying information and in a hover state.",
		"ColourTableDescriptionRow87": "Border of unselected form elements while displaying information and in a disabled state.",
		"ColourTableDescriptionRow88": "Text used for information messages.",
		"ColourTableDescriptionRow89": "Main background of the page.",
		"ColourTableDescriptionRow90": "Can be used for side panels, mastheads, footers if using a different colour than the main bg is desired.",
		"ColourTableDescriptionRow91": "Used for surfaces that temporarily overlay on the main product – flyout menus, modal windows, dropdown menus, etc.",
		"ColourTableDescriptionRow92": "Background fill on interactive elements that have no fill when in the hover state.",
		"ColourTableDescriptionRow93": "Background fill on interactive elements that have no fill when in the active state.",
		"ColourTableDescriptionRow94": "Generic, accessible border outline. Can be used to outline input fields, tables, etc.",
		"ColourTableDescriptionRow95": "Generic, accessible border outline in the hover state. Can be used to outline input fields, etc.",
		"ColourTableDescriptionRow96": "Generic, accessible border outline in the disabled state. Can be used to outline input fields, etc.",
		"ColourTableDescriptionRow97": "Used for divider lines to separate content, page architecture, table cells, etc.",
		"ColourTableDescriptionRow98": "Transparent background used to create separation between a screen and a popup or modal window.",
		"ColourTableDescriptionRow99": "Used for selected indicators on navigation items.",
		"ColourTableDescriptionRow100": "Used for selected indicators on navigation items that are in a hover state.",
		"ColourTableDescriptionRow101": "Used for selected backgrounds on navigation items.",
		"ColourTableDescriptionRow102": "Used for selected backgrounds on navigation items that are in a hover state.",
		"ColourTableDescriptionRow103": "Used to indicate selected form controls.",
		"ColourTableDescriptionRow104": "Used to indicate selected form controls that are in a hover state.",
		"ColourTableDescriptionRow105": "Used for selected indicators on navigation items that are in a disabled state.",
		"ColourTableDescriptionRow106": "Used to indicate selected form controls that are in a disabled state.",
		"ColourTableDescriptionRow107": "Text and selected indicators on top of components that are in a selected state. For example, the checkmark icon within of a selected checkbox.",
		"ColourTableDescriptionRow108": "All text that requires a primary visual hierarchy.",
		"ColourTableDescriptionRow109": "All text that requires a secondary visual hierarchy. Can also be used as supporting text alongside primary text if there is a contextual relationship between the two.",
		"ColourTableDescriptionRow110": "Placeholder text within input field components.",
		"ColourTableDescriptionRow111": "Disabled text within interactive elements that use a neutral text palette.",
		"ColourTableDescriptionRow112": "The outline used to indicate that an element is in focus.",
		"TypographyTableStyleHeading": "Style",
		"TypographyTableFontWeightHeading": "Font & weight",
		"TypographyTableLineHeightHeading": "Line height & paragraph spacing",
		"TypographyTableFigmaHeading": "Figma text style",
		"TypographyTableTokenHeading": "Class name",
		"Letter": "Aa"
	},
	"RightSideNav": {
		"OnThisPage": "On this Page"
	},
	"LeftSideNav": {
		"title": {
			"foundation": "Foundation",
			"components": "Components",
			"support": "Support"
		},
		"sub-titles": {
			"iconography": "Iconography",
			"layouts": "Layouts",
			"checkbox": "Checkbox",
			"external-link": "External Link",
			"footer": "Footer",
			"header": "Header",
			"icon-button": "Icon button",
			"radio-button": "Radio button",
			"tabs": "Tabs",
			"contact": "Contact us"
		}
	},
	"Overview": {
		"Heading": "Overview",
		"SubHeading": "IRCC Design System",
		"Text": "The IRCC design system is a toolkit of shared design and code that provides visual language, components, patterns and guidelines – all in one centralized source of truth that enables product teams to build scalable, accessible, unified experiences. It is customized for the client and officer experience and allows teams to efficiently build consistent immigration digital services.",
		"DesignerText": "Learn how to get started with the IRCC design system Figma library.",
		"DeveloperText": "Learn how to get started setting up the IRCC Design System in your project.",
		"GetStartedHeading": "Get started",
		"DeveloperPackageTxt": "This package contains the theming functionality for the Journey Design System."
	},
	"Designers": {
		"HeadingText": "If you’re a designer, start here to find everything you need to use the design system’s Figma library.",
		"AboutHeading": "About the design library",
		"AboutText1": "The design system consists, in part, of a Figma library. This is the primary tool for designers to use and it allows them to create system-compatible designs. The design library is a centralized set of Figma files that is maintained by a core design system team. By connecting your project to the design library, your projects will automatically inherit updates, improvements and new features published to the design library.",
		"AboutText2": "Figma is a collaborative design platform that is built to handle UI/UX and design system use cases. Learn more about Figma <a class='link' target='_blank' href='https://www.figma.com'>here</a> or browse <a class='link' target='_blank' href='https://www.youtube.com/@Figma'>Figma’s Youtube channel</a> to become more familiar with the software or watch tutorials.",
		"AccessHeading": "Requesting access to the design library",
		"AccessText1": "The design library is published as a team library on Figma. There are currently three Figma files to connect to your project in order to access the full design system – Foundations, Components and Patterns. Here are the steps to get access:",
		"AccessListItem1": "<a class='link' target='_blank' href='https://www.figma.com/signup'>Create a Figma account</a> if you don’t have one already.",
		"AccessListItem2": "Email <a class='link' href='mailto:Matthew.Emond@cic.gc.ca'>Matthew.Emond@cic.gc.ca</a> and tell us the email you use for your Figma account. You will receive a response as soon as we’ve granted you access.",
		"AccessListItem3": "Once you have received confirmation that you have access, <a class='link' target='_blank' href='https://https://www.figma.com/files'>log into Figma</a> with the email you provided.",
		"AccessListItem4": "Create a new design file or open an existing project.",
		"AccessListItem5": "On the left sidebar, select “Assets,” then select the Team Library icon.",
		"AccessListItem6": "Enable the team library by selecting the toggle next to the <strong>“Foundations”</strong>, <strong>“Components”</strong> and <strong>“Patterns”</strong> libraries.",
		"AccessText2": "You should now have access to the colours & text styles, components, and user patterns.",
		"AccessText3": "Once you have enabled the team libraries, you will automatically receive any updates or additions to styles and components that are published in the future.",
		"FigmaImg1AltText": "The Figma interface used for connecting external component libraries to a Figma file.",
		"InstallFontsHeading": "Installing the design system fonts",
		"InstallFontsText1": "The design system uses Lato, Inter and Font Awesome (icon font). Lato and Inter are Google fonts and should automatically be available within Figma in the font picker. Font Awesome has been set as a “shared font” for our organization plan and should also be available automatically within Figma in the font picker. If you are not a member of the “IRCC - Journey Labs” Figma organization, you will need to obtain and install a paid version of Font Awesome or use your own icon font in combination with this design system.",
		"InstallFontsLink": "<a class='link' target='_blank' href='https://fontawesome.com/'>Learn more about Font Awesome </a>",
		"InstallFontsLinkURL": "https://fontawesome.com/",
		"UsingStylesHeading": "Using design system styles",
		"UsingStylesText1": "Once you’ve connected to the Figma libraries, and ensured you have access to the correct fonts within Figma, you’re ready to start using the colour and text styles from the system.",
		"UsingStylesStrokeText1": "To apply a fill or stroke colour:",
		"UsingStylesStrokeListItem1": "Make sure you’ve connected the <strong>“Foundations”</strong> library to your Figma file",
		"UsingStylesStrokeListItem2": "Select the layer you want to apply the colour style to",
		"UsingStylesStrokeListItem3": "In the design panel, click on the style icon (four dots) and find the system colour style you want to apply under the “fill” and/or “stroke” properties",
		"UsingStylesStrokeListItem4": "Pro tip: Use the search field to filter the colour style list",
		"UsingStylesStrokeText2": "Click <a class='link' href='/en/utilities#colours'>here</a> to see a list of all colour tokens and how they apply. We will be adding a colours page to this documentation site for additional details and guidance.",
		"UsingStylesStrokeImgAltText": "The Figma interface used for applying colour styles to a layer.",
		"UsingStylesTextText1": "To apply a text style:",
		"UsingStylesTextListItem1": "Make sure you’ve connected the <strong>“Foundations”</strong> library to your Figma file",
		"UsingStylesTextListItem2": "Select the text layer you want to the text style to",
		"UsingStylesTextListItem3": "In the design panel, click on the style icon (four dots) and find the system text style you want to apply under the “text” property",
		"UsingStylesTextListItem4": "Pro tip: Use the search field to filter the text style list",
		"UsingStylesTextText2": "Click <a class='link' href='/en/utilities#typography'>here</a> to see a list of all text tokens and how they apply. We will be adding a typography page to this documentation site for additional details and guidance.",
		"UsingStylesTextImgAltText": "The Figma interface used for applying text styles to a text layer.",
		"UsingComponentsHeading": "Using design system components",
		"UsingComponentsText1": "Once you’ve connected to the Figma libraries, and ensured you have access to the correct fonts within Figma, you’re ready to start using the components from the system.",
		"UsingComponentsInsertText1": "To insert a system component into your design file:",
		"UsingComponentsInsertListItem1": "Make sure you’ve connected the <strong>“Components”</strong> and <strong>“Patterns”</strong> libraries to your Figma file",
		"UsingComponentsInsertListItem2": "In the left side panel, click on the “Assets” tab",
		"UsingComponentsInsertListItem3": "Find the component you would like to insert into your design by either searching or browsing the component list",
		"UsingComponentsInsertListItem4": "Drag and drop the component from the side panel into your design",
		"UsingComponentsInsertListItem5": "Pro tip: Use the search field to filter the component list",
		"UsingComponentsInsertImgAlt": "The Figma assets panel used for viewing external and local components.",
		"UsingComponentsConfigureText1": "Most components have configurable options. To configure the component you inserted:",
		"UsingComponentsConfigureListItem1": "Select the component you would like to configure",
		"UsingComponentsConfigureListItem2": "Find the available options in the design panel",
		"UsingComponentsConfigureListItem3": "Use the dropdown menus and toggles to select the desired configuration",
		"UsingComponentsConfigureImgAlt": "The Figma design panel displaying configuration options for a button component.",
		"FigmaHeading": "Figma usage guidelines",
		"FigmaText": "The above is general information in order to get started. You can find more detailed Figma usage guidelines specific to each system part on on their respective pages throughout this site."
	},
	"Developers": {
		"GetStartedHeading": "Getting started",
		"UsageHeading": "Usage",
		"ThemesHeading": "Themes",
		"FontAwesomeHeading": "Font Awesome",
		"ReleasesHeading": "Releases",
		"GetStartedTxt": "To install the IRCC Digital Journey Labs Design System styles, you will need to run the following command using <a class='link' target='_blank' href='https://www.npmjs.com'>npm</a>:",
		"UsageTxt": "In your root-level stylesheet, initialize the design system with the following:",
		"UsageTitle1": "For external websites:",
		"UsageTitle2": "For internal websites:",
		"ThemesTxt": "You can set the theme for your project to either Light, Dark or System. Setting the theme to System will apply the Light or Dark theme to your applications UI based on the users Operating System preferences.",
		"ThemesTitle1": "To use the Light theme:",
		"ThemesTitle2": "To use the Dark theme:",
		"ThemesTitle3": "To use the users Operating System preference to set the theme:",
		"FontAwesomeTxt": "The Design System core leverages the use of Font Awesome kits to import icons used by the design system. Place the following in the head of your project to pull down the relevant icons.",
		"ReleasesTxt": "The Design System utilizes three different types of releases: patch releases, beta releases and full releases. To target a specific release type use the relevant pattern and specify the release number.",
		"ReleasesTitle1": "To install a patch release:",
		"ReleasesTitle2": "To install a beta release:",
		"ReleasesTitle3": "To install a full release:"
	},
	"ERROR": {
		"fieldIsInvalid": "This field is invalid.",
		"fieldExceededMaxLength": "This field has exceeded max length.",
		"requiredTextAreaError": "This field is required.",
		"testErrorMessage": "Test error message.",
		"errorMessage": "Error message",
		"requiredRadioError": "No selection has been made. Please select an option",
		"WritingErrHeading": "Writing error messages"
	},
	"Contact": {
		"Text": "To provide feedback (compliment, comment or complaint) or for any inquiries, contact <a class='link' href='mailto:IRCC.JLDS-JLSDC.IRCC@cic.gc.ca'>IRCC.JLDS-JLSDC.IRCC@cic.gc.ca</a>."
	},
	"Accordion": {
		"ShowCode": "Show Code",
		"HideCode": "Hide Code"
	},
	"ACC_DEMO": {
		"MODAL_TITLE": "Steps",
		"HAMBURGER_ARIA": "Open the progress indicator",
		"BACKGROUNDINFO": "Background information",
		"PREVIOUS_PAGE": {
			"CONTENT": "This page is not part of the prototype. Please use the button below to return to the previous screen."
		},
		"NEXT_PAGE": "This is an example of a next page - it is simply here for demonstration purposes and is not set up for correct accessibility. Note the update to the progress indicator at the top of the page. You can navigate using the progress indicator",
		"ERRORS": {
			"FAMILY_NAME_REQUIRED": "This field is blank. Please enter a family name",
			"DOB_NO_SELECTION_REQUIRED": "No selection has been made. Please fill in the fields to complete your date of birth.",
			"DOB_REQUIRED": "Please fill in the missing fields to complete your date of birth.",
			"DECLARATION_REQUIRED": "No selection has been made. Please make a selection to complete your declaration",
			"DECLARATION_CUSTOM": "You must agree to continue"
		},
		"STEPPER": {
			"STEP3": "Work information",
			"STEP4": "Review & submit"
		},
		"PERSONAL_INFO": {
			"ERROR_BANNER": {
				"TITLE": "Missing information",
				"CONTENT": "There are unresolved errors below."
			},
			"H1": "Personal information",
			"BODY": "Enter the correct information in the spaces below as it appears in your passport, travel or identity documents.",
			"FAMILY_NAME_INPUT": {
				"LABEL": "Family name (required)",
				"DESC": "This is your surname or last name",
				"BANNER": "If you do not have a family name, provide all your given names in the family name field and leave the given names field blank.",
				"BANNER_CLOSE": "Family name info banner. Close"
			},
			"GIVEN_NAME_INPUT": {
				"LABEL": "Given name",
				"DESC": "This is your first name and middle name, if applicable"
			},
			"SEX_AT_BIRTH_RADIO": {
				"LABEL": "Sex at birth (required)",
				"FEMALE": "F - Female",
				"MALE": "M - Male",
				"OTHER": "X - Another sex",
				"BANNER": "<p>This question is asked for identity verification purposes only. <br><br>Sex refers to your status at birth, and may not reflect your precise gender identity.</p>",
				"BANNER_CLOSE": "Sex at birth info banner. Close"
			},
			"DATE_OF_BIRTH": {
				"LABEL": "Date of birth (required)"
			},
			"COUNTRY_OF_BIRTH": {
				"LABEL": "Country/territory of birth (required)",
				"OPTIONS": {
					"CANADA": "Canada",
					"USA": "United States of America",
					"MEXICO": "Mexico"
				}
			},
			"CITY_OF_BIRTH": {
				"LABEL": "City or town of birth (required)",
				"OPTIONS": {
					"CANADA": {
						"OTTAWA": "Ottawa",
						"ST_JOHNS": "St. John's",
						"VICTORIA": "Victoria",
						"CALGARY": "Calgary"
					},
					"USA": {
						"TAMPA": "Tampa Bay",
						"WASHINGTON": "Washington",
						"NEW_YORK": "New York",
						"OAKLAND": "Oakland"
					},
					"MEXICO": {
						"MEXICO": "Mexico City"
					}
				}
			},
			"DECLARATION": {
				"INLINE_LABEL": "I declare that the above information is true and accurate.",
				"LABEL": "Declaration (required)"
			}
		},
		"MORE_INFO": "more information",
		"BUTTONS": {
			"PREVIOUS": "Previous step",
			"NEXT": "Save and continue",
			"PREVIOUS_PAGE_NEXT": "Next",
			"HAMBURGER": "Menu"
		},
		"BREADCRUMB_COMPONENT": {
			"ADDITIONAL_LINKS": "Additional links"
		}
	},
	"Indicator": {
		"Heading": "Indicator"
	},
	"QA": {
		"header": "QA Landing Page",
		"michael": "Michael"
	},
	"DEMO_COMPONENT": {
		"ACCORDION_OPEN": "Hide configurations",
		"ACCORDION_CLOSED": "Show configurations"
	},
	"Input": {
		"Title": "Input",
		"Intro": "The input component provides fields that allow users to enter information. The input component provides several configurable options to clearly communicate form requirements for many use-cases.",
		"InteractiveDemoDesc": "Try our input component and the configurable options available within it.",
		"PrimaryHeading": "Basic input",
		"SecondaryHeading": "Password input",
		"PrimaryText": "The basic input allows for entry of single-line information. The form component is configurable to fit various use cases and layouts. See available configurations below.",
		"SecondaryText": "The password input allows users to enter their password. The password can be hidden or shown.",
		"ConfigErrorHeading": "Error",
		"ConfigPlaceholderHeading": "Placeholder",
		"FieldWidth": "Field widths",
		"FieldWidthImgDo": "A wide input field for typing a country name and a narrow input field for typing a year.",
		"FieldWidthDoText": "Use field widths that are appropriate for the type of content being gathered.",
		"FieldWidthImgDont": "A narrow input field for typing a country name and a wide input field for typing a year.",
		"FieldWidthDontText": "Use arbitrary field widths that are not sized based on the width of the expected value.",
		"ErrorsHeading": "Errors",
		"ErrorDoImgAlt": "An input field that shows validation by highlighting the field red with an error message underneath.",
		"ErrorDoText": "Show the error visual treatment on the field in addition to showing the error message when showing error validation.",
		"ErrorDontImgAlt": "An input field that only uses an error message as validation.",
		"ErrorDontText": "Only show the error message when showing error validation.",
		"MaxMinWidthImgAlt": "An input field that shows small inputs have a maximum width of 552 pixels and a minimum width of 92 pixels. Large inputs have a maximum width of 632 pixels and a minimum width of 104 pixels. ",
		"MaxMinWidthText": "Small inputs have a maximum width of 552 pixels and a minimum width of 92 pixels. Large inputs have a maximum width of 632 pixels and a minimum width of 104 pixels. ",
		"AnatomyImgAlt": "The parts that makeup the input component. The parts are described in the content below.",
		"AnatomyInputFieldText": "The area that the user interacts with to input content.",
		"AnatomyInputContentHeading": "Input field content",
		"AnatomyInputContentText": "The content that the user inputs into the field. The field also supports optional placeholder text that displays before the user inputs text.",
		"AnatomyPasswordHeading": "Password field",
		"AnatomyPasswordText": "The password field allows users to enter their password. The password can be hidden or shown.",
		"SpecsImgAlt": "Specs displaying the padding and layer measurements within the input component. Specs are described in the paragraph below.",
		"SpecsImgDesc1": "The small basic input’s label is 24 pixels in height with a fluid width. The required indicator is 12 pixels wide. There are 4 pixels of padding between the required indicator and the label. The description is 20 pixels in height with a fluid width. There are 4 pixels of padding between the label and the description. The hint text is 20 pixels in height with a fluid width. There are 8 pixels of padding between the hint text and the description. The input field is 40 pixels in height with a fixed width.  There are 4 pixels of padding between the input field and the hint text. The error message is 20 pixels in height with a fluid width. The error icon is 16 by 16 pixels. There are 4 pixels of padding between the error icon and the error message. There are 4 pixels of padding between the error message and the input field. The small password field is 40 pixels tall with a fixed width. There are 12 pixels of padding within the input field. The password text is fluid in width. The hide/show password icon is 16 pixels wide. There are 4 pixels of padding between the hide/show password icon and the password text. ",
		"SpecsImgDesc2": "The large basic input’s label is 28 pixels in height with a fluid width. The required indicator is 16 pixels wide. There are 4 pixels of padding between the required indicator and the label. The description is 24 pixels in height with a fluid width. There are 4 pixels of padding between the label and the description. The hint text is 24 pixels in height with a fluid width. There are 12 pixels of padding between the hint text and the description. The input field is 52 pixels in height with a fixed width.  There are 8 pixels of padding between the input field and the hint text. The error message is 24 pixels in height with a fluid width. The error icon is 20 by 20 pixels. There are 4 pixels of padding between the error icon and the error message. There are 4 pixels of padding between the error message and the input field. The large password field is 52 pixels tall with a fixed width. There are 12 pixels of padding within the input field. The password text is fluid in width. The hide/show password icon is 20 pixels wide. There are 4 pixels of padding between the hide/show password icon and the password text. ",
		"WriteLabelsSubHeading": "Labels are mandatory content for the input component. Labels make the purpose of the field clear.",
		"WriteLabelsDoImgAlt1": "An input field to collect the user’s full name. The label is “Full name (required)”. The description is “Provide your name as it appears on your passport, travel or identity document.” The input field is empty.",
		"WriteLabelsDoText1": "Write labels that are appropriate for the task and clear.",
		"WriteLabelsDontImgAlt1": "An input field to collect the user’s full name. The label is “Full name (required)”. There is no description. The input field is empty.",
		"WriteLabelsDontText1": "Rely on the label to do the whole job of informing a user of the task to perform.",
		"WriteLabelsDoImgAlt2": "An input field to collect the user’s email address. The label is “Email address (required)”. The input field is empty.",
		"WriteLabelsDoText2": "Keep labels as clear and short as possible.",
		"WriteLabelsDontImgAlt2": "An input field to collect the user’s email address. The label is “What is your primary email address? (required)”. The input field is empty.",
		"WriteLabelsDontText2": "Write hard to understand and longer than necessary labels. ",
		"WriteDescHeading": "Writing descriptions",
		"WriteDescSubHeading": "Write a complete description of the action a user is to perform. Include all the relevant information required, but try to keep the description concise.",
		"WriteDescDoImgAlt": "An input field to collect the user’s Family name. The label is “Family name (required)”. The input field is empty.",
		"WriteDescDoText": "Include all the relevant information in the description.",
		"WriteDescDontImgAlt": "An input field to collect the user’s email address. The label is “Email address (required)”. The input field is empty.",
		"WriteDescDontText": "Include a description when additional instructions or details are not needed to clarify how to correctly fill out the field.",
		"WritePlaceholderHeading": "Writing placeholder text",
		"WritePlaceholderSubHeading": "Placeholder text appears in the input field. Use it only where it is needed to accelerate a user’s understanding of the information they need to provide. Placeholder text can either be an example of the type of expected value that is to be entered or to show the exact format of what is to be entered.",
		"WritePlaceholderDoImgAlt1": "An input field to collect the user’s student identification number. The label is “Student identification number (required)”. The description is “Enter your 9 digit ID number found in your profile.” The input field has placeholder text within it. The placeholder text is “Ex: 301297423”",
		"WritePlaceholderDoText1": "Provide placeholder text as a specific example of the expected value, within an input field.",
		"WritePlaceholderDontImgAlt1": "An input field to collect the user’s email address. The label is “Email address (required)”. The input field has placeholder text within it. The placeholder text is “johnsmith@email.com”",
		"WritePlaceholderDontText1": "Use placeholder text when the expected value is already obvious to the user or where the example makes it seem like the field has already been completed.",
		"WritePlaceholderDoImgAlt2": "An input field to collect the user’s date of birth. The label is “Date of birth (required)”. There are three fields for year, month and day. The input fields have placeholder text within them. The placeholder text for year is “YYYY”. The placeholder text for month is “month”. The placeholder text for day is “DD”.",
		"WritePlaceholderDoText2": "Provide placeholder text to show the exact required format, within an input field.",
		"WritePlaceholderDontImgAlt2": "An input field to collect the user’s date of birth. The label is “Date of birth (required)”. There are three fields for year, month and day. The input fields have placeholder text where hint text is supposed to be used. The placeholder text for year is “YYYY”. The placeholder text for month is “month”. The placeholder text for day is “DD”.",
		"WritePlaceholderDontText2": "Substitute hint text with placeholder text.",
		"WriteErrorsSubHeading": "Error messages inform a user of missing or incorrect information. Write error messages to be helpful, allowing a user to correct their omissions or mistakes.",
		"WriteErrorsDoImgAlt": "An input field to collect the user’s family name. The label is “Family name (required)”. The description is “This is your surname or last name.” The error message is “This field is blank. Please enter a family name.”",
		"WriteErrorsDoText": "Provide error text that is helpful and guides the user as to what to correct.",
		"WriteErrorsDontImgAlt": "An input field to collect the user’s family name. The label is “Family name (required)”. The description is “This is your surname or last name.” The error message is “Error. Field is required.”",
		"WriteErrorsDontText": "Write error messages that sound like a robot.",
		"NecessaryContentDoImgAlt": "An input field to collect the user’s country. The label is “Country where you were born (required)”. The input field is empty.",
		"NecessaryContentDoText": "Only use necessary content layers. Not every field needs a label, description, hint and placeholder text.",
		"NecessaryContentDontImgAlt": "An input field to collect the user’s country. The label is “Country where you were born (required)”. The description is “The country  you were born in”. The input field’s placeholder text is “Ex: France”.",
		"NecessaryContentDontText": "Add unnecessary or redundant content layers to the input.",
		"RequiredFieldsDoImgAlt": "An input field to collect the user’s job title. The label is “Job title (required)”. The input field is empty.",
		"RequiredFieldsDoText": "In addition to using the required asterisk (*), also add “(required)” at the end of all labels within required fields.",
		"RequiredFieldsDontImgAlt": "An input field to collect the user’s job title. The label is “Job title”. The input field is empty.",
		"RequiredFieldsDontText": "Indicate required fields with only the asterisk (*).",
		"FigmaDirectionsListItem1": "From the “Assets” panel, drag in the <strong>“form-input”</strong> component from the Components library.",
		"FigmaDirectionsListItem4": "Never override the asterisk (*) or error icons in order to keep those visual indicators consistent.",
		"FigmaDirectionsImgAlt": "A screenshot of the design panel from Figma. The design panel displays the configuration options designers can choose from when customizing a input. These options allow designers to hide or show the required asterisk, description, hint, count and error text.",
		"AccessInputsHeading": "To access the input field’s states",
		"AccessInputsListItem1": "Click into the <strong>input-field</strong> subcomponent inside of the <strong>form-input</strong> component in the Layers palette (left panel). ",
		"AccessInputsListItem2": "From there, you can configure the input field’s content and states in the right panel.",
		"AccessInputsImgAlt1": "A screenshot of the layer panel from Figma. The selected layer displayed is the “input-field” subcomponent within the “form-input” component.",
		"AccessInputsImgAlt2": "A screenshot of the design panel from Figma. With the “input-field” subcomponent selected, designers can choose from its configuration options. These options include the type of field, the type of content populated within the field, whether the field is in an error state and the state of the field.",
		"AccessibilityColourText": "All elements within the input component have a colour contrast ratio of 4.5:1 and passes AA accessibility standards under WCAG 2.1.",
		"AccessibilityKeyboardText": "Inputs are developed using the native HTML input element to ensure interactive elements are keyboard accessible and pass WCAG 2.1 AA conformity. The input can be navigated to and interacted with using a keyboard and receives a visible focus.",
		"AccessibilityContentItem1": "Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text.",
		"AccessibilityContentItem2": "Headings and labels describe topic or purpose.",
		"AccessibilityContentItem3": "Labels or instructions are provided when content requires user input.",
		"AccessibilityContentItem4": "The label, description and hint are placed outside of the form field and are always visible to the user. The content is presented in a logical reading order.",
		"AccessibilityContentItem5": "Label that includes an asterisk to indicate the control is required.",
		"AccessibilityContentItem6": "Clear labelling for required fields, including the word “required” in parentheses.",
		"AccessibilityContentItem7": "Max widths are determined based on allowing a maximum line length of 80 characters.",
		"AccessibilityValidationText": "If an input error is automatically detected, the item that is in error is identified and the error is described to the user in text.",
		"CodeViewer": "Code viewer block displaying the html and typescript code generated from the interactive demo",
		"LabelText1": "Label text",
		"LabelText2": "Password"
	},
	"DatePicker": {
		"MainTitle": "Date picker",
		"Title": "DatePicker-doc",
		"Intro": "The date picker component allows users to input a specific year, month and/or day.",
		"InteractiveDemoDesc": "Try our <strong>date picker</strong> component and the configurable options available within it.",
		"DesignGuideLines": {
			"Maintain": "Maintain default select widths",
			"MaintainDoAlt": "A small date picker in the horizontal layout with consistent widths.",
			"MaintainDoText": "Maintain the default width of each select dropdown. They are intentionally sized to fit the “unknown” option.",
			"MaintainDontAlt": "A small date picker in the horizontal layout is best used for the mobile.",
			"MaintainDontText": "Alter the fixed width of the select dropdowns.",
			"ErrorValidation": "Use proper error validation treatments",
			"ErrorValidationDoAlt": "Date picker field that show validation by highlighting the field red with three error messages underneath.",
			"ErrorValidationDo": "Show both the error visual treatment on the appropriate select dropdown(s), as well as the error message when displaying error validation to the user.",
			"ErrorValidationDontAlt": "Date picker fields that show validation by only displaying error messages underneath.",
			"ErrorValidationDont": "Only display the error message when showing error validation to the user.",
			"Horizontal": "Use horizontal layout when you have the room",
			"HorizontalDoAlt": "Date picker field that show validation by highlighting the field red with three error messages underneath.",
			"HorizontalDo": "Use the horizontal layout when the parent container is wide. Use the vertical layout when the parent container is narrow. The most common place for using vertical is within mobile mockups.",
			"HorizontalDontAlt": "Date picker fields that is in vertical layout when the parent container is wide.",
			"HorizontalDont": "Use horizontal layout when your form is in a narrow container. Don’t use the vertical layout when you form is in a wide container."
		},
		"Anatomy": {
			"ImgAlt": "The parts that makeup the date picker component. The parts are described in the content below.",
			"HintHeading": "Hint text",
			"SelectCompoHeading": "Select components",
			"SelectCompoTxt": "The area that the user interacts with to open up a dropdown menu for date selection. The select also supports placeholder text that displays before the user makes a selection."
		},
		"Specs": {
			"ImgAlt": "Specs displaying the padding and layer measurements within the date picker component. Specs are described in the paragraph below.",
			"Text": "The small horizontal date picker has 396 pixels fixed width and default height is 120 pixels and hugs content. Each field has consistent widths of 124 pixels, heights of 68 pixels and horizontal padding of 12 pixels. The icon has a 16 pixel width and height. The small vertical date picker has 152 pixels fixed width and default height is 304 pixels and hugs content. Each field has consistent widths of 124 pixels, heights of 68 pixels and vertical padding of 12 pixels. The large horizontal date picker has 432 pixels fixed width and default height is 148 pixels and hugs content. Each field has consistent widths of 136 pixels, heights of 88 pixels and horizontal padding of 12 pixels. The large vertical date picker has 180 pixels fixed width and default height is 376 pixels and hugs content. Each field has consistent widths of 180 pixels, heights of 88 pixels and horizontal padding of 12 pixels."
		},
		"ContentGuideLines": {
			"UseCorrectCaseHeading": "Use the correct order",
			"CorrectOrderDoAlt": "Date picker fields are in the correct labelling order YYYY-Month-DD.",
			"CorrectOrderDo": "Ensure the date picker selects are in the order of YYYY-Month-DD.",
			"CorrectOrderDontAlt": "Date picker fields shown are in incorrect labelling order Month-DD-YYYY.",
			"CorrectOrderDont": "Change the order of the date picker selects. The order should be YYYY-Month-DD.",
			"WritingLabelsTxt": "Labels are mandatory content for the <strong>date picker</strong> component. Labels make the purpose of the date picker clear.",
			"WritingLabelsDoAlt": "Date picker fields with the “Date of birth (required)” label.",
			"WritingLabelsDo": "Keep labels as clear and short as possible.",
			"WritingLabelsDontAlt": "Date picker fields with “The day you were born” label.",
			"WritingLabelsDont": "Write labels that are difficult to understand or labels that are longer than necessary.",
			"PlaceholderHeading": "Use placeholder text within the select dropdowns",
			"PlaceholderDoAlt": "Date picker fields with the “Date of birth” label and placeholder text within fields.",
			"PlaceholderDo": "Provide placeholder text to show the exact required format, within a select dropdown.",
			"PlaceholderDontAlt": "A date picker that has no placeholder text inside of the select dropdowns.",
			"PlaceholderDont": "Remove placeholder text from the select dropdowns.",
			"WritingErrTxt": "Error messages inform a user of missing or incorrect information. Write error messages to be helpful, allowing a user to correct their omissions or mistakes.",
			"WritingErrDoAlt": "A date picker to collect the user’s date of birth. The label is “Date of birth (required)”.  The error message is “This field is blank. Please enter a date of birth.”",
			"WritingErrDo": "Provide error text that is helpful and guides the user as to what to correct.",
			"WritingErrDontAlt": "A date picker to collect the user’s date of birth. The label is “Date of birth (required)”. The error message is “Error. Field is required.”",
			"WritingErrDont": "Write error messages that sound like a robot.",
			"NecessaryContentDoAlt": "A date picker fields collect a user’s date of birth with the “Date of birth (required)” label.",
			"NecessaryContentDo": "Only use necessary content layers. Not every field needs a label, description, hint and placeholder text.",
			"NecessaryContentDontAlt": "A date picker fields collect a user’s date of birth  The label is “Date of birth (required)”. The description is “The day you were born.”",
			"NecessaryContentDont": "Add unnecessary or redundant content layers to the input.",
			"RequiredFieldsDoAlt": "A date picker fields collect a user’s date of birth with the “Date of birth (required)” label.",
			"RequiredFieldsDo": "In addition to using the required asterisk (*), also add “(required)” at the end of all labels within required fields.",
			"RequiredFieldsDontAlt": "A date picker fields collect a user’s date of birth with the “Date of birth” label.",
			"RequiredFieldsDont": "Indicate required fields with only the asterisk (*)."
		},
		"UsageInFigma": {
			"FigmaDirectionsListItem1": "From the “Assets” panel, drag in the <strong>“date-picker”</strong> component from the Patterns library.",
			"FigmaDirectionsListItem4": "Never override the asterisk (*) or error icons in order to keep those visual indicators consistent.",
			"AccessInputsHeading": "To access the input field’s state",
			"FigmaDirectionsSecondItem1": "Click into the <strong>input-field</strong> subcomponent inside of the <strong>form-input</strong> component in the Layers palette (left panel).",
			"FigmaDirectionsSecondItem2": "From there, you can configure the input field’s content and states in the right panel.",
			"FigmaDirectionsImgAlt": "A screenshot of the design panel from Figma. The design panel displays the configuration options designers can choose from when customizing a input. These options include size and layout of the component,  allow designers to hide or show the required asterisk, description, hint, field 2, field 3 and error message."
		},
		"Accessibility": {
			"ColorContrastTxt": "All elements within the date picker component have a colour contrast ratio of 4.5:1 and passes AA accessibility standards under WCAG 2.1.",
			"KeyboardAccessibleTxt": "Date pickers are developed using the native HTML input element to ensure interactive elements are keyboard accessible and pass WCAG 2.1 AA conformity. The input can be navigated to and interacted with using a keyboard and receives a visible focus.",
			"ColorText4": "Success banners have a colour contrast ratio of 16.86:1 and passes AAA accessibility standards under WCAG 2.1.",
			"ColorText5": "Generic banners have a colour contrast ratio of 16.6:1 and passes AAA accessibility standards under WCAG 2.1.",
			"KeyboardText": "Banners are developed using the native HTML button element to ensure interactive elements are keyboard accessible and pass WCAG 2.1 AA conformity.",
			"ContentTxt1": "Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text.",
			"ContentTxt2": "Headings and labels describe topic or purpose.",
			"ContentTxt3": "Labels or instructions are provided when content requires user input.",
			"ContentTxt4": "The label, description and hint are placed outside of the form field and are always visible to the user. The content is presented in a logical reading order.",
			"ContentTxt5": "Label that includes an asterisk to indicate the control is required.",
			"ContentTxt6": "Clear labelling for required fields, including the word “required” in parentheses.",
			"ContentTxt7": "Max widths are determined based on allowing a maximum line length of 80 characters."
		},
		"Validation": "If a date picker error is automatically detected, the item that is in error is identified and the error is described to the user in text."
	},
	"RequestForm": {
		"Title": "Submit a request",
		"Intro": "Some intro about what this is used for. Change requests, feature requests, bugs, etc.",
		"BannerDesc": "This form is submitted to<a href='mailto:IRCC.JLDS-JLSDC.IRCC@cic.gc.ca'>IRCC.JLDS-JLSDC.IRCC@cic.gc.ca</a>which is viewed by the design system team. We will review and respond to your request as soon as possible.",
		"RequestCriteriaTitle": "Request criteria",
		"requestCriteriaSubText1": "A request should show that the contribution to the system would be useful and unique.",
		"requestCriteriaSubHeading1": "Useful",
		"requestCriteriaSubText2": "There is evidence that this component or pattern would be useful for many teams or services.",
		"requestCriteriaSubHeading2": "Unique",
		"requestCriteriaSubText3": "It does not replicate something already in the Design System. If it’s intended to replace an existing component or pattern, there is evidence to show that it’s better than the existing version and solves existing use cases.",
		"typeOfRequestRadio": "Type of request (required)",
		"radioOption1": "Change request (modifying or adding to an existing system part)",
		"radioOption2": "Feature request (Defining and creating na new system part)",
		"radioOption3": "Bug (A system part that is not functioning as intended)",
		"urgentRequestRadio": "Is the request urgent? (required)",
		"requestTitleLabel": "Request title (required)",
		"requestTitleDesc": "Enter a brief title that represents the feature, change or bug.",
		"requestDetailsLabel": "Request details (required)",
		"requestDetailsDesc": "Describe the feature, change or bug.",
		"useCaseLabel": "Use case(s) (required)",
		"useCaseDesc": "Describe the use case(s) that you are currently unable to satisfy with the design system.",
		"referencesLabel": "References",
		"referencesCaseDesc": "Include any URLs you may have that we can view as reference. This can be website links or Figma design links, etc.",
		"referencesHint": "We currently are unable to support attachments",
		"urgentDetailsLabel": "Why is the request urgent? (required)",
		"requestedDateLabel": "When is the completed work needed by? (required)",
		"requestedDateDesc": "When would you need the work delivered in order for your team to start implementation into your project?",
		"SubmitBtn": "Submit request",
		"requiredDateError": "Please fill in the missing fields"
	},
	"Banner": {
		"Title": "Banners",
		"Intro": "Banners provide valuable supporting content to the user conveying a specific sentiment (warning, success, informational, etc.) and can be used to help the user complete a task or better understand the content they are viewing.",
		"InteractiveDemoDesc": "Try our <strong>banner</strong> component and the configurable options available within it.",
		"InfoPrimaryText": "Info banners are used to convey important general information.",
		"WarningPrimaryText": "Warning banners are used to convey important warnings.",
		"CriticalPrimaryText": "Critical banners are used to convey critical information or errors.",
		"SuccessPrimaryText": "Success banners are used to convey successful actions or validations.",
		"GenericPrimaryText": "Generic banners are used when an alert sentiment is not appropriate for displaying a message to the user.",
		"BannerPreview": {
			"Content": "Description text lorem ipsum dolor sit amet consecteteur adipiscing elit."
		},
		"DesignGuideLines": {
			"KeepActionsSimpleLabel": "Keep actions simple",
			"BannerActionsDoAlt": "A banner that has the label “Minor in Canada” and description text with a “Clear this section” CTA button. The banner uses the teal info styling.",
			"BannerActionsDontAlt": "A banner that has the label “Duplicate file name” and description text written in title case with two CTAs - “Delete file” and “Keep file”. The banner uses the orange warning styling.",
			"BannerActionsDoText": "Use the banner for simple actions that are not critical to the user’s workflow.",
			"BannerActionsDontText": "Make the user perform important or critical actions from within a banner. Banners should provide supplementary content and actions that help them understand the surrounding page/task.",
			"UseOneBannerAtATimeLabel": "Use one banner at a time",
			"BannerCountDoAlt": "A banner that has the label “Duplicate file name” and description text. The banner uses the orange warning styling.",
			"BannerCountDontAlt": "There are two banners that have the label “Duplicate file name” and “You don’t need to provide medical exam” along with description text. The first banner uses the orange warning styling. The second banner uses the green success styling.",
			"BannerCountDoText": "Only show one banner at a time in the same section. ",
			"BannerCountDontText": "Do not stack multiple banners together. ",
			"ShowMaximumButtonsLabel": "Show maximum three buttons at a time",
			"bannerButtonCountDoAlt": "A banner that has the label “Proof of relationship” and description text. It is displaying two CTA buttons and one external link. The banner uses the teal info styling.",
			"bannerButtonCountDontAlt": "A banner that has the label “Duplicate file name” and description text. It is displaying four CTA buttons. The banner uses the orange warning styling.",
			"bannerButtonCountDoText": "Show maximum three CTA buttons at time.",
			"bannerButtonCountDontText": "Do not apply more than three CTA buttons in a banner.",
			"ProperButtonTypeInGroupLabel": "Use the proper button type in button groups",
			"bannerButtonTypeDoAlt": "A banner that has the label “Change your physical presence calculation” and description text with two options - secondary button that says  “Update physical presence” and plain button “Later”. The banner uses the orange warning styling.",
			"bannerButtonTypeDontAlt": "A banner that has the label “Change your physical presence calculation” and description text with two options - two secondary button that says “Update physical presence” and “Later”. The banner uses the orange warning styling.",
			"bannerButtonTypeDontText": "Use the same button type next to another leading to a lack of hierarchy.",
			"BannerCorrectDismissLabel": "Use the correct button to dismiss a banner",
			"bannerDismissDoAlt": "A banner that has the label “You’re almost done with your profile” and description text with a close icon button. The banner uses the teal info styling.",
			"bannerDismissDontAlt": "A banner that has the label “You’re almost done with your profile” and description text with a CTA button that says “Dismiss”. The banner uses the teal info styling.",
			"bannerDismissDoText": "Use the close icon button to close the banner.",
			"bannerDismissDontText": "Don’t use CTA button to close the banner.",
			"bannerMinMaxWidthAlt": "Alt text: Specs displaying the minimum and maximum widths of the banner component. Widths are described in the paragraph below.",
			"bannerMinMaxWidthText": "Small banners have a maximum width of 600 pixels and a minimum width of 300 pixels. Large banners have a maximum width of 680 pixels and a minimum width of 340 pixels. "
		},
		"Anatomy": {
			"ImgAlt": "The parts that makeup the banner component. The parts are described in the content below.",
			"ContainerHeading": "Container",
			"ContainerText": "The boundary of the banner. The container can display various styles and can be set to any desired fixed width.",
			"BannerIconTypeHeading": "Banner type icon",
			"BannerIconTypeText": "Icon indicating the type / sentiment of the banner.",
			"BannerBarHeading": "Banner bar",
			"BannerBarText": "Visual element used to highlight the banner’s content.",
			"TitleText": "The title of the banner.",
			"DescriptionHeading": "Description text",
			"DescriptionText": "The banner’s description or message.",
			"CloseBtnHeading": "Close button",
			"CloseBtnText": "Button that dismisses the banner.",
			"CTAGroupHeading": "CTA group",
			"CTAGroupText": "Group of actions that the user can interact with related to the banner content."
		},
		"Specs": {
			"ImgAlt": "Specs displaying the padding and layer measurements within the banner component. Specs are described in the paragraph below.",
			"Text": "The small banner with fluid layout has 12 pixels of vertical padding and 12 pixels of horizontal padding inside the banner. The icon has a 20-pixel width and height. There are 12 pixels between the icon and banner-content. The layout of the content within the banner adjusts based on the container’s width. The height of the banner is fluid and adjusts based on the amount of content within the banner. The large banner with fluid layout has 16 pixels of vertical padding and 16 pixels of horizontal padding inside the button. The icon has a 24-pixel width and height. There are 12 pixels between the icon and label. The layout of the content within the banner adjusts based on the container’s width. The height of the banner is fluid and adjusts based on the amount of content within the banner."
		},
		"ContentGuideLines": {
			"UseCorrectCaseHeading": "Use the correct case for titles",
			"BannerUseCorrectCaseDoAlt": "A banner that has the label “Title text” and description text written in sentence case. The banner uses the blue info styling.",
			"BannerUseCorrectCaseDontAlt": "A banner that has the label “Title text” and description text written in title case. The banner uses the blue info styling.",
			"BannerUseCorrectCaseDoText": "Write banner title and description in sentence case.",
			"BannerUseCorrectCaseDontText": "Write banner title and description in title case.",
			"EasyToReadTitleHeading": "Make title easy to understand",
			"BannerTitleDoAlt": "A banner that has the label “you don’t need to provide medical exam” and description text. The banner uses the green success styling.",
			"BannerTitleDontAlt": "A banner that has the label “After thorough verification, we have determined you don’t need to provide medical exam.” and description text. The banner uses the green success styling.",
			"BannerTitleDoText": "Keep title short and concise.",
			"BannerTitleDontText": "Write long and verbose titles.",
			"ProperPunctuationHeading": "Use proper punctuation",
			"BannerPunctuationDoAlt": "A banner that has the label “Minor in Canada” and description text. The banner uses the teal info styling.",
			"BannerPunctuationDontAlt": "A banner that has the label “Minor in Canada.” and description text. The banner uses the teal info styling.",
			"BannerPunctuationDoText": "Include period at the end of the description to indicate end of a sentence. ",
			"BannerPunctuationDontText": "Include period in title and must include period in description, otherwise the sentence may seem unfinished."
		},
		"UsageInFigma": {
			"FigmaDirectionsImgAlt": "A screenshot of the design panel from Figma. The design panel displays the configuration options designers can choose from when customizing a banner.",
			"FigmaDirectionsListItem1": " From the “Assets” panel, drag in the <strong>“banner”</strong> component from the Components library.",
			"FigmaDirectionsListItem4": "Use one or multiple CTA buttons within the banner by toggling on the “Show CTA1” property."
		},
		"Accessibility": {
			"ColorText1": "Info banners have a colour contrast ratio of 16.6:1 and passes AAA accessibility standards under WCAG 2.1.",
			"ColorText2": "Warning banners have a colour contrast ratio of 16.45:1 and passes AAA accessibility standards under WCAG 2.1.",
			"ColorText3": "Critical banners have a colour contrast ratio of 15.85:1 and passes AAA accessibility standards under WCAG 2.1.",
			"ColorText4": "Success banners have a colour contrast ratio of 16.86:1 and passes AAA accessibility standards under WCAG 2.1.",
			"ColorText5": "Generic banners have a colour contrast ratio of 16.6:1 and passes AAA accessibility standards under WCAG 2.1.",
			"KeyboardText": "Banners are developed using the native HTML button element to ensure interactive elements are keyboard accessible and pass WCAG 2.1 AA conformity."
		},
		"BannerConfig": {
			"ShowTitleLabel": "Show title",
			"ShowDescriptionLabel": "Show description",
			"ShowCloseLabel": "Show close",
			"ShowPrimaryButtonLabel": "Show primary button",
			"ShowSecondaryButtonLabel": "Show secondary button",
			"ShowPlainButtonLabel": "Show plain button",
			"ShowLinkLabel": "Show link",
			"DefaultLabel": "Default",
			"CTA1Label": "CTA 1",
			"CTA2Label": "CTA 2 (if CTA 1 is set to true)",
			"CTA3Label": "CTA 3 (if CTA 1 is set to true)"
		}
	},
	"General": {
		"InteractiveDemo": "Interactive Demo",
		"TypesHeading": "Types",
		"ConfigurationsHeading": "Configurations",
		"DesignGuidelinesHeading": "Design guidelines",
		"AnatomyHeading": "Anatomy",
		"SpecsHeading": "Specs",
		"ContentGuidelinesHeading": "Content guidelines",
		"FigmaHeading": "Usage in Figma",
		"CriticalHeading": "Critical",
		"AccessibilityHeading": "Accessibility",
		"ResearchHeading": "Research",
		"FigmaDirectionsHeading": "Directions for use",
		"DoHeading": "Do",
		"DontHeading": "Don't",
		"TrueLabel": "True",
		"FalseLabel": "False",
		"Horizontal": "Horizontal",
		"Vertical": "Vertical",
		"Layout": "Layout",
		"Required": "Required",
		"Yes": "Yes",
		"No": "No",
		"Description": "Description",
		"Hint": "Hint",
		"Month": "Show Month",
		"Day": "Show Day",
		"ComingSoon": "Coming soon.",
		"Validation": "Validation",
		"Size": "Size",
		"ExtraSmall": "Extra small",
		"Small": "Small",
		"Large": "Large",
		"Label": "Label Text",
		"Desc": "Description line of text",
		"Show": "Show",
		"Hide": "Hide",
		"CopyCode": "Copy code",
		"NoneErr": "None",
		"SingleErr": "Single",
		"MultipleErr": "Multiple",
		"Placeholder": "Placeholder",
		"Basic": "Basic",
		"Password": "Password",
		"Primary": "Primary",
		"Critical": "Critical",
		"StateLabel": "State",
		"HoverLabel": "Hover",
		"ActiveLabel": "Active",
		"DisabledLabel": "Disabled",
		"FocusLabel": "Focus",
		"ButtonTypeDoText": "Create a visual hierarchy by properly utilizing button types. The button types chosen should feel appropriate for the action they are being assigned to.",
		"MaxMinWidthHeading": "Minimum and maximum widths",
		"LabelHeading": "Label",
		"FigmaDirectionsListItem2": "In the right panel, configure the properties and variants to meet your needs. ",
		"FigmaDirectionsListItem3": "Never override colours, radius, padding, text size, etc. This way foundational elements are kept consistent.",
		"AccessibilityColourHeading": "Colour contrast",
		"Tokens": "Tokens",
		"AccessibilityKeyboardHeading": "Keyboard accessible",
		"TypographyHeading": "Typography",
		"ColourHeading": "Colours",
		"DescriptionHeading": "Description",
		"InputField": "Input field ",
		"DesignerHeading": "For designers",
		"DeveloperHeading": "For developers",
		"ContentHeading": "Content",
		"RequiredIndicatorHeading": "Required indicator",
		"RequiredIndicatorTxt": "Indicates which fields are mandatory to successfully submit the form.",
		"AnatomyLabelText": "The label makes the purpose of the field clear.",
		"AnatomyDescText": "The description includes the action a user is to perform as well as all the relevant information required.",
		"AnatomyHintText": "The hint is used to display secondary or tertiary information. It is only used when the label and description will not suffice in helping the user understand the input.",
		"AnatomyErrorText": "The error text that displays if the field is in an invalid state.",
		"WriteLabelsHeading": "Writing labels",
		"RequiredFieldsHeading": "Required fields",
		"NecessaryContentHeading": "Using necessary content",
		"TitleHeading": "Title text",
		"RequestFormTitle": "Request Form",
		"CopyStyle": "Copy style",
		"Copy": "Copy",
		"CopyURL": "Copy URL",
		"InfoHeading": "Info",
		"WarningHeading": "Warning",
		"SuccessHeading": "Success",
		"GenericHeading": "Generic",
		"DefaultLabel": "Default",
		"TitleLabel": "Title",
		"CloseLabel": "Close",
		"Labelling": "Labelling"
	},
	"IconButtonDocumentation": {
		"Title": "Icon Button Documentation",
		"Intro": "Icon buttons can be used for a single, well-understood action that can be clearly communicated with a stand-alone icon.",
		"InteractiveDemoDesc": "Try our icon button component and the configurable options available within it.",
		"PrimaryText": "Primary icon buttons are used to highlight important and easy-to-understand actions. It can be used in a group of icon buttons.",
		"CriticalText": "Critical icon buttons are often used for destructive actions like deleting user-contributed content.",
		"OrganizeIcons": "Organize icon button groups",
		"OrganizeIconsAlt": "A document viewer tool bar with pagination icons, zoom icons and resize icons grouped and separeted.",
		"OrganizeIconsDoText": "Logically organize icon buttons that have a contextual relationship by keeping related actions together and unrelated actions separated either by white space or dividers.",
		"OrganizeIconsDontAlt": "A document viewer tool bar with pagination icons, zoom icons and resize icons together in a row.",
		"OrganizeIconsDontText": "Keep unrelated icon button actions together if it is possible to organize groups of actions.",
		"CreateConsistent": "Create consistent button groups",
		"CreateIconsDoAlt": "A critical dialog with title “Do you want to delete this file?” along with a description text, a secondary button “Cancel” and critical button “Delete file”.",
		"CreateIconsDoText": "Create button groups using the same types of button components.",
		"CreateIconsDontAlt": "A critical dialog with title “Do you want to delete this file?” along with a description text, a secondary button “Cancel” and critical icon button “Delete”.",
		"CreateIconsDontText": "Create button groups using different types of button components.",
		"UseCriticalDestruction": "Use critical icon button for destructive actions",
		"UseCriticalDoAlt": "A card with title, “Proof of acceptance” that has a document attached. There is a red critical icon button displaying a trash icon to delete the file.",
		"UseCriticalDoText": "Use the critical icon button type to signify actions that are destructive.",
		"UseCriticalDontAlt": "A card with title, “Proof of acceptance” that has a document attached. There is a black primary icon button displaying a trash icon to delete the file.",
		"UseCriticalDontText": "Use the primary icon button type for an action that is destructive.",
		"EasyUnderStandHeading": "Easy to understand icons",
		"EasyUnderStandDoAlt": "A modal with title “Surname” along with description text, a primary icon button showing an ‘X’ in the corner that allows the user to close the modal.",
		"EasyUnderStandDoText": "Use the icon button without accompanying text when the icon is common and easily understood.",
		"EasyUnderStandDontAlt": "A file uploader showing required document with a primary icon button showing a “plus” icon. It is unclear what the plus icon will do.",
		"EasyUnderStandDontText": "Use the icon button when the icon is ambiguous and may be better understood when accompanied by a label.",
		"SpacingHeading": "Spacing for icon button groups",
		"SpacingText": "An icon button group is a set of icon buttons that have a contextual relationship. To create consistency with how these actions are visually related, consistent spacing rules should be followed. Large icon button groups should have 4 pixels between buttons, small icon button groups should have 4 pixels between buttons and extra small icon button groups should have 16 pixels between buttons.",
		"AnatomyHeading": "Icon",
		"AnatomyText": "The icon uses the icon component and can be replaced with any Font Awesome icon. The icon button also has a container used for displaying hover, active and focus states around the icon.",
		"SpecsImgAlt": "Specs displaying the padding and layer measurements within the icon button component. Specs are described in the paragraph below.",
		"SpecsText": "The extra small button with fixed layout has no pixels of vertical padding and horizontal padding inside the button. The icon has a 16 pixel width and height. The small button with fixed layout has 10 pixels of vertical padding and  horizontal padding inside the button. The icon has a 20 pixel width and height. The large button with fluid layout has 14 pixels of vertical padding and horizontal padding inside the button. The icon has a 24 pixel width and height. ",
		"FigmaDirectionsListItem1": "From the “Assets” panel, drag in the “icon-button” component from the Components library.",
		"FigmaDirectionsListItem2": "In the right panel, configure the properties and variants to meet your needs. ",
		"FigmaDirectionsListItem3": "Never override colours, radius, padding, icon size, etc. This way foundational elements are kept consistent. ",
		"FigmaDirectionsListItem4": "Designers can change the Font Awesome keyword to update the icon in the icon-button to any Font Awesome icon.",
		"FigmaDirectionsImgAlt": "A screenshot of the design panel from Figma. The design panel displays the configuration options designers can choose from when customizing an icon button.",
		"AccessibilityColourText1": "Primary icon buttons have a colour contrast ratio of 18.08:1 and passes AAA accessibility standards under WCAG 2.1.",
		"AccessibilityColourText2": "Critical icon buttons have a colour contrast ratio of 7.03:1 and passes AAA accessibility standards under WCAG 2.1.",
		"AccessibilityKeyboardText": "Icon buttons are developed using the native HTML button element to ensure interactive elements are keyboard accessible and pass WCAG 2.1 AA conformity.",
		"AccessibilityContentItem1": "Built for keyboard use, all interactive elements should be focusable and show focus visual indicators to guide the interaction.",
		"AccessibilityContentItem2": "Since Icon buttons only render an icon, it must pass the aria-label prop, so screen readers can give meaning to the button.",
		"AccessibilityContentItem3": "Prevent keyboard traps. Every element that can be focused on using the keyboard can be unfocused using the keyboard.",
		"LabellingText": "Icon buttons should have labels programmatically associated to them so the purpose of the icon button’s action is clear to screen reader users."
	}
}