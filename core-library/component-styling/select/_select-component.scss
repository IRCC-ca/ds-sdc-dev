@use '../../util/theme'as theme;
@use '../../util/size'as size;
@use '../../tokens/sizes'as token-size;
@use '../../tokens/template-const';
@use '../../typography/typography'as typography;
@use '../../tokens/text'as text;
@use 'sass:map';
$selectors: 'lib-select';

@mixin selectors {
	#{$selectors}#{template-const.$escape} {
		@content;
	}
}

@mixin create {
	@include selectors() {
		@include layout();
	}
}

@mixin size-large() {
	.custom-select {
		padding: 14px 12px;
		font-size: 20px;
		height: 52px;
	}

	.custom-chevron {
		font-size: 20px;
	}

	.select-placeholder {
		@include typography.fontSet(body, 2);
		color: var(--text-placeholder)
	}

	.select-option {
		color: black
	}

	.lib-select {
		margin-top: 8px;
	}
}

@mixin size-small() {
	.custom-select {
		padding: 10px 12px;
		font-size: 16px;
		height: 40px;
	}

	.custom-chevron {
		font-size: 16px;
	}

	.select-placeholder {
		@include typography.fontSet(body, 3);
		color: var(--text-placeholder)
	}

	.select-option {
		color: black
	}

	.lib-select {
		margin-top: 4px;
	}
}

@mixin layout {
	@include size.selector(large) {
		@include size-large();

		.small {
			@include size-small()
		}
	}

	@include size.selector(small) {
		@include size-small();

		.large {
			@include size-large()
		}
	}

	.select-error i {
		margin-right: 4px;
	}

	select {
		line-height: 24px;
		color: var(--text);
		border-radius: token-size.$border-radius;
		background-color: var(--surface1);
		border-color: var(--border);
		border-width: 1px;
		width: 100%;
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		cursor: pointer;
	}

	.custom-chevron {
		position: relative;
		z-index: 10;
		cursor: pointer;
		pointer-events: none;
		font-weight: 300;
		font-size: 20px;
		color: var(--text);
		margin-left: -31px;
	}

	.lib-select {
		display: flex;
		align-items: center;
	}

	.select-placeholder {
		color: var(--text-placeholder);
	}

	.select-option {
		color: black;
	}
	
	.select-clicked {
		.custom-chevron {
			transform: rotateZ(180deg);
		  }
	}

	select:invalid,
	select.ng-invalid.ng-touched {
		border-color: var(--critical-border);
		background-color: var(--critical-background-weak);
	}

	select:disabled {
		--border: var(--border-disabled);
	}

	.activited-select {
		color: var(--text-primary);
	}

	.sr-only {
		clip: rect(0 0 0 0);
		clip-path: inset(50%);
		height: 1px;
		overflow: hidden;
		position: absolute;
		white-space: nowrap;
		width: 1px;
	}
}