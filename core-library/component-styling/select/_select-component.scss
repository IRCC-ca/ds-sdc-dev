@use "../../util/theme" as theme;
@use "../../util/size" as size;
@use "../../tokens/sizes" as token-size;
@use "../../tokens/template-const";
@use "../../typography/typography" as typography;
@use "../../tokens/text" as text;
@use "../../util/accessibility" as a11y;
@use "sass:map";
$selectors: "ircc-cl-lib-select";

@mixin selector {
  #{$selectors}#{template-const.$escape} {
    @content;
  }
}

@mixin create {
  @include selector() {
    @include layout();
  }
}

@mixin size-large() {
  .custom-select {
    padding: 14px 12px;
    font-size: 20px;
    height: 52px;
  }

  .custom-chevron {
    font-size: 20px;
  }

  .select-placeholder {
    @include typography.fontSet(body, 2, regular);
    color: var(--text-placeholder);
  }


  .lib-select {
    margin-top: 8px;
  }
}

@mixin size-small() {
  .custom-select {
    padding: 10px 12px;
    font-size: 16px;
    height: 40px;
  }

  .custom-chevron {
    font-size: 16px;
  }

  .select-placeholder {
    @include typography.fontSet(body, 3, regular);
    color: var(--text-placeholder);
  }


  .lib-select {
    margin-top: 4px;
  }
}

@mixin layout {
  @include size.select(large) {
    @include size-large();

    .small {
      @include size-small();
    }
  }

  @include size.select(small) {
    @include size-small();

    .large {
      @include size-large();
    }
  }

  .select-wrapper {
    padding: 0 5px 0 0;
  }

  .select-error i {
    margin-right: 4px;
  }

  select {
    line-height: 24px;
    color: var(--text);
    border-radius: token-size.$border-radius;
    background-color: transparent;
    border-color: var(--border);
    border-width: 1px;
    width: 100%;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    cursor: pointer;
  }

  .custom-chevron {
    position: relative;
    z-index: 10;
    cursor: pointer;
    pointer-events: none;
    font-weight: 300;
    color: var(--text);
    margin-left: -31px;
  }

  .ircc-cl-lib-select {
    display: flex;
    align-items: center;

    .activited-select {
      color: var(--text-primary);
    }
  }

  .select-placeholder {
    color: var(--text-placeholder);
  }

  .select-option {
    color: var(--grey-12);
  }

  .select-clicked {
    .custom-chevron {
      transform: rotateZ(180deg);
    }
  }

  select.ng-invalid.ng-touched {
    border-color: var(--critical-border);
    background-color: var(--critical-background-weak);
    &:active {
      background-color: var(--critical-background-weak-hover);
    }
  }

  select:disabled {
    --border: var(--border-disabled);
  }

  option {
    background: var(--surface1);
  }

  .sr-only {
    @include a11y.sr-only;
  }
}
