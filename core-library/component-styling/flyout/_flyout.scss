@use "../../util/color" as color;
@use "../../util/theme" as theme;
@use "../../util/device" as device;
@use "../../util/size" as size;
@use "../../tokens/template-const" as template-const;
@use "../../tokens/sizes" as token-size;
@use "../../typography/typography" as typography;
@use "../../tokens/text" as text;
@use "../../util/accessibility" as a11y;
@use "sass:map";

@mixin selector {
  ircc-cl-lib-flyout#{template-const.$escape} {
    @content;
  }
}

@mixin create {
  @include selector() {
    @include layout();
  }
}

@mixin large-styles {
  .flyout-container,
  &.flyout-container {
    max-height: 200px;
  }
}

@mixin small-styles {
  .flyout-container,
  &.flyout-container {
    max-height: 180px;
  }
}

@mixin layout {
  .sr-only {
    @include a11y.sr-only;
  }

  .selected {
    background: var(--generic-hover);
  }

  .option-text {
    color: var(--text-primary);
  }

  .disabled-option {
    * {
      cursor: not-allowed;
    }
    .option-text {
      color: var(--text-disabled);
    }
  }

  .flyout {
    &-container {
      margin-top: 11px;
      box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.1);
      overflow-y: scroll;
      overflow-x: visible;
      border: 1px solid var(--grey-5);
      border-radius: 4px;
    }
    &-option-container {
      &:not(.disabled-option) {
        &:hover,
        &:focus {
          background: var(--generic-hover);
        }
      }
    }
  }

  @include size.select(large) {
    @include large-styles;
    .small {
      @include small-styles;
    }
  }

  @include size.select(small) {
    @include small-styles;
    .large {
      @include large-styles;
    }
  }
}
